{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["studynot","本人java工程师一名，此笔记记录本人掌握的所有知识点，以备复习。","编者序"],"javacore/basics.html":["\"==\"运算符用来比较两个变量的值是否相等。也就是说，该运算符用于比较变量对应的内存中所存储的数值是否相同，要比较两个基本类型的数据或两个引用变量是否相等，只能使用“==”运算符。",",",",cap",":",":point_right:","break、continue以及return有什么区别","c/c++有什么异同","cap","class）与接口（interface）有什么异同","code，这样hashmap就可以定位到我们指定的key上。重载equals()是为了向hashmap表明当前对象和key上所保存的对象是相等的，这样我们才真正地获得了这个key所对应的这个键值对。","final、finally和finalize有什么区别","float","go","go上不允许函数重载，必须具有方法和函数的唯一名称。java允许函数重载。","go就是值传递，所以它是通过指针来完成引用传递","go语言的继承通过匿名组合完成：基类以struct的方式定义，子类只需要把基类作为成员放在子类的定义中，支持多继承。","hashcode()方法的返回值和equals()方法的关系如下：","hashmap中，如果要比较key是否相等，要同时使用这两个函数！","instanceof有什么作用","int[]，string.class","java不支持多重继承，但是java语言引入了接口的概念，可以同时实现多个接口。由于接口也具有多态特性，因此在java语言中可以通过实现多个接口来实现与c++语言中多重继承类似的目的。","java与c++都是面向对象语言，都使用了面向对象思想（封装，继承，多态）","java中所有的类默认都继承自object类，而object类中提供了一个clone()方法。这个方法的作用是返回一个object对象的复制。这个复制函数返回的是一个新的对象，而不是一个引用。","java中数组是不是对象","java中的clone方法有什么作用","java中直接支持数组这种数据结构，除此之外还有通过数组结构延伸arraylist.class","java为纯面向对象语言","java为纯面向对象语言，所有代码（包括函数、变量等）必须在类中实现，","java为解释型语言，其运行过程为：java为解释型语言，程序源代码经过java编译器编译成字节码，然后由jvm解释执行。","java传递的值为栈中的值（值传递+引用传递）。其中：值传递是对基本型变量而言的,传递的是该变量的一个副本,改变副本不影响原变量.","java和","java和go的区别","java基本概念","java基础特性","java执行速度比c/c++慢，但是java能够块平台，而c/c++不能","java提供了哪些基本数据类型","java提供了很多内置的类库。提供了对多线程的支持，提供了对网络通信的支持，最重要的是提供了垃圾回收器。","java的继承通过extends关键字完成，不支持多继承。","java语言提供了垃圾回收器来实现垃圾的自动回收，java语言中虽然没有析构函数，但却引入了一个finalize()方法，当垃圾回收期将要释放无用对象的内存时，会首先调用该对象的finalize()方法，因此，开放人员不需要关心也不需要知道对象所占的内存空间何时会被释放。","java语言有哪些优点：","java默认允许多态。而go没有。","len","length()方法是针对字符串而言的","length属性与length()方法有什么区别","math类中round、ceil和floor方法的功能各是什么","point","ptr","size()方法是针对泛型集合而言的，用于查看泛型中有多少个元素","slice的容量","static代码块","static关键字主要有两种作用：第一，为某特定数据类型或对象分配单一的存储空间，而与创建对象的个数无关。第二，实现某个方法或属性与类而不是对象关联在一起，也就是说，在不创建对象的情况下就可以通过类来直接调用方法或使用类的属性。","static关键字有哪些作用","static内部类","static成员变量","static成员方法","strictfp有什么作用","stringbuffer：","stringbuilder：如果是在单线程下操作大量数据，应优先使用stringbuilder。（效率最高）","string、stringbuffer、stringbuilder和stringtokenizer有什么区别","string：","this与supper有什么区别","volatile是一个类型修饰符，它是被用来修饰被不同线程访问和修改的变量。被volatile类型定义的变量，系统每次用到它时都是直接从对应的内存当中提取，而不会利用缓存，在使用了volatile修饰成员变量后，所有线程在任何时候所看到的变量的值都是相同的。","volatile有什么作用","​","“==”、equals和hashcode有什么区别","。","不通点：","与c/c++语言相比，java语言中没有指针的概念","中也支持数组这种数据结构，因为是值传递，所以如何在其他方法中真实的修改数据呢","什么是不可变类","什么是反射机制","什么是构造函数","什么是继承","从使用方面来说","从内存方面来说","从概念方面来说","传递的值。","但是他的具体结构类似arrraylist.class","值传递与引用传递有哪些区别","关键字","关键字strictfp是strict","具体而言，在java语言中，static主要有4种使用情况：成员变量，成员方法，代码块和内部类。","具有较好的安全性和健壮性。安全性是指java运行环境不允许java程序访问当前浏览器上下文以外的内容。健壮性是指java提供很多编译时的类型检查和异常处理。","函数重载。","去除了c++语言中难易理解，容易混淆的特性。例如头文件，指针","反之，hashcode()方法的返回值不相等，一等能推出equals()方法的返回值也不相等，而hashcode()方法的返回值相等，equals()方法的返回值则可能相等，也可能不相等。","可指定或者是2的倍数","因为自定义的类的hashcode()方法继承于object类，其hashcode码为默认的内存地址，这样即便有相同含义的两个对象，比较也是不相等的。hashmap中的比较key是这样的，先求出key的hashcode(),比较其值是否相等，若相等再比较equals(),若相等则认为他们是相等的。若equals()不相等则认为他们不相等。如果只重写hashcode()不重写equals()方法，当比较equals()时只是看他们是否为同一对象（即进行内存地址的比较）,所以必定要两个方法一起重写。hashmap用来判断key是否相等的方法，其实是调用了hashset判断加入元素","在java语言中，","在java语言中，基本数据类型在床底参数是都是按值传递，而包装类型在传递参数时是按引用传递。","在方法调用中，实参会把它的值传递给形参，形参只是用实参的值初始化一个临时的存储单元，因此形参与实参虽然有着相同的值，但是却有着不同的存储单元，因此对形参的改变不会影响实参的值。","在这方面就是一个数组的view,","基本数据类型和引用类型","基本类型与运算","基本类型：使用时需要赋具体值，判断时使用==号。","基本类型：变量名指向具体的数值。","基本类型：变量在声明之后，java就会立即分配给他内存空间","多态","多态。","多态的实现机制是什么","如何获取父类的类名","如果x.equals(y)返回true，即两个对象根据equals方法比较是相等的，那么调用者两个对象中任意一个对象的hashcode()方法都必须产生同样的整数结果。如果x.equals(y)返回false，即两个对象根据equals()方法比较是不相等的，那么x和y的hashcode()方法的返回值有可能相等，也有可能不相等。","如果一个类没有自己定义equlas()方法，它默认的equal()方法(从object类继承的)就是使用\"==\"运算符，也是在比较两个变量指向的对象是否是同一对象，此时使用equlas()方法和使用“==”运算符会得到相同的结果。若比较的是两个独立的对象，则总返回false。如果编写的类希望能够比较该类创建的两个实例对象的内容是否相同，那么必须覆盖equlas()方法。由开发人员自己编写代码来决定在什么情况下即可认为连个对象的内容是相同的。","如果是在多线程下操作大量数据，应优先使用stringbuffer。（线程安全）在一个字符串需要经常被修改时使用。","如果要操作的数据量比较小，应优先使用string类","子类不仅可以有父类的属性和方法，还可以有自己的属性和方法","字符串与数组","字符串创建与存储的机制是什么","它有pre，len","封装","将对象的属性进行私有化，只提供公共的get和set方法","平台无关性。java为解释型语言，程序源代码经过java编译器编译成字节码，然后由jvm解释执行。","并不是原对象本身","异常处理","引用传递一般是对于对象型变量而言的,传递的是该对象地址的一个副本,","引用类型：使用时可以赋null，判断时使用equals方法。","引用类型：变量名指向内存数据对象的内存地址","引用类型：它以特殊的方式（类似c指针）向对象实体（具体的值），这类变量声明时不会分配内存，只是存储了一个内存地址","引申：浅复制和深复制有什么区别","所以对引用对象进行操作会同时改变原对象.一般认为,java内的传递都是值传递.","扩展阅读：java","抽象类（abstract","指定原来数组的首地址值","提供了对web应用开发的支持","数组。","数组提供了length属性来获取数组的长度","是否相等。重载hashcode()是为了对同一个key，能得到相同的hash","浅复制：被复制对象的所有变量都含有与原来对象相同的值，而所有对其他对象的引用仍然指向原来的对象。换言之，浅复制仅仅复制所考虑的对象，而不复制它所引用的对象。","深复制：被复制对象的所有变量都含有与原来对象相同的值，除去那些引用其他对象的变量。那些引用其他对象的变量将指向被复制的新对象，而不再是原有的那些被引用的对象。换言之，深复制把复制的对象所引用的对象都复制了一遍。","的char[]","的缩写，指的是精确浮点，它用来确保浮点数运算的准确性。","目前slice的长度","相比“==”运算符，equlas(object)方法的特殊之处就在于它可以被覆盖，所以可以通过覆盖的方法让它不是比较引用而是比较数据内容，例如string类的equlas方法是用于比较两个独立对象的内容是否相同，即堆中的内容是否相同。","等。","组合和继承有什么区别","继承","继承。","而c/c++为编译型语言，源代码经过编译和链接后生成可执行的二进制代码。","覆盖关系中，调用方法体是根据对象的类型（对象对应存储空间类型）来决定；而重载关系是根据调用时的实参表与形参表来选择方法体的。","覆盖只能由一个方法或只能由一对方法产生关系；重载是多个方法之间的关系。","覆盖是子类和父类之间的关系，是垂直关系；重载是同一个类中方法之间的关系，是水平关系。","覆盖是指派生类函数覆盖基类函数。覆盖一个方法并对其重写，以达到不同的作用。","覆盖要求参数列表相同；重载要求参数列表不同","请你解释为什么重写equals还要重写hashcode？","这篇文章对于基本数据类型和引用类型的内存存储讲述比较生动。","重载和覆盖是java多态性的不同表现方式。","重载和覆盖有什么区别","重载和覆盖的区别主要有以下几个方面：","重载和重写","重载是在一个类中多态性的一种表现，是指一个类中定义了多个同名的方法，它们或有不同的参数个数或有不同的参数类型","面向对象和面向过程有什么区别","面向对象技术","面向对象有哪些特征","（1）","（1）值传递:","（2）equals是object类提供的方法之一。每一个java类都继承自object类，所以每一个对象都具有equals这个方法。object类中定义的equlas(object)方法是直接使用“==”运算符比较的两个对象，所以在没有覆盖equlas(object)方法的情况下，equlas(object)与“==”运算符一样，比较的是引用。","（2）引用传递：在方法调用中，传递的是对象（也可以看作是对象的地址），这时形参与实参的对象所指向同一块存储单元，因此对形参的修改就会影响实参的值。","（3）hashcode()方法是从object类中继承过来的，它也用来鉴定两个对象是否相等。object类中的hashcode()方法返回对象在内存中地址转换成的一个int值，所以如果没有重写hashcode()方法，任何对象的hashcode()方法都是不想等的。","，用指针或者slice。go的指针不能运算。slic","，类似动态数组"],"javacore/advanced.html":["java","java正则","java高级特性","jdk8的新特性"],"javacore/container/container.html":["1.5","1.list","2.set","3.queue",":","=","@safevararg","a)","arr","array.aslist(arr);","arraylist<>();","arraylist：基于动态数组实现，支持随机访问。","arrays.aslist(1,2,3);","aslist()","aslist(t...","collect","for(str","foreach","hashmap：基于哈希表实现。","hashset：基于哈希表实现，支持快速查找，但不支持有序性操作。并且失去了元素的插入顺序信息，也就是说使用iterator遍历hashset得到的结果是不确定的。","hashtable：","intege[]","item","iter","iterable接口，其中的iterator()方法能够产生一个iterator对象，通过这个对象就可以迭代遍历collection中的元素。","java.util.arrays#aslist()","jdk","linkedhashmap：使用双向链表来维护元素的顺序，顺序为插入顺序或者最近最少使用（lru）顺序。","linkedhashset：具有hashset的查找效果，且内部使用双向链表维护元素的插入顺序。","linkedlist：可以用它来实现双向队列。","linkedlist：基于双向链表实现，只能顺序访问，但是可以快速地在链表中间插入和删除元素。不仅如此，linkedlist还可以用做栈、队列和双向队列。","list","list){","list.add(\"a\");","list.add(\"b\");","map","new","priorityqueue：基于堆结构实现，可以用它来实现优先队列。","public","static","system.out.println(item);","treemap：基于红黑树实现。","treeset:","vector：和arraylist类似，但它是线程安全的。","{1,2,3};","}","一、java容器概述","一、概览","三、容器中的设计模式","两种，collect","之后可以使用","也可以使用以下方式调用","二、容器中的设计模式","二、容器框架","从","可以把数组类型转换为list类型。","和","和hashmap类似，但它是线程安全的，这意味着同一时刻多个线程可以同时写入hashtable并且不会导致数据不一致。它是遗留类，不应该去使用它。现在可以使用concurrenthashmap来支持线程安全，并且concurrenthashmap的效率会更高，因为concurrenthashmap引入了分段锁。","基于红黑树实现，支持有序性操作，例如根据一个范围查找元素的操作。但是查找效率不如hashset，hashset查找的时间复杂度为o(1)，treeset则为o(logn)。","存储着对象的集合，而","存储着键值对（两个对象）的映射表。","容器","容器主要包括","容器概述","应该注意的是aslist()","接口的聚合对象。","方法来遍历实现","的参数为泛型的变长参数，不能使用基本类型数组作为参数，只能使用相应的包装类型数组。","继承了","迭代器模式","适配器模式"],"javacore/container/container-list.html":["(e)","(elementdata","(int","(mincapac","(newcapac","(nummov","(oldcapac","+","...","//","0)","0;","0。","1);","1)，也就是旧容量的","1.5","1.同步","1.概览","10。","1;","2","2.序列化","3.扩容","4","4.删除元素","5.","=","==",">",">>","@suppresswarnings(\"unchecked\")","a,","a[index];","abstractlist","abstractsequentiallist","add(","arrayli","arraylist","arraylist<>();","arraylist。","arraylist原理","arraylist定义：","arraylist是一个数组队列，相当于动态数组。与java中的数组相比，arrraylist的容量可以动态增长。","arraylist要点","arrays.copyof()","arrays.copyof(elementdata,","arrays.copyof(elements,","behaviour","boolean","capac","class","clear","clone()","clone()，能被克隆。","cloneabl","cloneable,","close","code","collect","collections.synchronizedlist();","collections.synchronizedlist(list);","collection之list","compat","concurr","concurrentmodificationexception。","consciou","copyonwritearraylist","copyonwritearraylist<>();copyonwritearraylist","count,","defaultcapacity_empty_elementdata)","dequ","deque,","e","e)","e){","e;","element","elementdata","elementdata(index);","elementdata,","elementdata.length","elementdata.length;","elementdata;","elementdata[","elementdata[size++]","elements.length;","ensurecapacityinternal()","ensurecapacityinternal(int","ensurecapacityinternal(s","ensureexplicitcapacity(int","ensureexplicitcapacity(mincapacity);","expectedmodcount","extend","fail","fast","final","first","first;","gc","get(object[]","getarray();","grow()","grow(int","grow(mincapacity);","hidden","http://www.cnblogs.com/skywang12345/p/3308807.html","https://www.cnblogs.com/skywang12345/p/3308556.html","hugecapacity(mincapacity);","i=0;","implement","increment","index","index)","index+1","index+1,","index,","int","interfac","item;","item。其中，prev","java","java.io.ioexception{","java.io.serializ","java容器collection之list","last","last;","last。","len","linkedlist","linkedlist原理","linkedlist要点","list","list,","lock","lock.lock();","lock.unlock();","math.max(default_capacity,","mincapac","mincapacity)","mincapacity);","modcount","modcount!!","modcount++;","modcount;","new","newcapac","newcapacity);","newel","newelements[len]","next,","next;","node","null;","nummov","nummoved);","object[]","oldcapac","oldvalu","oldvalue;","order.","out","overflow","prev;","privat","proper","public","randmoaccess","randomaccess","randomaccess,","rangecheck(index);","readobject()","reentrantlock","remove(int","return","s)","s.defaultwriteobject();","s.writeint(size);","setarray(newelements);","size","size,","size;","size]","size。","static","stuff","synlist","system.arraycopy()","system.arraycopy(elementdata,","this.lock;","throw","transient","tri","true;","usual","vector","vector，因为同步操作完全可以由程序员自己来控制；","void","win:","work","write","writeobject()","writeobject(java.io.objectoutputstream","{","}","不适合内存敏感以及对实时性要求很高的场景。","与","中包含三个元素：prev,","中用来被list实现，为list提供快速访问功能的。在","中的元素。","中，我们即可以通过元素的序号快速获取元素对象；这就是快速随机访问。","主要方法：","也可以使用","从","从arraylist的定义，不难看出arraylist的一些基本特性：","但是","位置上，复制的代价很高。","倍。","倍空间，而","具有动态扩容特性，因此保存元素的数组不一定都会被使用，那么就没必要全部进行序列化。arraylist","内存占用：在写操作时需要复制一个新的数组，使得内存占用为原来的两倍左右；","写操作在一个复制的数组上进行，读操作还是在原始数组中进行，读写分离，互不影响。","写操作结束之后需要把原始数组指向新的复制数组。","写操作需要加锁，防止并发写入时导致写入数据丢失。","分别是双链表的头节点和尾节点。","则是动态数组的实际大小。","则表示链表中的实例。node","动态数组。","包含两个重要的成员：first","包含了两个重要的元素：","双链表。","可以使用","后面的元素都复制到","和","在任意位置添加删除元素更快；","在写操作的同时允许读操作，大大提高了读操作的性能，因此很适合读多写少的应用场景。","在进行序列化或者迭代等操作时，需要比较操作前后","基于动态数组实现，linkedlist","基于双向链表实现。由于是双向链表，那么它的顺序访问会非常高效，而随机访问效率比较低。","基于双向链表实现；","基于双链表实现，不存在容量限制；","基于数组实现，存在容量限制，当元素数超过最大容量时，会自动扩容；linkedlist","它保存了添加到","它的实现与arraylist类似，但是使用了synchronized进行同步","定义：","实现","实现了","容器","对象时就指定大概的容量大小，减少扩容操作的次数。","将","小结","常见子类：","并发包下的","当作双端队列使用。","得到一个线程安全的","所以","扩容操作需要调用","把原数组整个复制到新数组中，因此最好在创建","接口定义：","接口，即提供了随机访问功能。randmoaccess","接口，即能将","接口，即覆盖了函数","接口，因此支持随机访问。","接口，能对它进行队列操作。","接口，这意味着","支持序列化。","支持序列化，能通过序列化去传输。","支持随机访问，所以访问速度更快；linkedlist","数据不一致：读操作不能读取实时性的数据，因为部分写操作的数据还未同步到读数组中。","方法来保证容量足够，如果不够时，需要使用","方法进行扩容，新容量的大小为","是","是一个继承于","是同步的，因此开销就比","是否改变，如果改变了需要抛出","是基于数组实现的。","是该节点所包含的值。","是该节点的上一个节点，next","是该节点的下一个节点，item","是非线程安全的。","替代方案","有其缺陷：","来控制只序列化数组中有元素填充那部分内容。","概述","每次扩容请求其大小的","添加元素时使用","版）","用来记录","的一些基本特性：","的双向链表。它也可以被当作堆栈、队列或双端队列进行操作。","的定义，可以得出","的比较","类","类。","结构发生变化的次数。结构发生变化是指添加或者删除至少一个元素的所有操作，或者是调整内部数组的大小，仅仅只是设置元素的值不算结构发生变化。","编程思想（第","而不是","表示双链表中节点的个数，初始为","要大，访问速度更慢。最好使用","读写分离","资料","这个数组的默认大小为","这是理所当然的，因为","都不是线程安全的。","重写了","链表头节点","链表尾节点","链表长度","需要调用","，能被克隆。"],"javacore/container/container-set.html":[".75f,","//","=",">","abstract","abstractcollect","abstractcollection，abstractcollect","abstractset","abstractset，所以有","add、remove、iterator、clear、s","boolean","ceil","class","cloneable,","cloneable，所以支持克隆。","collect","collection之set","collection，二者提供的方法完全相同。","collection，只是行为略有不同：set","compar","descendingiter","descendingset","dummy)","enumset","enumset>","extend","final","first","float","floor","hashmap","hashmap，它实际上是通过","hashset","hashset(int","headset","higher","implement","initialcapacity)","initialcapacity,","interfac","java","java.io.serializ","java容器collection之set","java）","key","last","linkedhashmap","linkedhashmap<>(initialcapacity,","linkedhashset","linkedhashset()","linkedhashset(int","loadfactor)","loadfactor);","loadfactor,","lower","m;","map","map;","map（实际上是一个","map，hashset","navigablemap","navigableset","navigableset,","new","null","object","object();","pollfirst","polllast","present","present。","privat","public","readobject()","serializable，所以支持序列化。","set","set,","set架构","sortedset","spliter","static","subset","super(16,","super(initialcapacity,","tailset","transient","treemap","treemap，它实际上是通过","treeset","true);","valu","writeobject()","{","{}","}","不同于","不是线程安全的。","中存储的元素是按照插入顺序保存的。","中存储的元素是按照插入顺序保存的原理。","中存储的元素是无序的。","中存储的元素是有序的。排序规则是自然顺序或比较器（comparator）中提供的顺序规则。","中完成。","中当前操作元素的一个虚拟值","中当前操作元素的一个虚拟值。","中当前操作元素的一个虚拟值。treeset","中所有元素都必须是指定枚举类型的枚举值。","中的元素是无序的。","中的元素是有序的。","中的元素都被当成","中的内容是排序的唯一值，排序的方法是通过比较器(comparator)。","中的绝大部分函数，为","中维护了一个","也就是说，实际上，linkedhashset","事实上，主要的实现已经在","值的元素。","允许","原理","和","存储，而","实体来实现","实例。","实例），treeset","实例，这个构造方法中，初始化了","实现了","实现的。","实现的。hashset","实现的。treeset","容器","对元素进行排序，使用红黑树","对象","对象。","就是","抽象类","抽象类定义如下：","接口","接口中的骨干方法。","接口定义如下：","接口所需的工作。","接口新扩展的方法：","接口的骨干实现，以最大限度地减少实现","方法","方法来创建","方法确定了其序列化和反序列化的机制。","既保证了顺序，又保证查找的速度","是一个抽象类，它继承于","是基于","是有序的。以枚举值在","是用于关联","有一系列的导航方法；如\"获取大于/等于某值的元素\"、“获取小于/等于某值的元素”等等。","有三个构造方法，无一例外，都是调用父类","构造方法。","构造方法中初始化的","构造方法实际上调用的是父类","检索并移除最后一个（最大的）元素","检索并移除第一个（最小的）元素","没有构造方法，只能通过类中的","源码","的","的实现类提供了便利。","的接口。sortedset","的接口。实际上","的接口。实际上，set","的接口。相比于","的构造方法。","的查找效率，且内部使用链表维护元素的插入顺序。","的核心，通过维护一个","的迭代器","的重要方法，如","的非","等都是围绕","类","类中的定义顺序来决定集合元素的顺序。","类中通过定义","类依赖于","类具有","类定义如下：","类提供","类继承了","类通过继承","继承了","维护了一个双链表。由双链表的特性可以知道，它是按照元素的插入顺序保存的。所以，这就是","编程思想（think","要点","资料","返回","返回反序排列的","返回大于或等于指定值的元素中最接近的元素","返回大于指定值的元素中最接近的元素","返回大于指定元素的子集","返回小于或等于指定值的元素中最接近的元素","返回小于指定值的元素中最接近的元素","返回小于指定元素的子集","返回指定区间的子集","返回最后一个元素","返回第一个元素","通过","都填的是","采用散列函数，查找速度较快","限定了存储元素必须是枚举值。","集合不允许有重复元素。","需要强调的是：linkedhashset"],"javacore/container/container-queue.html":["//","=","abstract","abstractcollect","abstractqueu","add(e)","applic","aq","arrayblockingqueu","arrayblockingqueue，我们可以在构造的时候指定以下三个参数：","atomicinteg","atomicinteger(0);","block","blockingqueu","blockingqueue,","blockingqueue，也是一个阻塞队列。","block，因为它是无界队列（tak","capacity;","class","collect","collection之queu","compar","condit","condition，简单介绍如下：","count","count;","element()","examin","except","extend","final","head;","implement","insert","int","interfac","items;","java","java.io.serializ","java容器collection之queu","last;","linkedblockingqueu","lock","lock;","new","node","notempti","notempty;","notful","notfull;","null","null），peek","object","object[]","offer","offer(e)","offer(e,","out","peek","peek()","poll()","poll(time,","poll,","priorityblockingqueu","priorityqueu","privat","public","put","put(e)","put,","putindex;","putlock","putlock.newcondition();","queue","queue;","reentrantlock","reentrantlock();","remov","remove()","scheduledthreadpoolexecutor","serializable，支持序列化。","special","synchronousqueu","take()","take,","takeindex;","takelock","takelock.newcondition();","throw","time","time,","transient","true/false，取决于具体的操作）；","unit)","valu","{}","下一次写入操作的位置","下一次读取操作的位置","不接受","不是线程安全的。","中不能使用","中元素按照插入顺序保存（fifo）。","中得到了应用。","中的元素根据自然顺序或","中，如果获取队列元素但是队列为空时，会阻塞，等待队列中有元素再返回；如果添加元素时，如果队列已满，那么等到队列可以放入新元素时再放入。","也不允许传递","也不能被迭代，因为根本就没有元素可以拿来迭代的。","以下几个就是控制并发用的同步器","值元素。","值往往用作其他用途，比如用于方法的返回值代表操作失败）。","值的（并发包中的容器类好像都不支持插入","值，因为","则用于在执行插入、删除操作时，保证这个方法在当前线程释放锁之前，其他线程不能访问。","原理","可以指定用一个集合来初始化，将此集合中的元素在构造方法期间就先添加到队列中。","可以视为","和","在","如果写操作的时候队列是满的，那么等待","如果读操作的时候队列是空的，那么等待","如果队列为空，这个时候读操作的线程进入到读线程队列排队，等待写线程写入新的元素，然后唤醒读线程队列的第一个等待线程。","如果队列已满，这个时候写操作的线程进入到写线程队列排队，等待读线程将队列元素移除，然后唤醒写线程队列的第一个等待线程。","定义如下：","实现了","实现并发同步的原理就是，读操作和写操作都需要获取到","容器","对于","对插入操作、移除操作、获取元素操作提供了四种不同的方法用于不同的场景中使用：","并发队列","当然，synchronousqueu","总结如下：","或","抛出异常；","抽象类","抽象类定义如下：","指定独占锁是公平锁还是非公平锁。非公平锁的吞吐量比较高，公平锁可以保证每次都是等待最久的线程获取到锁；","接口","接口定义如下：","接口所需的工作。","接口的骨干实现，以最大限度地减少实现","接口，但是如果你将其当做","提供的顺序排序。","搭配：如果要插入（put）一个元素，需要获取","搭配：如果要获取（take）一个元素，需要获取","数组，用于保存","方法不会","方法在队列为空的时候会阻塞）。","方法的语义是只读取不移除，显然，这个方法的语义是不符合","方法（在这里这个方法直接返回","是一个","是基于单链表实现的阻塞队列，可以当做无界队列也可以当做有界队列来使用。","是基于数组实现的无界阻塞队列。","有两个重要成员：","条件","来用的话，那么集合是空的。","架构","独占锁才能进行操作。","用于存放元素的数组","的元素。","的各个实现类都遵循了这些规则。","的容量虽然有初始化大小，但是不限制大小，如果当前容量已满，插入新元素时会自动扩容。","的插入操作","的特征的。","的线程安全版本。","的重要成员如下：","的队列其实是虚的，其不提供任何空间（一个都没有）来存储元素。数据必须从某个写线程交给某个读线程，而不是写到某个队列中等待被消费。","等写操作的方法需要获取到这个锁","等读操作的方法需要获取到这个锁","类","类定义如下：","类提供","类是基于优先级堆实现的无界优先级队列。","而可重入锁","虽然","要点","解读","资料","返回特殊值（null","这个类，不过它在线程池的实现类","这里用了两个锁，两个","锁，但是获取了锁还不够，如果队列此时为空，还需要队列不为空（notempty）这个条件（condition）。","锁，但是获取了锁还不够，如果队列此时已满，还需要队列不是满的（notfull）这个条件（condition）。","间接地实现了","队列中的元素数量","队列容量","队列容量，其限制了队列中最多允许的元素个数；","队头","队尾","阻塞等待此操作，直到成功或者超时指定时间。","阻塞等待此操作，直到这个操作成功；","需要和","顾名思义，是一个阻塞队列。"],"javacore/container/container-map.html":["!=","\");","\"a","\"a\");","\"b\");","\"c\");","\"d\");","&","&&","(!onlyifabs","((e","((e.hash","((k","((newcap","((p","((tab","((treenode)e).split(this,","((treenode)first).gettreenode(hash,","((treenode)p).puttreeval(this,","(++size","(;;)","(a","(accessord","(and","(b","(bincount","(c","(cmp","(compar","(comparable)","(cpr","(e","(e.hash","(e.next","(eldest)","(evict","(first","(first.hash","(float)newcap","(h","(hitail","(int","(int)(default_load_factor","(key","(last","(linkedhashmap.entry)e,","(lotail","(n","(newcap","(newthr","(node[])new","(oldcap","(oldtab","(p","(p.color","(p.hash","(p.left","(p.parent","(p==null","(replac","(retries++","(seg","(t","(tab","(youngest)","*","*/","+","++bincount)","++modcount;","+=","/**","//","0","0)","0.75)，则会重新","0.75f,","0;","0l;","1","1)","1)]","1,","1.7","1.8","1.存储结构","15(0x1111)","16","16);","16)，主要是从速度、功效、质量来考虑的，这么做可以在","16;","16bit","180","1;","1bit","1bit(红色)，因此新的","1st","1，因此尝试次数为","2","2.size操作","2249069246763182397l;","2;","2，retri","3","3.","32","3;","3。","3；","4]","4bit","64","8","8)，则使用红黑树来替换链表，从而提高速度。",":",";","=","==",">",">=",">>>","?","@suppresswarnings(\"unchecked\")","[3,","[]","^","a.befor","a;","abstractmap","abstractmap。它和","abstractmap，且实现了","abstractmap，但它继承于","abstractmap，但没实现","abstractmap，实现了","access","accessord","accessorder;","accur","afternodeaccess()","afternodeaccess(e);","afternodeaccess(nod","afternodeinsertion()","afternodeinsertion(boolean","afternodeinsertion(evict);","alway","api。其它","args)","async","avoid","b","b.after","b;","balanc","base","befor","bincount","bins)，在","bit","black)","boolean","break;","bucket","c","ca","cach","cache.get(1);","cache.put(1,","cache.put(2,","cache.put(3,","cache.put(4,","capac","capacity)，就要","chang","char","check","children","children.","class","class.","cloneable,","cmp","cmp;","collections.synchronizedmap","collis","compar","comparator;","compare(key,","concurrenthashmao","concurrenthashmap","condit","containsvalu","continu","copi","count","count.","count;","cpr","cpr.compare(key,","current","d","d:\\codes\\zp\\java\\database\\docs\\redis\\分布式锁.md","default","default_concurrency_level","default_initial_capacity)","default_initial_capacity);","default_initial_capacity;","deleteentry(entri","deleteentry(p);","dictionary(dictionari","doubli","due","e","e)","e.key)","e.next)","e.next;","e.valu","e.value;","e;","eldest","eldest)","element","elements.","entri","entries.","entry(hash,","entry(键值对)；每一个","entry<>(key,","entryset()。请注意，abstractmap","entryset;","enumer","equals()方法确定键值对。如果发生碰撞的时候，hashmap","evict","evict)","exist","exists.","extend","f","facotr","factor","factor)定义的容量，怎么办？","failur","false,","false;","false，在这里为","false，如果需要让它为","false，此时维护的是插入顺序。","few","final","first","first,","first.key)","first.key;","first.next)","first;","first。","fix","fixafterdeletion(p);","fixafterdeletion(replacement);","fixafterdeletion.","fixup","float","ft","g","gc","get(object","getentry(key);","getentry(object","getentryusingcomparator(key);","getnode(hash(key),","getnode(int","get，它调用","h","h;","handl","hash","hash(object","hash);","hash)，从而获得","hash,","hash;","hash])","hashcod","hashcode()","hashcode()做","hashcode()的都有什么作用？","hashcode()的高","hashcode()进行","hashentri","hashentry[]","hashentry{","hashing，并计算下标(","hashmap","hashmap();","hashmap(int","hashmap(map","hashmap、hashtable、treemap和weakhashmap有什么区别","hashmap类","hashmap，因此具有和","hashmap，并且重新调用","hashmap？他有什么特点？","hashtabl","hashtable，除了它是不同步的并且允许为空值。）这个类不保序；特别是，它的元素顺序可能会随着时间的推移变化。","hash，只需要看看原来的","hash，然后再计算","hash，然后确定","head","head)","head;","high","hihead","hihead;","hitail","hitail.next","i;","implement","imposs","improv","index","index;","index，并对","index，把节点再放到新的","index；","initi","initialcapac","initialcapacity);","initialcapacity,","instanceof","int","integer.max_value;","internal,","isn't","iter","j","j);","j,","java","java.util.hashmap","java容器map","java容器之map","jdk","jdk8","jdk8：hashmap","jep","k","k.compareto(p.key);","k.compareto(t.key);","k.hashcode())","k/v","k;","key","key)","key))","key);","key,","key.equals()方法去链表或树中去查找对应的节点","key.equals(k))))","key.equals(k)去查找对应的","key.equals(k)查找，o(logn)；","key.equals(k)查找，o(n)。","key.hashcode())","key;","keys.equals()在链中找。","keyset()","l","larg","last","last.aft","last;","link","linkedhashmap","linkedhashmap.entri","list","list.","load","loadfactor","loadfactor);","loadfactor;","lock","locking.","lohead","lohead;","long","lotail","lotail.next","lru","lrucach","lrucache()","lrucache<>();","m","m)","main(string[]","maintain","make","map","map,","map架构","mask","max_entri","max_entries;","max_scan_retri","maximum_capacity)","method","modcount","modcount++;","modcount;","modif","move","n","n,","n;","navigablemap","new","newcap","newcap,","newnode(hash,","newtab","newtab,","newtab;","newtab[e.hash","newtab[j","newtab[j]","newthr","next","next)","next)对象。","next;","node","node,","node.","node[]","node[newcap];","null","null)","null);","null,","null;","nullpointerexception();","null。","null，插入第一个节点","number","o","o(1)+o(logn)了，这样在","o(1)+o(n)。因此，当碰撞很厉害的时候","o(logn)的","object","obtain","offload","ok","old","oldcap","oldcap)","oldcap);","oldcap]","oldtab","oldtab.length;","oldtab;","oldtab[j]","oldtab[j])","oldthr","oldthr;","oldvalu","oldvalue;","onlyifabsent,","order","out","overflow","overflow;","p","p)","p.after","p.after;","p.befor","p.before,","p.key","p.key)","p.left","p.next","p.next)","p.parent","p.parent.left","p.parent.left)","p.parent.right","p.parent.right)","p.parent;","p.right","p.right);","p.right;","p.valu","p.value);","p.value;","p;","parent","parent);","parent;","path","perform","phantom","place","point","possibl","preserv","previou","privat","protect","public","put","put(k","putval(hash(key),","putval(int","put、get","put）。在设置初始容量时，应考虑映射中的条目数量及其负载因子，以尽量减少重新运行操作的次数。如果初始容量大于最大入口数除以负载因子，则不会发生重新刷新操作。","q","queue","queue。tabl","r","read","reentrantlock","reentrantlock，并发度与","referencequeu","referencequeue(queue)队列中。","remov","remove(object","removeeldestentry()","removeeldestentry(first))","removeeldestentry(map.entri","removenode(hash(key),","replac","replacement.par","replacement;","resiz","resize()","resize()).length;","resize();","resize。","resize。在","resize，然而又因为我们使用的是","resort","result.","retri","retries_before_lock","retries_before_lock)","return","root","root;","runtime.getruntime().availableprocessors()","s","s.key;","s.value;","s;","sake","same","seg","seg.count;","seg.modcount;","segement","segment","segment[]","segmentat(segments,","segments;","segment。","segment继承自","segment，它继承自重入锁","self","serializ","serialversionuid","set","set>","signifi","size","size()","size;","sortedmap","sortedmap，navigablemap","split","start","static","store","strictli","string[]","successor'","successor(p);","successor.","sum","sum;","super(max_entries,","synchronized。","system.out.println(cache.keyset());","t","t.key);","t.right;","t.setvalue(value);","t;","tab","tab,","tab.length)","tab;","tab[(n","tab[i","tab[i]","tabl","table)","table,","table;","tail","tail)","tail;","this.segments;","threshold","threshold)","threshold;","throw","time","transient","tree","treeify_threshold","treeify_threshold)，就把链表转换成红黑树；","treeifybin(tab,","treemap","treemap.keyset().iterator();","treemap<>();","treemapdemo","treenode)","tri","true","true);","true。","true，则会将该节点移到链表尾部。也就是说指定为","true，开启","true，需要继承","type","u","unbound","under","undergo","unlink.","unsynchron","us","v","value(保证","value)","value);","value)。","value)映射。","value)映射，而且键和值都可以是","value,","value;","values()。","version","visibility.","void","volatil","w","weakhashmap","weakhashmap。","weakhashmap，将键值对添加到","weakrefer","within","x","y","z\".split(\"","zero","{","{}","||","}","一个原来长度两倍的","一样的快速查找特性。","一样，weakhashmap","上限","下一个调整大小的值（容量*加载因子）。","不变，低","不是并发安全的。","不是我们需要的，则通过","不过","中","中。","中保存了全部的键值对，而","中保存被","中删除的步骤了。","中存储的内容是键值对(key","中的","中的内容是“有序的键值对”！","中的内容是排序的键值对，排序的方法是通过比较器(comparator)。","中的大部分","中的键值对个数。","中的键值对数","中碰撞冲突的元素超过某个限制(默认是","中被","中被自动移除。更精确地说，对于一个给定的键，其映射的存在并不阻止垃圾回收器对该键的丢弃，这就使该键成为可终止的，被终止，然后被回收。某个键被终止时，它对应的键值对也就从映射中有效地移除了。","中，利用红黑树替换链表，这样复杂度就变成了","中，如果一个","中，当某个键不再正常使用时，会被从","中，描述了这个问题：","为","为原来的","为空则创建","之前已经提过，在获取","之前的实现中是用链表解决冲突的，在产生碰撞的情况下，进行","之后，get","之后，因为","也是一个散列表，它存储的内容也是键值对(key","也是键值对的接口)，而且也实现","了。","什么时候会使用","从而得到","以","以下是使用","会根据当前","传给","位实现的：(h","位异或低","位置，并进一步调用","位置，进一步存储，hashmap","你知道","使用","使用了","使用分段锁机制来实现并发更新操作，核心类为","保存","保存缓存的","倍","倍)。获取对象时，我们将","倍)，所以，元素的位置要么是在原位置，要么是在原位置再移动","倍，之后重新计算","倍，那么","值新增的那个","值的时间，而且同时，由于新增的","值进一步计算下标，如下图所示：","值，则新插入节点","做了一个异或。","做处理","具体代码的实现如下：","内部维护了一个双向链表，用来维护插入顺序或者","写入","决定了顺序，默认为","则","初始值为","初始化加载因子","初始化容量","初始化容量；以","加载因子是散列表在其容量自动扩容之前被允许的最大饱和量。当哈希表中的","加锁","加锁。","占用程度已经超过了","原索引","原索引+oldcap","原索引+oldcap放到bucket里","原索引放到bucket里","去做了。仅仅异或一下，既减少了系统的开销，也不会造成的因为高位没有参与下标的计算(tabl","去遍历。","变为","变量来统计该","只有在构建","可以看到这个方法大概的作用就是：高","可以认为是随机的，因此","后；","和","和hashmap类似，但它是线程安全的，这意味着同一时刻多个线程可以同时写入hashtable并且不会导致数据不一致。它是遗留类，不应该去使用它。","和低","和高","回收时。在","回收的弱键。实现步骤是：","回收的键值对。","回收的键值对；同步它们，就是删除","回收该弱键时，这个弱键也同时会被添加到","因此元素在重新计算","因此在","因此，我们在扩充","因此，设计者想了一个顾全大局的方法(综合考虑了速度、作用、质量)，就是把高","在","在对","在执行","在树中","在理解了","在设计","在链表中","基于哈希表的","基于红黑树实现。","如果","如果尝试的次数超过","如果当前节点有左右孩子节点，使用后继节点替换要删除的节点","如果有冲突，则通过","如果有比较器，使用比较器进行比较","如果根节点为","如果没碰撞直接放到","如果碰撞了，以链表的形式存在","如果碰撞导致链表过长(大于等于","如果节点已经存在就替换","如果许多映射要存储在","如果超过了负载因子(默认","如果还是产生了频繁的碰撞，会发生什么问题呢？作者注释说，他们使用树来处理频繁的碰撞(we","字段用于","存储和获取对象。存储对象时，我们将","存储着","存储结构","定义","定义，该值为","实例中，使用足够大的容量创建映射将允许映射存储的效率高于根据需要执行自动重新散列以增长表。请注意，使用多个具有相同","实现上类似，最主要的差别是","实现的。","实现的一个","实际上是一个单向链表，即","实际上，weakhashmap","容器","容量是哈希表中桶的数量，初始容量就是哈希表创建时的容量。","对","小结","尝试次数使用","就会发生这样的变化：","就会将最近最久未使用的数据移除。","就好了，是","就很简单了。大致思路如下：","并且","并且覆盖这个方法的实现，这在实现","异或了一下。设计者还解释到因为现在大多数的","当","当一个节点被访问时，如果","当下一次我们需要操作","当某弱键不再被其它对象引用，并被","当超过限制的时候会","很大的时候，能够比较理想的解决这个问题，在","很大，o(n)的速度显然是影响速度的。","怎么理解呢？例如我们从","我们现在可以回答开始的几个问题，加深对","所希望的比例，那么就会发生","扩充为","扩展为","把每个","按照二叉树搜索的方式进行搜索，搜到返回","接口。","接口实现。该实现提供了所有可选的","接口的实现，存储键值对时，它可以接收","接口；因此，hashmap","接口；因此，hashtabl","接口；因此，treemap","操作失败时使用内置锁","操作时先尝试不加锁，如果连续两次不加锁操作得到的结果一致，那么可以认为这个结果是正确的。","操作时，需要遍历所有","操作来支持更高的并发度，在","操作，并允许使用空值和空键。","操作，然后再通过","散列表的加载因子","数量相等。","数量超过负载因子和当前容量的乘积时，散列表就会被重新映射（即重建内部数据结构），一般散列表大约是存储桶数量的两倍。","新建","方法","方法。","方法大致的思路为：","方法实现，在节点多于","方法时，因为目前的","方法时，它调用","方法来构造同步的","方法的实现","方法返回","时会移除最晚的节点，也就是链表首部节点","时具体实现是这样的：","时，两步的时间复杂度是","时，会先同步","时，其实散列真正生效的只是低","时，具体的变化如下所示：","时，如果发现目前的","时，该类可以使用键之间的比较顺序来帮助断开关系。","是","是一个散列表，它存储的内容是键值对(key","是一个队列，它会保存被","是不同步的。可以使用","是基于","是弱键，即是","是映射接口，map","是有序的。它的排序规则是：根据","是线程安全的，而且它支持通过","是继承于","是通过数组","是键值对链表。","最重要的是以下用于维护顺序的函数，它们会在","有一系列的导航方法；如\"获取大于/等于某对象的键值对\"、“获取小于/等于某对象的键值对”等等。","未命中","来减少重复编码。","构造方法","次幂的位置。","次幂的扩展(指长度扩为原来","次，就需要对每个","每个","每个节点的左孩子节点的值小于它；右孩子节点的值大于它","比较小的时候，也能保证考虑到高低","没有比较器，使用","没超过最大值，就扩充为原来的","源码","满了(超过","然后把","现在可以使用concurrenthashmap来支持线程安全，并且concurrenthashmap的效率会更高，因为concurrenthashmap引入了分段锁。","用自定义类型作为hashmap或hashtable的key需要注意哪些问题","的","的一个实例有两个影响其性能的参数：初始容量和负载因子。","的位置。如果产生碰撞，则利用","的元素时，基本分两步：","的内容也是“键值对，也不保证次序”。但和","的内容是“键值对，但不保证次序”！","的分布已经很不错了，就算是发生了碰撞也用","的占用情况自动调整容量(超过","的原理吗？equals()和","的唯一性)","的大小超过了负载因子(load","的定义如下：","的实现","的实现中，是通过","的实现也在链表过长时会转换为红黑树。","的实现吗？为什么要这样实现？","的实现类可以通过继承","的密钥是降低任何散列表性能的一个可靠方法。为了改善影响，当键是","的工作原理吗？","的幂，而计算下标的时候，是这样实现的(使用&位操作，而非%求余)：","的性能提升一文中有性能测试的结果。","的抽象类，它实现了","的接口。sortedmap","的接口。相比于","的改动","的方法，通过","的时候才为","的时候，不需要重新计算","的有效位，当然容易碰撞了。","的构造函数将","的理解：","的缓存中特别有用，通过移除最近最久未使用的节点，从而保证缓存空间足够，并且缓存的数据都是热点数据。","的自然顺序或提供的比较器的比较顺序。","的自然顺序进行比较","的节点的","的计算中，同时不会有太大的开销。","的话索引变成“原索引+oldcap”。可以看看下图为","的话索引没变，是","的过程中，计算下标时，先对","的过程，均匀的把之前的冲突的节点分散到新的","的过程，简单的说就是把","的键值，是非同步的，hashmap","的键是弱键。","的键是弱键。在","的键类型不同，weakhashmap","直接命中","相比，hashtabl","示例","示意图：","等操作之后执行，当","等方法中调用。","类型的；referencequeu","类大致等同于","类的操作中，包括","累计起来。","继承了","继承于","继承自","维护了一个","缓存","缓存：","节点存在","若为树，则在树中通过","若为链表，则在链表中通过","范围在高位多","虽然不是继承于","要删除的节点有一个孩子节点","要点","覆盖","计算","计算新的","设定最大缓存空间","设置为","设计者认为这方法很容易发生碰撞。为什么这么说呢？不妨思考一下，在","该表在初次使用时初始化，并根据需要调整大小。分配时，长度总是2的幂。","该链为树","该链为链表","超过尝试次数，则对每个","超过最大值就不再扩充了，就只好随你碰撞去吧","还是","这个hashmap被结构修改的次数结构修改是那些改变hashmap中的映射数量或者修改其内部结构（例如，重新散列）的修改。","这个弱键的原理呢？大致上就是，通过","这个设计确实非常的巧妙，既省去了重新计算","这就是弱键如何被自动从","进行","通常，默认加载因子（0.75）在时间和空间成本之间提供了良好的平衡。较高的值会减少空间开销，但会增加查找成本（反映在大部分","通过","通过上面的遍历未找到","通过对","通过链表将产生碰撞冲突的元素组织起来，在","都参与到","都移动到新的","采用了分段锁（segment），每个分段锁维护着几个桶（hashentry），多个线程可以同时访问不同分段锁上的桶，从而使并发度更高（并发度就是segment的个数）。","里的第一个节点，直接命中；","里；","长度","长度比较小时)，从而引起的碰撞。","顺序。","顺序之后，在每次访问一个节点时，会将这个节点移到链表尾部，保证链表尾部是最近访问的节点，那么链表首部就是最近最久未使用的节点。","顺序；","首先根据","默认为","默认加载因子0.75","默认加载因子0.75；以","默认的并发级别为16，也就是说默认创建16个","（hashmap"],"javacore/container/container-map2.html":["&","(object","(计算ssize时进行移位操作的次数)log(ssize)","*","+","//之所以用32是因为concurrenthashmap里的hash()方法输出的最大数是32位的","0.75f;","0.75：","0000","1#comment","1)","1)，则表示需要扩容，此时调用helptransfer()方法进行扩容；","1)，目的：混合原始哈希码的高位和低位，以此来加大低位的随机性。而且混合后的低位掺杂了高位的部分特征，这样高位的信息也被变相保留下来。","1.7","1.7/1.8扩容区别","1.7结构","1.8","1.8初始化concurrenthashmap","1.8区别?","1.8结构","1.hashmap非线程安全","1.jdk1.8的实现降低锁的粒度，jdk1.7版本锁的粒度是基于segment的，包含多个hashentry，而jdk1.8锁的粒度就是hashentry（首节点）","1.不可变性：","1.为了维护hashcode()方法的equals协定，该协定指出：相等的对象必须具有相等的散列码（hashcode）；而两个hashcode()返回的结果相等，两个对象的equals()方法不一定相等。","1.因为粒度降低了，在相对而言的低粒度加锁方式，synchronized并不比reentrantlock差，在粗粒度加锁中reentrantlock可能通过condition来控制各个低粒度的边界，更加的灵活，而在低粒度中，condition的优势就没有了","1.底层数据结构","1.继承的父类不同","1.若桶中链表元素个数大于等于8时，链表转换成树结构；若桶中链表元素个数小于等于6时，树结构还原成链表。因为红黑树的平均查找长度是log(n)，长度为8的时候，平均查找长度为3，如果继续使用链表，平均查找长度为8/2=4，这才有转换为树的必要。链表长度如果是小于等于6，6/2=3，虽然速度也很快的，但是转化为树结构和生成树的时间并不会太短。","11","11，","16;","16;。理想情况下concurrenthashmap的真正的并发访问量能够达到concurrencylevel，因为有concurrencylevel个segment，假如有concurrencylevel个线程需要访问map，并且需要访问的数据都恰好分别落在不同的segment中，则这些线程能够无竞争地自由访问（因为他们不需要竞争同一把锁），达到同时访问的效果。这也是为什么这个参数起名为“并发级别”的原因。","1;","1个线程正在进行扩容。","1则进行初始化。","1的值是所有二进制位全为1，这种情况下，index的结果等同于hashcode后几位的值。只要输入的hashcode本身分布均匀，hash算法的结果就是均匀的。","1，","1，如果是","1，表示正在进行初始化操作；","1．object类中equals方法比较的是两个对象的引用地址，只有对象的引用地址指向同一个地址时，才认为这两个地址是相等的，否则这两个对象就不相等。","2*原数组长度+1","2.concurrenthashmap将整个hash桶进行了分段segment，每个segment上都有锁","2.jdk1.8版本的数据结构变得更加简单，使得操作也更加清晰流畅，因为已经使用synchronized来进行同步，所以不需要分段锁的概念，也就不需要segment这种数据结构了，由于粒度的降低，实现的复杂度也增加了","2.jvm的开发团队从来都没有放弃synchronized，而且基于jvm的synchronized优化空间更大，使用内嵌的关键字比使用api更加自然","2.如果不重写hashcode()，就会造成相等对象，不同的hashcode();在hashmap中就会存储两个值一样的对象。导致混淆。","2.如果有两个对象，他们的属性是相同的，但是地址不同，这样使用equals()比较得出的结果是不相等的，而我们需要的是这两个对象相等，因此默认的equals()方法是不符合我们的要求的，这个时候我们就需要对equals()方法进行重写以满足我们的预期结果。","2.实现线程安全的方式","2.已经重写了equals()和hashcode()方法","2.线程安全性不同","2.还有选择6和8，中间有个差值7可以有效防止链表和树频繁转换。假设一下，如果设计成链表个数超过8则链表转换成树结构，链表个数小于8则树结构转换成链表，如果一个hashmap不停的插入、删除元素，链表个数在8左右徘徊，就会频繁的发生树转链表、链表转树，效率会很低。","23","2的n次方大于等于concurrenthashmaplevel","2，","3.concurrenthashmap让锁的粒度更精细，并发性能更好。","3.jdk1.8使用红黑树来优化链表，基于长度很长的链表的遍历是一个很漫长的过程，而红黑树的遍历效率是很快的，代替一定阈值的链表，这样形成一个最佳拍档","3.在java的集合框架中需要用到equals()方法进行查找对象，如果集合中存放的是自定义类型，并且没有重写equals()方法，则会调用object父类中的equals()方法按照地址比较，往往会出现错误的结果，此时我们应该根据业务需求重写equals()方法。","3.在大量的数据操作下，对于jvm的内存压力，基于api的reentrantlock会开销更多的内存，虽然不是瓶颈，但是也是一个选择依据","3.是否提供contains方法","32","4.key和value是否允许null值","5.两个遍历方式的内部实现上不同","6.哈希值的使用不同","7.内部实现使用的数组初始化和扩容方式不同，","=",">>>","basecount","boolean","ca","cas思想和实现原理？","cas通过调用jni的代码实现的。jni:java","cas（compar","cmpxchg）；反之，如果程序是在单处理器上运行，就省略lock前缀。","collect","compareandswapint","compareandswaplong","compareandswapobject","concurrencylevel","concurrencylevel主要用来初始化segments、segmentshift和segmentmask等；而initialcapacity和loadfactor则主要用来初始化每个segment分段。","concurrencylevel表示并发级别，这个值用来确定segment的个数，segment的个数是大于等于concurrencylevel的第一个2的n次方的数。比如，如果concurrencylevel为12，13，14，15，16这些数，则segment的数目为16(2的4次方)。默认值为stat","concurrenthashmap","concurrenthashmap1.7分段数组+链表","concurrenthashmap1.8数组+链表/红黑二叉树","concurrenthashmap1.8的工作原理？","concurrenthashmap?","concurrenthashmap中包含一个table数组，其类型是一个node数组；而node是一个继承自map.entry的链表，而当这个链表结构中的数据大于8，则将数据结构升级为treebin类型的红黑树结构。","concurrenthashmap内部使用segment数组，每个segment类似于hashtable，在“写”线程或者部分特殊的“读”线程中锁住的是某个segment对象，其它的线程能够并发执行其它的segment对象。","concurrenthashmap和hashmap区别","concurrenthashmap和hashtable区别","concurrenthashmap在1.8版本摒弃了segment（锁段）的概念，而是启用了一种全新的cas算法的方式实现，nod","concurrenthashmap就是多线程编程中可以使用的一种高性能的线程安全hashmap方案。","concurrenthashmap所使用的锁分段技术，首先将数据分成一段一段的存储，然后给每一段数据配一把锁，当一个线程占用锁访问其中一个段数据的时候，其他段的数据也能被其他线程访问。能够实现真正的并发访问。","concurrenthashmap的工作原理？","concurrenthashmap线程安全","concurrhashmap","count","default_concurrency_level","default_initial_capac","default_load_factor","entri","entry[]数组类型，","expect,","fail","fast","final","float","get:","get操作","get操作？","h&(length","h))","hash","hash1(key)；","hash2(h1高几位)，通过h2能够确定该元素的放在哪个segment；","hash3(h1)，通过h3能够确定该元素放置在哪个hashentry。","hashentry节点都是volatile类型的，volatile类型的变量可以保证其在多线程之间的可见性，因此可以被多个线程同时读，从而不用加锁。","hashmap","hashmap中默认的数组大小为16，加载因子0.75。并且每次自动扩展或手动初始化时，长度必须是2的幂。","hashmap为什么是线程不安全的？","hashmap使用一个容量更大的数组来代替旧的数组，transfer（）方法将原有entry数组里的元素拷贝到新的entry数组里，扩容之后，原数组中的数据必须重新计算其在新数组中的位置，并放进去，这就是resize。","hashmap把hashtable的contains方法去掉了，改成containsvalue和containskey","hashmap是基于hashing的原理，我们使用put(key,","hashmap是线程不安全的，在并发环境下，可能会形成环状链表（扩容时可能造成，具体原因自行百度google或查看源码分析），导致get操作时，cpu空转","hashmap的工作原理？","hashmap的扩容resize()？","hashmap长度为什么等于2的幂？","hashmap默认容量为16，要求底层数组的容量一定要为2的整数次幂，扩容时将容量变为原来的2倍","hashtabl","hashtable、hashmap都使用了","hashtable不允许，hashmap允许","hashtable则保留了contains，containsvalue和containskey三个方法，其中contains和containsvalue功能相同。","hashtable和hashmap的区别","hashtable数组+链表","hashtable的参数？","hashtable的所有操作都会锁住整个对象，虽然能够保证线程安全，但是性能较差；","hashtable的扩容","hashtable直接使用对象的hashcode、hashmap重新计算hash值，而且用于代替求模","hashtable线程安全的策略实现代价却太大了，简单粗暴，get/put所有相关操作都是synchronized的，这相当于给整个哈希表加了一把大锁，多线程访问时候，只要有一个线程访问或操作该对象，那其他线程只能阻塞，相当于将所有的操作串行化，在竞争激烈的并发场景中性能就会非常差。","hashtable继承自dictionary类，而hashmap继承自abstractmap类。但二者都实现了map接口。","hashtable默认容量为11，不要求底层数组的容量一定要为2的整数次幂，扩容时将容量变为原来的2倍加1，","hash算法计算方式改变：","https://coolshell.cn/articles/9606.html/com","initialcapac","initialcapacity表示新创建的这个concurrenthashmap的初始容量，也就是上面的结构图中的entry数量。默认值为stat","int","interfac","interger这样的wrapper类适合作为键？？","iterator。而由于历史原因，hashtable还使用了enumeration的方式","java中cas操作通过jni本地方法实现，在jvm中程序会根据当前处理器的类型来决定是否为cmpxchg指令添加lock前缀。如果程序是在多处理器上运行，就为cmpxchg指令加上lock前缀（lock","java本地接口，允许java与其他语言交互。","jdk","jdk1.7","jdk1.7用的是头插法，而jdk1.8及之后使用的都是尾插法，","jdk1.7的concurrenthashmap的get操作是不加锁的，因为在每个segment中定义的hashentry数组和在每个hashentry中定义的value和next","jdk1.8","jdk1.8中的concurrenthashmap中还包含一个重要属性sizectl，其是一个控制标识符，不同的值代表不同的意思：","jdk1.8为什么使用内置锁synchronized来代替重入锁reentrantlock?","jdk1.8优化","jdk1.8的concurrenthashmap中保存元素的个数的记录方法也有不同，首先在添加和删除元素时，会通过cas操作更新concurrenthashmap的basecount属性值来统计元素个数。但是cas操作可能会失败，因此，concurrenthashmap又定义了一个countercell数组来记录cas操作失败时的元素个数。","jdk1.8的hashmap的优化？","key/valu","key通过一次hash运算得到一个hash值。(这个hash运算下文详说)","loadfactor","loadfactor表示负载因子，就是当concurrenthashmap中的元素个数大于loadfactor","lock","long","map","map之面试问题集","modcount","nativ","null","n时，则表示有n","obj,","object","page","public","put:","put操作","put操作是要加锁的。","put操作？","put的时候导致的多线程数据不一致","reentrantlock+segment+hashentri","remove操作？","resize而引起死循环.（条件竞争）。扩容的的时候可能会形成环形链表，","segment","segmentmask","segmentmask)","segmentshift","segmentshift)","segment下面包含很多个hashentry列表数组。对于一个key，需要经过三次（为什么要hash三次下文会详细讲解）hash操作，才能最终定位这个元素的位置，这三次hash分别为：","segment是一种可重入锁reentrantlock","segment的结构和hashmap类似，是一种数组和链表结构。","size只能获取int范围内的concurrenthashmap元素个数；而如果hash表中的数据过多，超过了int类型的最大值，则推荐使用mappingcount()方法获取其元素个数。","size操作","size操作？","size的时候，插入了多个数据），要解决这个问题，jdk1.7版本用两种方案","speed()方法将key的hash值进行再hash，让hash值的高位也参与hash运算，从而减少哈希冲突。然后再查询对应的value值。","sshift","sshift(计算ssize时进行移位操作的次数)","sshift;","sshift，例如concurrencylevel等于16，则sshift等于4，则segmentshift为28。hash值是一个32位的整数，将其向右移动28位就变成这个样子：","ssize","ssize(segments数组的长度)","string是不可变的，也是final的","sum(countercell)","swap，比较交换）：cas有三个操作数，内存值v、预期值a、要修改的新值b，当且仅当a和v相等时才会将v修改为b，否则什么都不做。","synchronized+cas+hashentry+红黑树","synchronized。数据结构沿用了与它同时期的hashmap版本的思想，底层依然由数组+链表+红黑树的方式思想。","tabl","threshold","traversing)。","update);","valu","value)存储对象到hashmap中，使用get(key)从hashmap中获取对象。","value)映射。","valueoffset,","volatil","xxxx，然后再用这个值与segmentmask做&运算，也就是取最后四位的值。这个值确定segment的索引。","​","–>","。","一个map有4个segment，标记为s1，s2，s3，s4，现在我们要获取map的size。","一次扩容后是容量为","三个参数","三次hash","不允许","不可变性还有其他的优点如线程安全。","不是线程安全的。","不过cas操作也存在一些缺点：1.","为","为什么java中在重写equals()方法后必须对hashcode()方法进行重写和hashcode()方法)","为什么java中在重写equals()方法后必须对hashcode()方法进行重写？","为什么jdk1.8中hashmap链表长度超过8会转成树结构？？","为什么string,","为什么用concurrenthashmap?","为什么要重写equals()方法？","举例：","乐观锁：认为数据一般情况下不会造成冲突，所以在数据进行提交更新的时候，才会正式对数据的冲突与否进行检测，如果发现冲突了，则让用户返回错误的信息。让用户决定如何去做。","也是一个散列表，它存储的内容是键值对(key","什么是concurrenthashmap?","什么是hashmao","什么是hashmap？","什么是hashtabl","什么是分段锁技术？","从hashmap中get元素时，首先计算key的hashcode，找到数组中对应位置的某一元素，然后通过key的equals方法在对应位置的链表中找到需要的元素。","但是速度慢，","使用unsafe的方式从segment数组中获取该索引对应的segment对象。","例如lconcurrencylevel等于16，则ssize=16,sshift=4，则segmentshift为28,。segmentmask=15;hash值是一个32位的整数，将其向右移动28位就变成这个样子：0000","例子：","保存的键值对的数量。","保证了","修改不一致。","先扩容后插入","先插入后扩容","其为0时，表示hash表还未初始化","其他情况下，则直接向node中插入一个新node节点，此时需要对这个node链表或红黑树通过synchronized加锁。","写入不一致。最后的修改操作会覆盖先前的修改","写的内存语义。","冲突，可以采用开放地址法和链地址法来解决问题。hashmap","初始化","初始化concurrenthashmap","初始化segment分段","初始化时，如果sizectl的值为0，则创建默认容量的table；否则创建大小为sizectl的table；","判断value是否为null，如果为null，直接抛出异常。","前缀有两个特性","加载因子为","加锁之后，便是将这个node节点所在的链表转换为treebin结构的红黑树。","即当元素个数超过容量长度的0.75倍时，","只能保证一个共享变量的原子操作。","同hashmap一样，segment包含一个hashentry数组，数组中的每一个hashentry既是一个键值对，也是一个链表的头节点。","同时具有","同时，我们也可以发现，当数组长度为15的时候，hashcode的值会与14（1110）进行“与”，那么最后一位永远是0，而0001，0011，0101，1001，1011，0111，1101这几个位置永远都不能存放元素了，显然不符合hash算法均匀分布的原则，空间浪费相当大，更糟的是这种情况中，数组可以使用的位置比数组长度小了很多，这意味着进一步增加了碰撞的几率，减慢了查询的效率！","同步","后，得到数组下标，把数据放在对应下标元素的链表上。","向这个segment对象中put值，这个put操作也基本是一样的步骤（通过&运算获取hashentry的索引，然后set）。","哈希表为解决","哈希表的\"key","因为jdk1.7是用单链表进行的纵向延伸，当采用头插法就是能够提高插入的效率，但是也会容易出现逆序且环形链表死循环问题。但是在jdk1.8之后是因为加入了红黑树，使用尾插法能够避免出现逆序且链表死循环的问题。","因此，concurrenthashmap中元素的个数则通过如下方式获得：元素总数","在jdk1.7之前，concurrenthashmap是通过分段锁机制来实现的，所以其最大并发度受segment的个数限制。因此，在jdk1.8中，concurrenthashmap的实现原理摒弃了这种设计，而是选择了与hashmap类似的数组+链表+红黑树的方式实现，而加锁则采用cas和synchronized实现。","在jdk1.8的时候直接用了jdk1.7的时候计算的规律，也就是扩容前的原始位置+扩容的大小值=jdk1.8的计算方式，而不再是jdk1.7的那种与计算的方法。但是这种方式就相当于只需要判断hash值的新增参与运算的位是0还是1就直接迅速计算出了扩容后的储存方式。","在初始化的时候我们说过segmentshift的值等于32","在多线程下put操作时,产生哈希碰撞，最后的写入操作会覆盖先前的写入操作","在扩容后插入的过程中，存储在linkedlist中的元素的次序会反过来，因为移动到新的bucket位置的时候，hashmap并不会将元素放在linkedlist的尾部，而是放在头部，这是为了避免尾部遍历(tail","在这里简单解释一下，理想情况下，在随机哈希代码下，桶中的节点频率遵循泊松分布，文中给出了桶长度k的频率表。由频率表可以看出，桶的长度超过8的概率非常非常小。所以作者应该是根据概率统计而选择了8作为阀值，由此可见，这个选择是非常严谨和科学的。","基于哈希表的","如","如果table不为空，且key对应的node节点也不为空，但node头结点的hash值为moved(","如果table不为空，但没有找到key对应的node节点，则直接调用castabat()方法插入一个新节点，此时不用加锁；","如果table表为空，则首先进行初始化操作，初始化之后再次进入循环获取node节点的位置；","如果不重写equals，那么比较的将是对象的引用是否指向同一块内存地址，重写之后目的是为了比较两个对象的value值是否相等。","如果当前table的长度大于64，则使用cas获取指定的node节点，然后对该节点通过synchronized加锁，由于只对一个node节点加锁，因此该操作并不影响其他node节点的操作，因此极大的提高了concurrenthashmap的并发效率。","存在aba问题，其解决思路是使用版本号；2.","它是","定位hashentri","定位hashentry：(((tab.length","定位segment：(((h","实现cas最重要的一点，就是比较和交换操作的一致性，否则就会产生歧义。","实现原理","实际上就是一个单向链表。","容器里有多把锁，每一把锁用于锁容器其中一部分数据，那么当多线程访问容器里不同数据段的数据时，线程间就不会存在锁竞争，从而可以有效的提高并发访问效率","对于一个key，先进行一次hash操作，得到hash值h1，也即h1","将得到hash值向右按位移动segmentshift位，然后再与segmentmask做&运算得到segment的索引j。","将得到的h1的高几位进行第二次hash，得到hash值h2，也即h2","将得到的h1进行第三次hash，得到hash值h3，也即h3","就是加载因子。","就相当于对length取模，而且在速度、效率上比直接取模要快得多","当我们往hashmap中put元素的时候，先根据key的hash值得到这个元素在数组中的位置（即下标），如果下标对应的链表为空，则直接把键值对作为链表头节点，如果不为空，发生哈希冲突，则equals方法在对应位置的链表中找到需要的元素，有就把value替换，没有那么在同一个位子上的元素将以链表的形式存放，新加入的放在链头，最先加入的放在链尾。（jdk1.7之所以放在头节点，是因为hashmap的发明者认为后插入的entry被查找的可能性更大。）","当然你可能使用任何对象作为键，只要它遵守了equals()和hashcode()方法的定义规则，并且当对象插入到map中之后将不会再改变了。如果这个自定义对象时不可变的，那么它已经满足了作为键的条件，因为当它创建之后就已经不能改变了。","循环时间长，开销大；3.","怎样计算key在数组中的位置(hash算法)？根据hashcode计算数组下标？","思想：","悲观锁:就是对数据的冲突采取一种悲观的态度，也就是说假设数据肯定会冲突，所以在数据开始读取的时候就把数据锁定住。【数据锁定：数据将暂时不会得到修改】","我们可以使用自定义的对象作为键吗？？","我们当然希望这个hashmap里面的元素位置尽量的分布均匀些，尽量使得每个位置上的元素数量只有一个，那么当我们用hash算法求得这个位置的时候，马上就可以知道对应位置的元素就是我们要的，而不用再去遍历链表","所以，长度16或者其他2的幂，length","扩容后不是重新计算所有元素在数组的位置：","扩容增量：","把写缓冲区的所有数据刷新到内存中","接口的实现。","插入元素后，判断对应的node结构是否需要改变结构，如果需要则调用treeifybin()方法将node链表升级为红黑树结构；","数据结构","数据结构变化：","数组+链表+红黑树，当链表的深度达到8的时候，也就是默认阈值，就会自动扩容把链表转成红黑树的数据结构来把时间复杂度从o（n）变成o（logn）提高了效率","数组中的。","新容量=旧容量2；默认旧容量=160.75=12","新的位置=旧的位置","旧的位置+旧容量","是","是一个","是一个散列表，它存储的内容是键值对(key","是用来实现","最后，调用addcount()方法记录table中元素的数量。","最坏的情况：第三次计算得到的数据更新次数和第二次也不一样，则只能先对所有segment加锁再计算最后解锁。","最大容量时就需要rehash，扩容。默认值为stat","有一些方法需要跨段，比如size()和containsvalue()，它们可能需要锁定整个表而不仅仅是某个段，这需要按顺序锁定所有段，操作完毕后，又按顺序释放所有段的锁。这里“按顺序”是很重要的，否则极有可能出现死锁","机制的","查询时，首先通过tabat()方法找到key对应的node链表或红黑树，然后遍历该结构便可以获取key对应的value值。其中，tabat()方法主要通过unsafe类的getobjectvolatile()方法获取value值，通过volatile读获取value值，可以保证value值的可见性，从而保证其是当前最新的值。","段偏移量","段掩码","每个segment守护着一个hashentry数组里的元素,当对hashentry数组的数据进行修改时，必须首先获得它对应的segment锁。","比如当前线程比较成功后，准备更新共享变量值的时候，这个共享变量值被其他线程更改了，那么cas函数必须返回false。","注意：要想实现线程安全，那么需要调用","然后重置sizectl的值为0.75n，即当前table容量的0.75倍，并返回创建的table，此时初始化hash表完成。","然后，在table中删除元素时，如果元素所在的红黑树节点个数小于6，则会触发红黑树向链表结构转换。","用于判断是否需要调整","的值=\"容量*加载因子\"。","的函数都是同步的，这意味着它是线程安全的。它的key、value都不可以为null。此外，hashtable中的映射不是有序的。","的大小，","的实现不是同步的，这意味着它不是线程安全的。它的key、value都可以为null。此外，hashmap中的映射不是有序的。","的容量。","的容量为","的阈值，","看下图，左边两组是数组长度为16（2的4次方），右边两组是数组长度为15。两组的hashcode均为8和9，但是很明显，当它们和1110“与”的时候，产生了相同的结果，也就是说它们会定位到数组中的同一个位置上去，这就产生了碰撞，8和9会被放到同一个链表上，那么查询的时候就需要遍历这个链表，得到8或者9，这样就降低了查询的效率。","碰撞，hash冲突","禁止该指令与前面和后面的读写指令重排序","第一次计算，不对s1，s2，s3，s4加锁，遍历所有的segment，假设每个segment的大小分别为1，2，3，4，更新操作次数分别为：2，2，3，1，则这次计算可以得到map的总大小为1+2+3+4=10，总共更新操作次数为2+2+3+1=8；","第一种方案他会使用不加锁的模式去尝试多次计算concurrenthashmap的size，最多三次，比较前后两次计算的结果，结果一致就认为当前没有元素加入，计算的结果是准确的","第三次计算，不对s1，s2，s3，s4加锁，遍历所有segment，假设每个segment的更新操作次数还是为3，2，3，1，则因为第二次计算和第三次计算得到的map的更新操作的次数是一致的，就能说明第二次计算和第三次计算这段时间内map数据没有被更新，此时可以直接返回第三次计算得到的map的大小。","第二次计算，不对s1,s2,s3,s4加锁，遍历所有segment，假设这次每个segment的大小变成了2，2，3，4，更新次数分别为3，2，3，1，因为两次计算得到的map更新次数不一致(第一次是8，第二次是9)则可以断定这段时间map数据被更新，则此时应该再试一次；","第二种方案是如果第一种方案不符合，他就会给每个segment加上锁，然后计算concurrenthashmap的size返回","类的静态方法","线程安全。hashmap","线程安全，","继承于abstractmap，实现了map、cloneable、java.io.serializable接口。","继承于dictionary，实现了map、cloneable、java.io.serializable接口。","缺点","而","而为","而为正数时这个数值表示初始化或下一次扩容的大小，相当于一个阈值；即如果hash表的实际大小>=sizectl，则进行扩容，默认情况下其是当前concurrenthashmap容量的0.75倍；","而其get操作步骤也比较简单，定位seg","而如果sizectl为","而如果sizectl大于等于0，则使用cas操作比较sizectl的值是否是","获取hash值对应的node节点位置，此时通过一个循环实现。有以下几种情况：","要实现这个需求，java中提供了unsafe类，它提供了三个函数，分别用来操作基本类型int和long，以及引用类型object。方法的实现位于unsafe.cpp中","计算concurrenthashmap的元素大小是一个有趣的问题，因为他是并发操作的，就是在你计算size的时候，他还在并发的插入数据，可能会导致你计算出来的size和你实际的size有相差（在你return","计算hashcode()，就要防止键值改变，如果键值在放入时和获取时返回不同的hashcode的话，那么就不能从hashmap中找到你想要的对象。","计算key的hash值，即调用speed()方法计算hash值；","计算过程是这样的：","读和","这两点保证了内存屏障效果，","进行扩容","通过getobjectvolatile()方法获取指定偏移量上的hashentri","通过get获取hash表中的值时，首先需要获取key值的hash值。而在jdk1.8的concurrenthashmap中通过spread()方法获取。","通过循环遍历链表获取对应值。","造成死循环.","采用了链地址法。链地址法，简单来说，就是数组加链表的结合。在每个数组元素上都一个链表结构，当数据被","链表头插。jdk1.8","链表尾插。","链表死循环问题","键值对\"都是存储在","非同步","面试问题hashmap/hashtable/concurrhashmap","首先会判断sizectl的值，如果其小于0，则说明其正在进行初始化或扩容操作，则不执行任何操作，调用yield()方法使当前线程返回等待状态；","首先会检查hash表的大小是否大于等于min_treeify_capacity，默认值为64，如果小于该值，则表示不需要转化为红黑树结构，直接将hash表扩容即可。","首先，在table中添加一个元素时，如果添加元素的链表节点个数超过8，则会触发链表向红黑树结构转换。","高16位异或低16位，后&(length","高16位异或低16位，然后再h&(length","默认初始容量为","（1）","（2）","（3）","（4）","（5）","？"],"javacore/concurrent/Java多线程面试题集.html":["/","0，当有任务来之后，就会创建一个线程去执行任务，当线程池中的线程数目达到","1","1.","1.1.","1.2.","1.3.","1.4.","1.5.","1.6.","1.7.","1.8.","10","10.","10mb/s，所以在进行并发的时候回考虑资源的限制。硬件资源限制有带宽的上传/下载速度、硬盘的读写速度和","1mb/s,系统启动","2.","2.1.","2.10.","2.2.","2.3.","2.4.","2.5.","2.6.","2.7.","2.8.","2.9.","2b－3a。","2mb/s,某个资源的下载速度为","3","3.","3.1.","3.2.","3.3.","3.4.","4","4.","4.1.","5","5.","5.1.","5.2.","50","5。","6","6.","6.1.","6.2.","6.3.","7","7.","7.1.","8.","8.1.","9.","9.1.","9.2.","9.3.","9.4.","9.5.",":point_right:","==","[1,10]，一般来说，高优先级的线程在运行时会具有优先权。可以通过","aba问题：因为cas需要在操作值的时候检查下值有没有发生变化，如果没有发生变化则更新，但是如果一个值原来是a，变成了b，又变成了a，那么使用cas进行检查时会发现它的值没有发生变化，但是实际上却变化了。aba问题的解决思路就是使用版本号。在变量前面追加上版本号，每次变量更新的时候把版本号加一，那么a－b－a","abortpolicy，表示无法处理新任务时抛出异常。以下是","abortpolicy：直接抛出异常。","arrayblockingqueue。静态工厂方法","arrayblockingqueue：是一个基于数组结构的有界阻塞队列，此队列按","arraylist、hashmap、linkedlist","atom","befor","block","blockingqueu","byte、integer、long","ca","call()","callabl","callerrunspolicy：只用调用者所在线程来运行任务。","class","classes)","collect","concurr","concurrenthashmap","concurrenthashmap,","concurrentmodificationexcept","concurrentmodificationexception。","condit","copyonwritearraylist","copyonwritearrayset，阅读这篇文章了解如何避免","corepools","corepoolsize,","corepoolsize：默认情况下，在创建了线程池后，线程池中的线程数为","countdownlatch","cpu","cyclicbarri","discardoldestpolicy：丢弃队列里最近的一个任务，并执行当前任务。","discardpolicy：不处理，丢弃掉。","displac","entri","executor","executors.newcachedthreadpool","executors.newfixedthreadpool()使用了这个队列。","executor，executorservice，scheduledexecutorservice，threadfactori","fifo","fifo（先进先出）原则对元素进行排序。","flush），从而提高cpu的执行效率。","for(int","futur","futuretask","futuretask？","future？","future？什么是","gc","get()","handler)","handler：饱和策略。当队列和线程池都满了，说明线程池处于饱和状态，那么必须采取一种策略处理提交的新任务。这个策略默认情况下是","happen","i=0;i","id","id%机器数”，计算得到一个机器编号，然后由对应编号的机器处理这个数据，对于软件资源受限，可以使用资源池来复用如使用连接池将数据库和","id，以后该线程在进入该同步块的时候，不需要再次使用","id，用这个","int","int++并不是一个原子操作，所以当一个线程读取它的值并加","interface)是什么？对比同步它有什么优势？","java","java.lang.thread.st","java.uitl.concurrent.threadpoolexecutor","java.util.concurrent.blockingqueu","java.util.concurrent.executor","java实现原子操作：循环使用cas实现原子操作","java并发编程","jdk1.5","jdk1.5，java.util.concurrent.atom","jdk6","jmm","jmm。jmm","join","join()","join()方法的区别","juc","jvm","keepalivetim","keepalivetime,","keepalivetime：线程活动保持时间。线程池的工作线程空闲后，保持存活的时间。所以如果任务很多，并且每个任务执行的时间比较短，可以调大这个时间，提高线程的利用率。","linkedblockingqueue，静态工厂方法","linkedblockingqueue：一个基于链表结构的阻塞队列，此队列按","llegalthreadstateexcept","lock","lock.trylock(timeout)，避免锁一直不能释放","locksupport.park()","locksupport.parknanos(timeout)","locksupport.parkuntil(timeout)","long","mark","maximumpoolsize,","maximumpoolsize：线程池允许创建的最大线程数。如果缓存队列满了，并且已创建的线程数小于最大线程数，则线程池会再创建新的线程执行任务。值得注意的是如果使用了无界的任务队列这个参数就没什么效果。","memori","memory）中，每个线程都有一个私有的本地内存（loc","memory），本地内存中存储了该线程以读/写共享变量的副本。","method","model，简称","monitor","next()方法将抛出","notify()","notify()。","notifyall()","null","nullpointerexception。","object","object.wait()","object.wait(timeout)","odps、hadoop","order","pipelin","pipeline）,使cpu不会消耗过多的执行资源，延迟的时间取决于具体实现的版本，在一些处理器上延迟时间是零。第二它可以避免在退出循环的时候因内存顺序冲突（memori","priorityblockingqueue：一个具有优先级的无限阻塞队列。","public","reference.get()","rejectedexecutionhandl","remov","resiz","run","run()","runnabl","runnable，并且根据线程调度，它将得到执行。","scheduledthreadpoolexecutor","scheduler)和时间分片(tim","semaphor","set()","set，get","sleep()","sleep()、yield()、join()","slicing)？","slot","slots）。当然将","slots）来自动做一些清除工作，否则如果不清除的话容易产生内存无法释放的问题：valu","socket","stale","start()","state","switching)？","synchon","synchron","synchronousqueue：一个不存储元素的阻塞队列。每个插入操作必须等到另一个线程调用移除操作，否则插入操作一直处于阻塞状态，吞吐量通常要高于","t","target","thread","thread.join()","thread.join(timeout)","thread.setdaemon(true)","thread.setpriority(thread.max_priority)","thread.sleep(sleeptime)","thread.start()","threadfactori","threadfactory,","threadfactory：创建线程的工厂。可以通过线程工厂给每个创建出来的线程设置更有意义的名字。","threadloc","threadlocal.threadlocalmap","threadlocalmap","threadlocals。","threadlocals，这个","threadpoolexecutor","threadpoolexecutor(int","thread）是在后台执行并且不会阻止","thread）相反的，叫用户线程（us","thread），也就是非守护线程。","timeunit","top","true","unit,","unit：参数","value，存到","vector、hashtable、stack，与之相对应的","violation）而引起cpu流水线被清空（cpu","volatil","vs.","wait()","wait(),","wait()、notify()","wait()和","waiting）","weakreference。threadlocalmap","webservic","word","word。然后线程尝试将对象","workqueue,","workqueue：任务队列。用于保存等待执行的任务的阻塞队列。","yield","yield()","{","一个守护线程创建的子线程依然是守护线程。","一个本地变量也有可能是一个对象的引用，这种情况下，这个本地引用会被存储到栈中，但是对象本身仍然存储在堆区。","一个本地变量如果是原始类型，那么它会被完全存储到栈区。","一个程序至少有一个进程，一个进程至少有一个线程。","一个线程池管理了一组工作线程，同时它还包括了一个用于放置等待执行的任务的队列。","三种创建线程方式对比","上下文切换是存储和恢复","不会造成线程的阻塞；synchron","不保证所有过期","不变类和线程安全类","不同的是，countdownlatch","不能重用。","不要认为所有的应用都可以分配给守护线程来进行服务，比如读写操作或者计算逻辑。","与","与守护线程（daemon","个功能：","个方法中的任意方法：","个线程去下载资源，下载速度不会变成","中使用","中典型的消息传递方式就是","中守护线程的总结","中定义了","中对应的缓存行无效。","中所有的过期","中有哪些锁？","中的线程优先级如何控制","中的线程优先级的范围是","中线程优先级一一对应。","中被引入。executor","中运行的每个线程都拥有自己的线程栈，线程栈包含了当前线程执行的方法调用相关信息，我们也把它称作调用栈。随着代码的不断执行，调用栈会不断变化。","为","为了在新的线程中执行我们的代码，必须使用","为了解决这个问题，必须保证增加操作是原子的，在","为什么","为什么线程通信的方法","为什么要用守护线程","为变量副本（即","为变量在每个线程中都创建了一个副本，那么每个线程可以访问自己内部的副本变量。","为当前","为空。当通过","主要的类有","之前我们可以使用同步技术来做到这一点。到","之前设置，否则会抛出","之后输入同步块/方法或重新输入同步块/方法。","于随后获得这个锁的线程的操作。","什么是","什么是原子操作？有哪些原子类？","什么是原子操作？有哪些原子类？原子类的实现原理是什么？","什么是同步容器？有哪些常见同步容器？它们是如何实现线程安全的？同步容器真的线程安全吗？","什么是守护线程","什么是守护线程？为什么要用守护线程？如何创建守护线程？","什么是并发容器的实现？","什么是死锁(deadlock)？如何分析和避免死锁？","什么是线程池？如何创建一个","什么是线程调度器(thread","什么是线程？","什么是进程？","什么是进程？什么是线程？进程和线程的区别？","什么是阻塞队列？如何使用阻塞队列来实现生产者","仅能使用在变量级别；synchron","仅能实现变量的修改可见性，不能保证原子性；而","代码块时，这个线程便获得了该对象的锁，其他线程暂时无法访问这个方法，只有等待这个方法执行完毕或者代码块执行完毕，这个线程才会释放该对象的锁，其他线程才能执行这个方法或者代码块。","以下是各状态的说明，以及状态间的联系：","以及","任务后返回了一个","任务是并行的，我们必须等待它返回的结果。futur","任务的状态和得到","优化","会在","会在操作中会被删除，而","会让这个线程去执行","但是，sleep()","作用：","使用","使用了这个队列。","使用处理异步任务。通常我们不需要使用","使用它的目的是：当","例子，了解如何创建一个周期任务。","例子，学习如何使用它。","保证了不同线程对这个变量进行操作时的可见性，即一个线程修改了某个变量的值，这新值对其他线程来说是立即可见的。","偏向锁：大多数情况下，锁不仅不存在多线程竞争，而且总是同一个线程多次获取，为了让线程获得锁的代价更低引入偏向锁。当某一线程访问同步块时，会在对象头和栈帧中的琐记录里存储锁偏向的线程","做自动删除（set","共享内存","关键字","关键字会阻止其它线程获取当前对象的监控锁，这样就使得当前对象中被","关键字保护的代码块无法被其它线程访问，也就无法并发执行。更重要的是，synchron","关键字修饰方法以保证方法线程安全的容器。","关键字修饰的变量有两层含义：","关键字修饰，从而保证了当有一个线程执行方法时，其他线程被阻塞。","关键字和没有加入","关键字时所生成的汇编代码发现，加入","关键字时，会多出一个","关键字来标记一个方法或者代码块，当某个线程调用该对象的","关键字解析","典型场景：使用同步容器做迭代操作时，如果不对外部做同步，就可能出现","内存模型","内存模型即","内的任务。由于","内部有一个","决定一个线程对共享变量的写入何时对另一个线程可见。","分析死锁，我们需要查看","分配","则会删除","则可以使用在变量、方法、和类级别的。","则可以保证变量的修改可见性和原子性","则是锁定当前变量，只有当前线程可以访问该变量，其他线程被阻塞住。","则是非线程安全的。","则表示过期，程序内部称为","创建","创建并启动新线程。","创建线程主要有三种方式：","创建线程有哪些方式？这些方法各自利弊是什么？","创建线程的三种方式及其对比","初始时，在","前缀指令。lock","前缀指令实际上相当于一个内存屏障（也成内存栅栏），内存屏障会提供","包中引入了","包中提供的","包提供了","千分之一微秒)。","千分之一毫秒)和毫微秒(nanoseconds,","协程：在单线程中实现多任务调度，并在单线程中维持多个任务的切换","即使设置了线程的优先级，也无法保证高优先级的线程一定先执行。","原因：这是因为","原子变量类","原子操作是指一个不受其他操作影响的操作任务单元。原子操作是在多线程环境下避免数据不一致必须的手段。","原子操作进行加锁和解锁，只需要简单的测试一下对象头中的","原子类(atom","原子类的实现原理是什么？","原理：","参数说明","参考阅读：java","参考阅读：sleep()，wait()，yield()和","参考阅读：volatil","参考阅读：全面理解","参考阅读：进程和线程关系及区别","变量为键值，以","变量调用","变量，valu","只能保证一个共享变量的原子操作。当对一个共享变量执行操作时，我们可以使用循环cas的方式来保证原子操作，但是对多个共享变量操作时，循环cas就无法保证操作的原子性，这个时候就可以用锁，或者有一个取巧的办法，就是把多个共享变量合并成一个共享变量来操作。比如有两个共享变量i＝2,j=a，合并一下ij=2a，然后用cas来操作ij。从java1.5开始jdk提供了atomicreference类来保证引用对象之间的原子性，你可以把多个变量放在一个对象里来进行cas操作。","可以。但是如果直接调用","可以使锁更公平可以使线程在等待锁的时候响应中断可以让线程尝试获取锁，并在无法获取锁的时候立即返回或者等待一段时间可以在不同的范围，以不同的顺序获取和释放锁阅读更多关于锁的例子","可以用于方便的创建线程池。","可以直接调用","可以设置","可以选择以下几个阻塞队列。","可能会造成线程的阻塞。","可运行（runnable）","同步块是更好的选择。","同步块，其他线程仍然不能访问共享数据。","同步容器中的所有自带方法都是线程安全的。但是，对这些集合类的复合操作无法保证其线程安全性。需要客户端通过主动加锁来保证。","同步容器之所以说是线程安全的，是因为它们的方法被","同步容器和并发容器","同步容器是指","同步方法和同步块，哪个更好？","后，就会把到达的任务放到缓存队列当中。","和","回收。实际代码中，threadlocalmap","回收时，系统可以检测到该","因为它不会锁住整个对象（当然你也可以让它锁住整个对象）。同步方法会锁住整个对象，哪怕这个类中有多个不相关联的同步块，这通常会导致他们停止执行并需要等待获得这个对象上的锁。","在","在共享内存模型中，必须显示指定某个方法或某段代码在线程间互斥地执行。","在多线程中，什么是上下文切换(context","在消息传递模型中，由于发送消息必须在接收消息之前，因此同步是隐式进行的。","在计算机内存(ram)中的工作方式。jmm","基于进入和退出","堆区","堆区包含了","处理器实现原子操作：使用总线锁保证原子性，使用缓存锁保证原子性（修改内存地址，缓存一致性机制：阻止同时修改由2个以上的处理器缓存的内存区域数据）","多线程和并发基础面试问答","多线程夺命连环问","多线程面试题集","如何减少上下文切换？","如何创建守护线程","如何确保线程安全？","如何解决资源限制问题：可以使用集群并行执行程序，既然单机的资源有限，那么可以让程序在多机上运行，比如使用","如何让正在运行的线程暂停一段时间？","如何避免死锁？","如果是写操作，它会导致其他","子类的实例，即创建了线程对象。","它会强制将对缓存的修改操作立即写入主存；","它的优势有：","它确保指令重排序时不会把其后面的指令排到内存屏障之前的位置，也不会把前面的指令排到内存屏障的后面；即在执行到内存屏障这句指令时，在它前面的操作已经全部完成；","守护线程的优先级比较低，用于为系统中的其它对象和线程提供服务。典型的应用就是垃圾回收器。","守护线程（daemon","定义","定义了","定时等待（time","实例可以被","实现","实现类的实例，使用","实现类的实例，并以此实例作为","对于一个对象的成员变量，不管它是原始类型还是包装类型，都会被存储到堆区。","对于一个对象的成员方法，这些方法中包含本地变量，仍需要存储在栈区，即使它们所属的对象在堆区。","对于同步代码块，锁就是","对于数据库锁，加锁和解锁必须在一个数据库连接中里，否则会出现解锁失败的情况。","对于普通同步方法，锁就是实例对象","对于静态同步方法，锁就是当前类的","对应的","对应的对象即使不再使用，但由于被","对象","对象为我们解决了这个问题。在线程池提交","对象作为","对象封装了该","对象才是真正的线程对象。","对象来实现方法同步和代码块同步","对象的","对象设置为","对象，使用它我们可以知道","对象，该","尝试使用定时锁","就会变成1a","就是用来存储实际的变量副本的，key","尽量少用锁","已经调用了","常见的同步容器有","并不能完全避免内存泄露对象，最安全的办法仍然是调用","并且","并发一定比串行更快吗？","并发容器支持并发的遍历和并发的更新。","并发工具类","并发机制的底层实现","并发简介","并发编程领域两个关键问题：线程间通信和线程间同步","并发编程：callable、futur","并发编程：countdownlatch、cyclicbarri","并发编程：synchron","并发编程：volatil","并发编程：同步容器","并发编程：深入剖析","并发编程：线程池的使用","并发编程：线程间协作的两种方式：wait、notify、notifyal","并发（多线程）编程的好处是什么？","应用创建的所有对象信息，不管对象是哪个线程创建的，其中的对象包括原始类型的封装类（如","应用程序的线程转储。我们需要找出那些状态为","开始（new）","异常。","异常；","引申","当一个线程需要调用对象的","当前变量在寄存器（工作内存）中的值是不确定的，需要从主存中读取；","当某个线程调用了","当然也可以根据应用场景需要来实现","当线程间是可以共享资源时，线程间通信是协调它们的重要的手段。object","循环时间长开销大。自旋cas如果长时间不成功，会给cpu带来非常大的执行开销。如果jvm能支持处理器提供的pause指令那么效率会有一定的提升，pause指令有两个作用，第一它可以延迟流水线执行指令（d","必须在","必须在同步方法或者同步块中被调用？","我们可以使用","我们可以找出哪些线程已经拥有了它的对象锁。","或者自己搭个服务器集群，不同的机器处理不同的数据，可以通过“数据","所引用导致无法被","把内存分成了两部分：线程栈区和堆区","括号里配置的对象","排序元素，吞吐量通常要高于","接口","接口(lock","接口优于继承","接口使用泛型去定义它的返回类型。executor","接口和","接口在","接口很相似，但它可以返回一个对象或者抛出一个异常。","接口是","接口比同步方法和同步块提供了更具扩展性的锁操作。他们允许更灵活的结构，可以具有完全不同的性质，并且可以支持多个相关类的条件对象。","接口的一些方法并保持原来基础的实现是，它就变得非常有用。我们可以仅仅继承于它并重写我们需要的方法。阅读","接口的实现用于创建线程池。线程池例子展现了如何创建和使用线程池，或者阅读","接口的实现类，并实现","接口的实现类，并重写该接口的","接口的线程没有返回值；而使用","接口自定义策略。如记录日志或持久化不能处理的任务。","接口获取数据只建立一个连接。","接口，它和","提供了","提供了一个","提供的四种策略。","操作结果都会直接刷到主存中，从而保证了操作的内存可见性，同时也使得先获得这个锁的线程的所有操作，都","文章","方式可以让线程有返回值。","方法。","方法。同样的，当一个线程需要调用对象的","方法不会释放“锁标志”，也就是说如果有","方法么？","方法会使当前线程转入","方法可以用于线程间通信关于资源的锁的状态。","方法可以让当前正在执行的线程暂停，但它不会阻塞该线程，它只是将该线程从","方法在","方法将作为线程执行体，并且有返回值。","方法将处理","方法或者","方法或者访问","方法执行结束，或者因异常退出了","方法时，它会释放这个对象的锁，以便其他在等待的线程就可以得到这个对象锁。","方法是线程的执行体。","方法是静态（static）的？","方法暂停之后，只有优先级与当前线程相同，或者优先级比当前线程更高的处于就绪状态的线程才会获得执行的机会。","方法有什么区别？为什么","方法来启动该线程。","方法来获得子线程执行结束后的返回值","方法的区别","方法的方法体同样是该线程的线程执行体。","方法的方法体就代表了线程要完成的任务。因此把","方法的时候，这个线程必须拥有该对象的锁，接着它就会释放这个对象锁并进入等待状态直到其他线程调用这个对象上的","方法的线程处于此状态。","方法的线程状态。此状态意味着，线程已经准备好了，一旦被线程调度器分配了","方法的线程结束后才能继续执行。","方法的返回值。","方法称为执行体。","方法让我们可以等待","方法让线程暂停一段时间。","方法负责启动线程，然后","方法需要指定等待的时间，它可以让当前正在执行的线程在指定的时间内暂停执行，进入","方法，则该线程结束生命周期。死亡的线程不可再次复生。","方法，它的行为就会和普通的方法一样。","方法，就会对","方法，来彻底避免可能的内存泄露。","方法，该","无限制的创建线程会引起应用程序内存溢出。所以创建一个线程池是个更好的的解决方案，因为可以限制线程的数量并且可以回收再利用这些线程。利用","时间。一旦我们创建一个线程并启动它，它的执行便依赖于线程调度器的实现。","时间分片是指将可用的","时间分配给可用的","时间可以基于线程优先级或者线程等待的时间。线程调度并不受到","时间片，就可以运行线程。","时，另外一个线程有可能会读到之前的值，这就会引发错误。","是","是否存在指向当前线程的偏向锁。如果测试成功，则表示获得锁，否则检测是否设置有偏向锁，如果没有，则使用","是否已经过期（根据","是指什么？ca","是隶属于","更好的编程模型","更快的响应时间","更有效率的利用多处理器核心","有什么不同？","有什么作用？","有什么作用？threadloc","有什么作用？它的实现原理是什么？","有什么作用？它的实现原理是什么？同步方法和同步块，哪个更好？","有什么区别？可以直接调用","有哪些参数，各自有什么用？","有四个构造方法，前三个都是基于第四个实现。第四个构造方法定义如下：","本质是在告诉","来判断，如果为","标记的变量不会被编译器优化；synchron","标记的变量可以被编译器优化。","框架中最核心的一个类。","框架创建一个线程池。","框架可以非常方便的创建一个线程池，阅读这篇文章可以了解如何使用","框架同","框架是一个根据一组执行策略调用，调度，执行和控制的异步任务的框架。","框架的一部分，它主要用于实现生产者","框架？","正在运行的用户线程无法设置为守护线程，所以","死锁是指两个以上的线程永远相互阻塞的情况，这种情况产生至少需要两个以上的线程和两个以上的资源。","注意点：","消息传递","消费者模型？","消费者问题。","然后在当前线程里面，如果要使用副本变量，就可以通过","状态。","状态的线程。所以在其他处于非","状态的线程上执行这两个方法是没有意义的。这就是为什么这些方法是静态的。它们可以在当前正在执行的线程中工作，并避免程序员错误的认为可以在其他非运行线程调用这些方法。","状态的线程分配","状态的过程，它使得线程执行能够从中断点恢复执行。上下文切换是多任务操作系统和多线程环境的基本特征。","状态转入","状态，等待调用","由于所有的这些方法都需要线程持有对象的锁，这样就只能通过同步来实现，所以他们只能在同步方法或者同步块中被调用。","的","的。","的一个基础实现，我们可以将它同","的三大问题？","的区别","的区别？","的原理是什么？","的处理速度。软件资源限制有数据库的连接数和","的实现原理是什么？","的并发采用的是共享内存模型","的方式设置，默认优先级为","的时间单位，有","的替换为指向","的每一个类都有用于线程间通信的基本方法","的每个对象中都有一个锁(monitor，也可以成为监视器)","的特性是：当队列是空的时，从队列中获取或删除元素的操作将会被阻塞，或者当队列是满时，往队列里添加元素的操作会被阻塞。","的简单总结","的线程中并没有可供任何对象使用的锁和同步器。这就是为什么这些方法是","的线程优先级如何控制？高优先级的","的线程和他们等待的资源。每个资源都有一个唯一的","禁止进行指令重排序。","种不同的线程状态，在给定的一个时刻，线程只能处于其中的一个状态。","种取值。可选的单位有天（days），小时（hours），分钟（minutes），毫秒(milliseconds)，微秒(microseconds,","种状态及切换(透彻讲解)","种状态，级别从低到高为：无锁状态、偏向锁状态、轻量级锁状态和重量级锁状态，这几个状态会随着竞争情况逐渐升级。锁可以升级但不能降级，目的是为了提高获得锁和释放锁的效率","竞争锁，否则偏向锁指向该线程。","等并发容器。","等待指定时间的状态。一个线程处于定时等待状态，是由于执行了以下方法中的任意方法：","等待状态。一个线程处于等待状态，是由于执行了","等待（waiting）","等方法中对","等方法用于等待对象的锁或者通知其他线程对象的监视器可用。在","等等）。不管对象是属于一个成员变量还是方法中的本地变量，它都会被存储在堆区。","答：否。","简言之，进程可视为一个正在运行的程序。","算法","类","类。","类中","类中的","类型的变量）。","类型的成员变量","类型的装类，它们可以自动的保证对于他们的操作是原子的并且不需要使用同步。可以阅读这篇文章来了解","类提供了一些工具方法。","类提供了一些有用的方法去在线程池中执行","类是","类是什么？","类来包装","类的","类的一部分，这样","类的子类，并重写该类的","类里？","类，单当我们打算重写","类，因为根据开放封闭原则——实现接口更便于扩展；","线程","线程一定先执行吗","线程一定先执行吗？","线程中","线程为守护线程。","线程之间的共享变量存储在主内存（main","线程优先级依赖于操作系统的支持，然而，不同的操作系统支持的线程优先级并不相同，不能很好的和","线程优先级控制并不可靠。","线程基础","线程数多少才合理","线程数要合理","线程方法","线程是操作系统进行调度的基本单位。","线程栈","线程栈还包含了当前方法的所有本地变量信息。线程中的本地变量对其它线程是不可见的。","线程比进程划分更细，所以执行开销更小，并发性更高。","线程池","线程池？","线程生命周期中有哪些状态？各状态之间如何切换？","线程的","线程的过程。","线程调度器是一个操作系统服务，它负责为","线程间同步机制","线程间是如何通信的？","线程间通信机制","线程间通过写","线程面试题","终止(terminated)","终止的线程。","结束并获取它的执行结果。","结论：java","结论：由于同步容器不能彻底保证线程安全，且性能不高，所以不建议使用。如果想使用线程安全的容器，可以考虑","继承","继承了","虚拟机控制，所以由应用程序来控制它是更好的选择（也就是说不要让你的程序依赖于线程的优先级）。","被","被定义在","要保存的副本变量为","要点：创建线程和线程上下文切换有一定开销。","观察加入","记录的指针，如果成功，那么当前线程获得锁，如果失败，那么使用自旋获得锁。","该方法既可以让其他同优先级或者高优先级的线程得到执行的机会，也可以让低优先级的线程得到执行机会。","说明：即使是单核处理器也支持多线程。cpu","读内存中的公共状态来隐式进行通信。","调用","调用线程对象的","资料","资源限制","资源限制引来的问题：为了将代码执行速度加快将代码中串行执行的部分变成并发执行，因为资源受限，仍然在串行执行，这时候程序不仅不会加快，反而会变慢，因为增加了上下文切换和资源调度的时间。","资源限制指的是程序的执行速度受限于计算机硬件资源或软件资源，如服务器的带宽只有","轻量级锁：线程执行同步块之前，会在线程私有的栈帧中开辟用于存储锁记录的空间，称为","返回的执行结果。futur","还会创建一个内存屏障，内存屏障指令保证了所有","还没有调用","进程","进程和线程关系及区别","进程是一个实体，拥有独立的资源；而同一个进程中的多个线程共享进程的资源。","进程是具有一定独立功能的程序关于某个数据集合上的一次运行活动。进程是操作系统进行资源分配的基本单位。","进行初始化，并且以当前","连接复用，或者在调用对方","连接数等。","通过","通过给每个线程分配时间切片的算法来循环执行任务，当前任务执行一个时间片后会切换到下一个任务。但是，在切换前会保持上一个任务的状态，以便下次切换回这个任务时，可以再加载这个任务的状态。所以任务从保存到再加载的过程就是一次上下文切换。","避免一个线程同时获取多个锁","避免一个线程在锁内同时占用多个资源，尽量保证每个锁只占用一个资源","避免嵌套锁，只在需要的地方使用锁和避免无限期等待是避免死锁的通常办法。","都可以用来让一组线程等待其它线程。与","里面查找。","里面，threadloc","锁","锁一共有","阅读这篇文章了解如何使用阻塞队列实现生产者","阻塞状态。线程阻塞的线程状态等待监视器锁定。处于阻塞状态的线程正在等待监视器锁定，以便在调用","阻塞队列不接受空值，当你尝试向队列中添加空值的时候，它会抛出","阻塞队列的实现都是线程安全的，所有的查询方法都是原子的并且使用了内部锁或者其他形式的并发控制。","阻塞（blocked）","集合类都是快速失败的，这就意味着当集合被改变且一个线程在使用迭代器遍历集合的时候，迭代器的","需要注意的是，这并不会让线程终止，一旦从休眠中唤醒线程，线程的状态将会被改变为","需要注意的是：threadlocalmap.entri","首先，在每个线程","高优先级的","（先进先出）"],"javacore/concurrent/并发简介.html":["(0)","+","0;","0。然后各自加了","1","100%","2","2、4","2秒处理文件a","2秒处理文件b","3","3，并分别写回内存。最终的值并不是期望的","5","5。然而由于两个线程是交叉执行的，两个线程从内存中读出的初始值都是","5秒读取文件a","5秒读取文件b","5，而是最后写回内存的那个线程的值，上面例子中最后写回内存的是线程","=","a:","active)","add()方法就是一个临界区,它会产生竞态条件。在临界区中使用适当的同步就可以避免竞态条件。","add()方法，我们无法知道操作系统何时会在两个线程之间切换。jvm","add(long","atom","a，但实际中也可能是线程","b","b:","b。如果没有采用合适的同步机制，线程间的交叉执行情况就无法预料。","ca","class","concurrency/benefits.html","condition）：当两个线程竞争同一资源时，如果对资源的访问顺序敏感，就称存在竞态条件。","count","counter","cpu","deadlock.html","hand","hash","http://tutorials.jenkov.com/java","https://blog.csdn.net/yaosiming2011/article/details/44280797","https://www.logicbig.com/tutorials/cor","https://www.zhihu.com/question/33515481","id","io","io。它也可以是网络的","io，或者用户输入。通常情况下，网络和磁盘的","java","jvm","listen","livelock.html","long","multi","process","protect","public","request","sections）：导致竞态条件发生的代码区称作临界区。","servic","starvation.html","this.count","thread","thread)。当工作者线程在繁忙地处理任务的时候，窗口线程可以自由地响应其他用户的请求。当工作者线程完成任务的时候，它发送信号给窗口线程。窗口线程便可以更新应用程序窗口，并显示任务的结果。对用户而言，这种具有工作者线程设计的程序显得响应速度更快。","thread)，然后立刻返回去监听。而工作者线程则能够处理这个请求并发送一个回复给客户端。这种设计如下所述：","threading/thread","tutorial/java","valu","value){","value;","void","vs.","wait())也处于永久等待完成的对象，因为其他线程总是被持续地获得唤醒。","while(serv","worker","worker（在另一个线程上调用）也是“活动的”时，它们会尝试将该资源交给其他工作者并等待为它完成。如果最初我们让两名工作人员都活跃起来，他们将会面临活锁问题。","{","}","一个更好的方案是给这些线程设置优先级，让一个（或几个）线程回退，剩下的线程就像没发生死锁一样继续保持着它们需要的锁。如果赋予这些线程的优先级是固定不变的，同一批线程总是会拥有更高的优先级。为避免这个问题，可以在死锁发生的时候设置随机的优先级。","一个程序至少有一个进程，一个进程至少有一个线程。","上下文切换","上例中","不可能实现","两个线程分别加了","中的线程共享属于该进程的堆。这就是为什么几个线程可以访问同一个对象。线程共享堆并拥有自己的堆栈空间。这是一个线程如何调用一个方法以及它的局部变量是如何保持线程安全的。但是堆不是线程安全的并且为了线程安全必须进行同步。","临界区（critic","交错执行会发生什么：","什么是上下文切换？","什么是死锁","什么是活锁？","什么是线程","什么是线程安全？","什么是资源限制","什么是进程","从内存获取","从执行一个线程切换到执行另一个线程时，cpu","从磁盘中读取文件的时候，大部分的","会去处理第一个文件。记住，在等待磁盘读取文件的时候，cpu","你吃饭吃到一半，电话来了，你一直到吃完了以后才去接，这就说明你不支持并发也不支持并行。","你吃饭吃到一半，电话来了，你一边打电话一边吃饭，这说明你支持并行。","你吃饭吃到一半，电话来了，你停了下来接了电话，接完后继续吃饭，这说明你支持并发。","使用协程","使用最少线程","使用锁，而不是同步块。","例子","公平锁。","减少上下文切换的方法","凡事有利有弊，引入多线程除了带来的好处以外，也产生了一些问题：","利用率的提升。而且每个线程只需要记录一个文件，因此这种方式也很容易编程实现。","到","到一个寄存器","包使用","去处理已经读取完的文件。其结果就是，磁盘总是在繁忙地读取不同的文件到内存中。这会带来磁盘和","变量上，两个线程执行结束后","变量的值应该等于","另外一个可以避免死锁的方法是在尝试获取锁的时候加一个超时时间，这也就意味着在尝试获取锁的过程中若超过了这个时限该线程则放弃对该锁请求。若一个线程没有在给定的时限内成功获得所有需要的锁，则会进行回退并释放所有已经获得的锁，然后等待一段随机的时间再重试。这段随机的等待时间让其它线程有机会尝试获取相同的这些锁，并且让该应用在没有获得锁的时候可以继续运行(译者注：加锁超时后可以先继续运行干点其它事情，再回头来重复之前加锁的逻辑)。","同时执行同一个","同步和异步","同步就像是打电话，不挂电话，通话不会结束。","和","和内存的","回写寄存器值(2)到内存.","回写寄存器值(3)到内存.","在单个进程中运行，jvm","在单线程应用程序中，如果你想编写程序手动处理上面所提到的读取和处理的顺序，你必须记录每个文件读取和处理的状态。相反，你可以启动两个线程，每个线程处理一个文件的读取和操作。线程会在等待磁盘读取文件的过程中被阻塞。在等待的时候，其他的线程能够使用","在单线程里实现多任务的调度，并在单线程里维持多个任务间的切换。","在同一程序中运行多个线程本身不会导致问题，问题在于多个线程访问了相同的资源。如：同一内存区（变量，数组，或对象）、系统（数据库，web","在并发编程中，将代码执行速度加快的原则是将代码中串行执行的部分变成并发执行，但是如果将某段串行的代码并发执行，因为受限于资源，仍然在串行执行，这时候程序不仅不会加快执行，反而会更慢，因为增加了上下文切换和资源调度的时间。","在资源限制情况下进行并发编程，根据不同的资源限制调整程序的并发度。","多个线程互相等待对方释放锁。","多线程的优点","多线程的风险","多线程竞争锁时，会引起上下文切换，所以多线程处理数据时，可以用一些办法来避免使用锁，如将数据的","大","如何解决资源限制的问题","如图所示：两个线程想要通过一个","如果一个请求需要占用大量的时间来处理，在这段时间内新的客户端就无法发送请求给服务端。只有服务器在监听的时候，请求才能被接收。另一种设计是，监听线程把请求传递给工作者线程(worker","如果检测出死锁，有两种处理手段：","如果能确保所有的线程都是按照相同的顺序获得锁，那么死锁就不会发生。","学习并发编程，免不了大量接触一些术语。其中，有些术语经常容易被混淆或分不清它们的差异，这里汇总一下。","安全性问题","定义","对于硬件资源限制，可以考虑使用集群并行执行程序。","对于软件资源限制，可以考虑使用资源池将资源复用。","对象。","对象的","对象访问共享公共资源的情况，但是当他们看到另一个","导致饥饿问题的原因","将一个单线程应用程序变成多线程应用程序的另一个常见的目的是实现一个响应更快的应用程序。设想一个服务器应用，它在某一个端口监听进来的请求。当一个请求到来时，它去处理这个请求，然后再返回去监听。","将寄存器中的值写回内存","将寄存器中的值增加","将寄存器的值加","就餐时，1、3、5","并不是将这段代码视为单条指令来执行的，而是按照下面的顺序：","并发和并行","并发执行一定比串行执行快吗？","并发术语","并发的关键是你有处理多个任务的能力，不一定要同时。","并发简介","并发编程实战：第","并发编程的挑战","并发编程的艺术：第","并行的关键是你有同时处理多个任务的能力。","异步则是相反，调用在发出之后，这个调用就直接返回了，所以没有返回结果。换句话说，当一个异步过程调用发出后，调用者不会立刻得到结果。而是在调用发出后，被调用者通过状态、通知来通知调用者，或通过回调函数处理这个调用。","异步就像是发短信，发完短信后，就可以做其他事，短信来了，手机会提醒。","当","当一个线程请求锁失败时，这个线程可以遍历锁的关系图看看是否有死锁发生。","当多个线程需要相同的一些锁，但是按照不同的顺序加锁，死锁就很容易发生。","性能问题","总共需要12秒","总共需要14秒","总的说来，cpu","想象一下，一个应用程序需要从本地文件系统中读取和处理文件的情景。比方说，从磁盘读取一个文件需要","想象下线程","想象这样一个例子：两个人在狭窄的走廊里相遇，二者都很礼貌，试图移到旁边让对方先通过。但是他们最终在没有取得任何进展的情况下左右摇摆，因为他们都在同一时间向相同的方向移动。","慢的多。","所以，我觉得有必要反向理解，知道什么是线程不安全，那么就能定义线程安全的边界了。","所谓同步，就是在发出一个调用时，在没有得到结果之前，该调用就不返回。但是一旦调用返回，就得到返回值了。","按照","按照顺序加锁是一种有效的死锁预防机制。但是，这种方式需要你事先知道所有可能会用到的锁(译者注：并对这些锁做适当的排序)，但总有些时候是无法预知的。","无锁并发编程","时间。","时间用于等待磁盘去读取数据。在这段时间里，cpu","更好的资源利用","更简单的编程模型","最关键的点就是：是否是同时。","服务器的流程如下所述：","桌面应用也是同样如此。如果你点击一个按钮开始运行一个耗时的任务，这个线程既要执行任务又要更新窗口和按钮，那么在任务执行的过程中，这个应用程序看起来好像没有反应一样。相反，任务可以传递给工作者线程（word","死锁是当线程进入无限期等待状态时发生的情况，因为所请求的锁被另一个线程持有，而另一个线程又等待第一个线程持有的另一个锁。","死锁检测是一个更好的死锁预防机制，它主要是针对那些不可能实现按序加锁并且锁超时也不可行的场景。","死锁（deadlock）","每当一个线程获得了锁，会在线程和锁相关的数据结构中（map、graph","比","永远无法就餐，只能看着盘中的美食饥饿的等待着。","没有避免活锁的通用指南，但是在我们改变其他线程也使用的公共对象状态的场景中，例如在上述场景中，我们必须小心","活跃性问题","活锁是一个递归的情况，两个或更多的线程会不断重复一个特定的代码逻辑。预期的逻辑通常为其他线程提供机会继续支持'this'线程。","活锁（livelock）","现在等于","的","的值放到寄存器","的公平性，我们依然可以通过同步结构在线程间实现公平性的提高。","的时候做一些其他的事情。这个不一定就是磁盘","秒。处理两个文件则需要：","秒，处理一个文件需要","程序响应更快","程序响应更灵敏","程序设计更简单","竞态条件和临界区","竞态条件（race","章","第一章","等待第一个文件被读取完。然后开始读取第二个文件。当第二文件在被读取的时候，cpu","等等）将其记下。除此之外，每当有线程请求锁，也需要记录在这个数据结构中。","等）或文件。","答案是：不一定。因为有创建线程和线程上下文切换的开销。","简介","简言之，进程可视为一个正在运行的程序。","算法","算法取模分段，不同的线程处理不同段的数据。","算法来更新数据，而不需要加锁。","线程","线程不安全的示例","线程在等待一个本身(在其上调用","线程安全很难定义。我所看到的对于线程安全的定义都太过抽象。","线程是操作系统进行调度的基本单位。","线程比进程划分更细，所以执行开销更小，并发性更高","线程被永久堵塞在一个等待进入同步块的状态，因为其他线程总是能在它之前持续地对该同步块进行访问。","能够在等待","观察线程","解决饥饿问题的方法","读取","资料","资源。看下面的顺序：","资源限制","资源限制引发的问题","资源限制是指在进行并发编程时，程序的执行速度受限于计算机硬件资源或软件资源。","这种方式，服务端线程迅速地返回去监听。因此，更多的客户端能够发送请求给服务端。这个服务也变得响应更快。","进程","进程和线程","进程是一个实体，拥有独立的资源；而同一个进程中的多个线程共享进程的资源。","进程是具有一定独立功能的程序关于某个数据集合上的一次运行活动。进程是操作系统进行资源分配的基本单位。","避免创建不需要的线程，比如任务很少，但是创建了很多线程来处理，这样会造成大量线程都处于等待状态。","避免死锁的方法","避免活锁","部分时间是空闲的。","释放所有锁，回退，并且等待一段随机的时间后重试。这个和简单的加锁超时类似，不一样的是只有死锁已经发生了才回退，而不会是因为加锁的请求超时了。虽然有回退和等待，但是如果有大量的线程竞争同一批锁，它们还是会重复地死锁（编者注：原因同超时类似，不能从根本上减轻竞争）。","阻塞和非阻塞","阻塞和非阻塞关注的是程序在等待调用结果（消息，返回值）时的状态.","阻塞调用就像是打电话，通话不结束，不能放下。","阻塞调用是指调用结果返回之前，当前线程会被挂起。调用线程只有在得到结果之后才会返回。","需要保存当前线程的本地数据，程序指针等状态，并加载下一个要执行的线程的本地数据，程序指针等。这个开关被称为“上下文切换”。","非常的空闲。它可以做一些别的事情。通过改变操作的顺序，就能够更好的使用","非阻塞调用就像是发短信，发完短信后，就可以做其他事，短信来了，手机会提醒。","非阻塞调用指在不能立刻得到结果之前，该调用不会阻塞当前线程。","饥饿问题最经典的例子就是哲学家问题。如图所示：有五个哲学家用餐，每个人要获得两把叉子才可以就餐。当","饥饿（starvation）","高优先级线程吞噬所有的低优先级线程的","（1）加锁顺序","（2）加锁时限","（3）死锁检测"],"javacore/concurrent/线程基础.html":["!=","!thread.currentthread().isinterrupted())","\"","\");","\"countthread\");","\"mythread\");","\"printthread\");","\"个元素\");","\"在运行。\");","\"毫秒。\");","\"线程","\"线程\");","\"线程a\").start();","\"线程a\");","\"线程b\").start();","\"线程b\");","\"线程c\");","\"线程，休眠\"","&&","((receiv","()","(e","(hibernateexcept","(int","(interruptedexcept","(ioexcept","(map","(on","(queue)","(queue.size()","(s","(session)","(t)e.value;","(true)",");","+","//","0)","0;","1)","10)","1000)).start();","10;","2000)).start();","3","3000)).start();","4","5;","5。","6","=","==",">","@overrid","@suppresswarnings(\"unchecked\")","[1,10]，一般来说，高优先级的线程在运行时会具有优先权。可以通过","a\").start();","args)","b\");","block","boolean","call()","callabl","callableandfuturedemo","cancel()","catch","class","connect","connectionhold","connectionholder.get();","consum","consumer(\"消费者a\").start();","consumer(\"消费者b\").start();","consumer(str","countthread","countthread.interrupt();","countthread.start();","cpu","createmap","createmap(t,","createmap(thread","daemon","drivermanager.getconnection(db_url);","e","e)","e.printstacktrace();","entri","ex)","exampl","except","executionexcept","extend","false;","faq","final","firstvalue)","firstvalue);","futur","futuretask","futuretask<>(callable);","get()","get()方法或者","get()方法是用来获取","getconnection()","getmap()","getmap(t);","getname()","getsession()","getsessionfactory().opensession();","http://www.importnew.com/14958.html","https://blog.csdn.net/shimiso/article/details/8964414","https://blog.csdn.net/xiangwanpeng/article/details/54972952","https://docs.oracle.com/javase/8/docs/api/index.html","https://stackoverflow.com/questions/27406200/visualvm","https://www.journaldev.com/1037/java","i);","i++;","i;","implement","in)","in.read())","in;","infrastructureexcept","infrastructureexception(ex);","initialvalue()","initialvalue();","initialvalue()是一个","int","interrupt","interrupt()","isal","isalive()","isdaemon()","java","java.lang.thread.st","join","join()","join()方法的区别","jvm","llegalthreadstateexcept","locksupport.park()","locksupport.parknanos(timeout)","locksupport.parkuntil(timeout)","long","main(string[]","map","map.getentry(this);","map.set(this,","map，看一下","mt","mt1","mt1.start();","mt2","mt2.start();","mytask","mytask();","mythread","mythread(\"runn","mythread(\"线程a\",","mythread(),","mythread();","mythread(str","name)","name,","name;","new","notifi","notify()和","notify()方法。同样的，当一个线程需要调用对象的","notify()方法时，它会释放这个对象的锁，以便其他在等待的线程就可以得到这个对象锁。由于所有的这些方法都需要线程持有对象的锁，这样就只能通过同步来实现，所以他们只能在同步方法或者同步块中被调用。","notifyal","notifyall()必须在同步方法或者同步块中被调用？","notifyall()被定义在","notify。","null)","object","object.wait()","object.wait(timeout)","on","out","out.close();","out.connect(in);","out.write(receive);","pipe","pipedread","pipedreader();","pipedwrit","pipedwriter();","pipedwriter，前两种面向字节，而后两种面向字符。","print","print(in),","print(pipedread","printthread","printthread.start();","priorityqueu","priorityqueue<>(queue_size);","privat","process），在一个进程里可以创建多个线程，这些线程都拥有各自的计数器、堆栈和局部变量等属性，并且能够访问共享的内存变量。","produc","producer(\"生产者a\").start();","producer(\"生产者b\").start();","producer(str","protect","public","queue","queue.notifyall();","queue.offer(1);","queue.poll();","queue.size()","queue.wait();","queue_siz","queue_size)","random().nextint(100);","receiv","receive);","remove()","remove()用来移除当前线程中变量的副本。","result","result;","return","return;","run","run()","run()方法，它的行为就会和普通的方法一样。","runnabl","runnabledemo","s","s;","session","set()方法，就会对","set()用来设置当前线程中变量的副本。","set(t","setdaemon()","setdaemon、isdaemon","setinitialvalu","setinitialvalue()","setinitialvalue();","setinitialvalue()。","setname()、","setname、getnam","setpriority、getprior","sleep()","sleep()、yield()、join()","sleep()和","start","start()","state","static","stop","string","super(name);","supplier)","synchron","system.in.read())","system.out.print((char)","system.out.println(\"1、进入run()方法\");","system.out.println(\"2、已经完成了休眠\");","system.out.println(\"3、休眠被终止\");","system.out.println(\"4、run()方法正常结束\");","system.out.println(\"count","system.out.println(\"main","system.out.println(\"max_prior","system.out.println(\"min_prior","system.out.println(\"norm_prior","system.out.println(\"主方法的优先级：\"","system.out.println(\"代码执行之后","system.out.println(\"线程","system.out.println(\"线程开始执行之前","system.out.println(\"线程开始执行之后","system.out.println(\"队列满，等待有空余空间\");","system.out.println(\"队列空，等待数据\");","system.out.println(future.get());","system.out.println(this.getname()","system.out.println(this.nam","system.out.println(thread.currentthread().getname()","t","t,","t.interrupt();","t.isalive());","t.isdaemon());","t.join();","t.setdaemon(true);","t.setname(\"线程","t.start();","t.threadloc","t1","t1.setpriority(thread.min_priority);","t1.start();","t2","t2.setpriority(thread.max_priority);","t2.start();","t3","t3.setpriority(thread.norm_priority);","t3.start();","target","this.in","this.nam","this.tim","thread","thread(future).start();","thread(mt).start();","thread(mt);","thread(mt,","thread(new","thread(one,","thread(t).run();","thread(t,","thread(two,","thread.currentthread().getpriority());","thread.currentthread();","thread.join()","thread.join(timeout)","thread.max_priority);","thread.min_priority);","thread.norm_priority);","thread.setdaemon(true)","thread.setpriority(thread.max_priority)","thread.sleep","thread.sleep()","thread.sleep(1000);//","thread.sleep(10000);","thread.sleep(2000);","thread.sleep(500);","thread.sleep(sleeptime)","thread.sleep(this.time);","thread.start()","thread.start()方法。","thread.yield","thread.yield()","thread02","thread02(\"线程a","thread02(\"线程b","thread02(str","threadalivedemo","threaddaemondemo","threaddemo02","threadinterruptdemo","threadjoindemo","threadloc","threadlocal()","threadlocal();","threadlocal.threadlocalmap","threadlocalmap","threadlocalmap(this,","threadlocalmap.entri","threadlocalmap。","threadlocals。","threadlocals，这个","threadlocal，很多地方叫做线程本地变量，也有些地方叫做线程本地存储，其实意思差不多。可能很多朋友都知道","threadnamedemo","threadprioritydemo","threadsess","threadsession.get();","threadsession.set(s);","threadsleepdemo","threadstopdemo03","threadwaitnotifydemo02","threadyielddemo","thread）是在后台执行并且不会阻止","thread）相反的，叫用户线程（us","thread），也就是非守护线程。","throw","ticket","time)","time;","timeunit.seconds.sleep(1);","tri","true;","two","two.cancel();","two进行取消，使countthread能够感知on为false而结束","valu","value)","value);","value;","value，存到","value；失败，返回","void","volatil","wait","wait(),","wait()方法的时候，这个线程必须拥有该对象的锁，接着它就会释放这个对象锁并进入等待状态直到其他线程调用这个对象上的","wait()，notify()等方法用于等待对象的锁或者通知其他线程对象的监视器可用。在","wait/notify/notifyal","waiting）","wait、notify、notifyal","weakreference，并且使用","weight","withinitial(suppli","yield","yield()","yield()方法是静态的？","{","{}","|","}","};","一个守护线程创建的子线程依然是守护线程。","三种创建线程方式对比","不为空，就设置键值对；为空，再创建","不要认为所有的应用都可以分配给","与","与守护线程（daemon","个方法中的任意方法：","中守护线程的总结","中定义了","中断状态是线程的一个标识位，而中断操作是一种简便的线程间交互方式，而这种交互方式最适合用来取消或停止任务。","中断线程","中断线程执行","中的","中的线程优先级如何控制","中的线程优先级的范围是","中的重要方法","中线程优先级一一对应。","中，所有线程在运行前都会保持在就绪状态，那么此时，哪个线程优先级高，哪个线程就有可能被先执行。","中，所有线程在运行前都会保持在就绪状态，那么此时，哪个线程优先级高，哪个线程就有可能被先执行。可以通过","为了在新的线程中执行我们的代码，必须使用","为什么","为什么线程通信的方法","为什么要用守护线程","为变量副本（即","为变量在每个线程中都创建了一个副本，那么每个线程可以访问自己内部的副本变量。","为空，当通过","之前设置，否则会抛出","之后输入同步块/方法或重新输入同步块/方法。","什么是守护线程","什么是守护线程？为什么要用守护线程？如何创建守护线程？","什么是线程","从队列取走一个元素，队列当前有：\"","以下是各状态的说明，以及状态间的联系：","以下的输出结果不确定","休眠指定的时间","优先级最低","会让这个线程去执行","但是，","作为键值。","使用","关键字解析","内部有一个","创建","创建并启动新线程。","判断是否启动","判断线程是否启动","前对象锁的线程。","卖票：ticket","即使设置了线程的优先级，也无法保证高优先级的线程一定先执行。","原因：这是因为线程优先级依赖于操作系统的支持，然而，不同的操作系统支持的线程优先级并不相同，不能很好的和","参考阅读：java","参考阅读：sleep()，wait()，yield()和","取得当前线程。","变量为键值，以","变量来控制是否需要停止任务并终止该线程。","变量调用","变量，valu","可以。但是如果直接调用","可以使用","可以直接调用","可以设置","可以通过","可能做一些事情","可运行（runnable）","同步块，其他线程仍然不能访问共享数据。","向队列取中插入一个元素，队列当前有：\"","启动和终止线程","启动线程","和","唤醒一个正在","唤醒所有正在","在","在当前线程中保存的变量副本。","在当前线程里面，如果要使用副本变量，就可以通过","在每个线程","在线程操作中，可以使用","如何创建守护线程","如果","子类的实例，即创建了线程对象。","守护线程","守护线程的优先级比较低，用于为系统中的其它对象和线程提供服务。典型的应用就是垃圾回收器。","守护线程（daemon","安全地终止线程有两种方法：","定义","定时等待（time","实例化runnable子类对象","实例化thread对象","实例化对象","实例化线程对象","实现","实现类的实例，使用","实现类的实例，并依此实例作为","对象作为","对象封装了该","对象才是真正的线程对象。","对象的","对象，该","将输出流和输入流进行连接，否则在使用时会抛出ioexcept","就是用来存储实际的变量副本的，键值为当前","已经调用了","并且","并发编程实战","并发编程的艺术","并发编程：volatil","开始（new）","异常；","当一个线程运行时，另一个线程可以直接通过","当一个线程需要调用对象的","当前对象锁的线程，并让它拿到对象锁。","当某个线程调用了","必须在","成功，返回","手工设置线程名称","接口","接口优于继承","接口构造线程的步骤：","接口的实现类，并实现","接口的实现类，并重写该接口的","接口的线程有返回值。","接口的线程没有返回值；而实现","数据库连接","方法。","方法不会释放“锁标志”，也就是说如果有","方法中断其运行状态。","方法么？","方法会使当前线程转入","方法会启动线程，然后","方法判断线程是否为守护线程。","方法即可实现休眠。","方法可以让当前正在执行的线程暂停，但它不会阻塞该线程，它只是将该线程从","方法在","方法将一个线程的操作暂时让给其他线程执行。","方法将作为线程执行体，并且有返回值。","方法将处理","方法执行结束，或者因异常退出了","方法是线程的执行体。","方法是静态的","方法暂停之后，只有优先级与当前线程相同，或者优先级比当前线程更高的处于就绪状态的线程才会获得执行的机会。","方法有什么区别？为什么","方法有缺陷，已废弃。","方法来启动该线程。","方法来获得子线程执行结束后的返回值。","方法的区别","方法的方法体同样是该线程的线程执行体。","方法的方法体就代表了线程要完成的任务。因此把","方法的线程处于此状态。","方法的线程状态。此状态意味着，线程已经准备好了，一旦被线程调度器分配了","方法的线程结束后才能继续执行。","方法的返回值。","方法称为执行体。","方法获取","方法让一个线程强制运行，线程强制运行期间，其他线程无法运行，必须等待此线程完成之后才可以继续执行。","方法设置线程为守护线程；可以使用","方法需要指定等待的时间，它可以让当前正在执行的线程在指定的时间内暂停执行，进入","方法，一般是用来在使用时进行重写的，它是一个延迟加载方法，下面会详细说明。","方法，则该线程结束生命周期。死亡的线程不可再次复生。","方法，该","时间片，就可以运行线程。","是","是否是守护进程：\"","是如何为每个线程创建变量的副本的：","最常见的应用场景为用于解决数据库连接、session","有什么区别？可以直接调用","来创建","来判断线程是否启动。","来设置、获取线程优先级。","来设置、获取线程名称。","来进行服务，比如读写操作或者计算逻辑。","构造线程","构造线程主要有三种方式","正在运行的用户线程无法设置为守护线程，所以","此线程在后台运行","每次插入一个元素","每次移走队首元素","注意点：","源码","源码实现","源码小结","状态。","状态的线程。所以在其他处于非","状态的线程上执行这两个方法是没有意义的。这就是为什么这些方法是静态的。它们可以在当前正在执行的线程中工作，并避免程序员错误的认为可以在其他非运行线程调用这些方法。","状态转入","状态，等待调用","现代操作系统调度的最小单元是线程，也叫轻量级进程（light","生产者、消费者示例：","的","的一个内部类。","的主要方法：","的实现：","的方式设置，默认优先级为","的每一个类都有用于线程间通信的基本方法","的每个对象中都有一个锁(monitor，也可以成为监视器)","的线程中并没有可供任何对象使用的锁和同步器。这就是为什么这些方法是","的线程优先级如何控制？高优先级的","直接使用","睡眠1秒，main线程对countthread进行中断，使countthread能够感知中断而结束","睡眠1秒，main线程对runn","示例","示例：","种不同的线程状态，在给定的一个时刻，线程只能处于其中的一个状态。","种具体实现：pipedoutputstream、pipedinputstream、pipedread","程序中，只要前台有一个线程在运行，则整个","第二章","等待指定时间的状态。一个线程处于定时等待状态，是由于执行了以下方法中的任意方法：","等待状态。一个线程处于等待状态，是由于执行了","等待（waiting）","管理","管理等问题。","管道输入/输出流","管道输入/输出流主要包括了如下","管道输入/输出流和普通的文件输入/输出流或者网络输入/输出流不同之处在于，它主要用于线程之间的数据传输，而传输的媒介为内存。","类","类中可以通过","类中的","类中的方法。","类型的变量）。","类型的成员变量","类来包装","类构造线程的步骤：","类的","类的一部分，这样","类的子类，并重写该类的","类里？","类，因为实现接口方式更便于扩展类。","系统自动设置线程名称","线程","线程\");","线程一定先执行吗","线程一定先执行吗？","线程中","线程为守护线程。","线程休眠10秒","线程休眠2秒","线程优先级控制并不可靠。","线程基础","线程强制运行","线程生命周期","线程的休眠","线程的启动方法。","线程的强制执行","线程的执行实体。","线程的礼让","线程简介","线程自动释放其占有的对象锁，并等待","线程运行","线程间通信","终止(terminated)","终止的线程。","终止线程","结论：java","继承","继承了","至此，可能大部分朋友已经明白了","要保存的副本变量为","设置/获取线程优先级","设置/获取线程名称","设置休眠时间","设置线程名称","该方法既可以让其他同优先级或者高优先级的线程得到执行的机会，也可以让低优先级的线程得到执行机会。","调用","调用线程主体","调用线程对象的","资料","返回调用处","还可以利用一个","还没有调用","进程就不会消失，所以此时可以设置一个守护线程，这样即使","进程结束了，此守护线程依然会继续执行。可以使用","进行初始化，并且以当前","通过","通过实现","通过继承","里面查找。","里面，threadloc","阻塞状态。线程阻塞的线程状态等待监视器锁定。处于阻塞状态的线程正在等待监视器锁定，以便在调用","阻塞（blocked）","高优先级的"],"javacore/concurrent/并发机制的底层实现.html":["(;;)","(a.compareandset(expect,","(compareandset(current,","(instance)","(int","(singleton.class)","(thi","+","0;","1))","1;","1a","2","2,j=a，合并一下","2b－3a。","3",":point_right:",":x:","=","==","@notthreadsaf","@overrid","@threadsaf","a++;","a++之前","a++就不会被执行。按照上面的写法，a!=expect","a++操作怎么办，没关系，可以采用","a++操作，这实际上是一种非阻塞算法。","a;","aba","add","algorithms.html","algorithms）","aqs，非阻塞数据结构和原子变量类（java.util.concurrent.atom","atom","atomicinteg","atomicrefer","atomicstampedrefer","a，变成了","a，要修改的新值","a，那么使用","a－b－a","b","block","boolean","b。当且仅当预期值","b，又变成了","b，否则什么都不做。","ca","cas。不推荐在复杂操作中引入","cas（compar","cas，会使程序可读性变差，且难以测试，同时会出现","check","class","compareandset","compareandset()","compareandset(int","concurr","concurrency/non","cpu","current","dosomething();","dosomething1();","dosomething2();","doubl","expect","expect)","expect,","expect，替换","false;","final","flag","flush），从而提高","get()","get();","getinstance()","http://tutorials.jenkov.com/java","https://blog.csdn.net/ls5718/article/details/52563959","https://www.jianshu.com/p/473e14d5ab2d","i++;","if(a.compareandset(expect,a+1))","if(a==b)","if(instance==null)","ij=2a，然后用","ij。从","implement","increase()","incrementandget()","instanc","instance;","int","interfac","j","java","java1.5","jdk","jdk1.8。","jni","jni（jni:java","jvm","lock","nativ","new","next","next))","next;","null;","order","paus","pipelin","pipeline）,使","privat","public","return","return;","run()","runnabl","setflag()","singleton","singleton()","singleton();","static","swap），字面意思为比较并交换。ca","synchon","synchron","synchronizeddemo01","synchronizeddemo02","synchronizeddemo03","synchronizeddemo04","synchronizeddemo04();","synchronized，它在多处理器开发中保证了共享变量的“可见性”。","this，即为调用","true;","unsafe.compareandswapint(this,","updat","update)","update);","update)类似：","update，compareandswapint","v","value;","valueoffset,","violation）而引起","void","volatil","volatile，java","volatile；","v，旧的预期值","while(!flag)","while(true)","{","{}","}","一个线程的失败或者挂起不应该影响其他线程的失败或挂起的算法。","一旦一个共享变量（类的成员变量、类的静态成员变量）被","一次只有一个线程能够在同步于同一个监视器对象的","一般情况下，比锁性能更高。因为","不会消耗过多的执行资源，延迟的时间取决于具体实现的版本，在一些处理器上延迟时间是零。第二它可以避免在退出循环的时候因内存顺序冲突（memori","个功能：","个操作数，内存值","个条件：","个步骤：比较","中一个类只能对应一个类对象，所以同时只允许一个线程执行同一个类中的静态同步方法。","中对应的缓存行无效。","中的每一个对象都可以作为锁。","为","之后,a++就不会被执行，如果我们还是想执行","也可以解决，而且可以不加锁。","从","代码如何确保处理器执行","优点","但是，volatil","保证了不同线程对这个变量进行操作时的可见性，即一个线程修改了某个变量的值，这新值对其他线程来说是立即可见的。","修改为","修饰之后，那么就具备了两层语义：","关键字","关键字和没有加入","关键字时所生成的汇编代码发现，加入","关键字时，会多出一个","关键字解析","其中","写的内存语义，因此","利用","前缀指令。","前缀指令实际上相当于一个内存屏障（也成内存栅栏），内存屏障会提供","包中的基础类都是使用这种模式来实现的，而","包中的类），这些","包中的高层类又是依赖于这些基础类来实现的。从整体来看，concurr","包得以实现的基石。如果我们仔细分析","包的实现","包的实现示意图如下：","包的源代码实现，会发现一个通用化的实现模式：","包里提供了一个类","原理","原语，保证线程间的数据是可见的（共享的）。","参考","参考阅读：java","参考阅读：深入理解","变量。","变量修饰符使用恰当的话，它比","变量的读/写和","变量，随后","只能保证一个共享变量的原子操作","可以保证在同一个时刻，只有一个线程可以执行某个方法或者某个代码块。","可以实现线程之间的通信。把这些特性整合在一起，就形成了整个","可以对方法的一部分进行同步。","可以用","可见性的意思是当一个线程修改一个共享变量时，另外一个线程能读到这个修改的值。","同时具有","同时，volatil","同时，配合以","同步代码块","同步块构造器用括号将对象括起来。在上例中，使用了","同步实例方法","同步静态方法","后的结果进行","和内存值","因为","在无锁的情况下实现原子操作，但要明确应用场合，非常简单的操作且又不想引入锁可以考虑使用","在这里采用了","如何这两个步骤的原子性呢？","如果","如果一个字段被声明成","如果是写操作，它会导致其他","如果长时间不成功，会给","它会强制将对缓存的修改操作立即写入主存；","它确保指令重排序时不会把其后面的指令排到内存屏障之前的位置，也不会把前面的指令排到内存屏障的后面；即在执行到内存屏障这句指令时，在它前面的操作已经全部完成；","实例方法同步是同步在拥有该方法的对象上。这样，每个实例其方法同步都同步在不同的对象上，即该方法所属的实例。只有一个线程能够在实例方法同步块中运行。如果有多个实例存在，那么一个线程一次可以在一个实例同步块中执行操作。一个实例一个线程。","实现原理","实现同步的基础是：java","对于不同类中的静态同步方法，一个线程可以执行每个类中的静态同步方法而无需等待。不管类中的那个静态同步方法被调用，一个类只能由一个线程同时执行。","对于同步方法块，锁是","对于普通同步方法，锁是当前实例对象。","对于静态同步方法，锁是当前类的","对变量的写操作不依赖于当前值","对象。","将","将使用自旋锁。","将它们编译为相应的机器指令；在不支持","就会变成","就无法保证操作的原子性，这个时候就可以用锁，或者有一个取巧的办法，就是把多个共享变量合并成一个共享变量来操作。比如有两个共享变量","就用这些代替了锁定。","带来非常大的执行开销。如果","并发之","并发机制的底层实现","并发机制的底层实现原理","并发编程实战","并发编程的艺术：第","并发编程：synchron","并发编程：volatil","应用","应用场景：","开始","当对一个共享变量执行操作时，我们可以使用循环","循环","循环时间长开销大","必须具备以下","总结","我们常常做这样的操作","所具有的","括号里配置的对象。","拿出","指令有两个作用，第一它可以延迟流水线执行指令（de","指令的操作。","指令那么效率会有一定的提升，paus","指令，同时借助","提供了","提供了特殊的指令，可以自动更新共享数据，而且能够检测到其他线程的干扰，而","操作","操作。","操作编译为底层提供的最有效方法。在支持","操作，如果成功就返回结果，否则重试直到成功为止。","操作，当想要非阻塞地完成某一操作也可以考虑","操作，每次从内存中读取数据然后将此数据和+1","操作？","整体的过程就是这样子的，利用","方法作用是首先检查当前引用是否等于预期引用，并且当前标志是否等于预期标志，如果全部相等，则以原子方式将该引用和该标志的值设置为给定的更新值。","方法内执行。","方法的实例本身。在同步构造器中用括号括起来的对象叫做监视器对象。上述代码使用监视器对象同步，同步实例方法使用调用方法本身的实例作为监视器对象。","无法保证操作的原子性。通常来说，使用","无法替代","是一种非阻塞算法，所以其避免了线程被阻塞时的等待时间。","是怎么做到的。","是轻量级的","更新一个","更新这个","有","有时你不需要同步整个方法，而是同步方法中的一部分。java","未同步的示例","本地调用，允许","本文内容基于","来完成","来操作","来研究在没有锁的情况下是如何做到数据正确性的。","来解决","比较花费","注意","流水线被清空（cpu","然后来看看++i","然后，使用","特点","状态标记量","现代的","由于","的","的使用和执行成本更低，因为它不会引起线程上下文的切换和调度。","的值处于一种不定的状态。采用锁可以解决此类问题，但","的值被改变了","的值被改变了怎么办？a++还执行吗？出现该问题的原因是在多线程环境下，a","的原子条件更新来实现线程之间的同步；","的原理","的处理器上，jvm","的应用场景","的执行效率。","的方式来保证原子操作，但是对多个共享变量操作时，循环","的要点","的读/写和","的非阻塞算法。其它原子操作都是利用类似的特性完成的。","相同时，将内存值","禁止进行指令重排序。","种应用方式：","章","第三章","简介","类来保证引用对象之间的原子性，你可以把多个变量放在一个对象里来进行","线程之间的通信现在有了下面四种方式：","线程内存模型确保所有线程看到这个变量的值是一致的。","线程写","线程用","线程读这个","缺点","而","能支持处理器提供的","自旋","观察加入","试想一下如果在做","该变量没有包含在具有其他变量的不变式中","读和","读和写的内存语义来实现线程之间的通信。","调用其他语言。）的代码实现的。jvm","资料","资源，即使没有任何用也会做一些无用功。","这样在获取变量的值的时候才能直接读取。","这样如果","进行检查时会发现它的值没有发生变化，但是实际上却变化了。aba","通过调用","那么问题就来了，成功过程中需要","采用上面的写法，在没有锁的情况下实现了","错误示例","问题","问题。","问题。这个类的","问题的解决思路就是使用版本号。在变量前面追加上版本号，每次变量更新的时候把版本号加一，那么","需要在操作值的时候检查下值有没有发生变化，如果没有发生变化则更新，但是如果一个值原来是","静态方法的同步是指同步在该方法所在的类对象上。因为在","非阻塞算法","首先毫无疑问，在没有锁的机制下可能需要借助","首先，声明共享变量为","（nonblock","，因为","＝"],"javacore/concurrent/内存模型.html":["12","16","1，尽管增加了两次。","1，线程","2。这个修改对跑在右边","3","b","befor","before。","c","concurrency/java","condit","conditions。","count","cpu","cpu。其中一些","false。","happen","http://tutorials.jenkov.com/java","interrupt","interrupted）。","interruptexception，或者调用","isinterrupt","java","jdk1.8。","jmm","jmm。","jvm","lines”的更小的内存块中缓存被更新。一个或者多个缓存行可能被读到缓存，一个或者多个缓存行可能再被刷新回主存。","memori","model.html","model），以下简称","race","thread.isal","thread.join","thread.start","volatil","volatile。","一个对象可能包含方法，这些方法可能包含本地变量。这些本地变量仍然存放在线程栈上，即使这些方法所属的对象存放在堆上。","一个对象的成员变量可能随着这个对象自身存放在堆上。不管这个成员变量是原始类型还是引用类型。","一个本地变量也可能是指向一个对象的一个引用。在这种情况下，引用（这个本地变量）存放在线程栈上，但是对象本身存放在堆上。","一个本地变量可能是原始类型，在这种情况下，它总是在线程栈上。","一个现代计算机通常由两个或者多个","一个计算机还包含一个主存。所有的","上一个线程可能同时（并发）执行。","上图示意了这种情形。跑在左边","上的一个线程将这个共享对象读到","上的其它线程是不可见的，因为修改后的","上的线程都是不可见的。这种方式可能导致每个线程拥有这个共享对象的私有拷贝，每个拷贝停留在不同的","上面已经提到，java","个特征来建立的。","中可以有一个缓存层就可以了。","中成功返回，或者在调用","中断规则：当一个线程在另一个线程上调用","中的","中的缓存大得多。","中试图定义一种","为程序中所有的操作定义了一个偏序关系，称之为","之前执行。","之前执行，并且操作","之前执行，那么操作","之前，那么在线程中操作","也做了同样的事情。现在","也做了同样的事情，但是往一个不同的","传递性：如果操作","修改后的版本写回到主存中取，修改后的值仅会被原值大","共享对象可见性","关键字。volatil","关键字可以保证直接从主存中读取一个变量，如果这个变量被修改后，总是会被写回到主存中去。","内内存的基础。cpu","内存是如何与它“联手”工作的。","内存模型","内存模型与硬件内存架构之间存在差异。硬件内存架构没有区分线程栈和堆。对于硬件，所有的线程栈和堆都分布在主内中。部分线程栈和堆可能有时候会出现在","内存模型与线程","内存模型如何与它协同工作也是非常重要的。这部分描述了通用的硬件内存架构，下面的部分将会描述","内存模型如何和内存交互不是那么重要。只要知道","内存模型并没有限制执行引擎使用处理器的特定寄存器或缓存来和主存进行交互，也没有限制即使编译器进行调整代码执行顺序这类优化措施。","内存模型把","内存模型有一些不同。理解内存模型架构以及","内存模型结构","内存模型（java","内部原理","内部的寄存器中。如下图所示：","到它的","加","变量的值修改为","变量的写入操作必须在对该变量的读操作之前执行。","变量规则：对","可能还有一个","同步块。一个同步块可以保证在同一时刻仅有一个线程可以进入代码的临界区。同步块还可以保证代码块中所有被访问的变量将会从主存中读入，当线程退出同步代码块时，所有被更新的变量都会被刷新回主存中去，不管这个变量是否被声明为","和","和硬件内存架构之间的桥接","在寄存器上执行操作的速度远大于在主存上执行的速度。这是因为","在操作","在某一时刻运行一个线程是没有问题的。这意味着，如果你的","堆","堆上包含在","声明或者同步的情况下共享一个对象，一个线程更新这个共享对象可能对其它线程来说是不接见的。","如果两个或者更多的线程共享一个对象，多个线程在这个共享对象上更新变量，就有可能发生","如果两个或者更多的线程在没有正确的使用","如果这些增加操作被顺序的执行，变量","存放在堆上的对象可以被所有持有对这个对象引用的线程访问。当一个线程可以访问一个对象时，它也可以访问这个对象的成员变量。如果两个线程同时调用同一个对象上的同一个方法，它们将会都访问这个对象的成员变量，但是每一个线程都拥有这个本地变量的私有拷贝。","将","将在操作","已经被增在了两个，每个","并发编程实战：第","并发编程的艺术：第","应该被增加两次，然后原值+2","当","当对象和变量被存放在计算机中各种不同的内存区域中时，就可能会出现一些具体的问题。主要包括如下两个方面：","当读，写和检查共享变量时出现","必须在操作","想象一下，共享对象被初始化在主存中。跑在","想象一下，如果线程","所有原始类型的本地变量都存放在线程栈上，因此对其它线程不可见。一个线程可能向另一个线程传递一个原始类型变量的拷贝，但是它不能共享这个原始类型变量自身。","时返回","时，必须在被中断线程检测到","是围绕着在并发过程中如何处理原子性、可见性和有序性这","是通过各种操作来定义的，包括对变量的读写操作，监视器的加锁和释放操作，以及线程的启动和合并操作。","本文内容基于","来屏蔽各种硬件和操作系统的内存访问差异，以实现让","每一个运行在","每个","深入理解","然而，两次增加都是在没有适当的同步下并发执行的。无论是线程","现代硬件内存模型与","的主要目标是定义程序中各个变量的访问规则，即在虚拟机中将变量存储到内存和从内存中取出变量这样的底层细节。此处的变量与","的值还没有被刷新回主存中去。","的现代计算机上同时运行多个线程是可能的。每个","的线程拷贝这个共享对象到它的","的调用必须在该线程中执行任何操作之前执行。","监视器锁规则：在监视器锁上的解锁操作必须在同一个监视器锁上的加锁操作之前执行。","硬件内存架构","程序中创建的所有对象，无论是哪一个对象创建的。这包括原始类型的对象版本。如果一个对象被创建然后赋值给一个局部变量，或者用来作为另一个对象的成员变量，这个对象任然是存放在堆上。","程序中每个","程序在各种平台下都能达到一致的内存访问效果。","程序是多线程的，在你的","程序顺序规则：如果程序中操作","竞态条件","章","第四章","线程启动规则：在线程上对","线程对共享变量修改的可见性","线程栈","线程结束规则：线程中的任何操作都必须在其他线程检测到该线程已经结束之前执行，或者从","终结器规则：对象的构造函数必须在启动该对象的终结器之前执行完成。","缓存中。","缓存中。再想象一下，线程","缓存中。它甚至可能将缓存中的部分内容读到它的内部寄存器中，然后在寄存器中执行操作。当","缓存中。然后修改了这个对象。只要","缓存中。现在线程","缓存中一次。","缓存中和","缓存中，然后将","缓存可以在某一时刻将数据局部写到它的内存中，和在某一时刻局部刷新它的内存。它不会再某一时刻读/写整个缓存。通常，在一个被称作“cach","缓存层。实际上，绝大多数的现代","缓存没有被刷新会主存，对象修改后的版本对跑在其它","编程中的变量有所区别，它包括了实例字段、静态字段和构成数组对象的元素，但不包括局部变量与方法参数，因为后者是线程私有的，不会被共享，自然就不会存在竞争问题。为了获得较好的执行效能，java","虚拟机内部划分为线程栈和堆。","虚拟机里的线程都拥有自己的线程栈。这个线程栈包含了这个线程调用的方法当前执行点相关的信息。一个线程仅能访问自己的线程栈。一个线程创建的本地变量对其它线程不可见，仅自己可见。即使两个线程执行同样的代码，这两个线程任然在在自己的线程栈中的代码来创建本地变量。因此，每个线程拥有每个本地变量的独有版本。","虚拟机：第","被写回到主存中去。","解决这个问题你可以使用","解决这个问题可以使用","访问寄存器的速度远大于主存。","访问缓存层的速度快于访问主存的速度，但通常比访问内部寄存器的速度还要慢一点。一些","读一个共享对象的变量","调用之前执行（通过抛出","资料","还是线程","还有多层缓存，但这些对理解","还有多核。从这一点可以看出，在一个有两个或者多个","通常情况下，当一个","都包含一系列的寄存器，它们是","都可以访问主存。主存通常比","都有一定大小的缓存层。cpu","需要在缓存层存放一些东西的时候，存放在缓存中的内容通常会被刷新回主存。cpu","需要将结果写回到主存中去时，它会将内部寄存器的值刷新到缓存中，然后在某个时间点将值刷新回主存。","需要读取主存时，它会将主存的部分读到","静态成员变量跟随着类定义一起也存放在堆上。"],"javacore/concurrent/同步容器和并发容器.html":["!=","\"","\"write_\"","&","&&","(!onlyifabsent)","((e","((ek","((f","((fh","((p","((treebin)f).puttreeval(hash,","(bincount","(castabat(tab,","(e)","(e.hash","(ek","(f","(f)","(fh","(int","(integ","(key","(n","(node","(node[]","(nummov","(oldval","(string","(tab","(tabat(tab,","*/","+","++bincount)","/**","//","//reentrantlock加锁，保证线程安全","//加锁","//否则，将除要删除元素之外的其他元素拷贝到新副本中，并切换引用","//在新副本上执行添加操作","//如果要删除的是列表末端数据，拷贝前len","//将原容器引用指向新副本","//拷贝原容器，长度为原容器长度加一","//解锁","0","0)","0,","0.75，但是在数据量过大或者运气不佳的情况下，还是会存在一些队列长度过长的情况，如果还是采用单向列表方式，那么查询某个节点的时间复杂度为","0;","1)","1));","1);","1,","10;","10，i","1;","1];","1。但实际情况并非总是如此理想，虽然","1个数据到新副本上，再切换引用","1，之后为节点","2","2;","2，依次类推。","8(默认值)的列表，jdk1.8","9",":","=","==",">",">=",">next","a,","a[index];","abstractmap","access","ad","add(","addcount(1l,","args)","array","array,","array;","arrayblockingqueu","arraylist","arraylist<>();","arraylist。","arrays.copyof(elements,","bin","bincount","bincount);","boolean","break;","ca","class","collect","collections.synchronizedxxxx","concurrenthashmap","concurrenthashmap<>();","concurrenthashmapdemo","concurrentlinkeddequ","concurrentlinkedqueu","concurrentmap,","concurrentmodificationexcept","concurrentmodificationexception，因为它们在数组的快照上工作，并且无论后续的修改（2,4）如何，都会像迭代器创建时那样完全返回元素。","concurrentskiplistmap","concurrentskiplistset","copi","copyonwriteaarraylist","copyonwritearraylist","copyonwritearraylist<>();","copyonwritearraylistdemo","copyonwritearraylist，因此本质上是由","copyonwritearrayset","count;","e","e)","e.key)","e.next)","e.val","e.val;","e;","ek;","element","elements.length;","empti","extend","f)","f);","f.hash)","f;","f;;","fh;","fifo","fifo。","filo。","final","for(int","get(elements,","get(getarray(),","get(int","get(object[]","getarray();","getarray/setarray.","hash","hash))","hash;","hashentri","hashentry[]","hashmap","hashmap<>();","hashmap。","hashmap。采用分段锁实现高效并发。","hashtabl","helptransfer(tab,","http://www.cnblogs.com/chengxiao/p/6881974.html","http://www.cnblogs.com/dolphin0520/p/3933404.html","http://www.javarticles.com/2012/06/copyonwritearraylist.html","https://blog.csdn.net/u010425776/article/details/54890215","https://blog.csdn.net/wangxiaotongfan/article/details/52074160","https://my.oschina.net/hosee/blog/675884","https://www.cnblogs.com/leesf456/p/5547853.html","https://www.cnblogs.com/xrq730/p/5020760.html","https://www.jianshu.com/p/c0642afe03e0","https://www.jianshu.com/p/f6730d5784ad","i)","i);","i,","i=0;i","i=0;i10)","implement","index","index)","index);","index,","index;","inittable();","instanceof","int","interruptedexcept","java","java.util.concurr","jdk","jdk1.7","jdk1.8。","jdk7","jdk8","juc）中提供了几个非常有用的并发容器。","k","key","key,","key.equals(ek))))","key;","len","linkedblockingdequ","linkedblockingqueu","list","list)","list,","list.add(index,","list.remove(index);","list;","lock","lock.lock();","lock.unlock();","main(string[]","map","map.get(key));","map.keyset())","map。使用跳表实现高效并发。","moved)","mutat","n","n,","new","newel","newelements,","newelements[len]","next;","node","node(hash,","null","null)","null)))","null);","null,","null;","nullpointerexception();","num","nummov","nummoved);","o(logn)，可以改进性能。","o(n)；因此，对于个数超过","object[]","object[len","oldval","oldval;","oldvalu","oldvalue;","onlyifabsent)","p.val","p.val;","p;","pred","pred.next","privat","protect","public","putval(k","readtask","readtask(list","reentrantlock","reentrantlock();","remove(int","remove等操作，可以减少并发冲突，对","return","rthread.start();","run()","runnabl","segment","segment[]","segments;","serializ","setarray(arrays.copyof(elements,","setarray(newelements);","set。它由","set，它内部包含了一个","size","spread(key.hashcode());","stack","static","str","synchron","system.arraycopy(elements,","system.out.println(\"写操作线程开始执行\");","system.out.println(\"读操作线程开始执行\");","system.out.println(key","system.out.println(str);","tab","tab.length)","tabat(tab,","tabl","table;","table;;)","table[3]为首节点，table[3]","table，","test","this.index","this.list","this.lock;","thread","thread(()","thread.sleep(1000);","throw","transient","treebin)","treeify_threshold)","treeifybin(tab,","treeset。它是有序的","tri","true;","v","valu","value))","value,","value;","value值","value即可。","vector","vector();","vector、stack、hasht","vector，虽然能保证每一个时刻只能有一个线程访问它，但是不排除这种可能：","via","void","volatil","while(true)","writetask","writetask(list","wthread","wthread.start();","{","||","}","});","一份，然后在新副本上执行写操作，之后再切换引用。当然此过程是要加锁的。","不安全的示例","不属于同一个片段的节点可以并发操作，大大提高了性能","与","个）元素；","中主要做了","中的方法都是","中的每一个元素本质上都是一个","中的设计，其基本结构如图所示：","中采用了红黑树的结构，那么查询的时间复杂度可以降低到","中，concurrenthashmap","中，同步容器主要包括","中，摒弃了锁分段机制，改为利用","中，读操作不同步，因为它们在内部数组的快照上工作，所以多个迭代器可以同时遍历而不会相互阻塞（1,2,4）。","为节点","之后散列的很均匀，那么","之后能均匀的分布在数组中。如果","也是一个同步容器，它的方法也用","但是在并发容器中不会出现这个问题。","作用：concurrenthashmap","作用：copyonwrit","保存数据，采用","修饰。那么，这些方法每次只允许一个线程调用执行。","修饰的方法，每次只允许一个线程执行，其他试图访问这个方法的线程只能等待。显然，这种方式比没有使用","假若此时","写操作后创建的迭代器将能够看到修改的结构（6,7）。","写时复制集合返回的迭代器不会抛出","删除操作","删除操作同理，将除要删除元素之外的其他元素拷贝到新副本中，然后切换引用，将原容器引用指向新副本。同属写操作，需要加锁。","包（即","原理：","原理：jdk6","双向链表实现的双端阻塞队列。","取消","可以作为互拆锁使用","同步容器","同步容器和并发容器","同步容器的同步原理就是在方法上用","同步容器的缺陷","同步容器真的一定安全吗？","和","因此为了保证线程安全，必须在方法调用端做额外的同步措施，如下面所示：","在","在对","在并发迭代访问时会抛出","基本节点，存储key，","如果tab[i]不为空并且hash值为moved，说明该链表正在进行transfer操作，返回扩容完成后的table。","如果table为空，初始化；否则，根据hash值计算得到数组索引i，如果tab[i]为空，直接新建节点node即可。注：tab[i]实质为链表或者红黑树的首节点。","如果在链表中找到值为key的节点e，直接设置e.v","如果没有找到值为key的节点，直接新建node并加入链表即可。","如果节点数>＝8，那么转换链表结构为红黑树结构。","如果首节点为treebin类型，说明为红黑树结构，执行puttreeval操作。","字段，直接采用","字面意思为写入时复制。copyonwritearraylist","安全示例","安全问题","实现。","实现了","实现的。","实际上就是一个数组，和","对象数组，用于存放元素","将下标为","将原先","将整个hashmap分成几个小的map，每个segment都是一个锁；与hashtable相比，这么设计的目的是对于put,","常见复合操作如下：","并发容器","并发编程实战","并发编程的艺术","异常","异常，关于这个异常将会在后续文章中讲述。","当某个线程在某个时刻执行这句时：","很相似，但是","性能问题","或者","所有的写操作都是同步的。他们在备份数组（3）的副本上工作。写操作完成后，后备阵列将被替换为复制的阵列，并释放锁定。支持数组变得易变，所以替换数组的调用是原子（5）。","执行写时复制操作，需要使用可重入锁加锁","执行时可能会出现数组越界错误。","接口，vector","接口，它和","数组中的每个队列长度主要为","数组元素作为锁，从而实现了对每一行数据进行加锁，进一步减少并发冲突的概率。","数组实现的阻塞队列。","数组＋单向链表的数据结构，变更为","数组＋单向链表＋红黑树的结构。对于","方法访问下标为","方法返回的是","方法，即进行了同步措施。","方面的改进","是线程安全的","是线程安全的，为什么还会报这个错？很简单，对于","本文内容基于","本质上segment类就是一个小的hashmap，里面table数组存储了各个节点的数据，继承了reentrantlock,","条件运算：例如若没有则添加等；","每一个","没有。","添加操作","添加的逻辑很简单，先将原容器","源码","然后另外一个线程执行了这句：","由于被","的","的值为","的元素删除了。","的元素肯定就会出问题了。","的单向队列。比如","的容器性能要差。","的读操作是不用加锁的，性能很高。","相当于线程安全的","示例","第五章","等容器并发地进行迭代修改时，会报","等方法）","答案是：未必。同步容器未必真的安全。在做复合操作时，仍然需要加锁来保护。","算法。","类。","类中提供的静态工厂方法创建的类（由","类似，但是","类在","类默认的加载因子为","类：","线程安全的","线程安全的无界双端队列。底层采用双向链表。支持","线程安全的无界队列。底层采用单链表。支持","线程安全的有序","表来说，最核心的能力在于将","要点","计数增加1，有可能触发transfer操作(扩容)。","读操作","资料","跳转：根据指定顺序寻找当前元素的下一个（下","进行了同步处理，而","进行了同步，它实际上是继承于","迭代：反复访问元素，直到遍历完全部元素；","那么通过","都是一个","采用了分段锁机制。jdk8","重要属性","重要方法","针对首个节点进行加锁操作，而不是segment，进一步减少线程冲突","链表实现的阻塞队列。"],"javacore/concurrent/锁.html":["!=","!compareandsetwaitstatus(h,","\"得到了锁\");","&&","(!compareandsetwaitstatus(h,","(!tryacquire(arg)","(!tryacquire(arg))","(;;)","(compareandsethead(new","(compareandsettail(pred,","(compareandsettail(t,","(failed)","(h","(int","(interrupted)","(nanostimeout","(node","(p","(pred","(pred.waitstatu","(r","(shouldparkafterfailedacquire(p,","(system.currenttimemillis()","(t","(t.waitstatu","(thread.interrupted())","(tryacquireshared(arg)","(tryrelease(arg))","(tryreleaseshared(arg))","(w","*","*/","+","/*","/**","//","0","0)","0))","0);","0,","0,重新进入阻塞状态。","0;","1,","1,0,","1.","1;","1）","2,","2.","2.1","2.1.","2.2","2;","2）","3","3.4","3;","3）","5",":point_right:",";","=","==",">",">=","abstract","abstractownablesynchron","abstractownablesynchronize。","abstractqueuedsynchron","acquir","acquire(int","acquireinterrupt","acquireinterruptibly(int","acquirequeu","acquirequeued(addwaiter(node.exclusive),","acquirequeued(fin","acquirequeued。","acquirequeued。由于","acquireshar","acquireshared(int","acquiresharedinterrupt","addwait","addwaiter()和","addwaiter(nod","addwaiter(node.exclusive);","addwaiter(node.shared);","addwaiter，再调用","aq","aqs。那么为什么要这样呢?because:锁面向的是使用用户，而同步器面向的则是线程控制，那么在锁的实现中聚合同步器而不是直接继承","aqs源码","aqs要点","aqs）。","aqs，而是定义了一个","arg)","arg))","arg,","args)","arraylist","arraylist();","b","befor","boolean","break;","ca","cancel","cancelacquire(node);","cancelled(作废)，因此应该从队列中移除.","cancelled（1）","case","catch","class","compareandsetwaitstatu","compareandsetwaitstatus(pred,","condit","condition（","continue;","cpu。","demo","demo.get(thread.currentthread())).start();","demo.insert(thread.currentthread())).start();","doacquireinterrupt","doacquireinterruptibly(arg);","doacquireinterruptibly(int","doacquirenano","doacquirenanos(arg,","doacquirenanos(int","doacquireshar","doacquireshared(int","doreleaseshar","doreleaseshared()","doreleaseshared();","enq","enq()完成对同步队列的头结点初始化工作以及","enq()，同时","enq(fin","enq(node);","entrant","entri","exception{","exclus","extend","fail","fair)","fairsync","false;","false。","false。也就是说，这个方法无论如何都会立即返回，获取不到锁时不会一直等待。","false。如果如果一开始拿到锁或者在等待期间内拿到了锁，则返回","false，重新进入外部方法","fifo","final","gc","get(thread","h","h.waitstatu","h.waitstatus;","hashcod","hashmap","hashmap（jdk7","head","head)","head;","help","http://ju.outofmemory.cn/entry/353762","http://www.cnblogs.com/dolphin0520/p/3923167.html","https://blog.csdn.net/u012403290/article/details/64910926?locationnum=11&fps=1","https://t.hao0.me/java/2016/04/01/aqs.html","https://www.cnblogs.com/qifengshi/p/6831055.html","https://zhuanlan.zhihu.com/p/27134110","implement","initi","insert(thread","int","interfac","interrupt","interrupt()","interrupted;","interruptedexcept","interruptedexception();","interruptedexception;","interruptedexception。","java","java.io.serializ","jdk1.8。","jdk8","lock","lock()","lock();","lock.lock();","lock.lockinterruptibly()","lock.trylock(timeout,timeunit)","lock.unlock","lockinterruptibly()","locksupport.park(this);","locksupport.parknanos(this,","lock、readwritelock","lock重新进入锁。对于synchronized而言,也是一个可重入锁。可重入锁的一个好处是可一定程度避免死锁。","lock，必须主动去释放锁，并且在发生异常时，不会自动释放锁。因此一般来说，使用","long","looksupport.park","looksupport.park()方法使得线程阻塞","loop","main(string[]","mode)","mode);","nanostimeout)","nanostimeout);","new","newcondition();","next","next;","node","node()))","node();","node(thread.currentthread(),","node)","node))","node,","node.predecessor();","node.prev","node.propagate))","node.signal)","node.signal);","node.signal,","node.thread","node.waitstatus;","node;","nonfairsync","null","null)","null;","null，即与队列断开，无任何引用方便","null，并且","null，说明当前节点是第一个加入队列的节点","p","p.next","parkandcheckinterrupt","parkandcheckinterrupt()","parkandcheckinterrupt())","pre","pred","pred,","pred.next","pred.prev;","pred.waitstatus;","pred;","prev;","privat","propag","propagate（","public","put","r","r);","readlock();","readwritelock","readwritelock)都是基于","recheck","reentrantlock","reentrantlock()","reentrantlock();","reentrantlock(boolean","reentrantlock)。当需要","reentrantlockdemo","reentrantlockdemo();","reentrantlock、","reentrantlock、reentrantreadwritelock、semaphor","reentrantlock而言,","reentrantlock而言，其是独享锁。但是对于","reentrantlock而言，通过构造函数指定该锁是否是公平锁，默认是非公平锁。非公平锁的优点在于吞吐量比公平锁大。","reentrantlock（seg","reentrantreadwritelock","reentrantreadwritelock();","reentrantreadwritelockdemo","reentrantreadwritelockdemo();","reentrantreadwritelock源码","reentrantreadwritelock示例","reentrantreadwritelock要点","releas","release(int","releaseshar","releaseshared(int","return","return;","rwl","rwl.readlock().lock();","s","segment，它即类似于","selfinterrupt();","seta()","setb()","setb();","sethead","sethead(nod","sethead(node);","setheadandpropagate(node,","share","shouldparkafterfailedacquir","shouldparkafterfailedacquire(nod","shouldparkafterfailedacquire，直至","signal","signal。","signal（","signal，表示当前线程阻塞。","size","spinfortimeoutthreshold)","start","state","state;","state，用来表示同步状态。aq","static","sync","sync;","synchron","synchronized，解决了以上的缺陷：","system.currenttimemillis();","system.out.println(thread.getname()","t","t.next","t.prev)","t;","tail","tail)","tail;","thread","thread(()","thread)","thread.interrupted();","thread.sleep(1000);","thread;","threadb.interrupt()","throw","time,","timeunit","transient","tri","true","true;","true。","true，则通过解锁一个或多个线程来实现。这个方法可以用来实现","true；如果失败（即锁已被其他线程获取），则返回","tryacquir","tryacquire(arg)","tryacquire(arg))","tryacquirenano","tryacquirenanos(int","tryacquireshared(arg);","tryacquiresharednano","trylock()","trylock();","trylock(long","tryreleas","tryreleaseshar","unit)","unlock()","unlock();","unparksuccessor","unparksuccessor(h);","unparksuccessor(nod","unparksuccessor。）","void","volatil","waitstatu","waitstatus;","writelock();","ws","ws,","{","{}","||","}","“读","上面的代码就是一个可重入锁的一个特点，如果不是可重入锁的话，setb","上面讲的独享锁/共享锁就是一种广义的说法，互斥锁/读写锁就是具体的实现。互斥锁在","下一个","不能响应中断。","与","个状态值的含义：","中","中的使用，就是利用各种锁。乐观锁在","中的使用，是无锁编程，常常采用的是","中的具体实现就是readwritelock","中的具体实现就是reentrantlock","中的方法（具体实现完全基于","中，自旋锁是指尝试获取锁的线程不会立即阻塞，而是采用循环的方式去尝试获取锁，这样的好处是减少线程上下文切换的消耗，缺点是循环会消耗","为什么用","乐观锁/悲观锁","乐观锁与悲观锁不是指具体的什么类型的锁，而是指看待并发同步的角度。悲观锁认为对于同一个数据的并发操作，一定是会发生修改的，哪怕没有修改，也会认为修改。因此对于同一个数据的并发操作，悲观锁采取加锁的形式。悲观的认为，不加锁的并发操作一定会出问题。乐观锁则认为对于同一个数据的并发操作，是不会发生修改的。在更新数据的时候，会采用尝试更新，不断重新的方式更新数据。乐观的认为，不加锁的并发操作是没有事情的。","互斥锁/读写锁","五个值","从上面的描述我们可以看出，悲观锁适合写操作非常多的场景，乐观锁适合读操作非常多的场景，不加锁会带来大量的性能提升。悲观锁在","他的名字就可以看出是一个可重入锁，其名字是re","以上代码和","会继续执行","作为构建锁或者其他同步组件的基础框架，有必要好好了解一下其原理。","作用：aqs，abstractqueuedsynchronizer，即队列同步器。它是构建锁或者其他同步组件的基础框架（如","修饰的方法或代码块，只能被一个线程访问。如果这个线程被阻塞，其他线程也只能等待。","值选择初始化","偏向锁/轻量级锁/重量级锁","偏向锁是指一段同步代码一直被一个线程所访问，那么该线程会自动获取锁。降低获取锁的代价。","允许多个线程同时对其执行读操作，但是只允许一个线程对其执行写操作。","元素的时候，并不是对整个","先调用","全局信息的时候，就需要获取所有的分段锁才能统计。分段锁的设计目的是细化锁的粒度，当操作不需要更新整个数组的时候，就仅仅针对数组中的一项进行加锁操作。","公平锁/非公平锁","公平锁是指多个线程按照申请锁的顺序来获取锁。","公平锁版本。","共享锁是指该锁可被多个线程所持有。","写”线程、“写","写”线程之间存在互斥关系。","几乎一致，不再赘述。","分段锁","分段锁其实是一种锁的设计，并不是具体的一种锁，对于concurrenthashmap而言，其并发的实现就是通过分段锁的形式来实现高效的并发操作。我们以concurrenthashmap来说一下分段锁的含义以及设计思想，concurrenthashmap中的分段锁称为","判断同步状态释放是否成功","判断尾指针是否为","前驱节点","包中的相关锁(常用的有","原理：aq","反之，则先调用","发送后继信号并确保传播。","变量","只有在等待，那么对线程","只能是非公平锁。","可以响应中断","可以手动释放锁（synchron","可以设置超时时间，避免一致等待","可以选择公平锁或非公平锁两种模式","可能不会被当前线程执行，可能造成死锁。","可重入锁","可重入锁又名递归锁，是指在同一个线程在外层方法获取锁的时候，在进入内层方法会自动获取锁。","同步机制完全依赖于此","同步状态","同步队列","同步队列来完成同步状态的管理，当有线程获取锁失败后，就被添加到队列末尾。","后继节点","和","响应中断的特性是如何实现的？答案就在","在","在内部定义了一个","在超时时间内，当前线程成功获取了锁；","场景：在","块中或者在调用","块中进行，以保证锁一定被被释放，防止死锁的发生。","块中进行，并且将释放锁的操作放在","域也为","域设置为","失败，继续自旋","头指针的后继节点","如果","如果失败或状态由于等待线程而改变也是正常的。","如果头指针变化，break","如果当前节点是队列中第一个节点，并且成功获取同步状态，即可以获得独占式锁","如果成功获取同步状态，则结束方法，直接返回；","如果状态为负值（即可能需要信号），请尝试清除信号。","如果采用","字面意为可重入锁。","实现了","实现超时等待的效果","对于","对于synchronized而言，也是一种非公平锁。由于其并不像reentrantlock是通过","对于特定的资源，readwritelock","将当前线程构建成","将当前节点插入队列尾部","将当前节点通过","将节点插入到同步队列中","将节点状态由","将读写锁分离，从而使读写操作分开，有效提高并发性。","尝试获取共享锁失败，调用","就可以很好的隔离二者所关注的事情。","尾指针为","属性和方法","并发编程实战","并发编程的艺术","应无条件传播。","当","当前线程在超时时间内被中断；","当前节点为","当前节点的前驱节点是头结点并且成功获得同步状态时，节点出队即该节点引用的线程获得锁，否则，当不满足条件时就会调用","当前节点能否获取独占式锁","当成功释放同步状态之后即","当该节点的前驱节点是头结点且成功获取同步状态","很显然，node","必须在","必须放在","总结","想获取某个锁时，假若此时线程","我们仍然通过采取阅读源码的方式来学习底层具体是怎么实现的，该方法会调用","指针进行访问。","接口定义","接口的类。","接口，所以它是一个读写锁。","操作失败的重试","操作将节点插入队列尾部","操作将节点插入队列尾部，直到成功为止。","操作，直到成功为止","数组，数组中的每个元素既是一个链表；同时又是一个","方式达到超时等待获取锁的效果，该方法会在三种情况下才会返回：","方法","方法。","方法不能中断正在运行过程中的线程，只能中断阻塞过程中的线程。因此当通过","方法与","方法中。","方法中断的。因为本身在前面的文章中讲过单独调用","方法中是死循环，会再一次执行","方法以独占模式发布。如果","方法作用是唤醒","方法修改。","方法和","方法是类似的，区别仅在于这个方法在获取不到锁时会等待一定的时间，在时间期限之内如果还获取不到锁，就返回","方法比较特殊，当通过这个方法去获取锁时，如果线程正在等待获取锁，则这个线程能够响应中断，即中断线程的等待状态。也就使说，当两个线程同时通过","方法添加新的等待节点。*/","方法的作用是使用","方法的作用是将当前线程插入等待同步队列的队尾。","方法的作用是尝试获取锁，如果成功，则返回","方法的作用是获取锁。如果锁已被其他线程获取，则进行等待。","方法的作用是调用","方法的作用是通过自旋（死循环），不断尝试为等待队列中线程获取独占锁。","方法的作用是通过自旋（死循环），不断尝试利用","方法的作用是释放锁。","方法能够中断线程","方法获取某个锁时，如果不能获取到，只有进行等待的情况下，是可以响应中断的。","方法设置为队列的头结点，然后将之前的头结点的","方法返回","方法逻辑几乎一致，唯一的区别是当","方法，该方法是用来阻塞当前线程的。","时能够将内存进行回收。","时（即线程阻塞时该线程被中断），代码抛出被中断异常。","时，后继节点会被挂起，因此在当前节点释放锁或被取消之后必须被唤醒(unparking)其后继结点.","是一个双链表结构。","是一个抽象类，有两个子类：","是不一样的:有","是唯一实现了","更多示例","有两个构造方法，功能参考下面源码片段中的注释。","本文内容基于","来实现的，通过实现不同的方法，来实现独享或者共享。对于synchronized而言，当然是独享锁。","来构建。然而这些锁都没有直接来继承","来知道他要放在那一个分段中，然后对这个分段进行加锁，所以当多线程","构造头结点（必须初始化，需要领会双链表的精髓）","查看同步状态。","根据","概念","概述","此外，reentrantlock","没有超时机制。","注意：当一个线程获取了锁之后，是不会被","流程","源码","状态来表示锁的保留数（详细介绍参见","独享锁/共享锁","独享锁是指该锁一次只能被一个线程所持有。","的一个显著优点。","的下一个节点。","的代码逻辑十分相似，区别仅在于自旋的条件以及节点出队的操作有所不同。","的内部类，也是一个抽象类。","的另一个实现类readwritelock，其读锁是共享锁，其写锁是独享锁。读锁的共享锁可保证并发读是非常高效的，读写，写读","的同步机制几乎完全依赖于sync。使用","的声明中抛出了异常，所以","的完整流程。可以以一幅图来说明：","的实例为公平的锁（fairsync）或不公平锁（nonfairsync）","的实例为非公平锁（nonfairsync）","的实现）的结构，即内部拥有一个","的方法","的方法外声明抛出","的时候，只要不是放在一个分段中，就实现了真正的并行的插入。但是，在统计","的时候，可就是获取","的来实现线程调度，所以并没有任何办法使其变成公平锁。","的核心方法当然是","的等待过程。由于","的缺陷","相较于","示例","第六章","等待状态,这个和","等待锁的线程","等待队列的队头，懒加载。只能通过","等待队列的队尾，懒加载。只能通过","等）。","算法，典型的例子就是原子类，通过","类中提供的方法）。","类去继承","类型","类型双链表，通过","类是","线程中断抛异常","线程获取锁失败","线程获取锁失败，线程被封装成","线程获取锁是一个自旋的过程，当且仅当","线程被中断抛出被中断异常","继承了","继承自","维护一对相关的锁。一个是读锁；一个是写锁。将读写锁分开，有利于提高并发效率。","维护了一个","综上所述，就是","能响应中断，这是相较于","自旋实现原子操作的更新。","自旋锁","获取共享锁","获取到了锁，而线程","获取可中断的共享锁","获取可中断的独占锁","获取同步状态失败后就会调用","获取独占锁","获取超时等待式的共享锁","获取超时等待式的独占锁","获取锁出队","获取锁和释放锁都是自动的），以避免死锁。","获取锁失败，线程进入等待状态等待获取独占式锁","获得当前节点的上一个节点","被","要点","设置失败，则说明","设置成","设置死循环，是为了不断尝试","设置节点状态位为","该等待同步的节点处于共享模式","该等待同步的节点处于独占模式","该节点的线程可能由于超时或被中断而处于被取消(作废)状态，一旦处于这个状态，节点状态将一直处于","该节点的线程处于等待条件状态，不会被当作是同步队列上的节点,直到被唤醒(signal)，设置其值为","说明：当前节点的上一个节点是头指针，即意味着当前节点是队列中第一个节点。","说的有点抽象，下面会有一个代码的示例。对于","读”线程之间不存在互斥关系。","读写锁在","调用","资料","超时时间结束，仍未获得锁返回","轻量级锁是指当锁是偏向锁的时候，被另一个线程所访问，偏向锁就会升级为轻量级锁，其他线程会通过自旋的形式尝试获取锁，不会阻塞，提高性能。","返回","返回用于写操作的锁","返回用于读操作的锁","这三种锁是指锁的状态，并且是针对synchronized。在","这三种锁的状态是通过对象监视器在对象头中的字段来表明的。","进行入队操作，核心方法在于","进行加锁，而是先通过","通过","通过一个双向的","通过引入锁升级的机制来实现高效synchronized。","通过调用","那么","释放共享锁","释放独占锁","释放锁的时候会唤醒后继节点；","重量级锁是指当锁为轻量级锁的时候，另一个线程虽然是自旋，但自旋不会一直持续下去，当自旋一定次数的时候，还没有获取到锁，就会进入阻塞，该锁膨胀为重量级锁。重量级锁会让其他申请的线程进入阻塞，性能降低。","锁","非以上状态。","非公平锁是指多个线程获取锁的顺序并不是按照申请锁的顺序，有可能后申请的线程比先申请的线程优先获取锁。有可能，会造成优先级反转或者饥饿现象。","非公平锁版本。","默认初始化","（注意：对于独占模式，如果需要信号，释放就相当于调用头的","，写写的过程是互斥的。独享锁与共享锁也是通过","；"],"javacore/concurrent/原子变量类.html":["\"","\",","\"[name","\"\\natom","\"\\nperson","\"]\";","\"abc\";","\"hello\";","\"thread","(asr.compareandset(init_ref,","(int","(interruptedexcept","(math.random()","*","+","0);","0;","1!\");","1\");","1\",","1))","1));","1);","100)));","2\");","2\",","2));","2);","23);",":","=","@overrid","aba","ag","age)","age;","args)","arguments)","armessag","armessage.compareandset(message,","armessage.get()","armessage.lazyset(\"thread","armessage;","arperson","arperson.get().tostring());","arperson.getandset(new","arperson.set(new","arperson;","asr","asr.getreference());","asr.getstamp();","atom","atomicboolean","atomicbooleanarray","atomicinteg","atomicinteger(0);","atomicintegerarray","atomicintegerarray(10);","atomicintegerarraydemo","atomicintegerdemo","atomicintegerfieldupdat","atomiclong","atomiclongarray","atomiclongfieldupdat","atomicmarkablerefer","atomicrefer","atomicreference(message);","atomicreference(person);","atomicreferencearray","atomicreferencedemo","atomicreferencefieldupdat","atomicstampedrefer","atomicstampedreference<>(init_ref,","atomicstampedreferencedemo","ca","catch","class","concurrent/atomicinteger.html","concurrent/atomicintegerarray.html","concurrent/atomicreference.html","concurrent/atomicstampedreference.html","count","count.get());","count.incrementandget();","count=\"","cpu","e)","e.printstacktrace();","executors.newfixedthreadpool(100);","executors.newfixedthreadpool(5);","executorservic","executorservice.awaittermination(30,","executorservice.awaittermination(60,","executorservice.shutdown();","final","getage()","getname()","http://tutorials.jenkov.com/java","implement","init_ref","int","interruptedexcept","is:","java","jdk1.8。","main(fin","main(string[]","messag","message.concat(\"","message;","myrun1","myrun1());","myrun2","myrun2());","name)","name,","name;","new","person","person(\"phillip\",","person(\"thread","person(str","person.setage(person.getage()","person.setname(\"thread","person.tostring());","person;","privat","public","refer","references:","return","run()","runnabl","setage(int","setname(str","stamp","stamp,","static","string","string[]","system.out.println(\"\\n\"","system.out.println(\"\\nnow","system.out.println(\"atom","system.out.println(\"fin","system.out.println(\"messag","system.out.println(\"初始对象为：\"","system.out.println(\"新的对象为：\"","system.out.println(thread.currentthread().getname()","t1","t1.join();","t1.start();","t2","t2.join();","t2.start();","this.ag","this.nam","thread","thread(new","thread.currentthread().getname()","thread.currentthread().getname(),","thread.sleep(math.abs((int)","throw","timeunit.seconds);","tostring()","tri","util","valu","values:","void","volatil","{","}","});","修改了对象！\");","写操作。","原子变量比锁的粒度更细，量级更轻，并且对于在多处理器系统上实现高性能的并发代码来说是非常关键的。","原子变量类","原子变量类相当于一种泛化的","原子更新基本类型","原子更新字段类","原子更新布尔类型。","原子更新布尔类型数组的元素。","原子更新带有标记位的引用类型。可以原子更新一个布尔类型的标记位和应用类型。","原子更新带有版本号的引用类型。该类将整型数值与引用关联起来，可用于原子的更新数据和数据的版本号，可以解决使用","原子更新引用类型","原子更新引用类型。","原子更新引用类型数组的元素。","原子更新引用类型里的字段。","原子更新数组","原子更新整型。","原子更新整型数组里的元素。","原子更新整型的字段的更新器。","原子更新长整型。","原子更新长整型字段的更新器。","原子更新长整型数组里的元素。","原子类在内部使用现代","变量，能够支持原子的和有条件的读","并发编程实战","并发编程的艺术","指令来实现同步。这些指令通常比锁更快。","支持的","改","本文内容基于","示例：","第七章","资料","进行原子更新时可能出现的","问题。"],"javacore/concurrent/并发工具类.html":["\"","\");","\"执行完毕\");","\"正在执行\");","()","(int","(interruptedexcept","+","//","//获取","//释放","0","0;","1","1\");","1，直到计数器的值和设置的值相等，等待的所有线程才会继续执行。","2","2\");","30;","=",">","acquir","acquire()","acquire(int","args)","await","await()","await(long","barrier","barrier1","barrier1,","barrier1;","barrier1act","barrier1action);","barrier2","barrier2)","barrier2);","barrier2;","barrier2act","barrier2action);","barrieraction)","barrieraction。","barrierrunnable1","barrierrunnable2","boolean","brokenbarrierexcept","brokenbarrierexception,","catch","class","count","count)","countdown()","countdownlatch","countdownlatch(2);","countdownlatch(int","countdownlatchdemo","countdownlatch源码","countdownlatch示例","countdownlatch要点","count。每次执行","count，表示需要等待的事件数量。countdown","cyclicbarri","cyclicbarrier(2,","cyclicbarrier(int","cyclicbarrierdemo02","cyclicbarrierrunn","cyclicbarrierrunnable(barrier1,","cyclicbarrierrunnable(cyclicbarri","cyclicbarrier源码","cyclicbarrier示例","cyclicbarrier要点","data\");","done!\");","e)","e.printstacktrace();","execut","executors.newfixedthreadpool(thread_count);","executorservic","fair)","final","http://www.cnblogs.com/dolphin0520/p/3920397.html","implement","int","interruptedexcept","interruptedexception,","java","java.util.concurr","jdk","jdk1.8。","juc）中提供了几个非常有用的并发工具类。","latch","latch.await();","latch.countdown();","main(string[]","new","null;","parti","parties)","parties,","permit","permits)","permits,","permit。","permit，如果没有就等待；而","permit，并且默认为非公平模式","permit，第二个参数设置是否为公平模式。所谓公平，是指等待久的优先获取许可","privat","public","releas","release()","release(int","reset()","run()","runnabl","s","s.acquire();","s.release();","semaphor","semaphore(10);","semaphore(int","semaphoredemo","semaphore提供了","semaphore源码","semaphore的重要方法：","semaphore示例","semaphore要点","static","system.out.println(\"2个子线程已经执行完毕\");","system.out.println(\"barrieract","system.out.println(\"sav","system.out.println(\"子线程\"","system.out.println(\"等待2个子线程执行完毕...\");","system.out.println(\"继续执行主线程\");","system.out.println(thread.currentthread().getname()","this.barrier1","this.barrier1.await();","this.barrier2","this.barrier2.await();","thread(()","thread(barrierrunnable1).start();","thread(barrierrunnable2).start();","thread.currentthread().getname()","thread.sleep(1000);","thread.sleep(3000);","thread_count","threadpool","threadpool.shutdown();","throw","timeout,","timeoutexcept","timeunit","tri","unit)","void","wait","{","{}","{};","|","}","}).start();","});","};","个构造方法","个构造方法：","个许可","作用：字面意思为信号量。semaphor","作用：字面意思为递减计数锁。它允许一个或多个线程等待，直到在其他线程中执行的一组操作完成。","作用：字面意思循环栅栏。它可以让一组线程等待至某个状态之后再全部同时执行。叫做循环是因为当所有等待线程都被释放以后，cyclicbarri","值为","值还没变为","减","初始化固定数量的","初始化计数器","加","包（即","原理：countdownlatch","原理：cyclicbarri","原理：semaphor","可以用于实现资源池，如数据库连接池。","可以用于将任何一种容器变成有界阻塞容器。","可以被重用。","和","唯一的构造方法：","在并行迭代算法中非常有用。","场景：","场景：cyclicbarri","将屏障重置为初始状态","并发工具类","并发编程实战","并发编程的艺术","才继续执行","提供了","数相当于一个屏障，当","数量的线程在等待时会跳闸，并且在跳闸时不执行预定义的动作。","数量的线程在等待时会跳闸，并且在跳闸时执行给定的动作","方法之后，count","方法可以获取一个","方法可以释放一个","方法的线程会一直阻塞直到计数器为零，或者等待中的线程中断，或者等待超时。","方法的线程会被挂起，它会等待直到","方法递减计数器，表示有一个事件已经发生。调用","本文内容基于","源码","状态就直接让到达","用来控制同时访问某个特定资源的操作数量，或者同时执行某个指定操作的数量。","的","的初始数量可通过构造方法来指定。每次执行","的线程执行后续任务。","的线程数达到屏障数。如果当前线程是最后一个到达的线程，并且在构造函数中提供了非空屏障操作，则当前线程在允许其他线程继续之前运行该操作。如果在屏障动作期间发生异常，那么该异常将在当前线程中传播并且屏障被置于断开状态。","的话就会继续执行","的重要方法：","相比于上个方法，这个方法让这些线程等待至一定的时间，如果还有线程没有到达","示例","第八章","等待调用","管理着一组虚拟的许可（permit），permit","类似，只不过等待一定的时间后","维护一个计数器","获取","要点","调用","资料","释放"],"javacore/concurrent/线程池.html":["\"","()","(addifundercorepoolsize(null))//注意传进去的参数是nul","(command","(executionexcept","(int","(interruptedexcept","(run","(workercountof(c)","+","++n;","//","//注意传进去的参数是null","0;","0，当有任务来之后，就会创建一个线程去执行任务，当线程池中的线程数目达到","1","1,","2","3","3,","7","=","==",">","@overrid","abortpolicy，表示无法处理新任务时抛出异常。以下是","abortpolicy：直接抛出异常。","abstractexecutorservic","abstractexecutorservice：executorservic","addifundercorepoolsize(null);","addwork","args)","arrayblockingqueue。静态工厂方法","arrayblockingqueue：基于数组的先进先出队列，此队列创建时必须指定大小；","arrayblockingqueue：是一个基于数组结构的有界阻塞队列，此队列按","auto","bit","blockingqueu","blockingqueue，通常可以取下面三种类型：","boolean","c","cachedthreadpool","cachedthreadpooldemo","callerrunspolicy：只用调用者所在线程来运行任务。","catch","class","command)","command),","corepools","corepoolsize,","corepoolsize：线程池的基本线程数。这个参数跟后面讲述的线程池的实现原理有非常大的关系。在创建了线程池后，默认情况下，线程池中并没有任何线程，而是等待有任务到来才创建线程去执行任务，除非调用了","ctl.get();","cycle()","cycle();","delay()","delay();","discardoldestpolicy：丢弃队列里最近的一个任务，并执行当前任务。","discardpolicy：不处理，丢弃掉。","e)","e.printstacktrace();","execut","execute()","execute()方法不同，它能够返回任务执行的结果，去看","execute()方法，只不过它利用了","execute(runn","executor","executor(runn","executor.shutdown();","executor.submit(harreturnvaluetask);","executors.newcachedthreadpool","executors.newcachedthreadpool();","executors.newfixedthreadpool()使用了这个队列。","executors.newfixedthreadpool(3);","executors.newscheduledthreadpool(5);","executors.newsinglethreadexecutor();","executorservic","executorservice：是一个比","executor，其方法签名为","executor，即只创建唯一的工作者线程来执行任务，它只会用唯一的工作线程来执行任务，保证所有任务按照指定顺序(fifo,","executor：一个接口，其定义了一个接收","fifo","fifo（先进先出）原则对元素进行排序。","final","fixedthreadpool","fixedthreadpooldemo","futur","future.get();","gener","get(long","handler)","handler：饱和策略。当队列和线程池都满了，说明线程池处于饱和状态，那么必须采取一种策略处理提交的新任务。这个策略默认情况下是","high","https://www.cnblogs.com/mobin/p/5436482.html","index));","index);","int","integer.max_value；","interger.max_value）,","interrupt","istermina","java","java.uitl.concurrent.threadpoolexecutor","jdk","jdk1.5","keepalivetim","keepalivetime,","keepalivetime：线程活动保持时间。线程池的工作线程空闲后，保持存活的时间。所以如果任务很多，并且每个任务执行的时间比较短，可以调大这个时间，提高线程的利用率。","lifo,","linkedblockingqueue，静态工厂方法","linkedblockingqueue：一个基于链表结构的阻塞队列，此队列按","linkedblockingqueue：基于链表的先进先出队列，如果创建时没有指定此队列大小，则默认为","long","main(string[]","maximumpoolsize,","maximumpoolsize，如果还有任务到来就会采取任务拒绝策略，通常有以下四种策略","maximumpoolsize：线程池允许创建的最大线程数。如果队列满了，并且已创建的线程数小于最大线程数，则线程池会再创建新的线程执行任务。值得注意的是如果使用了无界的任务队列这个参数就没什么效果。","method","n","n;","new","newcachedthreadpool","newfixedthreadpool","newschedulethreadpool","newsinglethreadexecutor","null)","nullpointerexception();","object","order","prestartallcorethreads()","prestartallcorethreads()或者","prestartallcorethreads()：初始化所有核心线程","prestartcorethread()","prestartcorethread()方法，从这","prestartcorethread()：初始化一个核心线程；","priorityblockingqueue：一个具有优先级的无限阻塞队列。","privat","public","rejectedexecutionexcept","rejectedexecutionhandl","return","run","run()","runnabl","runnable()","runstat","s","scheduledexecutorservic","scheduledexecutorservice：一个可定时调度任务的接口。","scheduledthreadpool","scheduledthreadpool.schedule(()","scheduledthreadpool.scheduleatfixedrate(","scheduledthreadpooldemo","scheduledthreadpoolexecutor：scheduledexecutorservic","setcorepoolsize：设置核心池大小","setmaximumpoolsize()，","setmaximumpoolsize：设置线程池最大能创建的线程数目大小","shutdown","shutdown()","shutdown()和","shutdown()方法，则线程池处于","shutdown()：不会立即终止线程池，而是要等所有任务缓存队列中的任务都执行完后才终止，但再也不会接受新的任务","shutdown)","shutdownnow","shutdownnow()","shutdownnow()方法，则线程池处于","shutdownnow()，其中：","shutdownnow()：立即终止线程池，并尝试打断正在执行的任务，并且清空任务缓存队列，返回尚未执行的任务","shutdownnow。","singlethreadexecutordemo","static","stop","stop，然后尝试停止所有的正在执行或暂停任务的线程，并返回等待执行任务的列表，而","store","stub","submit","submit()","submit()方法的实现，会发现它实际上还是调用的","synchronousqueue：一个不存储元素的阻塞队列。每个插入操作必须等到另一个线程调用移除操作，否则插入操作一直处于阻塞状态，吞吐量通常要高于","synchronousqueue：这个队列比较特殊，它不会保存提交的任务，而是将直接新建一个线程来执行新来的任务。","system.out.println(thread.currentthread().getname()","termin","terminated()","thread.sleep(2000);","threadfactori","threadfactory,","threadfactory：创建线程的工厂。可以通过线程工厂给每个创建出来的线程设置更有意义的名字。","threadpoolexecutor","threadpoolexecutor(int","threadpoolexecutor.abortpolicy:丢弃任务并抛出","threadpoolexecutor.callerrunspolicy：由调用线程处理该任务","threadpoolexecutor.discardoldestpolicy：丢弃队列最前面的任务，然后重新尝试执行任务（重复此过程）","threadpoolexecutor.discardpolicy：也是丢弃任务，但是不抛出异常。","threadpoolexecutor：线程池，可以通过调用","threadspool.execute(new","throw","tidi","timeout,","timeunit","timeunit.seconds);","todo","tri","true。当所有的任务都已关闭后,才表示线程池关闭成功，这时调用","true。至于我们应该调用哪一种方法来关闭线程池，应该由提交到线程池的任务特性决定，通常调用","unit)","unit,","unit：参数","void","volatil","workercount，从而防止在不应该的情况下添加线程。","workqueu","workqueue,","workqueue，它用来存放等待执行的任务。","workqueue：任务队列。用于保存等待执行的任务的阻塞队列。","{","}","});","下面的几个","个方法的名字就可以看出，是预创建线程的意思，即在没有任务到来之前就创建","个线程或者一个线程。默认情况下，在创建了线程池后，线程池中的线程数为","个线程正在运行，尝试使用给定命令作为第一个任务启动一个新线程。对","中声明的方法，在","中并没有对其进行重写，这个方法也是用来向线程池提交任务的，但是它和","中提供了几种具有代表性的线程池，这些线程池是基于","中提供的具有代表性的线程池实例。","为什么要用线程池？","什么是线程池？","以下静态工厂方法来创建线程池并返回一个","任务执行的核心方法是","任务拒绝策略","任务的执行","任务缓存队列及排队策略","优先级)执行。如果这个线程异常结束，会有另一个取代它，保证顺序执行。单工作线程最大的特点是可保证顺序地执行各个任务，并且在任意给定的时间不会有多个线程是活动的。","使用了这个队列。","使用更广泛的子类接口，其提供了生命周期管理的方法，以及可跟踪一个或多个异步任务执行状况返回","关闭线程池","分钟），则该工作线程将自动终止。终止后，如果你又提交了新的任务，则线程池重新创建一个工作线程。","创建一个单线程化的","创建一个可缓存线程池，如果线程池长度超过处理需要，可灵活回收空闲线程，若无可回收，则新建线程。","创建一个指定工作线程数量的线程池。每当提交一个任务就创建一个工作线程，如果工作线程数量达到线程池初始的最大数，则将提交的任务存入到池队列中。","创建一个线程池，可以安排任务在给定延迟后运行，或定期执行。","千分之一微秒)。","千分之一毫秒)和毫微秒(nanoseconds,","参数说明","变量用来保证线程之间的可见性；","变量表示","只是将线程池的状态设置成","只要调用了这两个关闭方法的其中一个，isshutdown","可以选择以下几个阻塞队列。","可能的几个取值。","后，就会把到达的任务放到缓存队列当中。","向线程池提交任务","和","回调方法完成时，线程池处于","在","在使用","在前面我们多次提到了任务缓存队列，即","在实际中如果需要线程池创建之后立即创建线程，可以通过以下两个方法办到：","在实际使用线程池的场景中，我们往往不是直接使用","处理中断异常","处理无法执行任务异常","如果任务排队失败，那么我们尝试添加一个新的线程。如果失败了，说明线程池已经关闭了，或者已经饱和了，所以拒绝这个任务。","如果任务排队成功，仍然需要仔细检查是否应该添加一个线程（因为现有的线程自上次检查以来已经死亡）或者自从进入方法后，线程池就关闭了。所以我们重新检查状态，如果有必要的话，在线程池停止状态时回滚队列，如果没有线程的话，就开始一个新的线程。","如果少于","如果调用了","如果长时间没有往线程池中提交任务，即如果工作线程空闲了指定的时间（默认为","实例。","对象。","对象的方法","就已经有了具体的实现，在","工作线程的创建数量几乎没有限制（其实也有限制的,数目为","并发编程实战","并发编程的艺术","延迟","异常。","当","当上述参数从小变大时，threadpoolexecutor","当任务到达时，任务可以不需要等到线程创建就能立即执行。","当创建线程池后，初始时，线程池处于","当然也可以根据应用场景需要来实现","当线程池为空时，则线程池处于","当线程池和队列都为空时，则线程池处于","当线程池的任务缓存队列已满并且线程池中的线程数目达到","我们也可以使用","我们可以使用","我们可以通过调用线程池的","或","执行方法的默认实现。","执行，i","排序元素，吞吐量通常要高于","接口自定义策略。如记录日志或持久化不能处理的任务。","提交任务，但是","提供了两个方法，用于线程池的关闭，分别是","提供了动态调整线程池容量大小的方法：setcorepoolsize()和","提供的四种策略。","提高响应速度","提高线程的可管理性","方法。执行步骤如下：","方法会返回","方法会阻塞住直到任务完成。而使用","方法则会阻塞一段时间后立即返回，这时有可能任务没有执行完。","方法实际上是","方法就会返回","方法是在","方法来中断线程，所以无法响应中断的任务可能永远无法终止。但是它们存在一定的区别，shutdownnow","方法来关闭线程池，它们的原理是遍历线程池中的工作线程，然后逐个调用线程的","方法来提交任务，它会返回一个","方法来获取返回值，get","方法没有返回值，所以无法判断任务是否被线程池执行成功。","方法输入的任务是一个","时，一定要注意控制任务的数量，否则，由于大量线程同时运行，很有会造成系统瘫痪。","是一个典型且优秀的线程池，它具有线程池提高程序效率和节省创建线程时所耗的开销的优点。但是，在线程池空闲时，即线程池中没有可运行任务时，它不会释放工作线程，还会占用一定的系统资源。","是用来关闭线程池的。","有四个构造方法，前三个都是基于第四个实现。第四个构造方法定义如下：","来关闭线程池，如果任务不一定要执行完，则可以调用","来判断任务是否执行成功。","来获取任务执行结果（futur","框架","框架中最核心的一个类。","概述","源码","状态。","状态，此时线程池不能够接受新的任务，它会等待所有任务执行完毕。","状态，此时线程池不能接受新的任务，并且会去尝试终止正在执行的任务。","状态，然后中断所有没有正在执行任务的线程。","状态；","的","的定制化实现。","的实现，一个可定时调度任务的线程池。","的方法。","的时间单位，有","的核心方法，通过这个方法可以向线程池提交一个任务，交由线程池去执行。","的类型为","的调用会自动检查","相关内容将在下一篇讲述）。","示例：","种取值。可选的单位有天（days），小时（hours），分钟（minutes），毫秒(milliseconds)，微秒(microseconds,","秒\"),","秒执行一次\"),","秒，每","第九章","简介","类中有几个非常重要的方法：","类是","线程是稀缺资源，如果无限制的创建，不仅会消耗系统资源，还会降低系统的稳定性，使用线程池可以进行统一的分配，调优和监控。但是要做到合理的利用线程池，必须对其原理了如指掌。","线程池","线程池中的线程初始化","线程池容量的动态调整","线程池是一种多线程处理形式，处理过程中将任务添加到队列，然后在创建线程后自动启动这些任务。","线程池状态","线程池的关闭","线程池的具体实现原理，大致从以下几个方面讲解：","表示当前线程池的状态，它是一个","资料","这样可灵活的往线程池中添加线程。","这种类型的线程池特点是：","进行了具体的实现，这个方法是","进行线程赋值，还可能立即创建新的线程来执行任务。","通过","通过以下代码可知","通过重复利用已创建的线程降低线程创建和销毁造成的消耗。","重要方法","降低资源消耗","首先将线程池的状态设置成","默认情况下，创建线程池之后，线程池中是没有线程的，需要提交任务之后才会创建线程。","（先进先出）","，而是使用","，那么我们可以通过这个"],"javacore/jvm/jvm-interview.html":["1","2","3","4","5","gc的一些概念，比如强弱软引用，finalize方法等，这些可以准备下。","java虚拟机","java虚拟机面经","一定得了解针对堆的垃圾回收机制，具体而言，可以画个图，说下年轻代年老代等。","最好说下如果出现了oom异常，该怎么排查？如何看dump文件。","结构图和流程可以大致说下。","说下垃圾回收的流程，然后针对性地说下如何在代码中优化内存性能。"],"javacore/jvm/jvm-memory.html":["1.4","1.7","1.8","2","class","directbytebuff","eden","generation）","hackthejava","intern()。这部分常量也会被放入运行时常量池。","java","jdk","jvm","metaspace（元数据）区替代。","nativ","nio","outofmemoryerror","stackoverflowerror","string","survivor","xm","xms=1m","xmx","xmx=2m","xss","xss=512m","与","两个虚拟机参数来指定一个程序的","中新加入了","之前，hotspot","之后，取消了永久代，用","从表到里学习","内存问题","函数库直接分配堆外内存，然后通过一个存储在","参考资料","可以通过","和","在","堆","堆\"），现代的垃圾收集器基本都是采用分代收集算法，该算法的思想是针对不同的对象采取不同的垃圾回收算法，因此虚拟机把","堆一样不需要连续的内存，并且可以动态扩展，动态扩展失败一样会抛出","堆不需要连续内存，并且可以动态增加其内存，增加失败会抛出","堆中来回复制数据。","堆内存大小，第一个参数设置初始值，第二个参数设置最大值。","堆分成以下三块：","堆和","堆里的","如果线程请求的栈深度大于虚拟机所允许的最大深度，将抛出","如果虚拟机在扩展栈时无法申请到足够的内存空间，则抛出","实现","实现，对待这些方法需要特别处理。","对象作为这块内存的引用进行操作。这样能在一些场景中显著提高性能，因为避免了在","对这块区域进行垃圾回收的主要目标是对常量池的回收和对类的卸载，但是一般比较难实现。","异常。","异常；","当一个对象被创建时，它首先进入新生代，之后有可能被转移到老年代中。新生代存放着大量的生命很短的对象，因此新生代在三个区域中垃圾回收的频率最高。为了更高效地进行垃圾回收，把新生代继续划分成以下三个空间：","当线程请求的栈深度超过最大值，会抛出","所有对象实例都在这里分配内存。","文件中的常量池（编译器生成的各种字面量和符号引用）会在类加载后被放入这个区域。","新生代（young","方法区","方法在执行的同时会创建一个栈帧用于存储局部变量表、操作数栈、常量池引用等信息。每一个方法从调用直至执行完成的过程，就对应着一个栈帧在","是垃圾收集的主要区域（\"gc","本地方法不是用","本地方法栈","栈进行动态扩展时如果无法申请到足够内存，会抛出","每个","永久代（perman","深入理解","版）","用于存放已被加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。","直接内存","程序计数器","第一章","类的","类，它可以使用","老年代（old","虚拟机把它当成永久代来进行垃圾回收，jdk","虚拟机栈","虚拟机栈中入栈和出栈的过程。","虚拟机栈内存大小：","虚拟机栈类似，它们之间的区别只不过是本地方法栈为本地方法服务。","虚拟机：jvm","记录正在执行的虚拟机字节码指令的地址（如果正在执行的是本地方法则为空）。","该区域可能抛出以下异常：","运行时常量池","运行时常量池是方法区的一部分。","运行时数据区域","这个虚拟机参数来指定一个程序的","除了在编译期生成的常量，还允许动态生成，例如","高级特性与最佳实践（第"],"javacore/jvm/jvm-gc.html":["!=","####","%。如果每次回收有多于","(mixed)]。所以年轻代和年老代在同一时间被回收。","(this.eden.size()","(v","(young)(init","(运行用户代码时间","**注意：**写作此文章时，收集极大对象时还没有被优化。因此，你应该避免创建这个大小的对象。","**注意：**区域没有必要像旧的收集器一样是保持连续的。","**（1）初始标记阶段**","**（2）g1","**（3）g1","**（4）g1","**（5）g1","+","/","//","0","0，导致无法对它们进行回收。","0，表示每次进入","1","1.5","1.7","10%","100","1m，最大","1。引用计数为","1，引用失效时计数器减","2","2000","32m，蓝色区域保持年老代对象，绿色区域保持年轻代对象。","50%或者更大的对象。它们被保存在一个连续的区域集合里。最后，最后一个类型的区域就是堆空间里没有使用的区域。","7","8:1，保证了内存的利用率达到","90","=","==",">=","args)","b/","bytecod","c++","class","classload","client","cm","cms。","cms（concurr","cms，年老代对象就地释放。它们不会被来回移动。这个空间不会被压缩除非发生","collector","concurr","concurrentcach","concurrentcache(int","concurrenthashmap","concurrenthashmap<>(size);","cpu","eden","eden;","eden、survivor、old","eden、survivor、年老代空间的逻辑表述形式。","entri","ergonomics）。","extend","failur","failure。浮动垃圾是指并发清除阶段由于用户线程继续运行而产生的垃圾，这部分垃圾只能到下一次","failure，这时虚拟机将临时启用","final","finalize()","finalize()。","first(g1)","first），是面向服务器应用的垃圾回收器。","full","fullgc","fullgc。","g1","g1回收年老代详细步骤","g1回收年轻代详细步骤","g1回收机制","g1收集器","g1（garbag","garbag","gc","gc。","gc。如果经过","gc。而","gc），便会报","gc，从而增加","gc，其触发条件非常简单，当","gc，可采用的方法为增大永久代空间或转为使用","gc，尽管这次","gc，虽然只是建议而非一定，但很多情况下它会触发","gc，调优时应尽量做到让对象在","gc：发生在年轻代上，因为年轻代对象存活时间很短，因此","gc：发生在老年代上，老年代对象和年轻代的相反，其存活时间长，因此","get","get(k","handlepromotionfailur","hotspot","implement","instanc","int","java","java.lang.class","java.lang.outofmemoryerror。为避免以上原因引起的","java.lang.outofmemoryerror，为避免以上原因引起的","java虚拟机启动时选定区域大小。java虚拟机通常会指定2000个左右的大小相等、每个大小范围在1到32m的区域。","jdk","jsp","jvm","k)","k,","log","longterm;","longterm。eden","m","main(string[]","map","map.entri","mark","mark)*","maxtenuringthreshold","minor","mode","n","new","null)","null;","obj","object","object();","objecta","objecta.inst","objecta;","objectb","objectb.inst","objectb;","old","osgi","parallel","parnew","paus","pf","phantomrefer","phantomreference(obj);","privat","public","put(k","referencecountinggc","referencecountinggc();","region","regions)*。这些区域被设计成保持标准区域大小的","region。","region。通过使用","region，时间是用户可控制的，而且停顿用户线程将大幅度提高收集效率。","rememb","return","rmi","root","scaveng","serial","server","set","set，在做可达性分析的时候就可以避免全堆扫描。","set，用来记录该","sf","size)","size;","softrefer","softreference(obj);","start","static","stop","survior","survivor","survivor。hotspot","survivor。在回收时，将","sweep","sweep），mark","system.gc()","system.gc()。","this.eden","this.eden.clear();","this.eden.get(k);","this.eden.put(k,","this.longterm","this.longterm.get(k);","this.longterm.putall(this.eden);","this.siz","tomcat","trace","tri","v","v)","v);","v;","void","weakhashmap","weakhashmap<>(size);","weakhashmap，保证了不常使用的对象容易被回收。","weakrefer","weakreference(obj);","weakreference，主要用来实现缓存。","wf","world","world暂停。为下一次年轻代垃圾回收计算eden和survivor的大小。保留审计信息有助于计算大小。类似目标暂停时间的事情会被考虑在内。","xmn）、eden","xnoclassgc","xx:+serialgc","xx:+useadaptivesizepolicy，这是一个开关参数，打开参数后，就不需要手工指定年轻代的大小（","xx:+usecmscompactatfullcollect","xx:+useconcmarksweepgc","xx:+useparallelgc","xx:+useparalleloldgc","xx:+useparnewgc","xx:cmsfullgcsbeforecompact","xx:cmsinitiatingoccupancyfract","xx:disableexplicitgc","xx:gctimeratio","xx:maxgcpausemilli","xx:maxtenuringthreshold","xx:parallelgcthread","xx:pretenuresizethreshold）等细节参数了，虚拟机会根据当前系统的运行情况收集性能监控信息，动态调整这些参数以提供最合适的停顿时间或者最大的吞吐量，这种方式称为","xx:pretenuresizethreshold，大于此值的对象直接在老年代分配，避免在","xx:survivorratio）、晋升老年代对象年龄（","{","}","“标记","一个新对象的方式来创建强引用。","一次年轻代垃圾收集之后，eden","一般包含以下内容：","一般将","上的时间不得超过","不足：","且小于","两个对象出现循环引用的情况下，此时引用计数器永远不为","个区域。最小","个垃圾收集器，连线表示垃圾收集器可以配合使用。","中","中。这阶段需要停顿线程，但是可并行执行。","中的","中的回收价值和成本进行排序，根据用户所期望的","中要求的年龄。","中还存活着的对象一次性复制到另一块","中，年龄就增加","中，而不常用的对象放入","串行","串行/并行/并发","串行收集器","串行收集器是","串行收集器是最基本、发展历史最悠久的收集器。","串行收集器采用单线程","为一个对象设置虚引用关联的唯一目的就是能在这个对象被收集器回收时收到一个系统通知。","为了修正在并发标记期间因用户程序继续运作而导致标记产生变动的那一部分标记记录，虚拟机将这段时间对象变化记录在线程的","为对象定义年龄计数器，对象在","主要不足是只使用了内存的一半。","主要是对常量池的回收和对类的卸载。","之前，虚拟机先检查老年代最大可用的连续空间是否大于年轻代所有对象总空间，如果条件成立的话，那么","之间）上来看是基于“复制”算法实现的，这意味着运行期间不会产生内存空间碎片。","也同样适合大尺寸堆内存的垃圾收集，官方推荐使用","也是关注最短停顿时间的垃圾回收器。g1","事件，所有应用线程都会因此操作暂停。","事件：初始标记和重新标记。当年老代达到特定的占用比例时，cm","产生的碎片过多，导致无法存放浮动垃圾，jvm","仍然回收不了，那么虚拟机会抛出","从","从表到里学习","以上是","以及","以及之前版本（parallel","会产生大量不连续的内存碎片，导致无法给大对象分配内存。","会出现","会频繁执行，执行的速度一般也会比较快。","低停顿时间是以牺牲吞吐量为代价的，导致","作为","作为起始点进行搜索，能够到达到的对象都是存活的，不可达的对象可被回收。","使对象只被软引用关联","使用","使用复制算法的","依然存活，将移动到","停顿时间","停顿时间是因为","停顿时间越短就越适合需要与用户交互的程序，良好的响应速度能提升用户体验；","停顿是时间来制定回收计划。此阶段其实也可以做到与用户程序一起并发执行，但是因为只回收一部分","关于","其他收集器都是以关注停顿时间为目标，而并行收集器是以关注吞吐量（throughput）为目标的垃圾收集器。","具备如下特点：","具有四种强度不同的引用类型。","内存分配与回收策略","内存分配策略","出生并经过","分代和分区","分代收集","分配","则相对复杂，有以下条件：","初始堆空间","初始标记","初始标记是一个短暂暂停的、可达对象被标记的阶段。","初始标记：仅仅只是标记一下","利用率不够高。","加载该类的","区。年老代一个连续的空间。就地完成对象收集。除非有","区。所有达到他们的年龄阈值的对象会晋升到年老代。","区上，少数情况下也可能直接分配在老年代中。","区中相同年龄所有对象大小的总和大于","区之间的大量内存复制。","区分配，当","区和","区和两个","区和其中一个","区域。另外，有第四种类型的区域叫做*极大区域(humong","区域。如果达到晋升总阈值，对象会晋升到年老代区域。","区复制活跃对象到另一个","区或者年老代区域。","区的比例（","区空间不够时，发起","区空间满时，就将触发一次","区被清空。","单","单线程意味着复杂度更低、占用内存更少，垃圾回收效率高；但同时也意味着不能有效利用多核优势。事实上，串行收集器特别适合堆内存不高、单核甚至双核","参数来控制是否对类进行卸载。","参数来设置线程数。","参考资料","参考资料：","又称为幽灵引用或者幻影引用。一个对象是否有虚引用的存在，完全不会对其生存时间构成影响，也无法通过虚引用取得一个对象实例。","及以前的永久代空间不足","及以前，hotspot","发生两次","可以使用","可以直接对年轻代和永久代一起回收。","可以确认是安全的；如果不成立的话虚拟机会查看","可以通过","可能出现","可达性分析算法","可预测的停顿：能让使用者明确指定在一个长度为","后的默认年轻代收集器。","后空间仍然不足，则抛出","后，来一次带压缩的（默认为","吞吐量","吞吐量优先","吞吐量低","吞吐量关注在特定的时间周期内一个应用的工作量的最大值。对关注吞吐量的应用来说长暂停时间是可以接受的。由于高吞吐量的应用关注的基准在更长周期时间上，所以快速响应时间不在考虑之内。","否则不会压缩。","和","和使用过的那一块","响应速度优先","回收年老代详细步骤","回收年轻代详细步骤","回收机制","因为方法区主要存放永久代对象，而永久代对象的回收率比年轻代差很多，因此在方法区上进行回收性价比不高。","图片中的颜色表明了哪个区域被关联上什么角色。活跃对象从一个区域疏散（复制、移动）到另一个区域。区域被设计为并行的方式收集，可以暂停或者不暂停所有的其它用户线程。","在","在之前阶段没有被标记的对象会被就地释放。不进行压缩操作。","在发生","在后台运算而不需要太多交互的任务","在大量使用反射、动态代理、cglib","在整个过程中耗时最长的并发标记和并发清除过程中，收集器线程都可以与用户线程一起工作，不需要进行停顿。","在注重吞吐量以及","垃圾回收时间以及回收所获得的空间（这两个值是通过过去回收的经验获得），并维护一个优先列表，每次根据允许的收集时间，优先回收价值最大的","垃圾收集","垃圾收集器","垃圾收集器入门","垃圾收集器既可以回收年轻代内存，也可以回收老年代内存。而其他垃圾收集器只能针对特定代的内存进行回收。","垃圾收集器的性能指标主要有两点：","垃圾收集性能","垃圾收集时间)","垃圾收集算法","堆中不存在该类的任何实例。","堆分为年轻代和老年代。","堆和方法区进行。","堆空间分配**","堆空间是一个被分成许多固定大小区域的内存块。","堆空间是一块单独的内存空间被分割成多个区域。","堆空间被分割成大约","堆被分为年轻代、老年代和永久代，其它收集器进行收集的范围都是整个年轻代或者老生代，而","复制","复制算法","多","大多数情况下，对象在年轻代","大对象是指需要连续内存空间的对象，最典型的大对象是那种很长的字符串以及数组。","如果不计算维护","如果发现空区域(“x”标示的)，在重新标记阶段它们会被马上清除掉。当然，决定活性的审计信息也在此时被计算。","实现","实现，longterm","实际上，这些区域被映射成","对于","对象死了吗","对象没有在任何地方被引用，也就无法在任何地方通过反射访问该类方法。","对象的内存分配，也就是在堆上分配。主要分配在年轻代的","对象的引用对象所在的","将内存划分为大小相等的两块，每次只使用其中一块，当这一块内存用完了就将还存活的对象复制到另一块上面，然后再把使用过的内存空间进行一次清理。","将需要回收的对象进行标记，然后清理掉被标记的对象。","就使用了","岁，增加到一定年龄则移动到老年代中。","已经被回收。","年轻代","年轻代/老年代","年轻代使用：复制算法","年轻代内存是由一组非连续的区域组成。这使得需要重调大小变得容易。","年轻代分割成一个","年轻代回收的尾声**","年轻代垃圾回收是","年轻代垃圾收集使用多线程并行回收。","年轻代垃圾收集如何工作","年轻代垃圾收集肩负着活跃对象初始标记的任务。在日志文件中被标为*gc","年轻代被标为浅绿色，年老代被标记为蓝色。如果你的应用已经运行了一段时间，cm","并发","并发指的是用户线程和","并发收集","并发标记","并发标记寻找活跃对象在应用连续执行时。","并发标记清除收集器","并发标记清除收集器是以获取最短停顿时间为目标。","并发标记：进行","并发清除","并发清除：回收在标记阶段被鉴定为不可达的对象。不需要停顿。","并行","并行收集器","并行收集器与串行收集器工作模式相似，都是","并行收集器是","应用","开启后，年轻代使用","开启选项：","开始工作，采用单线程方式回收空间并整理内存。","开始执行。","引用类型","引用计数算法","强引用：使用","当一个对象可被回收时，如果需要执行该对象的","很少执行，而且执行速度会比","总结","慢很多。","或者","或者年老代区域。","才能晋升老年代，如果在","打开此开关后，使用","执行","把年轻代和老年代划分成多个大小相等的独立区域（region），年轻代和永久代不再物理隔离。","担保失败，则会触发","指的是标记","控制最大垃圾收集停顿时间，收集器将尽可能保证内存回收时间不超过设定值。","收集不能像其它收集器那样等待老年代快满的时候再回收。","收集器","收集器。","收集器也是使用","收集器会再次进入重新设置阶段，等待下一次垃圾收集时机的到来。","收集器其实是","收集器具有以下缺点：","收集器工作的内存占用百分，如果这个值设置的太大，导致预留的内存不够存放浮动垃圾，就会出现","收集器提供了两个参数用于精确控制吞吐量，分别是：","收集器搭配使用。","收集器收集几十兆甚至一两百兆的年轻代停顿时间可以控制在一百多毫秒以内，只要不是太频繁，这点停顿是可以接受的。","收集器是一种以获取最短停顿时间为目标的收集器。","收集器来替代","收集器清理碎片。","收集器的后备预案，在并发收集发生","收集器的多线程版本。","收集器的老年代版本，也是给","收集器的老年代版本，使用多线程和","收集器的运作大致可划分为以下几个步骤：","收集器组合来进行内存回收。","收集器要进行","收集器运行步骤如下：","收集器运行示意图","收集器还提供了一个参数","收集器配合工作。","收集器默认开启的线程数量与","收集器，只有它能与","收集器，如果","收集器；老年代使用","收集算法","数量相同，可以使用","整理","整理”","整理”算法实现的收集器，从局部（两个","整理，在回收的同时还会对内存进行压缩。并行收集器适合对吞吐量要求远远高于延迟要求的场景，并且在满足最差延时的情况下，并行收集器将提供最佳的吞吐量。","方式，只是暂停时并行地进行垃圾收集。并行收集器年轻代采用复制算法，老年代采用标记","方法区中的常量引用的对象","方法区中类静态属性引用的对象","方法区的回收","方法，那么就有可能通过在该方法中让对象重新被引用，从而实现自救。","无法处理浮动垃圾","无论是通过引用计算算法判断对象的引用数量，还是通过可达性分析算法判断对象的引用链是否可达，判定对象是否可被回收都与引用有关。","旧的垃圾收集器（串行的：serial，并行的：parallel，并发标记清除：cms）都把堆结构化为三个部分：年轻代、年老代和固定大小的永久代。","时使用。","时开启内存碎片的合并整理，内存整理的过程是无法并发的，空间碎片问题没有了，但是停顿时间不得不变长了。","时当前的浮动垃圾过多导致暂时性的空间不足触发","时才能进行回收。由于浮动垃圾的存在，因此需要预留出一部分内存，意味着","时都要进行碎片整理）。","时间，尽快完成程序的运算任务，主要适合在后台运算而不需要太多交互的任务。","明显的区域可以被分配成","是","是有风险的；如果小于，或者","最后，cm","最后，在重新标记阶段，寻找在之前并发标记阶段中丢失的对象。","最大的特点是引入分区的思路，弱化了分代的概念，合理利用垃圾收集各个周期的资源，解决了其他收集器甚至","最终标记","最近晋升的对象以深蓝色显示在上图中，绿色的对象是年轻代幸免的还没有晋升到老年代对象。","最近晋升的对象显示为深蓝色。survivor区域显示为绿色。","本地方法栈中引用的对象","来代替","来实现缓存功能。concurrentcach","来实现虚引用。","来改变触发","来禁止","标记","标记和清除过程效率都不高；","框架、动态生成","模式","模式、cm","模式下与","模式下的虚拟机使用。如果用在","模式下的虚拟机首选年轻代收集器，除了性能原因外，主要是因为除了","模式下的默认收集器。","模式下的默认收集器配置。因为在客户端模式下，分配给虚拟机管理的内存一般来说不会很大。serial","模式下，它有两大用途：","正因为循环引用的存在，因此","此方法的调用是建议虚拟机进行","每个","毫秒。","毫秒的时间片段内，消耗在","注意：未被标记的对象等于死亡对象","注：g1","活跃对象会被疏散（复制、移动）到一个或多个","活跃对象被复制到新的","活跃对象被疏散到","深入理解","清理","清除","清除之后","清除算法。","清除算法导致的空间碎片，往往出现老年代空间剩余，但无法找到足够大连续空间来分配当前对象，不得不提前触发一次","清除阶段之后，你可以看到大量内存被释放。你还可以注意到没有进行压缩操作。","版）","特点","环境下的","环境时在","现在的商业虚拟机都采用这种收集算法来回收年轻代，但是并不是将内存划分为大小相等的两块，而是分为一块较大的","现在的商业虚拟机采用分代收集算法，它根据对象存活周期将内存划分为几块，不同块采用适当的收集算法。","用来定义年龄的阈值。","的","的众多缺陷。java","的信息、常量、静态变量等数据，当系统中要加载的类、反射的类和调用的方法较多时，永久代可能会被占满，在未配置为采用","的后备预案","的场合。","的场景都需要虚拟机具备类卸载功能，以保证不会出现内存溢出。","的堆看起来应该是这个样子。对象分散在年老代区域里。","的大小比例默认为","的对象可被回收。","的对象存活，那么一块","的年老代收集","的年轻代**","的年轻代回收做以下总结：","的年轻代收集**","的情况下也会执行","的操作，g1","的数据合并到","的整数）。","的方式进行收集。当内存不足时，串行","的析构函数，用来做关闭外部资源等工作。但是","的概念，从而将原来的一整块内存空间划分成多个的小空间，使得每个小空间可以单独进行垃圾回收。这种划分方法带来了很大的灵活性，使得可预测的停顿时间模型成为可能。通过记录每个","的触发条件","的过程中同时有对象要放入老年代，而此时老年代空间不足（有时候“空间不足”是","的过程，它在整个回收过程中耗时最长，不需要停顿。","的频率，也即增加了间歇性停顿的次数。因此强烈建议能不使用此方法就不要使用，让虚拟机自己去管理它的内存。可通过","目标","直接设置吞吐量大小的（值为大于","程序计数器、虚拟机栈和本地方法栈这三个区域属于线程私有的，只存在于线程的生命周期内，线程结束之后也会消失，因此不需要对这三个区域进行垃圾回收。垃圾回收主要是针对","空的区域被清除和回收掉。所有区域的活性在此时计算。","空间上，最后清理","空间和两块较小的","空间和其中一块","空间就不够用了，此时需要依赖于老年代进行分配担保，也就是借用老年代的空间存储放不下的对象。","空间整合：整体来看是基于“标记","空间的一半，则年龄大于或等于该年龄的对象可以直接进入老年代，无需等到","空间，每次使用","第二章","等","等方式可以做的更好，并且该方法运行代价高昂，不确定性大，无法保证各个对象的调用顺序，因此最好不要使用","筛选回收","算法","算法。","类似","类来创建软引用。","类来实现弱引用。","类的卸载条件很多，需要满足以下三个条件，并且满足了也不一定会被卸载：","系统服务端上的","线程同时运行。","经常出现大对象会提前触发垃圾收集以获取足够的连续空间分配给大对象。","给对象添加一个引用计数器，当对象增加一个引用时计数器加","继承自","缩短停顿时间是以牺牲吞吐量和年轻代空间来换取的：年轻代空间变小，垃圾回收变得频繁，导致吞吐量下降。","老年代","老年代使用：标记","老年代空间不足的常见场景为前文所讲的大对象直接进入老年代、长期存活的对象进入老年代等，当执行","而导致程序不能工作的时间长度。","而高吞吐量则可以高效率地利用","能直接关联到的对象，速度很快，需要停顿。","自适应的调节策略（gc","虚拟机不适用引用计数算法。","虚拟机中的","虚拟机中的方法区是用永久代实现的，永久代中存放的为一些","虚拟机使用该算法来判断对象是否可被回收，在","虚拟机并不是永远地要求对象的年龄必须达到","虚拟机栈中引用的对象","虚拟机的","虚拟机：jvm","被弱引用关联的对象一定会被垃圾收集器回收，也就是说它只能存活到下一次垃圾收集发生之前。","被强引用关联的对象不会被垃圾收集器回收。","被软引用关联的对象，只有在内存不够的情况下才会被回收。","被选择的区域已经被回收和压缩到图中显示的深蓝色区和深绿色区中。","让所有存活的对象都向一端移动，然后直接清理掉端边界以外的内存。","设置不允许冒险，那这时也要改为进行一次","设置值是否允许担保失败，如果允许那么就会继续检查老年代最大可用的连续空间是否大于历次晋升到老年代对象的平均大小，如果大于，将尝试着进行一次","设置停顿标识，待所有线程都进入安全点（safepoint）时，应用线程暂停，串行","诞生以前）中与","该类对应的","该类所有的实例都已经被回收，也就是","详解","调用","资源敏感的场合，都可以优先考虑","软引用：使用","运行用户代码时间","这个方法使重调区域大小变得很容易，按需把它们调大或调小。","这是一个stop","这类频繁自定义","适用场景","选择活性最低的区域，这些区域能够以最快的速度回收。然后这些区域会在年轻代垃圾回收过程中被回收。在日志中被指示为[gc","通过","通过引入","都有一个","配合","采取的是分代缓存，经常使用的对象放入","里面，最终标记阶段需要把","重新标记：为了修正并发标记期间因用户程序继续运作而导致标记产生变动的那一部分对象的标记记录，需要停顿。","错误，并触发","阶段被回收、让对象在年轻代多存活一段时间以及不要创建过大的对象及数组。","集中在互联网站或","需要老年代的内存空间作担保，如果出现了","面向服务端应用，将来替换","首先对各个","高级特性与最佳实践（第","（1）cm","（1）g1","（1）堆空间被分割为三块空间","（2）cm","（2）年老代收集","（2）并发标记阶段","（3）年老代收集","（3）年轻代收集","（3）重新标记阶段","（4）复制/清理阶段","（4）年轻代回收之后","（5）复制/清理阶段之后","（一）对象优先在","（一）强引用","（一）调用","（三）弱引用","（三）空间分配担保失败","（三）长期存活的对象进入老年代","（二）大对象直接进入老年代","（二）老年代空间不足","（二）软引用","（五）concurr","（五）空间分配担保","（四）jdk","（四）动态对象年龄判定","（四）虚引用","，此时使用","，用于在","，用于设置执行多少次不压缩的"],"javacore/jvm/jvm-class-loader.html":["!=","\".class\";","((bytesnumread","()","()）不同，不需要显式的调用父类的构造器。虚拟机会自动保证在子类的","(c","(classdata","(classnotfoundexcept","(getclassloadinglock(name))","(ioexcept","(parent","(resolve)","+","...","//","0","0,","0;","0。","1)","1.7","123;","123。","1;","2","2;","2。","3","4","4096;","5","6","7","8","=","==","\\lib","\\lib\\ext","a;","abstract","alreadi","appclassloader（sun.misc.launcher\\$appclassloader）实现的。由于这个类加载器是","applet。","args)","b","bao","baos.tobytearray();","baos.write(buffer,","boolean","buffer","buffers","byte[]","byte[buffersize];","bytearrayoutputstream","bytearrayoutputstream();","bytesnumread);","bytesnumread;","c","c;","catch","check","class","class.","classdata","classdata,","classdata.length);","classload","classloader）","classname)","classname.replace('.',","classnametopath(classname);","classnametopath(str","classnotfoundexcept","classnotfoundexception();","classnotfoundexception(name);","classnotfoundexception，此时尝试自己去加载。","classpath","defineclass()","defineclass(name,","deleg","e)","e.printstacktrace();","equals()","extclassloader(sun.misc.launcher\\$extclassloader)实现的。它负责将","extend","false);","file.separatorchar","file.separatorchar)","fileinputstream(path);","filesystemclassload","filesystemclassloader(str","final","find","findbootstrapclassornull(name);","findclass","findclass()","findclass(name);","findclass(str","findloadedclass(name);","first,","found","found,","getclassdata(name);","getclassdata(str","getsystemclassloader()","in","inputstream","ins.read(buffer))","instanceof","int","invok","jar、ear、war","java","java.ext.dir","java.lang.class","java.lang.classload","java.lang.classloader，用于加载文件系统上的类。它首先根据类的全名在文件系统上查找类的字节代码文件（.class","java.lang.invoke.methodhandl","java.lang.object","java.lang.object。","java.lang.reflect","java.lang.reflect.proxi","jdk","jsp","jvm","lib","load","loadclass()","loadclass(name,","loadclass(str","loader","main()","main(string[]","model）。该模型要求除了顶层的启动类加载器外，其余的类加载器都应有自己的父类加载器。这里类加载器之间的父子关系一般通过组合（composition）关系来实现，而不是通过继承（inheritance）的关系实现。","name)","name,","netweaver）可以选择把程序安装到数据库中来完成程序代码在集群间的分发。","new","new、getstatic、putstatic、invokestat","non","null","null)","null;","number），它的唯一作用是确定这个文件是否为一个能被虚拟机接收的","object","object。","order","parent","parent.loadclass(name,","parent;","path","privat","protect","proxygenerator.generateproxyclass","public","ref_getstatic,","ref_invokestat","ref_putstatic,","references）","reference）","resolve)","resolveclass(c);","return","rootdir","rootdir)","rootdir;","rt.jar","rt.jar，名字不符合的类库即使放在","sap","sca","static","still","string","sub","superclass","superclass[10];","superclass[]","synchron","system.out.print(i);","system.out.println(constclass.helloworld);","system.out.println(sub.b);","system.out.println(subclass.value);","test","this.rootdir","throw","thrown","tri","true。","true，也包括使用","valu","version）。","version）；第","void","xbootclasspath","zip","{","}","一个类加载器首先将类加载请求传送到父类加载器，只有当父类加载器无法完成类加载请求时才尝试加载。","下图展示的类加载器之间的层次关系，称为类加载器的双亲委派模型（parent","与类的构造函数（或者说实例构造器","两个类相等：类本身相等，并且使用同一个类加载器进行加载。这是因为每一个类加载器都拥有一个独立的类名称空间。","个字节存储的是","个字节是主版本号（major","个字节是次版本号（minor","个字节称为魔数（magic","个阶段。","个阶段的顺序是确定的，类的加载过程必须按照这种顺序按部就班地开始。而解析过程在某些情况下可以在初始化阶段之后再开始，这是为了支持","中定义","中的","中，如果编写另外一个","中，就是用了","中，程序可以编译通过。因为双亲委派模型的存在，所以在","主动引用","从","从数据库读取，这种场景相对少见，例如有些中间件服务器（如","从网络中获取，这种场景最典型的应用是","从表到里学习","代替即可。","以上","以下是抽象类","优先级更高，因为","优先级更高，因为程序中所有的","位字节为基础单位的二进制流。","使得","使用","使用的是启动类加载器，而","使用的是应用程序类加载器。正因为","使用（using）","例如","修饰、已在编译期把结果放入常量池的静态字段除外）的时候；以及调用一个类的静态方法的时候。","修饰的变量，准备阶段为类变量分配内存并设置初始值，使用的是方法区的内存。","值，例如下面的类变量","元数据验证","先检查类是否已经加载过，如果没有则让父类加载器去加载。","关键字做对象所属关系判定结果为","关键字实例化对象的时候；读取或设置一个类的静态字段（被","其中二进制字节流可以从以下方式中获取：","准备（preparation）","初始值一般为","初始化时机","初始化阶段才真正开始执行类中的定义的","初始化（initialization）","加载、验证、准备、初始化和卸载这","加载是类加载的一个阶段，注意不要混淆。","加载过程完成以下三件事：","加载（loading）","包的方法对类进行反射调用的时候，如果类没有进行初始化，则需要先触发其初始化。","包读取，这很常见，最终成为日后","卸载（unloading）","参数所指定的路径中的，并且是虚拟机识别的（仅按照文件名识别，如","参考资料","双亲委派模型","发生在虚拟机将符号引用转换为直接引用的时候，对类自身以外（常量池中的各种符号引用）的信息进行匹配性校验。","名称索引","启动类加载器（bootstrap","和第","在内存中生成一个代表这个类的","在准备阶段，类变量已经赋过一次系统要求的初始值，而在初始化阶段，根据程序员通过程序制定的主观计划去初始化类变量和其它资源。","块）中的语句合并产生的，编译器收集的顺序由语句在源文件中出现的顺序决定。特别注意的是，静态语句块只能访问到定义在它之前的类变量，定义在它之后的类变量只能赋值，不能访问。例如以下代码：","堆中。（实例化不是类加载的一个过程，类加载发生在所有实例化操作之前，并且类加载只进行一次，实例化可以进行多次）","如文本字符串、声明为","如果类变量是常量，那么会按照表达式来进行初始化，而不是赋值为","字段在","字段数据类型（基本类型、对象、数组）","字段的名称和描述符","字段表用于描述接口或者类中声明的变量。字段包括类级变量以及实例级变量，但不包括在方法内部声明的局部变量。包含的信息如下：","字段表集合","字段访问标志","字节码验证","字面量","存放在","实例变量不会在这阶段分配内存，它将会在对象实例化时随着对象一起分配在","实例最后的解析结果为","实现","实现了双亲委派模型的逻辑，因此自定义类加载器一般不去重写它，而是通过重写","实现类的加载动作。在","对字节码描述的信息进行语义分析，以保证其描述的信息符合","对象的","对象，作为方法区这个类的各种数据的访问入口。","将这个字节流所代表的静态存储结构转化为方法区的运行时存储结构。","属性表集合","属性计数器","属性集合","常量在编译阶段会存入调用类的常量池中，本质上并没有直接引用到定义常量的类，因此不会触发定义常量的类的初始化。","常量池","常量池主要存放两类常量：","常量池之后，紧接着的两个字节代表访问标志，这个标志用于识别一些类或者接口的访问信息，包括：这个","并发可见性（volatile）","应用程序类加载器（applic","应用程序都是由以上三种类加载器相互配合进行加载的，如果有必要，还可以加入自己定义的类加载器。","应用，即由","当使用","当初始化一个类的时候，如果发现其父类还没有进行过初始化，则需要先触发其父类的初始化。","当父类加载器加载失败时抛出","当虚拟机启动时，用户需要指定一个要执行的主类（包含","或者被","扩展类加载器（extens","接口中不可以使用静态语句块，但仍然有类变量初始化的赋值操作，因此接口与类一样都会生成","描述符索引","整个","文件。","文件是一组以","文件本质上就是一张表，由下表中的数据项组成。","文件格式的规范，并且能被当前版本的虚拟机处理。","文件格式验证","文件生成对应的","文件由类索引、父类索引和接口索引集合这","文件的头","文件的字节流中包含的信息符合当前虚拟机的要求，并且不会危害虚拟机自身的安全。","文件的版本","文件的版本号：第","文件），然后读取该文件内容，最后通过","方法、isassignablefrom()","方法、isinstance()","方法。","方法。但接口与类不同的是，执行接口的","方法。只有当父接口中定义的变量使用时，父接口才会初始化。另外，接口的实现类在初始化时也一样不会执行接口的","方法不需要先执行父接口的","方法中有耗时的操作，就可能造成多个线程阻塞，在实际过程中此种阻塞很隐蔽。","方法先执行，也就意味着父类中定义的静态语句块要优于子类的变量赋值操作。例如以下代码：","方法具有以下特点：","方法在多线程环境下被正确的加锁和同步，如果多个线程同时初始化一个类，只会有一个线程执行这个类的","方法完毕。如果在一个类的","方法对于类或接口不是必须的，如果一个类中不包含静态语句块，也没有对类变量的赋值操作，编译器可以不为该类生成","方法已经执行结束。因此虚拟机中第一个执行","方法来把这些字节代码转换成","方法的名称和描述符","方法的类肯定为","方法的过程。","方法的返回值，因此一般称为系统类加载器。它负责加载用户类路径（classpath）上所指定的类库，开发者可以直接使用这个类加载器，如果应用程序中没有自定义过自己的类加载器，一般情况下这个就是程序中默认的类加载器。","方法的返回结果为","方法的那个类），虚拟机会先初始化这个主类；","方法表包含的信息如下：","方法表集合","方法访问标志","方法运行之前，父类的","方法运行过程如下：","方法，其它线程都会阻塞等待，直到活动线程执行","是由编译器自动收集类中所有类变量的赋值动作和静态语句块（static{}","是类还是接口；是否定义为","是自定义类加载器，继承自","条指令的场景是：使用","格式的基础。","此类加载器负责将存放在","每个","比在","深入理解","版）","由于父类的","由其他文件生成，典型场景是","的代理类的二进制字节流。","的代码片段，其中的","的值，也就是","的动态绑定。","的动态语言支持时，如果一个","的子类，其中包含了数组的属性和方法。","的常量值。","的方法句柄，并且这个方法句柄所对应的类没有进行过初始化，则需要先触发其初始化；","的类并放到","目录中也不会被加载）类库加载到虚拟机内存中。启动类加载器无法被","目录中的，或者被","直接引用可以是直接指向目标的指针、相对偏移量或是一个能间接定位到目标的句柄。","直接引用（direct","种场景中的行为称为对一个类进行主动引用。除此之外，所有引用类的方式都不会触发初始化，称为被动引用。被动引用的常见例子包括：","程序代码。初始化阶段即虚拟机执行类构造器","程序直接引用，用户在编写自定义类加载器时，如果需要把加载请求委派给启动类加载器，直接使用","符号引用","符号引用以一组符号来描述所引用的目标，符号可以是任何形式的字面量，只要使用时能无歧义地定位到目标即可。","符号引用验证","符号引用（symbol","第三章","等。","类。","类与类加载器","类初始化时机","类加载器","类加载器分类","类加载机制","类加载过程","类加载过程是指加载、验证、准备、解析和初始化这","类变量是被","类和接口的全限定名","类型；如果是类的话，是否被声明为","类型；是否定义为","类文件结构","类是在运行期间动态加载的。","类生命周期","类的完整生命周期包括以下几个阶段：","类的实例。","类的方法","类索引、父类索引和接口索引集合","类随着它的类加载器一起具有一种带有优先级的层次关系，从而使得基础类得到统一。","系统变量所指定路径中的所有类库加载到内存中，开发者可以直接使用扩展类加载器。","紧接着魔数的","给变量赋值可以正常编译通过","而不是","能否被序列化（transient）","自定义类加载器实现","虚拟机会保证一个类的","虚拟机外部实现，以便让应用程序自己决定如何去获取所需要的类。","虚拟机规范中并没有强制约束何时进行加载，但是规范严格规定了有且只有下列五种情况必须对类进行初始化（加载、验证、准备都会随着发生）：","虚拟机：jvm","被初始化为","被动引用","解析阶段目标是将常量池的符号引用替换为直接引用的过程。","解析（resolution）","访问标志","语言规范的要求。","输出结果是父类中的静态变量","运行时计算生成，这种场景使用得最多得就是动态代理技术，在","这个类加载器是由","这句编译器会提示“非法向前引用”","这四条字节码指令时，如果类没有进行过初始化，则必须先触发其初始化。最常见的生成这","这里的相等，包括类的","通过一个类的全限定名来获取定义此类的二进制字节流。","通过子类引用父类的静态字段，不会导致子类初始化。","通过数据流和控制流分析，确保程序语义是合法、符合逻辑的。","通过数组定义来引用类，不会触发此类的初始化。该过程会对数组类进行初始化，数组类是一个由虚拟机自动生成的、直接继承自","遇到","都是这个","链接（linking）","项数据来确定这个类的继承关系。","验证字节流是否符合","验证是链接阶段的第一步，它的目标是确保","验证（verification）","高级特性与最佳实践（第","魔数与","（一）加载","（一）工作过程","（三）准备","（三）实现","（二）好处","（二）验证","（五）初始化","（四）解析"],"javacore/jvm/jvm-performance.html":["\"%x\\n\"","\"]","\"catalina","\"compilerthread0\"","\"finalizer\"","\"low","\"main\"","\"pollintervalretryschedulerthread\"","\"refer","\"signal","\"vm","$","%cpu","%cpu(s):","%mem","(0.0mb)","(1.25mb)","(1.7351913452148438mb)","(20.0mb)","(3.2665634155273438mb)","(3.7486572265625mb)","(46.11457824707031mb)","(5.1263427734375mb)","(5.1875mb)","(5.608436584472656mb)","(53.375mb)","(57.452308654785156mb)","(59.1875mb)","(7.2604217529296875mb)","(8.875mb)","(80.0mb)","(84.0mb)","(a","(interruptedexcept","(maxprocessmemori","(parking)","(threadstacksize)","+","...","./jmap","/","//","/home/xxx/dump.hprof","0","0.0","0.0%","0.021t","0.0668480","0.1","0.3","0.398","0.4","0.6763541","00:02:10","05t10:43:18.093+0800:","05t10:43:18.160+0800:","07","1","1.监控","1/10。调小这个参数将增大","10","10642","10738k","10gb","11014","11315","11589","120304","12379","12379,","12545","1262","128m","13.19,","13.6","1310720","136447k","147186k","14:20:09","14:47","15","159:08.40","16","17","17.0","17592186044415","1819480","187:52.59","187:52.78","187:53.36","187:54.79","187:55.08","187:55.25","187:55.61","187:55.76","1gb","1s），将可能出现超时错误。","2","2.1","2.分析监控结果后决定是否需要优化","20","2000","2000m","2016","20447232","20971520","21711","21742","23353","24","24064.0","24868","25.395:","25.462:","2500","25816","26112.0","27.299g","274931k","278036","28920","2:12.46","2:20.55","2:56,","2:8,一个","2gb","3","3.6","3.9","3.设置","3/8。使用","320","32505008","32783044","3425240","36.80634834397007%","371093k","388518.3","3930752","4.分析结果","40","4032576","42724.7","434176.0","4497428","48354640","48:58.60","5.如果结果令人满意，将参数应用到所有服务器上并结束","51.8","52.1","524288.0","53.1","53.7","5375360","54.4","54.7","5439488","54ee","54ee，下面会用到。","55967744","564224.0","5692\"","57.761608714788736%","5880872","5:54.10","6","6.1","6.417","6.5","6.815","60243112","611","62062592","64","64m","64m。使用","65536)来做到。","6562.5","6735","6795","6797","6798","6799","6800","6801","6802","6803","6804","6807","6808","6974","6991","6:32.06","6:55.48","7.0","7.76,","7.82","70","70.1","7172","7362","7613104","76274.5","7:42.72","8","8.4","83886080","85411k","86.39733629427693%","88080384","8:00.32","8，则两个","90.4","9146","9306112","97.06831451706046%",":","=",">0k(274944k)]",">10738k(274944k)]",">140379k(302592k)]",">140379k(577536k)",">147186k(450048k),",">85376k(171008k)],","[\"","[0x00000000..0x00000000]","[0x00000000..0xfb5fd798]","[0x00007f3ae08e3000]","[0x00007f94c6eda000]","[0xfbeed000..0xfbeeddb8]","[0xfbf4a000..0xfbf4aa38]","[args]","[count]","[dumpfile]","[full","[gc","[hostid]","[interval]","[option]","[options]","[paroldgen:","[pspermgen:","[psyounggen:","[root@chanc","[server","[times:","address","allocation.","analysi","anlysi","arg","args)","arraylist","arraylist();","attach","average:","b","b16","bin]#","bit）限制；","bt","buffer","b，当前只把","c","c/c++的堆栈","cach","capac","catch","class","class，使","close()关闭链接","cm","command","compil","condit","configur","configuration:","core","cpu","creat","daemon","datasource.getconnection()建立链接，必须通过","days,","dcom.sun.management.jmxremote.authenticate=fals","dcom.sun.management.jmxremote.port","dcom.sun.management.jmxremote.port=18888","dcom.sun.management.jmxremote.ssl=fals","dcom.sun.management.jmxremote=tru","debug","debugg","detected.","detector\"","dispatcher\"","djava.awt.headless=tru","djava.compiler=non","djava.rmi.server.hostnam","djava.rmi.server.hostname=127.0.0.1","dsun.rmi.dgc.client.gcinterval=600000","dsun.rmi.dgc.server.gcinterval=600000","dump","dump.hprof","dump:live,format=b,file=dump.hprof","dump）是一个用来检查","dump）来消除导致异常的原因。","dump，jhat","ec","eden","ef","eu","exceed","except","exec","execut","f","fgc","fgct","file","final","finalizerinfo","flag","for(int","free","free,","free.","full","g1","gc","gct","gcutil","gc「译」","gc，就是对象在","gener","getidlewaittime();","getlog().info(\"thread","getname()","grep","grep，如下：","h","handler\"","hashmap、vector","headless","heap","heapdump","hi,","histo","hostid","hostnam","hotspot","hp","http/html","https://my.oschina.net/feichexia/blog/196575","hung","i=0;i","id","id,","id@]remot","idl","id：","if(!halted.get())","ignore)","inf/lib","info)，用于实时查看和调整虚拟机运行参数。","integ","ip","jam","jar","jar，用不上的","java","java.lang.object.wait(n","java.lang.object.wait(object.java:474)","java.lang.outofmemoryerror:","java.lang.ref.finalizer$finalizerthread.run(finalizer.java:159)","java.lang.ref.reference$lock)","java.lang.ref.reference$referencehandler.run(reference.java:116)","java.lang.ref.referencequeue$lock)","java.lang.ref.referencequeue.remove(referencequeue.java:116)","java.lang.ref.referencequeue.remove(referencequeue.java:132)","java.lang.thread.run(thread.java:745)","java.lang.thread.state:","java.util.arraylist.add(arraylist.java:440)","java.util.arraylist.ensurecapacityinternal(arraylist.java:208)","java.util.arraylist.ensureexplicitcapacity(arraylist.java:216)","java.util.arraylist.grow(arraylist.java:242)","java.util.arrays.copyof(arrays.java:2219)","java.util.arrays.copyof(arrays.java:2245)","java.util.concurrent.linkedblockingqueue.poll(linkedblockingqueue.java:467)","java.util.concurrent.locks.abstractqueuedsynchronizer$conditionobject)","java.util.concurrent.locks.abstractqueuedsynchronizer$conditionobject.awaitnanos(abstractqueuedsynchronizer.java:2082)","java.util.concurrent.locks.locksupport.parknanos(locksupport.java:226)","java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)","java.util.concurrent.threadpoolexecutor.gettask(threadpoolexecutor.java:1068)","java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1130)","java_opts=\"","javaheapspace(integ","java，并且这些内存无法省下，那么就无法进行","jconsol","jdk","jdk7","jdk8","jhat","jhat(jvm","jinfo","jinfo(jvm","jmap","jmm","jmx","jp","jps(jvm","jsp","jstack","jstat","jstat(jvm","jvm","jvmmemori","jvmmemory，而是系统中剩下的内存：","jvm内存","jvm（4）：jvm","kib","l","leak）还是内存溢出（memori","lfp","lib","limit","linux","load","loader","local","lock","long","lvmid","m","main","main()","main(string[]","map。","mat(memori","maxheapfreeratio","maxheaps","maxnews","maxperms","maxprocessmemori","mb","mem","mem:","memori","meta","metaspace)中，元数据并不在虚拟机中，使用的是本地的内存。使用","method)","minheapfreeratio","minor","monitoring)，是用于监视虚拟机运行时状态信息的命令，它可以显示出虚拟机进程中的类装载、内存、垃圾收集、jit","mp","myapp","myapp.jar","myapp：","nativ","new","newratio","newsiz","ni","ni,","nid","nid=0x2","nid=0x3","nid=0x4","nid=0x45cd","nid=0x5","nid=0x54e","nid=0x6","nid=0x7","nid=0x8","now","now;","number","o","object","object.wait()","object.wait()。","object.wait()，我找了下我的代码，定位到下面的代码：","oc","old","oldsiz","omitstacktraceinfastthrow","oom","oom();","oom.javaheapspace(sum1);","oom.javaheapspace(sum2);","oom.memorytotal();","openlist","option","options，这里仅列举常用参数。","oracl","org.apache.catalina.startup.bootstrap","org.apache.tomcat.util.threads.taskqueue.poll(taskqueue.java:32)","org.apache.tomcat.util.threads.taskqueue.poll(taskqueue.java:86)","org.apache.tomcat.util.threads.taskthread$wrappingrunnable.run(taskthread.java:61)","ou","outofmemori","outofmemory(oom)分析","outofmemoryerror","outofmemoryerror:","outofmemoryerror:java","outofmemoryerror:permgen","outofmemoryerror:un","outofmemoryerror：","outofmemoryerror：un","overflow）。","overhead","p","parallel","park","parnew","pc","period","perm","perman","permgen","permsiz","permstat","pers.qingqian.study.seven.oom.javaheapspace(oom.java:36)","pers.qingqian.study.seven.oom.main(oom.java:26)","pid","pleas","pollintervalretryschedulerthread","polltaskschedulerthreadstate.idlewaiting;","pr","print","printf","prio=10","process","ps","psyounggen","pts/3","pu","public","q","queue","r","random","random();","re","real=0.07","real=0.68","reservedosmemori","reservedosmemory)","rmi","root","root@ubuntu:/#","runnabl","running,","s","s0c","s0u","s1c","s1u","schedulerthreadst","secs]","serial","server","shr","si,","siglock.wait(timeuntilcontinue)","siglock.wait(timeuntilcontinue);","sleeping,","space","space:","space，这个区域称为年老代。gc","st","stack","start","static","statist","statu","stopped,","successfully.","sum){","sum1=300000;","sum2=400000;","sun.misc.unsafe.park(n","sun.tools.jps.jp","survitor","survivor","survivorratio","swap:","sy,","synchronized(siglock)","sys=0.02,","sys=0.08,","sysprop","system.currenttimemillis();","system.getproperties()","system.out.println(\"往arraylist中加入30w内容\");","system.out.println(\"往arraylist中加入40w内容\");","task","thread","thread\"","thread(s)","thread,","threads:","threadstacks","thread。","tid","tid,","tid:","tid=0x00007f3b05013800","tid=0x00007f950043e000","tid=0x08134878","tid=0x081370f0","tid=0x08137ca0","tid=0x08142f08","tid=0x08143c58","tid=0x081465f8","tid=0x08147768","time","time+","timed_wait","timeuntilcontinu","tomcat","tool)打开。","tool)，是与","tool)，显示指定系统内所有的","top","total,","tri","unabl","up","us","us,","usage:","used,","usegcoverheadlimit","user","user,","user=0.17","user=1.75","v","verbose:gc","version","virt","visual","vm","void","wa,","wait","wait...","waiting...\");","waittim","web","xdebug","xloggc:","xloggc:$catalina_home/logs/gc.log","xm","xmn","xmn800m","xms,","xms2000m","xms和","xms，即为","xmx","xmx2000m","xmx参数通常是必须的，所以newratio的值将对","xmx和","xnoagent","xrunjdwp:transport=dt_socket,address=28888,server=y,suspend=n","xx:","xx:+heapdumponoutofmemoryerror","xx:+printgcdetail","xx:+printgctimestamp","xx:+useconcmarksweepgc","xx:+useg1gc","xx:+useparallelgc","xx:+useparnewgc","xx:+useserialgc","xx:maxmetaspaces","xx:maxnews","xx:maxperms","xx:maxpermsize=256m","xx:maxpermsize参数来进行设置，但是要记住，只有当出现outofmemoryerror错误时你才需要去设置永久代内存。","xx:maxtenuringthreshold=15","xx:maxtenuringthreshold=15\"","xx:metaspaces","xx:newratio","xx:newratio。","xx:newsiz","xx:parallelcmsthread","xx:permsiz","xx:permsize=64m","xx:permsize和","xx:survivorratio","xx:survivorratio=4","ygc","ygct","young","zombi","{","|","}","—","一般设为","上场了，它用来输出进程","上花费过多的时间（超过","下一步终于轮到","下的","下面是一个重复创建内存的示例：","不仅能生成","不输出类名、jar","不需要","中最大堆大小有三方面限制：","中有","中的jmap命令来创建。在创建文件的过程中，所有","串行垃圾回收器","为","为使用的线程数量","为新生代的大小，permsiz","为新生代空间中的","为永久代的初始大小，maxperms","为永久代的最大空间。","为释放很小空间占用大量时间时抛出；一般是因为堆太小，导致异常的原因，没有足够的内存。","主要是针对年轻代进行内存回收比较频繁，耗时短；full","之前的","也可以设置间隔固定时间来打印：","从应用程序启动到采样时","从应用程序启动到采样时发生","从而检查系统中运行的","从表到里学习","以前使用","以后把原本放在永久代的字符串常量池移出,","优化","优化。","优化。如果分析结果显示运行","优化上，但如果运行","优化之前，你需要考虑为什么你需要分配这么大的内存空间，如果你分配了","优化了。在进行","优化将是很有必要的。","优化时最常用的参数是","优化的两个目标：","优化的基本原则是：将不同的","优化的结果令人满意，就可以将参数应用到所有服务器上，并停止","优化的过程","优化的过程和大多数常见的提升性能的过程相似，下面是笔者使用的流程：","优化需要考虑的","优化，那么你需要选择一个","会对整个堆内存进行回城，耗时长，因此一般尽量减少","但是，如果你已经分配了大约","作为测试你应该知道的","你可以在互联网上搜索","你需要监控","使用","使用命令动态查看","保留的操作系统内存","信息的，class","假设应用名称为","其中[option]、[hostid]参数也可以不写。","其度量标准是缩短由于垃圾啊收集引起的停顿时间或者完全消除因垃圾收集所引起的停顿，避免应用运行时发生抖动。","典型配置","内存中的对象和数据的内存文件。该文件可以通过执行","内存创建一个","内存占用","内存泄漏常见几个情况：","内存泄漏并非指内存在物理上的消失，而是应用程序分配某段内存后，由于设计错误，失去了对该段内存的控制，因而造成了内存的浪费。","内存泄漏是指由于疏忽或错误造成程序未能释放已经不再使用的内存的情况。","内存泄漏随着被执行的次数越多","内存泄露","内存溢出时输出堆快照文件","内存给","内存规范中的唯一地址定位","内存越多，那么你能用来创建的系统线程的内存就会越少，越容易发生","内存配置","内置了一个微型的","内部类和外部模块等的引用","减少","分析","分配给堆内存的空间已经用满了。","列就是各个","初始堆大小,xmx","删除掉，多个应用公共的","功能，需要指定如下参数：","区与一个","区主要用于存放","区占整个年轻代的","区呆长一点，减少进入年老代的对象。去掉救助空间的想法是让大部分不能马上回收的数据尽快进入年老代，加快年老代的回收频率，减少年老代暴涨的可能性，这个是通过将","区和","区和救助空间","区的内存比","区的大小比值，默认是","区的比值为","区被创建后会直接被传入老年代。老年代","区被创建，随后被转移到","区，在此之后剩余的对象会被转入老年代。也有一些对象由于占用内存过大，在","区，让对象尽量在","即","即为远程","原因：","原因：jdk6","原因：jvm","原因：线程过多","参数","参数。如若不然，你还需要分析输出日志并检查分配的内存，然后需要通过不断调整","参数后就可以开始收集数据，请在收集至少","参数并分析它们的区别。","参数应用到两个及以上的服务器上然后比较它们的性能，然后将那些被证明可以提高性能或减少","参数来让虚拟机出现","参数的值","参数调优案例","参数，输出所有","参数：","参考资料","及定位分析","及更高版本中使用的","发现它的方式同内存溢出，可再加个实时观察","口令","口令只能查看到显示指定的参数，如果想要查看未被显示指定的参数的值就要使用","另外，如果通过增加老年代内存来降低","只要被执行到就会产生内存溢出。","可以看到","可非常有可能存在内存泄漏。","名和传入","后进入年老代","后，可以使用","吞吐量","启动","启动时传递给","启动时得","启动时显示指定的","命令","命令格式：","命令篇","命令，找到","和","回收前后年轻代的内存变化；paroldgen","回收前后永久区的内存变化。young","回收前后老年代的内存变化；pspermgen","回收器选择","回收日志:","因此，你需要把老年代的大小设置成一个“合适”的值。","因被","在","在下面的章节中，你将会看到上述每一步所做的具体工作。","在主程序运行期间不会对年老区进行清理，默认是","在容器中设置相关参数打印","在打印的堆栈日志文件中，tid","在检查","在被","在设置完","垃圾回收器","垃圾回收器组合","垃圾收集器流畅运行所需要的内存数量。","堆中(元空间","堆内存大小","堆内存最大限制","堆到文件，format","堆和永久代的详细信息，如当前使用率、当前使用的是哪种收集器等。","堆大小设置","堆快照（heap","堆空间初始值。","堆空间最大值。","堆空间溢出","堆详细信息","声明为静态（static）的","大小。","大小的内存并且出现了outofmemoryerror，那你就应该执行堆快照（heap","如何分析","如何合理的规划一次","如果","如果不使用这个命令，还可以使用","如果不指定","如果你决定要进行","如果开启","如果现在运行的","如果调用到本地方法的话，可以显示","如果通过减小老年代内存来减少","它是轮询任务的空闲等待代码，上面的","官方推荐年轻代占整个堆的","定位步骤：","实战","实战：找出某","实现","对应的","对象同时创建一个操作系统线程，而这个系统线程的内存用的不是","导出","将虚拟机每次垃圾回收的信息写到日志文件中，文件名由","将进入老年代的对象数量降到最低","小时后再进行结果分析。如果你足够幸运，你可能会找到系统的最佳","就会报这部分内存溢出了，需要加大内存分配，一般","就对应了前面的","就默认为当前主机或服务器。","属于","工具可以用来获得","工具还可以附属到正在运行的","已分配内存","已分配内存中的剩余空间","年老代大小","年轻代大小","年轻代的设置很关键。","并发标记扫描垃圾回收器","并行垃圾回收器","应用的远程","应用程序的线程堆栈信息。","延迟","开启","异常、堆内存溢出、oom","引用。","引起的停顿时间或内存消耗，垃圾收集器能支撑应用达到的最高性能指标。","当","当发起一个线程的创建时，虚拟机会在","当正常输出请求不被响应时，强制输出线程堆栈","当程序程序中使用了大量的","往arraylist中加入30w内容","往arraylist中加入40w内容","得到","得到进程","快照","性能产生重要的影响。","性能定义","性能调优","情况下，jmap","情况，一共输出","或","或者","或者导致","所用的时间（单位秒）。","所需时间越多","打印","打印的堆栈日志中查定位：","打印线程堆栈信息","执行时间的参数应用于最终的工作服务器上。","执行结果：","执行队列、java","持久代一般固定大小为","持久代大小","指不考虑","指定","指定文件名","指定服务监听端口。","指定输出格式，live","指定，文件格式是平文件，内容和","指明是活着的对象，file","指的是一个进程的最大内存","控制元空间大小。","描述","提供的。关于分代","搭配使用，用来分析","操作参数","操作系统下的","收集器。其中","收集器以外，其他分代","放在","整个堆大小","文件。","文件复制到本地或其他机器上进行分析。","文件的","文件，jstack","文件，还可以查询","新增错误类型，当","新生代内存大小","新生代和老年代的内存比","新生代空间初始值。","新生代空间大小","新生代空间大小。","新生代空间最大值。","方式，经过","方法区和运行时常量池溢出","方法的参数，只输出","方法的对象","无法回收","日志","日志文件名","日志有两种方式：","日志构成：","日志的格式","时堆内存的大小","时就会被放到","时间最长的是线程","时间，cpu","时间，可能会引起","是","是一个耗时并且耗费硬件资源的过程，一般把服务器生成的","是非常有用的。","显示","显示在","显示堆中对象的统计信息","更耗时，因此，减少进入老年代的对象数量可以显著降低","最大内存","最大可用内存","最终会导致内存溢出。","最高的进程的","有些人可能会问如何设置永久代内存大小，你可以用","服务","服务器，生成","本地虚拟机进程","来定位。","来定位的。而如果发生死锁之类的问题，一般用","来控制堆内存空间大小。","来控制永久代大小。","来查看各个线程的调用堆栈，就可以知道没有响应的线程到底在后台做什么事情，或者等待什么资源。","查看指定进程的堆信息","查看系统是否有使用大内存的代码或死循环；","查看线程下具体进程信息的命令如下：","模式是系统的一种配置模式。在该模式下，系统缺少了显示设备、键盘或鼠标。","次","次数越多，fgct","永久代空间的初始值。","永久代空间的最大值。","没有响应时，强制生成","没有设置为空，回收时","注意：","注意：一般不会直接在服务器上进行分析，因为","注意：使用","消耗在","深入理解","然后根据输出结果到","版）","物理连接","状态","状态后，你需要分析监控结构并决定是否需要进行","生成堆快照","生成堆转储快照","生成的","用于生成","由此可以看出占用","的","的信息,","的信息，从而可以轻松地知道","的几种情况","的分析结果后，可以在浏览器中查看。","的十六进制值","的十六进制值为","的参数","的各种状态。","的含义：","的堆栈信息，然后根据线程","的思路是什么呢？","的执行时间","的执行时间比","的执行有可能会导致","的时候，自动生成","的时间","的时间只有","的时间可能因此增加。","的时间达到","的时间间隔","的最大堆大小，xmn","的次数","的次数。","的状态，jstack","的监听端口。","的线程，可以使用","的线程，用","的详细说明。","的频率。你可能会以为减少进入老年代的对象数量意味着把它们留在新生代，事实正好相反，新生代内存的大小是可以调节的。","的频率升高。","的频率，full","监听器","监听器被注册后释放对象时没有删除监听器","监控与调优","目录，减少重复加载。","相关操作系统的数据模型（32","相对来说会比新生代","示例：","示例：jmap","秒，甚至大于","秒，那么","秒，那么就不需要把时间浪费在","移动到","程序中，看到当时运行的","程序呈现","程序崩溃生成","程序是如何崩溃和在程序何处发生问题。另外，jstack","程序的","程序的基本信息和运行情况。","程序运行的服务器，","程序都将暂停，因此，不要在系统执行过程中创建该文件。","第四章","等集合","等）对堆快照文件进行分析。","类全名或","类型","类型/内存大小","类型/内存大小来找到系统的最佳参数。","类型并且为它设置内存大小。此时如果你有多个服务器，请如上文提到的那样，在每台机器上设置不同的","类型配置","系列(九):如何优化","系列笔记(4)","系统的可用物理内存限制。","系统的可用虚拟内存限制；","线程","线程出现停顿的时候通过","线程号，也就是前面转化的","线程快照是当前","线程执行","线程栈的大小","线程耗费的","线程过多","结论：你给","给了三种选择：串行收集器、并行收集器、并发收集器。","统计垃圾回收堆的行为：","编译等运行数据。","而因程序死循环导致的不断创建对象","获取","获取堆快照。","虚拟机内每一条线程正在执行的方法堆栈的集合，生成线程快照的主要目的是定位线程出现长时间停顿的原因，如线程间死锁、死循环、请求外部资源导致的长时间等待等。","虚拟机当前时刻的线程快照。","虚拟机装载类的空间不够，超过","虚拟机进程状态信息。","虚拟机：jvm","表示","表示堆空间溢出。","表示方法区和运行时常量池溢出。","要长很多，因此，如果在","解决方案","解决方案：","设置","设置。","设置为空，a","设置成比较大的值（比如","设置示例：","详细参数说明请参考官方文档：java","调优","调优原则","调优总结（5）：典型配置","调优概述","调用时","足够。","路径","较高的线程，但是这些还不高，无法直接定位到具体的类。nid","辅助配置","输出","输出内容相同。","输出指定","输出系统属性，等同于","输出结果:45cd","过高","过高的情况下，查找响应的线程，一般定位都是用","还是","这个后缀是为了后续可以直接用","这个命令意思就是每隔","这个应该是","这个类的","进制","进制数字","进制的，所以我们要获取线程的","进程","进程中最耗费","进程挂起。","进行监控","远程","连续输出的时间间隔","连续输出的次数","通俗来讲","通过上面日志分析得出，psyounggen、paroldgen、pspermgen","通过两张图非常明显看出","通过添加","那么能创建多少线程呢？这里有一个公式：","都是由","配置","配置，来限制使用内存：","采用并发","重点关注：","问题。那么分析","问题定位","队列等待","降低","除了可以在","除堆栈外，显示关于锁的附加信息","静态集合类","首先，要知道有三种","高的线程打印其","高级特性与最佳实践（第","（1）使用","（1）执行","（1）扩大永久代空间","（1）找出","（1）检查程序，看是否有死循环或不必要地重复创建大量对象。有则改之。","（2）jstack","（2）使用内存分析工具（visualvm、mat、jprofil","（2）扩大堆内存空间","（2）找出该进程内最耗费","（2）清理应用程序中","（3）使用","（3）定位","（3）根据分析图，重点是确认内存中的对象是否是必要的，分清究竟是是内存泄漏（memori","，即内存溢出，是一个常见的"],"javacore/io/io.html":["bufferedread","bytearrayinputstream","bytearrayoutputstream","datagram","datagram：使用","datainputstream","dataoutputstream","externaliz","file","fileinputstream","fileoutputstream","fileread","filewrit","inetaddress","inetaddress：用于表示网络上的硬件资源，即","inputstreamread","io面经","ip","java","java常用io类","java序列化","java流操作","java网络编程","objectinputstream","objectoutputstream","outputstreamwrit","pipedinputstream","pipedoutputstream","printstream","randomaccessfil","readresolve()","scanner","serializ","serialversionuid","socket","sockets：使用","system","tcp","transient","udp","url","url：统一资源定位符；","zipinputstream","zipoutputstream","中的网络支持：","关键字","协议实现网络通信。","协议实现网络通信；","参考资料","和","地址；","字符流和字节流","小结","序列化和反序列化","序列化工具","接口","接口的替代方法","方法","简介","输入输出流io","非默认序列化机制","默认序列化机制"],"javacore/io/Java常用IO类.html":["!=","\";","\"lisi","\"r\");//","\"rw\");//","\"test.txt\");","\"wangwu","\"zhangsan\";","\"；年龄：\"","'\\n')","((temp","(c","(char)","(except","(int","(scan.hasnext(\"^\\\\d{4}","(scan.hasnextfloat())","(scan.hasnextint())","+","//","/。","0.0f;","0;","1)","30;","31;","32;","=","==","\\\\d{2}","\\\\d{2}$\"))","\\\\d{2}$\");","\\。","ag","age);","args[])","b[]","bo","boolean","break;","buf","buf);","buf.append(c);","byte","byte[8];","bytearrayoutputstream();","c","catch","char","class","createnewfil","createnewfille()","date","dd\").parse(str);","dd）：\");","delet","delete()","e)","except","f","f);","f.createnewfile();","f.delete();","f.list();","f.listfiles();","f.mkdir();","file","file(\"d:\"","file(filename);","file.separ","fileoutputstream(\"d:\\\\test.txt\");","files[]","flag","float","i);","import","input","input.close();","input.read())","inputstream","int","io","ioexcept","java","java.io","java.io.*;","linux","list","list()","list():","listfil","listfiles()","listfiles():","main(str","mkdir","mkdir()","mkdirs()，当父路径不存在时，会连同上级目录都一并创建。","mm","name","new","null;","out","out.close();","outputstream","printstream","printstream(bos);","printstream(out);","ps","ps.close();","public","r","randomaccessfil","randomaccessfile(f,","randomaccessfiledemo01","randomaccessfiledemo02","rdf","rdf.close();","rdf.seek(0);","rdf.skipbytes(12);","rdf.writebytes(name);","rdf.writeint(age);","rw","scan","scan.next(\"^\\\\d{4}","scan.nextfloat();","scan.nextint();","scanner","scanner(system.in);","scannerdemo","seek()","simpledateformat(\"yyyi","static","str","str[]","string","stringbuff","stringbuffer();","system","system.err","system.err.print(\"此处有误\");","system.in","system.in;","system.out","system.out.print(\"请输入内容：\");","system.out.print(\"输入小数：\");","system.out.print(\"输入整数：\");","system.out.print(\"输入日期（yyyi","system.out.println(\"人生若只如初见，何事秋风悲画扇\");","system.out.println(\"小数数据：\"","system.out.println(\"整数数据：\"","system.out.println(\"输入的不是小数！\");","system.out.println(\"输入的不是整数！\");","system.out.println(\"输入的内容为：\"","system.out.println(\"输入的日期格式错误！\");","system.out.println(bos);","system.out.println(date);","system.seterr(ps);","system.setout(ps);","systemerrdemo","systemindemo","systemoutdemo","temp","temp;","throw","tri","void","window","{","{}","}","中使用反斜杠表示目录的分隔符","中使用正斜杠表示目录的分隔符","中提供了三个常用于","中给出了两种列出文件夹内容的方法：","为只写；rw","为只读；w","为读写。","从键盘接收数据","以只读的方式打开文件","关键词：file、randomaccessfile、system、scann","关闭","写操作","列出全部名称，返回一个字符串数组。","列出完整的路径，返回一个","删除会失败。","判断","判断输入的是否是小数","判断输入的是否是整数","包中唯一对文件本身进行操作的类。它可以对文件、目录进行增删查操作。","可以使用","可以完成输入数据操作，并对数据进行验证。","和","声明randomaccessfile类的对象","如果要解决这个问题，可以使用","姓名：\"","字符串长度为8","它适用于由大小已知的记录组成的文件，所以我们可以使用","实例化","对象数组。","对象时，如果要写入的文件不存在，系统将自行创建。","将姓名写入文件之中","将年龄写入文件之中","将记录从一处转移到另一处，然后读取或者修改记录。","常用","常用方法","开辟byte数组","当用","指定要操作的文件","指针回到文件的开头","接收","接收小数","接收整数","数字的长度为4","数组方式读取出来，而且长度必须和写入时的固定大小相匹配。","文件中记录的大小不一定都相同，只要能够确定哪些记录有多大以及它们在文件中的位置即可。","方式声明","方法创建一个新文件。","最好的做法是使用","来创建文件夹，但是如果要创建的目录的父路径不存在，则无法创建成功。","来删除文件或目录。","注：","注：randomaccessfil","的模式即可，以只读的方式打开文件。","的静态成员：","示例：","示例：接受控制台输入信息","示例：重定向","空出第二个人的信息","类","类是","类是随机读取类，它是一个完全独立的类。","类虽然可以实现对文件内容的读写操作，但是比较复杂。所以一般操作文件内容往往会使用字节流或字符流方式。","读写模式，如果文件不存在，会自动创建","读取时所有的字符串只能按照","读取是直接使用","读取第一个人的信息","读取第二个人的信息，意味着要空出第一个人的信息","读操作","跳过第一个人的信息","输出内存中的数据","输出流","输出重定向","需要注意的是，如果删除的是目录，且目录不为空，直接用","静态常量，可以根据所在操作系统选取对应的分隔符。"],"javacore/io/Java流操作.html":["!=","\");","\"d:\\\\object.txt\";","\"d:\\\\order.txt\";","\"d:\\\\test.txt\";","\"d:\\\\zipdemo.zip\";","\"hello","\"helloworld\";","\"mldn_unzip.txt\");","\"test.txt\");","\"围巾\"};","\"姓名：\"","\"张三\",","\"手套\",","\"；年龄：\"","((temp","(char)","(file.isdirectory())","(int","(ioexcept","(object[])","(str.equalsignorecase(\"exit\"))","(true)","*","*/","+","/**","//","0,","0;","1)","1.使用","18);","1};","1就表示还有内容，可以继续读取","2,","2.把","3.进行读或写操作","30),","30.3f,","31),","32)};","4.关闭流","50.5f};","=","@overrid","age)","age;","arg[])","args)","args[])","b[]","bi","bis.close();","bis.read())","bo","bos.close();","bos.tostring();","bos.write(character.tolowercase(c));","break;","buf","buf.readline();","bufferedread","bufferedreader(new","bufferedreaderdemo","byte","byte[(int)","byte[1024];","byte[]","bytearrayinputstream","bytearrayinputstream(str.getbytes());","bytearrayoutputstream","bytearrayoutputstream();","bytearraystreamdemo","c","c;","c[]","c[len]","catch","char","char[1024];","char[]","class","datainputstream","dataoutputstream","dataoutputstream(new","datastreamdemo","demo01(str","dirpath,","do","e)","e.printstacktrace();","entri","entry.getname());","except","f","f.length()];","file","file(\"d:\"","file(dirpath);","file(filepath));","file(filepath);","file(zipfilepath);","file.\");","file.listfiles();","file.separ","fileinputstream","fileinputstream(f));","fileinputstream(f);","fileinputstream(file);","fileinputstream(zipfile));","fileouputstream","fileoutputstream","fileoutputstream(f));","fileoutputstream(f);","fileoutputstream(f,","fileoutputstream(new","fileoutputstream(outputfile);","fileoutputstream(zipfile));","filepath","filepath)","filepath,","fileread","filereader(f);","filestreamdemo","filewrit","filewriter(f);","filewriter(f,","final","float","flush","folder.\");","getpis()","getpos()","implement","import","input","input(filepath);","input(str","input.close();","input.getnextentry();","input.read())","input.read(bytes);","input1(str","inputstream","inputstreamread","inputstreamreader(new","inputstreamreader(system.in));","inputstreamreaderdemo","inputstream（输入）","int","io","ioexcept","java","java.io.*;","java.io.bufferedreader;","java.io.inputstreamreader;","java.io.ioexception;","java.util.zip.*;","len","len));","len);","len++;","lists[]","main(str","main(string[]","name,","name;","names[]","new","newstr","null;","nums[]","o[]","obj[])","object","object[]","objectinputstream","objectinputstream(input);","objectoutputstream","objectoutputstream(out);","objects;","objectstream","oi","ois.close();","ois.readobject();","oo","oos.close();","oos.writeobject(obj);","os","out","out.close();","out.flush();","out.write(\"hello","out.write(bytes);","out.write(str);","out.write(temp);","output(filepath);","output(str","output1(str","output2(str","outputfil","outputstream","outputstreamwrit","outputstreamwriter(new","outputstreamwriterdemo","outputstream（输出）。","per);","per[]","person","person(\"张三\",","person(\"李四\",","person(\"王五\",","person(str","pi","pipedinputstream","pipedinputstream();","pipedoutputstream","pipedoutputstream();","pipedstreamdemo","pis.close();","pis.read(b);","pis;","po","pos.close();","pos.write(str.getbytes());","pos;","prices[]","printstream","printstream(os);","printstreamdemo","privat","ps","ps.close();","ps.print(\"hello","ps.printf(\"姓名：%s；年龄：%d\",","ps.println(\"world!!!\");","public","r","reader","reader.close();","reader.read(c);","readerandwriterdemo","reader（输入）","readobject(filepath);","readobject(str","receiv","receive()","receive();","return","run()","runnabl","s","s.getpos().connect(r.getpis());","send","send()","send();","serializ","static","str","str);","str.getbytes();","string","string(b,","string(bytes));","string(c,","string(input(filepath)));","system","system.err","system.out","system.out.print(\"请输入内容：\");","system.out.print(\"退出\");","system.out.println(\"内容为：\"","system.out.println(\"内容为：\\n\"","system.out.println(\"压缩实体名称：\"","system.out.println(\"压缩文件的名称：\"","system.out.println(\"接收的内容为：\"","system.out.println(\"文件字符数为：\"","system.out.println(\"读入数据的长度：\"","system.out.println(\"输入的内容为：\"","system.out.println(new","system.out.println(newstr);","temp","temp;","this.ag","this.age;","this.nam","thread(r).start();","thread(s).start();","throw","tostring()","tri","true);","void","world!!!\";","world!!!\\r\\n\";","world!!\");","world\\r\\n\";","writeobject(filepath,","writeobject(str","writer","writer。","writer（输出）。","zip","zip_file_path","zipentri","zipentry(file.getname()));","zipfil","zipfile(file);","zipfile.getentry(\"mldn.txt\");","zipfile.getinputstream(entry);","zipfile.getname());","zipfilepath)","zipfilepath,","zipinputstream","zipinputstream(new","zipout","zipout.close();","zipout.putnextentry(new","zipout.setcomment(\"thi","zipout.write(temp);","zipoutputstream","zipoutputstream(new","zipstreamdemo","{","{\"衬衣\",","{3,","{98.3f,","{new","}","中提供的静态成员","中的流操作分为两类：","中的流操作类，常常是以输入、输出两种形式成对提供。","中，流操作的一般流程如下：","事实上，我们常用的","会一定格式将数据输入、输出。","使用","关键词：inputstream、outputstream、reader、writ","关闭流","关闭输入流","关闭输出流","准备从内存bytearrayinputstream中读取内容","分别转换为","列出全部文件","判断是否是文件夹","压缩一个文件","压缩一个目录","压缩输出","取出内容","可以在两个线程间进行通信。","可以将","启动线程","和","在","如果不关闭流，则缓冲区的内容是无法输出的","如果不是","如果想在不关闭流时，将缓冲区内容输出，可以使用","如果现在是使用","字符流主要操作字符类型数据，一个字符占两个字节。主要类是","字符流和字节流","字符流和字节流的区别","字符流操作时使用了缓冲区，并在关闭字符流时会强制将缓冲区内容输出","字节流主要操作字节类型数据（byte）。主要类是","字节流主要操作字节类型数据（byte）；字符流主要操作字符类型数据，一个字符占两个字节。","字节流在操作时本身不会用到缓冲区（内存），而是对文件本身直接操作的；字符流在操作时使用了缓冲区，通过缓冲区再操作文件。","定义一个字符串，全部由大写字母组成","定义压缩文件名称","定义要压缩的文件","定义要压缩的文件夹","实例化时，默认为覆盖原文件内容方式；如果添加true参数，则变为对原文件追加内容的方式。","实例化输出流","实例化，意味着所有的数据都会输出到文件中","对象。","对象绑定到流对象上","对象绑定到流对象上。","将字符变为小写","就是","强制清空缓冲区","得到一个压缩实体","得到一个压缩实体的输入流","得到此线程的管道输入流","得到此线程的管道输出流","所有的数据就全部都在bytearrayoutputstream中","把","接收每一个内容","提供了非常方便的打印功能。","是对象输入输出流，一般用于对象序列化。","有三种读取方式，体会其差异","流操作","用于在内存中输入、输出数据。","用于输入、输出文件。","用于输入输出文本文件。","示例：","第1步、使用file类找到一个文件","第2步、通过子类实例化父类对象","第3步、进行写操作","第3步、进行读操作","第4步、关闭输入流","第4步、关闭输出流","类用于从缓冲区中读取内容，所有的输入字节数据都放在缓冲区中。","类绑定一个文件","类绑定一个文件。","读取内容","读取实体为一个文件的压缩包","读取的数字变为字符","进行读或写操作。","连接管道","追加内容方式"],"javacore/io/Java序列化.html":["\"","\",","\"d:/text.dat\";","\"main\"","\"name:","\"name='\"","\"person{\"","'\\''","'}';","(string)","*","*/","+","...","/**","//","1l;","1）","2","2l;","30,","31,",":bell:","=","==","@overrid","address;","ag","age,","age:","age;","age=\"","age=30,","args)","call","class","classnotfoundexcept","defaultwriteobject()","deseri","deserialize(filename);","deserialize(str","email;","email，如下：","enum","enum、array","except","externaliz","externalizable。","externalizedemo01","externalizedemo02","f","fals","femal","file","file(filename);","fileinputstream(f);","filenam","filename)","fileoutputstream(f);","final","gender","getinstance()","hessian","http://www.blogjava.net/jiangshachina/archive/2012/02/13/369898.html","http://www.codenuclear.com/seri","http://www.hollischuang.com/archives/1140","https://agapple.iteye.com/blog/859052","implement","in)","in.close();","in.defaultreadobject();","in.readint();","in.readobject();","inputstream","instatnc","instatnce;","integ","invalidclassexcept","invalidclassexception。","ioexcept","ioexception,","jack,","jackson、gson、fastjson","java","java.io.notserializableexception:","java.io.objectinputstream","java.io.objectoutputstream","java.io.serializ","java/","jdk","json","long","main(string[]","male","male,","name","name,","name:","name;","new","notserializableexcept","null","null,","null;","obj","object","objectinputstream","objectinputstream(in);","objectoutputstream","objectoutputstream(out);","oi","ois.close();","ois.readobject();","oo","oos.close();","oos.writeobject(new","out","out)","out.close();","out.defaultwriteobject();","out.writeint(age);","out.writeobject(name);","output:","outputstream","person","person(\"jack\",","person(\"tom\",","person()","person()\");","person(str","person.getinstance());","person{name='jack',","privat","public","public。","readexternal()","readexternal()。这两个方法在序列化和反序列化过程中会被自动调用，以便执行一些特殊操作。当使用该接口时，序列化的细节需要由程序员去完成。如上所示的代码，由于","readexternal(objectinput","readobject","readobject()","readobject(objectinputstream","readresolve()","readserialdata","return","rmi(远程方法调用)","serializ","serializable，它增添了两个方法：writeexternal()","serialize(filename);","serialize(str","serializedemo01","serializedemo02","serializedemo03","serializedemo04","serializedemo05","serialversionuid","serialversionuid。","serialversionuid，则序列化运行时将基于该类的各个方面计算该类的默认","serialversionuid？","sex","sex)","sex.male));","sex.male);","sex:","sex;","sex=\"","sex=male}","singleton","static","string","system.out.println(\"cal","system.out.println(obj","system.out.println(obj);","this.ag","this.nam","this.sex","this.sex;","thread","thrift、protobuf","throw","tom,","tostring()","transient","transient，如下所示：","true","unserializedemo","void","writeexternal()","writeexternal(objectoutput","writeint()","writeobject()","writeobject(objectoutputstream","writeserialdata","{","}","、xml","不一致，会抛出","与","与发送方发送的","世界的无数类中看到这个字段。","中。readobject()","中提供了另一个序列化接口","中的","为每个序列化类产生的版本标识。它可以用来保证在反序列时，发送方发送的和接受方接收的是可兼容的对象。如果接收方接收的类的","从该结果，一方面可以看出","从输出结果可以看出，age","使用默认机制，在序列化对象时，不仅会序列化当前对象本身，还会对其父类的字段以及该对象引用的其它对象也进行序列化。同样地，这些其它对象引用的另外对象也将被序列化，以此类推。所以，如果一个对象包含的成员变量是容器类对象，而这些容器所含有的元素也是容器类对象，那么这个序列化的过程就会较复杂，开销也较大。","保存对象","值。尽管这样，还是建议在每一个序列化的类中显式指定","值得注意的是，从文件中获取的","做了修改，增加了一个字段","关键字","关键字，还是使用","关键词：basics、seri","其他内容略","再次做一些改动，代码如下：","再次进行反序列化，则会抛出","参考资料","反序列化","反序列化是将字节流转换为对象。","反序列化（deserialize）","另外，若使用","可序列化类实现","后，默认序列化机制就会忽略该字段。","和","在","在现实应用中，有些时候不能使用默认序列化机制。比如，希望在序列化过程中忽略掉敏感数据，或者简化序列化过程。下面将介绍若干影响序列化的方法。","在网络上传送对象的字节序列。","如下所示：","如果不是","如果仅仅只是让某个类实现","如果可序列化类没有显式声明","字段。然后再调用","字段写入到","字段声明为","字段必须是","字段没有被序列化。","字段进行序列化，但要忽略掉","字段，你可以在","字段，如下代码所示：","官方的序列化一定需要实现","官方的序列化主要体现在以下方面：","官方的序列化存在许多问题，因此，很多人更愿意使用优秀的第三方序列化工具来替代","官方的序列化性能不高，序列化后的数据相对于一些优秀的序列化的工具，还是要大不少，这大大影响存储和传输的效率。","官方的序列化需要关注","官方的序列无法跨语言使用。","定义保存路径","实现","对上述","对象与","对象中任何一个字段都没有被序列化。另一方面，如果细心的话，还可以发现这此次序列化过程调用了","对象序列化，在保存对象时，会把其状态保存为一组字节，在未来，再将这些字节组装成对象。必须注意地是，对象序列化保存的是对象的”状态”，即它的成员变量。由此可知，对象序列化不会关注类中的静态变量。","对象输入流","对象输出流","小结","序列化","序列化可以将对象的字节序列持久化——保存在内存、文件、数据库中。","序列化和反序列化","序列化和反序列化示例：","序列化工具","序列化是将对象转换为字节流。","序列化用途","序列化的高级认识","序列化（serialize）","异常。","异常。这是因为：在序列化操作过程中会对类型进行检查，如果不满足序列化类型要求，就会抛出异常。","当我们使用","当某个字段被声明为","当然我们还有更加优秀的一些序列化和反序列化的工具，根据不同的使用场景可以自行选择！","形式）。","我们不妨做一个小尝试：将","我们将","我们来举个例子：","我们来基于","接口","接口。","接口之后，基于","接口可以控制序列化和反序列化的细节。它有一个替代方法：实现","接口的序列化。","接口的替代方法","接口的类必须要提供一个无参的构造方法，且它的访问权限为","接口的默认序列化机制就会失效。","接口，否则将抛出","接口，并添加","接口，而没有其它任何处理的话，那么就会使用默认序列化机制。","文件输入流","文件输出流","方法","方法。","方法。在该方法中直接返回","方法。序列化和反序列化过程中会自动回调这两个方法。","方法中会先调用","方法可以实现序列化；","方法显示地将","方法未作任何处理，那么该序列化行为将不会保存/读取任何一个字段。这也就是为什么输出结果中所有字段的值均为空。","方法用于实现反序列化。","方法略","方法相同。","方法，","方法，以及","方法，其实都是基于","方法，该方法会执行默认的序列化机制，如上节所述，此时会忽略掉","方法，那么它们是如何被调用的呢？毫无疑问，是使用反射。详情可见","无论是使用","是","有什么作用，如何使用","构造方法、get、set","核心技术（卷","模式时，应该是期望某个类的实例应该是唯一的，但如果该类是可序列化的，那么情况可能会略有不同。此时对第","模式，如下所示：","注意：writeobject()","注意：使用","注意：这里的父类和引用对象既然要进行序列化，那么它们当然也要满足序列化要求：被序列化的类必须属于","深入理解","添加此方法","用于控制序列化版本是否兼容。若我们认为修改的可序列化类是向后兼容的，则不修改","由于这个类和老版本不兼容，我们需要修改版本号：","的","的作用则是针对对象的读取，其原理与","的值。因为不同的","的单例对象。我们在","的类，如果需要序列化，必须实现","示例中","示例中的内部类","示例如下所示：","示例的基础上添加一个","简介","类中的单例对象并不相等。为了能在单例类中仍然保持序列的特性，可以使用","类作进一步的修改，使其能够对","类型。","类型其中的任何一种。","类改为如下实现，然后看看运行结果。","类的","类的无参构造方法。","类的无参构造方法会被调用。由于这个原因，实现","类进行修改，使其实现","继承于","综上所述，我们大概可以清楚：serialversionuid","编程思想","编译很可能会生成不同的","自身的序列化机制。","节使用的","被序列化的类必须属于","请注意","读取对象","输出：结果就是出现如下异常信息。","进行序列化，当读取对象时，会调用被序列化类的无参构造方法去创建一个新的对象；然后再将被保存对象的字段的值分别填充到新对象中。这就是为什么在此次序列化过程中","适用于对序列化后的数据要求有良好的可读性（转为","适用于对开发体验敏感，性能有要求的内外部系统。","适用于对性能敏感，对开发体验要求不高的内部系统。","通过对象输入输出流来实现序列化和反序列化：","都是","非默认序列化机制","默认值，从而导致在反序列化时抛出","默认序列化机制","（1）有一个可序列化类","（2）开发过程中，对"],"javacore/io/Java网络编程.html":["!=","\"utf","((line","*/","/*","8\");","=","address);","args)","br","br.close();","br.readline())","bufferedread","bufferedreader(isr);","datagram","datagrampacket：数据包类","datagramsocket：通信类","datagram：使用","host);","inetaddress","inetaddress.getbyaddress(byte[]","inetaddress.getbyname(str","inetaddress：用于表示网络上的硬件资源，即","inputstream","inputstreamread","inputstreamreader(is,","ioexcept","ip","isr","java","line;","main(string[]","new","null)","outputstream","public","serversocket：服务器端类","socket","sockets：使用","socket：客户端类","static","string","system.out.println(line);","tcp","throw","udp","url","url(\"http://www.baidu.com\");","url.openstream();","url：统一资源定位符；","void","{","}","中的网络支持：","中读取字节流数据。","关键词：url、inetaddress","协议实现网络通信。","协议实现网络通信；","可以直接从","和","地址；","字符流","字节流","提供缓存功能","服务器和客户端通过","没有公有的构造函数，只能通过静态方法来创建实例。","网络编程","进行输入输出。"],"javaweb/javaee.html":["1.","1.1.","1。","1。和","2","2.","3","3.","31","32","4","4.","4.1.","4.2.","4.3.","4.4.","4.5.","4.6.","45","46","5","51","52","a,","ack","acknowledg","ack。","ack，发送方就认为这个","ack，等待一定的时间，超时之后就认为这个数据包丢失，就会重新发送。这个等待时间被称为","advertis","b","b。","control","dn","fin","http","javae","layer）不参与具体的传输，它提供包括访问验证和会话管理在内的建立和维护应用之间通信的机制。","layer）为两台主机中进程间的通信提供通用的数据传输服务。","layer）为分组交换网上的不同主机提供通信服务。在发送数据时，网络层把运输层产生的报文段或用户数据报封装成分组或包进行传送。","layer）只接收和发送一串比特(bit)流，不考虑信息的意义和信息结构。","layer）就是为同一链路的主机提供数据传输服务。数据链路层把网络层传下来的分组封装成帧。","layer）是为在应用过程之间传送的信息提供表示方法的服务，它关心的只是发出信息的语法与语义。表示层要完成某些特定的功能，主要有不同数据编码格式的转换，提供数据压缩、解压缩服务，对数据进行加密、解密。","layer）通过应用进程间的交互来完成特定网络应用。应用层协议定义的是应用进程间通信和交互的规则。","link","listen","mss","osi","protocol），即传输控制协议，它是一种面向连接的、可靠的、基于字节流的传输层通信协议。","readi","ready，还不允许将这部分数据发出。上图中的","rto","rto(retransmiss","seq","syn","syn/ack","synchron","tcp","tcp/udp","tcp（transmiss","tcp，用户数据报协议","tcp？","timeout)，即重传超时时间。","udp","window，又叫","window，这个字段是接收端告诉发送端自己还有多少缓冲区可以接收数据。于是发送端就可以根据这个接收端的处理能力来发送数据，而不会导致接收端处理不过来。","~","❓","一样，一个","一般都会分开发送，从而导致多了一次。","三次握手","三次握手完成，客户端与服务端已建立双向连接。","三次握手负责建立","不确定自己发消息是否没问题，所以就需要第三次握手。","个字节已经发送并确认。","个字节，意味着有","个已发送的字节得到了确认。","为","为了便于说明，假设客户端为","主要协议：http、dns、smtp、telnet、ftp、snmp","主要协议：ip。","主要协议：ppp、csma/cd","主要协议：tcp、udp。","也可以等待积累有足够多的字节后再构成报文段发送出去。","五层协议分层是一种折中方案，在现实中更为流行。","什么是","什么是滑动窗口？","以后的字节为第","会话层","会话层（session","传输层","传输层（transport","传输的数据包保证以原始顺序到达目的地，且数据包不被损坏。为了实现这点，tcp","低。","值，通信双方商定通信的最大报文长度。如果应用层交付下来的数据过大，就会对数据分段，然后发送；否则通过滑动窗口来控制通信双发的数据。","关键词：http、dns、ftp、telnet、dhcp","关键词：ip、icmp、arp、路由","关键词：udp、tcp、滑动窗口、拥塞控制、三次握手","关键词：点对点信道、广播信道、ppp、csma/cd、局域网、以太网、mac、适配器、集线器、网桥、交换机","关键词：调制、解调、数字信号、模拟信号、通信媒介、信道复用","典型设备：二层交换机、网桥、网卡。","典型设备：光纤、同轴电缆、双绞线、中继器和集线器。","典型设备：网关、路由器。","分层；五层协议分层；tcp/ip","包。","包，向客户端发送一个","包，并将确认序号设置为收到序号加","包，用来关闭客户端到服务端的数据传送。","包，确认序号为收到的序号加","协议分层。","双向连接。","发同步消息。b","发同步消息和确认消息。a","发消息、收消息都没问题。但是，此时","发消息、收消息都没问题；b","发消息没问题。","发消息没问题；b","发确认消息。b","可靠是指","可靠的","向","和","四次挥手","四次挥手负责断开","在","基于字节流的","头里有一个字段叫","如上图所示，三次握手流程如下：","如上图所示，四次挥手流程如下：","如果发送者没有收到正确的响应，它将重新发送数据包。如果多次超时，连接就会断开。","字节为第","实行流量控制和拥塞控制。这些确保措施会导致延迟，而且通常导致传输效率比","客户端向服务端发送","客户端向服务端发送一个","客户端向服务端发送带有","客户端向服务端发送带有带有","将占用一个序号。","就可以把它划分短一些再传送。如果应用程序一次只发送一个字节，tcp","已发送但尚未得到确认的字节。发送方在确认之前，不认为这些数据已经被处理。上图中的","已发送但尚未确认","已发送已确认","应用层","应用层（applic","建立连接前两次握手的","建立连接的时候，","当接收方收到乱序片段时，需要重复发送","必需要知道网络实际的数据处理带宽或是数据处理速度，这样才不会引起网络拥塞，导致丢包。","必需要解决的可靠传输以及包乱序（reordering）的问题，所以，tcp","快速重传机制","快速重传机制，实现了另外的一种丢包评定标准，即如果连续收到","扩展阅读：传输控制协议","扩展阅读：域名系统","扩展阅读：计算机网络之应用层","扩展阅读：计算机网络之数据链路层","扩展阅读：计算机网络之物理层","扩展阅读：计算机网络之网络层","扩展阅读：超文本传输协议","把应用程序看成是一连串的无结构的字节流。tcp","报文中选项字段的","报文后，把","报文时，仅仅表示对方不再发送数据了但是还能接收数据，而自己也未必全部数据都发送给对方了，所以己方可以立即关闭，也可以发送一些数据给对方后，再发送","报文给对方来表示同意现在关闭连接，因此，己方","收到消息后。b","收到消息后，a","收到消息后，b","收消息没问题。","放在一个报文里发送给客户端。","数据包的序列号和校验码","数据单元：ip","数据单元：帧（frame）。","数据单元：报文段（segment）或用户数据报。","数据单元：报文（message）。","数据单元：比特流。","数据报（packet）。","数据流中最早的字节已经发送并得到确认。这些数据是站在发送端的角度来看的。上图中的","数据链路层","有一个缓冲，当应用程序传送的数据块太长，tcp","有哪些重传机制，原理是什么？","服务器在","服务端为","服务端关闭与客户端的连接，向客户端发送一个","服务端向客户端发送带有","服务端收到这个","未发送而接收方","未发送而接收方已","标志的数据包。","次重复","没有确认的数据包不会从窗口中移走，定时器在重传时间到期内，每个片段的位置不变。","滑动窗口","滑动窗口原理是什么？","滑动窗口是","物理层","物理层（physic","状态下，收到建立连接请求的","由于接收方","的一种控制网络流量的技术。","的七层体系结构概念清楚，理论完整，但是比较复杂且不实用，所以并不流行。","的交互是一次一个数据块（大小不等），但","的包丢失了，立刻进行重传。","的特性是什么？","的缩写。","的缩写，ack","的设置：","确认包和自动重传","第一次挥手","第一次握手","第一次握手，a","第三次挥手","第三次握手","第三次握手，a","第二次挥手","第二次握手","第二次握手，b","第四次挥手","等。","类。","综合","网络层","网络层针对的还是主机之间的数据传输服务，而主机之间可以有很多链路，数据链路层（data","网络层（network","网络通信面经","而关闭连接时，服务器收到对方的","至此，tcp","虽然应用程序和","表示层","表示层（present","要保证所有的数据包都可以到达，所以，必需要有重传机制。","计算机网络分层一般有三种划分体系：osi","计算机网络如何分层？","认为：a","认为：b","设备尚未将数据发出","设短了，会导致可能并没有丢就重发。于是重发的就快，会增加网络拥塞，导致更多的超时，更多的超时导致更多的重发","设长了，重发就慢，丢了老半天才重发，没有效率，性能差；","说明：syn","超时重传机制","超时重传机制是指：发送数据包在一定的时间周期内没有收到相应的","这张图片相对于上一张图片，滑动窗口偏移了","这是学习计算机网络知识宏观层面必须要了解的核心点。知道了这些，对于网络的体系结构就基本上了解了。","这种机制的重点是","连接。","通过以下技术来保证：","重传机制","重传机制主要有两种：","问题：三次握手有什么用？什么是三次握手？为什么需要三次握手？","问题：为什么需要重传机制？tcp","问题：什么是滑动窗口？滑动窗口原理是什么？","问题：四次挥手有什么用？什么是四次挥手？为什么建立连接是三次握手，关闭连接确是四次挥手呢？","问题：计算机网络如何分层？各层的作用是什么？各层的主要协议、设备分别是什么？","需要通过三次握手、四次挥手原则建立和断开双向连接。","面向连接是指","面向连接的","💡","（1）三次握手有什么用？","（1）四次挥手有什么用？","（1）超时重传机制","（2）什么是三次握手？","（2）什么是四次挥手？","（2）快速重传机制","（3）为什么建立连接是三次握手，关闭连接确是四次挥手呢？","（3）为什么需要三次握手？","，但接收方根据最近一次关于发送方一次要发送多少字节确认自己有足够空间。发送方会立即尝试发送。上图中的"],"javaweb/distributed/distributed.html":["1.","1.1.","1。","1。和","2","2.","3","3.","31","32","4","4.","4.1.","4.2.","4.3.","4.4.","4.5.","4.6.","45","46","5","51","52","a,","ack","acknowledg","ack。","ack，发送方就认为这个","ack，等待一定的时间，超时之后就认为这个数据包丢失，就会重新发送。这个等待时间被称为","advertis","b","b。","control","dn","fin","http","layer）不参与具体的传输，它提供包括访问验证和会话管理在内的建立和维护应用之间通信的机制。","layer）为两台主机中进程间的通信提供通用的数据传输服务。","layer）为分组交换网上的不同主机提供通信服务。在发送数据时，网络层把运输层产生的报文段或用户数据报封装成分组或包进行传送。","layer）只接收和发送一串比特(bit)流，不考虑信息的意义和信息结构。","layer）就是为同一链路的主机提供数据传输服务。数据链路层把网络层传下来的分组封装成帧。","layer）是为在应用过程之间传送的信息提供表示方法的服务，它关心的只是发出信息的语法与语义。表示层要完成某些特定的功能，主要有不同数据编码格式的转换，提供数据压缩、解压缩服务，对数据进行加密、解密。","layer）通过应用进程间的交互来完成特定网络应用。应用层协议定义的是应用进程间通信和交互的规则。","link","listen","mss","osi","protocol），即传输控制协议，它是一种面向连接的、可靠的、基于字节流的传输层通信协议。","readi","ready，还不允许将这部分数据发出。上图中的","rto","rto(retransmiss","seq","syn","syn/ack","synchron","tcp","tcp/udp","tcp（transmiss","tcp，用户数据报协议","tcp？","timeout)，即重传超时时间。","udp","window，又叫","window，这个字段是接收端告诉发送端自己还有多少缓冲区可以接收数据。于是发送端就可以根据这个接收端的处理能力来发送数据，而不会导致接收端处理不过来。","~","❓","一样，一个","一般都会分开发送，从而导致多了一次。","三次握手","三次握手完成，客户端与服务端已建立双向连接。","三次握手负责建立","不确定自己发消息是否没问题，所以就需要第三次握手。","个字节已经发送并确认。","个字节，意味着有","个已发送的字节得到了确认。","为","为了便于说明，假设客户端为","主要协议：http、dns、smtp、telnet、ftp、snmp","主要协议：ip。","主要协议：ppp、csma/cd","主要协议：tcp、udp。","也可以等待积累有足够多的字节后再构成报文段发送出去。","五层协议分层是一种折中方案，在现实中更为流行。","什么是","什么是滑动窗口？","以后的字节为第","会话层","会话层（session","传输层","传输层（transport","传输的数据包保证以原始顺序到达目的地，且数据包不被损坏。为了实现这点，tcp","低。","值，通信双方商定通信的最大报文长度。如果应用层交付下来的数据过大，就会对数据分段，然后发送；否则通过滑动窗口来控制通信双发的数据。","关键词：http、dns、ftp、telnet、dhcp","关键词：ip、icmp、arp、路由","关键词：udp、tcp、滑动窗口、拥塞控制、三次握手","关键词：点对点信道、广播信道、ppp、csma/cd、局域网、以太网、mac、适配器、集线器、网桥、交换机","关键词：调制、解调、数字信号、模拟信号、通信媒介、信道复用","典型设备：二层交换机、网桥、网卡。","典型设备：光纤、同轴电缆、双绞线、中继器和集线器。","典型设备：网关、路由器。","分层；五层协议分层；tcp/ip","分布式技术","包。","包，向客户端发送一个","包，并将确认序号设置为收到序号加","包，用来关闭客户端到服务端的数据传送。","包，确认序号为收到的序号加","协议分层。","双向连接。","发同步消息。b","发同步消息和确认消息。a","发消息、收消息都没问题。但是，此时","发消息、收消息都没问题；b","发消息没问题。","发消息没问题；b","发确认消息。b","可靠是指","可靠的","向","和","四次挥手","四次挥手负责断开","在","基于字节流的","头里有一个字段叫","如上图所示，三次握手流程如下：","如上图所示，四次挥手流程如下：","如果发送者没有收到正确的响应，它将重新发送数据包。如果多次超时，连接就会断开。","字节为第","实行流量控制和拥塞控制。这些确保措施会导致延迟，而且通常导致传输效率比","客户端向服务端发送","客户端向服务端发送一个","客户端向服务端发送带有","客户端向服务端发送带有带有","将占用一个序号。","就可以把它划分短一些再传送。如果应用程序一次只发送一个字节，tcp","已发送但尚未得到确认的字节。发送方在确认之前，不认为这些数据已经被处理。上图中的","已发送但尚未确认","已发送已确认","应用层","应用层（applic","建立连接前两次握手的","建立连接的时候，","当接收方收到乱序片段时，需要重复发送","必需要知道网络实际的数据处理带宽或是数据处理速度，这样才不会引起网络拥塞，导致丢包。","必需要解决的可靠传输以及包乱序（reordering）的问题，所以，tcp","快速重传机制","快速重传机制，实现了另外的一种丢包评定标准，即如果连续收到","扩展阅读：传输控制协议","扩展阅读：域名系统","扩展阅读：计算机网络之应用层","扩展阅读：计算机网络之数据链路层","扩展阅读：计算机网络之物理层","扩展阅读：计算机网络之网络层","扩展阅读：超文本传输协议","把应用程序看成是一连串的无结构的字节流。tcp","报文中选项字段的","报文后，把","报文时，仅仅表示对方不再发送数据了但是还能接收数据，而自己也未必全部数据都发送给对方了，所以己方可以立即关闭，也可以发送一些数据给对方后，再发送","报文给对方来表示同意现在关闭连接，因此，己方","收到消息后。b","收到消息后，a","收到消息后，b","收消息没问题。","放在一个报文里发送给客户端。","数据包的序列号和校验码","数据单元：ip","数据单元：帧（frame）。","数据单元：报文段（segment）或用户数据报。","数据单元：报文（message）。","数据单元：比特流。","数据报（packet）。","数据流中最早的字节已经发送并得到确认。这些数据是站在发送端的角度来看的。上图中的","数据链路层","有一个缓冲，当应用程序传送的数据块太长，tcp","有哪些重传机制，原理是什么？","服务器在","服务端为","服务端关闭与客户端的连接，向客户端发送一个","服务端向客户端发送带有","服务端收到这个","未发送而接收方","未发送而接收方已","标志的数据包。","次重复","没有确认的数据包不会从窗口中移走，定时器在重传时间到期内，每个片段的位置不变。","滑动窗口","滑动窗口原理是什么？","滑动窗口是","物理层","物理层（physic","状态下，收到建立连接请求的","由于接收方","的一种控制网络流量的技术。","的七层体系结构概念清楚，理论完整，但是比较复杂且不实用，所以并不流行。","的交互是一次一个数据块（大小不等），但","的包丢失了，立刻进行重传。","的特性是什么？","的缩写。","的缩写，ack","的设置：","确认包和自动重传","第一次挥手","第一次握手","第一次握手，a","第三次挥手","第三次握手","第三次握手，a","第二次挥手","第二次握手","第二次握手，b","第四次挥手","等。","类。","综合","网络层","网络层针对的还是主机之间的数据传输服务，而主机之间可以有很多链路，数据链路层（data","网络层（network","网络通信面经","而关闭连接时，服务器收到对方的","至此，tcp","虽然应用程序和","表示层","表示层（present","要保证所有的数据包都可以到达，所以，必需要有重传机制。","计算机网络分层一般有三种划分体系：osi","计算机网络如何分层？","认为：a","认为：b","设备尚未将数据发出","设短了，会导致可能并没有丢就重发。于是重发的就快，会增加网络拥塞，导致更多的超时，更多的超时导致更多的重发","设长了，重发就慢，丢了老半天才重发，没有效率，性能差；","说明：syn","超时重传机制","超时重传机制是指：发送数据包在一定的时间周期内没有收到相应的","这张图片相对于上一张图片，滑动窗口偏移了","这是学习计算机网络知识宏观层面必须要了解的核心点。知道了这些，对于网络的体系结构就基本上了解了。","这种机制的重点是","连接。","通过以下技术来保证：","重传机制","重传机制主要有两种：","问题：三次握手有什么用？什么是三次握手？为什么需要三次握手？","问题：为什么需要重传机制？tcp","问题：什么是滑动窗口？滑动窗口原理是什么？","问题：四次挥手有什么用？什么是四次挥手？为什么建立连接是三次握手，关闭连接确是四次挥手呢？","问题：计算机网络如何分层？各层的作用是什么？各层的主要协议、设备分别是什么？","需要通过三次握手、四次挥手原则建立和断开双向连接。","面向连接是指","面向连接的","💡","（1）三次握手有什么用？","（1）四次挥手有什么用？","（1）超时重传机制","（2）什么是三次握手？","（2）什么是四次挥手？","（2）快速重传机制","（3）为什么建立连接是三次握手，关闭连接确是四次挥手呢？","（3）为什么需要三次握手？","，但接收方根据最近一次关于发送方一次要发送多少字节确认自己有足够空间。发送方会立即尝试发送。上图中的"],"javaweb/network-interview.html":["1.","1.1.","1。","1。和","2","2.","3","3.","31","32","4","4.","4.1.","4.2.","4.3.","4.4.","4.5.","4.6.","45","46","5","51","52","a,","ack","acknowledg","ack。","ack，发送方就认为这个","ack，等待一定的时间，超时之后就认为这个数据包丢失，就会重新发送。这个等待时间被称为","advertis","b","b。","control","dn","fin","http","layer）不参与具体的传输，它提供包括访问验证和会话管理在内的建立和维护应用之间通信的机制。","layer）为两台主机中进程间的通信提供通用的数据传输服务。","layer）为分组交换网上的不同主机提供通信服务。在发送数据时，网络层把运输层产生的报文段或用户数据报封装成分组或包进行传送。","layer）只接收和发送一串比特(bit)流，不考虑信息的意义和信息结构。","layer）就是为同一链路的主机提供数据传输服务。数据链路层把网络层传下来的分组封装成帧。","layer）是为在应用过程之间传送的信息提供表示方法的服务，它关心的只是发出信息的语法与语义。表示层要完成某些特定的功能，主要有不同数据编码格式的转换，提供数据压缩、解压缩服务，对数据进行加密、解密。","layer）通过应用进程间的交互来完成特定网络应用。应用层协议定义的是应用进程间通信和交互的规则。","link","listen","mss","osi","protocol），即传输控制协议，它是一种面向连接的、可靠的、基于字节流的传输层通信协议。","readi","ready，还不允许将这部分数据发出。上图中的","rto","rto(retransmiss","seq","syn","syn/ack","synchron","tcp","tcp/udp","tcp（transmiss","tcp，用户数据报协议","tcp？","timeout)，即重传超时时间。","udp","window，又叫","window，这个字段是接收端告诉发送端自己还有多少缓冲区可以接收数据。于是发送端就可以根据这个接收端的处理能力来发送数据，而不会导致接收端处理不过来。","~","❓","一样，一个","一般都会分开发送，从而导致多了一次。","三次握手","三次握手完成，客户端与服务端已建立双向连接。","三次握手负责建立","不确定自己发消息是否没问题，所以就需要第三次握手。","个字节已经发送并确认。","个字节，意味着有","个已发送的字节得到了确认。","为","为了便于说明，假设客户端为","主要协议：http、dns、smtp、telnet、ftp、snmp","主要协议：ip。","主要协议：ppp、csma/cd","主要协议：tcp、udp。","也可以等待积累有足够多的字节后再构成报文段发送出去。","五层协议分层是一种折中方案，在现实中更为流行。","什么是","什么是滑动窗口？","以后的字节为第","会话层","会话层（session","传输层","传输层（transport","传输的数据包保证以原始顺序到达目的地，且数据包不被损坏。为了实现这点，tcp","低。","值，通信双方商定通信的最大报文长度。如果应用层交付下来的数据过大，就会对数据分段，然后发送；否则通过滑动窗口来控制通信双发的数据。","关键词：http、dns、ftp、telnet、dhcp","关键词：ip、icmp、arp、路由","关键词：udp、tcp、滑动窗口、拥塞控制、三次握手","关键词：点对点信道、广播信道、ppp、csma/cd、局域网、以太网、mac、适配器、集线器、网桥、交换机","关键词：调制、解调、数字信号、模拟信号、通信媒介、信道复用","典型设备：二层交换机、网桥、网卡。","典型设备：光纤、同轴电缆、双绞线、中继器和集线器。","典型设备：网关、路由器。","分层；五层协议分层；tcp/ip","包。","包，向客户端发送一个","包，并将确认序号设置为收到序号加","包，用来关闭客户端到服务端的数据传送。","包，确认序号为收到的序号加","协议分层。","双向连接。","发同步消息。b","发同步消息和确认消息。a","发消息、收消息都没问题。但是，此时","发消息、收消息都没问题；b","发消息没问题。","发消息没问题；b","发确认消息。b","可靠是指","可靠的","向","和","四次挥手","四次挥手负责断开","在","基于字节流的","头里有一个字段叫","如上图所示，三次握手流程如下：","如上图所示，四次挥手流程如下：","如果发送者没有收到正确的响应，它将重新发送数据包。如果多次超时，连接就会断开。","字节为第","实行流量控制和拥塞控制。这些确保措施会导致延迟，而且通常导致传输效率比","客户端向服务端发送","客户端向服务端发送一个","客户端向服务端发送带有","客户端向服务端发送带有带有","将占用一个序号。","就可以把它划分短一些再传送。如果应用程序一次只发送一个字节，tcp","已发送但尚未得到确认的字节。发送方在确认之前，不认为这些数据已经被处理。上图中的","已发送但尚未确认","已发送已确认","应用层","应用层（applic","建立连接前两次握手的","建立连接的时候，","当接收方收到乱序片段时，需要重复发送","必需要知道网络实际的数据处理带宽或是数据处理速度，这样才不会引起网络拥塞，导致丢包。","必需要解决的可靠传输以及包乱序（reordering）的问题，所以，tcp","快速重传机制","快速重传机制，实现了另外的一种丢包评定标准，即如果连续收到","扩展阅读：传输控制协议","扩展阅读：域名系统","扩展阅读：计算机网络之应用层","扩展阅读：计算机网络之数据链路层","扩展阅读：计算机网络之物理层","扩展阅读：计算机网络之网络层","扩展阅读：超文本传输协议","把应用程序看成是一连串的无结构的字节流。tcp","报文中选项字段的","报文后，把","报文时，仅仅表示对方不再发送数据了但是还能接收数据，而自己也未必全部数据都发送给对方了，所以己方可以立即关闭，也可以发送一些数据给对方后，再发送","报文给对方来表示同意现在关闭连接，因此，己方","收到消息后。b","收到消息后，a","收到消息后，b","收消息没问题。","放在一个报文里发送给客户端。","数据包的序列号和校验码","数据单元：ip","数据单元：帧（frame）。","数据单元：报文段（segment）或用户数据报。","数据单元：报文（message）。","数据单元：比特流。","数据报（packet）。","数据流中最早的字节已经发送并得到确认。这些数据是站在发送端的角度来看的。上图中的","数据链路层","有一个缓冲，当应用程序传送的数据块太长，tcp","有哪些重传机制，原理是什么？","服务器在","服务端为","服务端关闭与客户端的连接，向客户端发送一个","服务端向客户端发送带有","服务端收到这个","未发送而接收方","未发送而接收方已","标志的数据包。","次重复","没有确认的数据包不会从窗口中移走，定时器在重传时间到期内，每个片段的位置不变。","滑动窗口","滑动窗口原理是什么？","滑动窗口是","物理层","物理层（physic","状态下，收到建立连接请求的","由于接收方","的一种控制网络流量的技术。","的七层体系结构概念清楚，理论完整，但是比较复杂且不实用，所以并不流行。","的交互是一次一个数据块（大小不等），但","的包丢失了，立刻进行重传。","的特性是什么？","的缩写。","的缩写，ack","的设置：","确认包和自动重传","第一次挥手","第一次握手","第一次握手，a","第三次挥手","第三次握手","第三次握手，a","第二次挥手","第二次握手","第二次握手，b","第四次挥手","等。","类。","综合","网络层","网络层针对的还是主机之间的数据传输服务，而主机之间可以有很多链路，数据链路层（data","网络层（network","网络通信","网络通信面经","而关闭连接时，服务器收到对方的","至此，tcp","虽然应用程序和","表示层","表示层（present","要保证所有的数据包都可以到达，所以，必需要有重传机制。","计算机网络分层一般有三种划分体系：osi","计算机网络如何分层？","认为：a","认为：b","设备尚未将数据发出","设短了，会导致可能并没有丢就重发。于是重发的就快，会增加网络拥塞，导致更多的超时，更多的超时导致更多的重发","设长了，重发就慢，丢了老半天才重发，没有效率，性能差；","说明：syn","超时重传机制","超时重传机制是指：发送数据包在一定的时间周期内没有收到相应的","这张图片相对于上一张图片，滑动窗口偏移了","这是学习计算机网络知识宏观层面必须要了解的核心点。知道了这些，对于网络的体系结构就基本上了解了。","这种机制的重点是","连接。","通过以下技术来保证：","重传机制","重传机制主要有两种：","问题：三次握手有什么用？什么是三次握手？为什么需要三次握手？","问题：为什么需要重传机制？tcp","问题：什么是滑动窗口？滑动窗口原理是什么？","问题：四次挥手有什么用？什么是四次挥手？为什么建立连接是三次握手，关闭连接确是四次挥手呢？","问题：计算机网络如何分层？各层的作用是什么？各层的主要协议、设备分别是什么？","需要通过三次握手、四次挥手原则建立和断开双向连接。","面向连接是指","面向连接的","💡","（1）三次握手有什么用？","（1）四次挥手有什么用？","（1）超时重传机制","（2）什么是三次握手？","（2）什么是四次挥手？","（2）快速重传机制","（3）为什么建立连接是三次握手，关闭连接确是四次挥手呢？","（3）为什么需要三次握手？","，但接收方根据最近一次关于发送方一次要发送多少字节确认自己有足够空间。发送方会立即尝试发送。上图中的"],"database/database.html":["1.所有非叶子结点至多拥有两个儿子（left和right）；","1.数据库有个bin","1、做数据的热备，作为后备数据库，主数据库服务器故障后，可切换到从数据库继续工作，避免数据丢失。","2.我们的目标就是把主数据库的bin","2.所有结点存储一个关键字；","2.读写分离，使数据库能支撑更大的并发。部分报表sql语句非常的慢，导致锁表，影响前台服务。如果前台使用master，报表使用slave，那么报表sql将不会造成前台锁，保证了前台速度。","2.进行比较的旧值","3.拟写入的新值","3.让其在从数据的relay","3.非叶子结点的左指针指向小于其关键字的子树，右指针指向大于其关键字的子树","aba问题：一个线程one从内存位置v中取出a，这时候另一个线程two也从内存中取出a，并且two进行了一些操作变成了b，然后two又将v位置的数据变成a，这时候线程one进行cas操作发现内存中仍然是a，然后one操作成功","a时，cas通过原子方式用新值b来更新v的值，否则不会执行任何操作","b","b+树","b+树叶子节点data域记录完整的数据记录，这种叫做聚簇索引","b+树和b树区别","b+树所有叶子节点形成有序链表，便于范围查询","b+树所有查询都要查找到叶子节点，查询性能稳定。","b+树索引","binlog线程：负责将主服务器上的数据更改写入二进制日志中","b树","b树和b+树","cas算法","compar","having、where、避免临时表、避免使用in","having、避免distinct耗费时间的排序操作,模糊匹配，临时表，减少重复工作","id：查询的标识符","key：使用的索引","lock","log二进制文件，记录了所有sql语句。","log文件的sql语句复制过来。","log重做日志文件中再执行一次这些sql语句即可。","log）中","long_query怎么解决","mybatis下注入防范：mybatis是支持定制化sql、存储过程以及高级映射的优秀的持久层框架，几乎避免了所有的jdbc代码和手动设置参数以及获取结果集。","mysql高并发","read","rows：使用的行数","select","select_type：使用select的类型","sql语句优化","swap（比较与交换），是一种有名的无锁算法。","type：连接使用了哪种类别","update操作来实现悲观锁，获取select的行锁","v","…","。索引的叶节点就是数据节点","一次i/o读入一块，一块的大小就是b+树叶子节点的大小，每次读入一个完整的节点，所以是一个树高","一致性","不可能在非叶子结点命中；非叶子节点作为一个索引","与红黑树的比较：为什么使用b+树实现索引","主从复制","主从数据库负责各自的读和写，极大程度缓解了锁的争用","主索引","主键","主键是唯一的，数据库表只能包含一个主键","举例：行锁，表锁，读锁和写锁，synchron","乐观锁：","什么是mysql","从库i/o线程：负责从主服务器上读取二进制日志，并写入从服务器的重放日志（replay","从库sql线程：负责读取重放日志并重放其中的sql语句","从服务器可以使用myisam，提升查询性能以及节约系统开销","优先获取锁，再进行业务处理，一锁二查三更新","优化数据访问","优点：","使用expalin分析","使用hibernate框架的sql注入防范","使用preparedstatement（预处理执行语句），它内置了处理sql注入的能力，可以对sql语句进行查询参数化，只要使用setstring方法传值即可","使用辅助索引进行查找，先获取主键值，再到主索引进行查找","保证数据的唯一性","共享锁","共享锁又称","冗余：存储两倍数据，冗余降低了性能，但提高了数据的安全性。","冲突检测和数据更新","减少服务器扫描的行数：使用索引来覆盖查询","减少请求的数据量","分组和排序时，加快速度","创建索引和维护索引需要时间成本","创建索引和维护索引需要空间成本","前缀索引：对于varchar类型的列，使用前缀索引","加快表与表之间的连接","原因：传入的参数与系统的sql拼接成了合法的sql而导致的","原子性","原理","原理：","原理：利用数据库对特殊标识符的解析强行从页面向后台传入","只返回必要的列","含义：建立一个和主数据库完全一样的数据库环境","因为无法把数据行存放在两个不同的地方，所以一个表只能有一个聚簇索引","在java中java.util.concurrent.atomic包下面的原子变量类就是使用了乐观锁的一种实现方式cas实现的","在事务完成以后，该事务所对数据库做的更改会持久保存在数据库中，并不会被回滚","在事务开始之前，和在事务执行完成后，数据库的完整性约束没有被破坏","基于b树和叶子节点顺序访问指针进行实现","增加冗余，提高可用性","复制","外键","多个用户访问数据库时，数据库为每一个用户开启一个事务，事务之间互不干扰。","好处：","如何保证线程安全","实现：版本号和cas算法","平衡树查找复杂度等于树高，红黑树的树高太高而引起i/o操作频繁，导致效率低下","当且仅当","悲观锁:","悲观锁和乐观锁","慢查询","所有关键字都出现在叶子结点的链表中。且链表中的关键字恰好是有序的；","持久性","提交版本必须大于记录当前版本才能执行更新","提高性能的原因","提高查询速度","数据库","数据库事务的四个特性","数据库优化","数据库范式","数据库连接池的作用","整个事务要么全部完成，要么全部不完成，不可能停滞在中间某个环节。事务在中间某个过程中发生错误，会被回滚到开始的状态","是一种关系型数据库，也是数据库管理系统","是虚拟的表，与包含数据的表不一样，视图包含使用时动态检索数据的查询，不包含任何列或数据","更快的响应时间","更新数据时效率低，因为要同时更新索引","术语","查询性能优化","概念：读从库，写主库","涉及到三个操作数1.需要读写的地址","版本号：","独立的列：索引不能是表达式的一部分","用于关联两个表","的值等于","第一范式：列的原子性，不能再拆分为列","第三范式：首先2nf，非主键列必须直接依赖主键，不存在传递依赖","第二范式：1nf，没有包含主键的列必须完全依赖于主键","索引","索引列的顺序：选择性强的索引列放在前面","索引是对数据库表中一列或多列的值进行排序的一种结构","索引的优化","线程","统一的管理","维护一定数量的连接，减少创建连接的时间","缓存重复查询的数据","缺点：","缺点：aba问题；改进：版本号","聚集所以和非聚集索引区别","聚集索引和非聚集索引区别","聚集索引，数据按索引顺序存储，子结点存储真实的物理数据","若刚才读取到的version值为当前数据库中的version值相等时才更新，否则重试更新操作，直到更新成功。","覆盖索引：覆盖所有要查询的字段的值","视图","读写分离","读锁","辅助索引","辅助索引的叶子节点的data域记录着主键的值。","返回必要的行","适合经常产生冲突的情况","采用正则表达式将包含有单引号(')、分号(;)、注释符号（","防止sql注入","隔离性","非聚集索引，叶节点仍然是索引节点，只不过有一个指针指向对应的数据块。","）的语句给替换掉来防止sql注入","，是读取操作创建的锁。其他用户可以并发读取数据，但任何事务都不能对数据进行修改（获取数据上的排他锁），直到已释放所有共享锁。","？设置参数，开启慢日志功能，得到耗时超过一定时间的sql"],"linux/linux.html":["linux","硬链接和软连接"],"怎么用Git写书.html":["#","$","'publish","(此时gitbook的根目录下的node_modules文件夹中已经有了该插件了)","*",".","./","//将_book中的子文件全部移到外层，并删除_book","//清空一下分支","//然后将master分支下的_book静态页面文件内容全部复制到gh","//这时候gh","4000","[xxxx](chapter1/section1.1.md)","[xxxx](chapter1/section1.2.md)","[xxxx](chapter2/section2.1.md)","[xxxx](chapter2/section2.2.md)","[书籍路径]","[电子书名称](readme.md)","[第一章](chapter1/readme.md)","[第二章](chapter2/readme.md)","[输出路径]","_book","_book/*","add","book.json(如果没有则新建)中添加插件配置，如图","build","cd","chapter","checkout","cli","commit","config","demo","g","gh","git","gitbook","gitbook根目录","gitbook源文件发布到gh","gitbook目录折叠","github，在托管电子书的仓库建一个","http://localhost:4000","http://yourusername.github.io/bookname。","https://registry.npm.taobao.org/","init","instal","m","master","mkdir","mv","node","npm","npm），而如果没有或报错，则你需要去","origin","orphan","page","pages'","pages分支","pages分支下","pages分支下就是全部的静态页面文件了，接下来就是提交到远程gh","pages分支，然后复制到这个目录下，然后推送、","plugin","push","readme.md","registri","rf","rm","serv","serve。","set","summary.md，readme.md","summary.md，执行","toggl","v","web","书写","以后，目录里会有这两个文件","你可以将电子书提交到","先检测自己电脑是否安装了node","全局安装","关于更多的gitbook插件，读者可以参考插件网站。","分支，将本地编译好的电子书文件（项目根目录下的","创建一个git仓库，然后就愉快的拉取","创建一个目录，进入","初始化电子书","初始化电子书目录","别忘了在提交的时候忽略掉module文件夹，不然每次提交拉取的时候会很痛苦....","可以用博客园的此编辑器，添加图片后发布出来，然后再编辑的时候，就可以看到图片的链接，直接复制到本地编辑器就可以","命令实际上会首先调用","和","图形化编辑管理工具","图片使用","在根目录(即与summary.md同级的目录)下的配置文件","处理vscode中md文件的乱码问题，可以手动生成md文件。不用系统自动生成，这样可以避免乱码","复制_book文件下的所有文件，切换到","复制代码","如果当前书籍写完了，想要发布到自己的网站的话，也可以使用命令输出成html文件使用","如果成功打印出版本号，说明你本地具备了","安装node","安装环境","官网进行","小拓展","左边的版本是推荐安装的稳定版本，也就是目前已经被正式列入标准的版本，而右边的版本是当前最新的版本，该版本包含了一些新的特性，还未被完全列入标准，可能以后会有所变动。这里建议大家安装最新的","建议使用","当然也可以发布到gitbook，然而这个网站访问有点慢","怎么用git写书","提交循环即可了。","插件名称：toggl","效果：默认只在目录导航中显示章的标题，而不会显示小节的标题，点击每一章或者每一节会显示当前章或节的子目录，如果有的话，但是同时会收起其它之前展开的章节。","是对电子书的简单介绍，summary.md","是电子书的目录结构。","最后","最后搭配git一起使用时，只需要在书籍根目录下执行","服务器，监听在本地的","查看","淘宝源：","然后安装gitbook","版本","生成目录结构文件，然后编写各个文件夹中生成的文件。","用一个图形化编辑管理工具，方便我们实时编辑查看内容，这里推荐用vscode，又可以编辑markdown，又可以用git，又可以分屏看效果。别忘了在提交的时候忽略掉module文件夹，不然每次提交拉取的时候会很痛苦....","的下载及安装，如图：","的运行环境（安装","目录结构长这样：","目录里的文件","看你的插件是否已经生效。","稳定版进行开发。","端口。","第一步","第三部","第二步","编写","编译书籍，完成以后会打开一个","编译电子书","访问","说明一下：","配置完成后，可按照一下步骤进行：","默认安装","）上传到这个分支，然后就可以使用这个网址访问"]},"length":35},"tokenStore":{"root":{"0":{"0":{"0":{"0":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.023255813953488372}}},"docs":{}},"docs":{},":":{"0":{"2":{"docs":{},":":{"1":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"5":{"docs":{},"t":{"1":{"0":{"docs":{},":":{"4":{"3":{"docs":{},":":{"1":{"8":{"docs":{},".":{"0":{"9":{"3":{"docs":{},"+":{"0":{"8":{"0":{"0":{"docs":{},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"1":{"6":{"0":{"docs":{},"+":{"0":{"8":{"0":{"0":{"docs":{},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"7":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0026678523788350376},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.011586901763224182}},")":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0056179775280898875},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0035571365051133837},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.004371584699453552},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002857142857142857}},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0031124944419742106},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.006017505470459519},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.011494252873563218},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.005836575875486381},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.006462035541195477},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.01232394366197183},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.007558578987150416}}},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"然":{"docs":{},"后":{"docs":{},"各":{"docs":{},"自":{"docs":{},"加":{"docs":{},"了":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}},".":{"0":{"2":{"1":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.008564231738035265}}}},"docs":{}},"6":{"6":{"8":{"4":{"8":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0025188916876574307}},"%":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"f":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}},"1":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"3":{"9":{"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"4":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"6":{"7":{"6":{"3":{"5":{"4":{"1":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"7":{"5":{"docs":{},")":{"docs":{},"，":{"docs":{},"则":{"docs":{},"会":{"docs":{},"重":{"docs":{},"新":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"f":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},";":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}},"：":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"数":{"docs":{},"据":{"docs":{},"量":{"docs":{},"过":{"docs":{},"大":{"docs":{},"或":{"docs":{},"者":{"docs":{},"运":{"docs":{},"气":{"docs":{},"不":{"docs":{},"佳":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"会":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"些":{"docs":{},"队":{"docs":{},"列":{"docs":{},"长":{"docs":{},"度":{"docs":{},"过":{"docs":{},"长":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"还":{"docs":{},"是":{"docs":{},"采":{"docs":{},"用":{"docs":{},"单":{"docs":{},"向":{"docs":{},"列":{"docs":{},"表":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"查":{"docs":{},"询":{"docs":{},"某":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"l":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"，":{"docs":{},"当":{"docs":{},"有":{"docs":{},"任":{"docs":{},"务":{"docs":{},"来":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"去":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"当":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"目":{"docs":{},"达":{"docs":{},"到":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"导":{"docs":{},"致":{"docs":{},"无":{"docs":{},"法":{"docs":{},"对":{"docs":{},"它":{"docs":{},"们":{"docs":{},"进":{"docs":{},"行":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"每":{"docs":{},"次":{"docs":{},"进":{"docs":{},"入":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}},"重":{"docs":{},"新":{"docs":{},"进":{"docs":{},"入":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"1":{"0":{"0":{"0":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}},"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"%":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}},"6":{"4":{"2":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"7":{"3":{"8":{"docs":{},"k":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}},"m":{"docs":{},"b":{"docs":{},"/":{"docs":{},"s":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"在":{"docs":{},"进":{"docs":{},"行":{"docs":{},"并":{"docs":{},"发":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"回":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"资":{"docs":{},"源":{"docs":{},"的":{"docs":{},"限":{"docs":{},"制":{"docs":{},"。":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"资":{"docs":{},"源":{"docs":{},"限":{"docs":{},"制":{"docs":{},"有":{"docs":{},"带":{"docs":{},"宽":{"docs":{},"的":{"docs":{},"上":{"docs":{},"传":{"docs":{},"/":{"docs":{},"下":{"docs":{},"载":{"docs":{},"速":{"docs":{},"度":{"docs":{},"、":{"docs":{},"硬":{"docs":{},"盘":{"docs":{},"的":{"docs":{},"读":{"docs":{},"写":{"docs":{},"速":{"docs":{},"度":{"docs":{},"和":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"，":{"docs":{},"i":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"%":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"g":{"docs":{},"b":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"1":{"0":{"1":{"4":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"3":{"1":{"5":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"5":{"8":{"9":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"，":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}},"2":{"0":{"3":{"0":{"4":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"3":{"7":{"9":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"5":{"4":{"5":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"6":{"2":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}}},"docs":{}},"8":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}},"3":{"1":{"0":{"7":{"2":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"6":{"4":{"4":{"7":{"docs":{},"k":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},".":{"1":{"9":{"docs":{},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"6":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"4":{"7":{"1":{"8":{"6":{"docs":{},"k":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},":":{"2":{"0":{"docs":{},":":{"0":{"9":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"docs":{}},"4":{"7":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"5":{"9":{"docs":{},":":{"0":{"8":{"docs":{},".":{"4":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"(":{"0":{"docs":{},"x":{"1":{"1":{"1":{"1":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"6":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"，":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"从":{"docs":{},"速":{"docs":{},"度":{"docs":{},"、":{"docs":{},"功":{"docs":{},"效":{"docs":{},"、":{"docs":{},"质":{"docs":{},"量":{"docs":{},"来":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"么":{"docs":{},"做":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"。":{"docs":{},"理":{"docs":{},"想":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"真":{"docs":{},"正":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"访":{"docs":{},"问":{"docs":{},"量":{"docs":{},"能":{"docs":{},"够":{"docs":{},"达":{"docs":{},"到":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"有":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"假":{"docs":{},"如":{"docs":{},"有":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"需":{"docs":{},"要":{"docs":{},"访":{"docs":{},"问":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"需":{"docs":{},"要":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"都":{"docs":{},"恰":{"docs":{},"好":{"docs":{},"分":{"docs":{},"别":{"docs":{},"落":{"docs":{},"在":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"中":{"docs":{},"，":{"docs":{},"则":{"docs":{},"这":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"能":{"docs":{},"够":{"docs":{},"无":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"地":{"docs":{},"自":{"docs":{},"由":{"docs":{},"访":{"docs":{},"问":{"docs":{},"（":{"docs":{},"因":{"docs":{},"为":{"docs":{},"他":{"docs":{},"们":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"同":{"docs":{},"一":{"docs":{},"把":{"docs":{},"锁":{"docs":{},"）":{"docs":{},"，":{"docs":{},"达":{"docs":{},"到":{"docs":{},"同":{"docs":{},"时":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"效":{"docs":{},"果":{"docs":{},"。":{"docs":{},"这":{"docs":{},"也":{"docs":{},"是":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"这":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"起":{"docs":{},"名":{"docs":{},"为":{"docs":{},"“":{"docs":{},"并":{"docs":{},"发":{"docs":{},"级":{"docs":{},"别":{"docs":{},"”":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0022232103156958646}}}}}},"7":{"5":{"9":{"2":{"1":{"8":{"6":{"0":{"4":{"4":{"4":{"1":{"5":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},".":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"8":{"0":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"1":{"9":{"4":{"8":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"7":{"docs":{},":":{"5":{"2":{"docs":{},".":{"5":{"9":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"7":{"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"3":{"docs":{},".":{"3":{"6":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"4":{"docs":{},".":{"7":{"9":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"5":{"docs":{},".":{"0":{"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"2":{"5":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"6":{"1":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"7":{"6":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}},"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0035571365051133837},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.008032128514056224},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607},"javacore/jvm/jvm-interview.html":{"ref":"javacore/jvm/jvm-interview.html","tf":0.09090909090909091},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0025188916876574307}},".":{"1":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}}},"2":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"3":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"4":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"5":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099},"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"6":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"7":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"/":{"1":{"docs":{},".":{"8":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}},"docs":{}}},"docs":{}},"结":{"docs":{},"构":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"8":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}}}}}}}}}}}}},"区":{"docs":{},"别":{"docs":{},"?":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}},"结":{"docs":{},"构":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.02197802197802198}}}}}},"同":{"docs":{},"步":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"概":{"docs":{},"览":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"构":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"非":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}},"j":{"docs":{},"d":{"docs":{},"k":{"1":{"docs":{},".":{"8":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"降":{"docs":{},"低":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"粒":{"docs":{},"度":{"docs":{},"，":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"1":{"docs":{},".":{"7":{"docs":{},"版":{"docs":{},"本":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"粒":{"docs":{},"度":{"docs":{},"是":{"docs":{},"基":{"docs":{},"于":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"的":{"docs":{},"，":{"docs":{},"包":{"docs":{},"含":{"docs":{},"多":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"，":{"docs":{},"而":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"1":{"docs":{},".":{"8":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"粒":{"docs":{},"度":{"docs":{},"就":{"docs":{},"是":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"（":{"docs":{},"首":{"docs":{},"节":{"docs":{},"点":{"docs":{},"）":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"性":{"docs":{},"：":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}},"为":{"docs":{},"了":{"docs":{},"维":{"docs":{},"护":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"协":{"docs":{},"定":{"docs":{},"，":{"docs":{},"该":{"docs":{},"协":{"docs":{},"定":{"docs":{},"指":{"docs":{},"出":{"docs":{},"：":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"必":{"docs":{},"须":{"docs":{},"具":{"docs":{},"有":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"散":{"docs":{},"列":{"docs":{},"码":{"docs":{},"（":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"）":{"docs":{},"；":{"docs":{},"而":{"docs":{},"两":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"因":{"docs":{},"为":{"docs":{},"粒":{"docs":{},"度":{"docs":{},"降":{"docs":{},"低":{"docs":{},"了":{"docs":{},"，":{"docs":{},"在":{"docs":{},"相":{"docs":{},"对":{"docs":{},"而":{"docs":{},"言":{"docs":{},"的":{"docs":{},"低":{"docs":{},"粒":{"docs":{},"度":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"并":{"docs":{},"不":{"docs":{},"比":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"差":{"docs":{},"，":{"docs":{},"在":{"docs":{},"粗":{"docs":{},"粒":{"docs":{},"度":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"中":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"可":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"来":{"docs":{},"控":{"docs":{},"制":{"docs":{},"各":{"docs":{},"个":{"docs":{},"低":{"docs":{},"粒":{"docs":{},"度":{"docs":{},"的":{"docs":{},"边":{"docs":{},"界":{"docs":{},"，":{"docs":{},"更":{"docs":{},"加":{"docs":{},"的":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"，":{"docs":{},"而":{"docs":{},"在":{"docs":{},"低":{"docs":{},"粒":{"docs":{},"度":{"docs":{},"中":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"的":{"docs":{},"优":{"docs":{},"势":{"docs":{},"就":{"docs":{},"没":{"docs":{},"有":{"docs":{},"了":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"底":{"docs":{},"层":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}},"继":{"docs":{},"承":{"docs":{},"的":{"docs":{},"父":{"docs":{},"类":{"docs":{},"不":{"docs":{},"同":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}},"若":{"docs":{},"桶":{"docs":{},"中":{"docs":{},"链":{"docs":{},"表":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"8":{"docs":{},"时":{"docs":{},"，":{"docs":{},"链":{"docs":{},"表":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"树":{"docs":{},"结":{"docs":{},"构":{"docs":{},"；":{"docs":{},"若":{"docs":{},"桶":{"docs":{},"中":{"docs":{},"链":{"docs":{},"表":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"小":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"6":{"docs":{},"时":{"docs":{},"，":{"docs":{},"树":{"docs":{},"结":{"docs":{},"构":{"docs":{},"还":{"docs":{},"原":{"docs":{},"成":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"查":{"docs":{},"找":{"docs":{},"长":{"docs":{},"度":{"docs":{},"是":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"8":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"平":{"docs":{},"均":{"docs":{},"查":{"docs":{},"找":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"3":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"继":{"docs":{},"续":{"docs":{},"使":{"docs":{},"用":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"平":{"docs":{},"均":{"docs":{},"查":{"docs":{},"找":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"8":{"docs":{},"/":{"2":{"docs":{},"=":{"4":{"docs":{},"，":{"docs":{},"这":{"docs":{},"才":{"docs":{},"有":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"树":{"docs":{},"的":{"docs":{},"必":{"docs":{},"要":{"docs":{},"。":{"docs":{},"链":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"小":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"6":{"docs":{},"，":{"6":{"docs":{},"/":{"2":{"docs":{},"=":{"3":{"docs":{},"，":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"速":{"docs":{},"度":{"docs":{},"也":{"docs":{},"很":{"docs":{},"快":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"树":{"docs":{},"结":{"docs":{},"构":{"docs":{},"和":{"docs":{},"生":{"docs":{},"成":{"docs":{},"树":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"并":{"docs":{},"不":{"docs":{},"会":{"docs":{},"太":{"docs":{},"短":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"监":{"docs":{},"控":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"使":{"docs":{},"用":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.006046863189720333}}}},"所":{"docs":{},"有":{"docs":{},"非":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"至":{"docs":{},"多":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"儿":{"docs":{},"子":{"docs":{},"（":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"和":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"）":{"docs":{},"；":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"有":{"docs":{},"个":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.005366726296958855},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0030234315948601664}},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0056179775280898875},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"旧":{"docs":{},"容":{"docs":{},"量":{"docs":{},"的":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}},"则":{"docs":{},"表":{"docs":{},"示":{"docs":{},"需":{"docs":{},"要":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"调":{"docs":{},"用":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"；":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"目":{"docs":{},"的":{"docs":{},"：":{"docs":{},"混":{"docs":{},"合":{"docs":{},"原":{"docs":{},"始":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"码":{"docs":{},"的":{"docs":{},"高":{"docs":{},"位":{"docs":{},"和":{"docs":{},"低":{"docs":{},"位":{"docs":{},"，":{"docs":{},"以":{"docs":{},"此":{"docs":{},"来":{"docs":{},"加":{"docs":{},"大":{"docs":{},"低":{"docs":{},"位":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"性":{"docs":{},"。":{"docs":{},"而":{"docs":{},"且":{"docs":{},"混":{"docs":{},"合":{"docs":{},"后":{"docs":{},"的":{"docs":{},"低":{"docs":{},"位":{"docs":{},"掺":{"docs":{},"杂":{"docs":{},"了":{"docs":{},"高":{"docs":{},"位":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"特":{"docs":{},"征":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"高":{"docs":{},"位":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"也":{"docs":{},"被":{"docs":{},"变":{"docs":{},"相":{"docs":{},"保":{"docs":{},"留":{"docs":{},"下":{"docs":{},"来":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},")":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}},",":{"0":{"docs":{},",":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"(":{"docs":{},"红":{"docs":{},"色":{"docs":{},")":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"新":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"）":{"docs":{},"，":{"docs":{},"将":{"docs":{},"可":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{},"超":{"docs":{},"时":{"docs":{},"错":{"docs":{},"误":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}},"，":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"因":{"docs":{},"此":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"次":{"docs":{},"数":{"docs":{},"为":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}},"表":{"docs":{},"示":{"docs":{},"正":{"docs":{},"在":{"docs":{},"进":{"docs":{},"行":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"操":{"docs":{},"作":{"docs":{},"；":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}},"尽":{"docs":{},"管":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"两":{"docs":{},"次":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}},"之":{"docs":{},"后":{"docs":{},"为":{"docs":{},"节":{"docs":{},"点":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}},"直":{"docs":{},"到":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"的":{"docs":{},"值":{"docs":{},"和":{"docs":{},"设":{"docs":{},"置":{"docs":{},"的":{"docs":{},"值":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"才":{"docs":{},"会":{"docs":{},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"失":{"docs":{},"效":{"docs":{},"时":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"减":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"#":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"正":{"docs":{},"在":{"docs":{},"进":{"docs":{},"行":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"到":{"docs":{},"新":{"docs":{},"副":{"docs":{},"本":{"docs":{},"上":{"docs":{},"，":{"docs":{},"再":{"docs":{},"切":{"docs":{},"换":{"docs":{},"引":{"docs":{},"用":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}},"则":{"docs":{},"进":{"docs":{},"行":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}},"的":{"docs":{},"值":{"docs":{},"是":{"docs":{},"所":{"docs":{},"有":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"位":{"docs":{},"全":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"等":{"docs":{},"同":{"docs":{},"于":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"后":{"docs":{},"几":{"docs":{},"位":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{},"只":{"docs":{},"要":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"本":{"docs":{},"身":{"docs":{},"分":{"docs":{},"布":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"就":{"docs":{},"是":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"．":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"类":{"docs":{},"中":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"比":{"docs":{},"较":{"docs":{},"的":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"地":{"docs":{},"址":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"地":{"docs":{},"址":{"docs":{},"指":{"docs":{},"向":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"地":{"docs":{},"址":{"docs":{},"时":{"docs":{},"，":{"docs":{},"才":{"docs":{},"认":{"docs":{},"为":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"地":{"docs":{},"址":{"docs":{},"是":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"就":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"b":{"docs":{},"/":{"docs":{},"s":{"docs":{},",":{"docs":{},"系":{"docs":{},"统":{"docs":{},"启":{"docs":{},"动":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}},"，":{"docs":{},"最":{"docs":{},"大":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"a":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}},"]":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"但":{"docs":{},"实":{"docs":{},"际":{"docs":{},"情":{"docs":{},"况":{"docs":{},"并":{"docs":{},"非":{"docs":{},"总":{"docs":{},"是":{"docs":{},"如":{"docs":{},"此":{"docs":{},"理":{"docs":{},"想":{"docs":{},"，":{"docs":{},"虽":{"docs":{},"然":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"计":{"docs":{},"数":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"和":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},"）":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}},"!":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}},",":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}},"/":{"1":{"0":{"docs":{},"。":{"docs":{},"调":{"docs":{},"小":{"docs":{},"这":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"将":{"docs":{},"增":{"docs":{},"大":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"docs":{}},"docs":{}},"g":{"docs":{},"b":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"}":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},"就":{"docs":{},"表":{"docs":{},"示":{"docs":{},"还":{"docs":{},"有":{"docs":{},"内":{"docs":{},"容":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"继":{"docs":{},"续":{"docs":{},"读":{"docs":{},"取":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}},"l":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}}}},"、":{"docs":{},"做":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"热":{"docs":{},"备":{"docs":{},"，":{"docs":{},"作":{"docs":{},"为":{"docs":{},"后":{"docs":{},"备":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"，":{"docs":{},"主":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"故":{"docs":{},"障":{"docs":{},"后":{"docs":{},"，":{"docs":{},"可":{"docs":{},"切":{"docs":{},"换":{"docs":{},"到":{"docs":{},"从":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"继":{"docs":{},"续":{"docs":{},"工":{"docs":{},"作":{"docs":{},"，":{"docs":{},"避":{"docs":{},"免":{"docs":{},"数":{"docs":{},"据":{"docs":{},"丢":{"docs":{},"失":{"docs":{},"。":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"0":{"0":{"0":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},")":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"1":{"6":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"docs":{}},"4":{"4":{"7":{"2":{"3":{"2":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"7":{"1":{"5":{"2":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.009571788413098237}}},"1":{"7":{"1":{"1":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}}},"docs":{}},"4":{"2":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}}},"docs":{}},"docs":{}},"docs":{}},"2":{"4":{"9":{"0":{"6":{"9":{"2":{"4":{"6":{"7":{"6":{"3":{"1":{"8":{"2":{"3":{"9":{"7":{"docs":{},"l":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"3":{"3":{"5":{"3":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}},"4":{"0":{"6":{"4":{"docs":{},".":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"docs":{}},"docs":{}},"8":{"6":{"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"5":{"0":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"8":{"1":{"6":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{},".":{"3":{"9":{"5":{"docs":{},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"4":{"6":{"2":{"docs":{},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}}},"6":{"1":{"1":{"2":{"docs":{},".":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"7":{"4":{"9":{"3":{"1":{"docs":{},"k":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}},"8":{"0":{"3":{"6":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},".":{"2":{"9":{"9":{"docs":{},"g":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.008564231738035265}}}},"docs":{}},"docs":{}},"docs":{}}},"8":{"9":{"2":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.004001778568252557},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.013966480446927373},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.004310344827586207},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.006024096385542169},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-interview.html":{"ref":"javacore/jvm/jvm-interview.html","tf":0.09090909090909091},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},".":{"1":{"0":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"2":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"3":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"4":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"5":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"6":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"7":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"8":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"9":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.02197802197802198}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"将":{"docs":{},"整":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"桶":{"docs":{},"进":{"docs":{},"行":{"docs":{},"了":{"docs":{},"分":{"docs":{},"段":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"上":{"docs":{},"都":{"docs":{},"有":{"docs":{},"锁":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"d":{"docs":{},"k":{"1":{"docs":{},".":{"8":{"docs":{},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"变":{"docs":{},"得":{"docs":{},"更":{"docs":{},"加":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"操":{"docs":{},"作":{"docs":{},"也":{"docs":{},"更":{"docs":{},"加":{"docs":{},"清":{"docs":{},"晰":{"docs":{},"流":{"docs":{},"畅":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"已":{"docs":{},"经":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"概":{"docs":{},"念":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"这":{"docs":{},"种":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"了":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"粒":{"docs":{},"度":{"docs":{},"的":{"docs":{},"降":{"docs":{},"低":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"也":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"v":{"docs":{},"m":{"docs":{},"的":{"docs":{},"开":{"docs":{},"发":{"docs":{},"团":{"docs":{},"队":{"docs":{},"从":{"docs":{},"来":{"docs":{},"都":{"docs":{},"没":{"docs":{},"有":{"docs":{},"放":{"docs":{},"弃":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"基":{"docs":{},"于":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"的":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"优":{"docs":{},"化":{"docs":{},"空":{"docs":{},"间":{"docs":{},"更":{"docs":{},"大":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"内":{"docs":{},"嵌":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"比":{"docs":{},"使":{"docs":{},"用":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"更":{"docs":{},"加":{"docs":{},"自":{"docs":{},"然":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"重":{"docs":{},"写":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"相":{"docs":{},"等":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{},"在":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"就":{"docs":{},"会":{"docs":{},"存":{"docs":{},"储":{"docs":{},"两":{"docs":{},"个":{"docs":{},"值":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"导":{"docs":{},"致":{"docs":{},"混":{"docs":{},"淆":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"他":{"docs":{},"们":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"是":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"地":{"docs":{},"址":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"使":{"docs":{},"用":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"比":{"docs":{},"较":{"docs":{},"得":{"docs":{},"出":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"是":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"是":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"不":{"docs":{},"符":{"docs":{},"合":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"候":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"重":{"docs":{},"写":{"docs":{},"以":{"docs":{},"满":{"docs":{},"足":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"预":{"docs":{},"期":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"重":{"docs":{},"写":{"docs":{},"了":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"和":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"不":{"docs":{},"同":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}},"还":{"docs":{},"有":{"docs":{},"选":{"docs":{},"择":{"6":{"docs":{},"和":{"8":{"docs":{},"，":{"docs":{},"中":{"docs":{},"间":{"docs":{},"有":{"docs":{},"个":{"docs":{},"差":{"docs":{},"值":{"7":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"效":{"docs":{},"防":{"docs":{},"止":{"docs":{},"链":{"docs":{},"表":{"docs":{},"和":{"docs":{},"树":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"转":{"docs":{},"换":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"设":{"docs":{},"计":{"docs":{},"成":{"docs":{},"链":{"docs":{},"表":{"docs":{},"个":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"8":{"docs":{},"则":{"docs":{},"链":{"docs":{},"表":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"树":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"链":{"docs":{},"表":{"docs":{},"个":{"docs":{},"数":{"docs":{},"小":{"docs":{},"于":{"8":{"docs":{},"则":{"docs":{},"树":{"docs":{},"结":{"docs":{},"构":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"不":{"docs":{},"停":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"、":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"链":{"docs":{},"表":{"docs":{},"个":{"docs":{},"数":{"docs":{},"在":{"8":{"docs":{},"左":{"docs":{},"右":{"docs":{},"徘":{"docs":{},"徊":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"的":{"docs":{},"发":{"docs":{},"生":{"docs":{},"树":{"docs":{},"转":{"docs":{},"链":{"docs":{},"表":{"docs":{},"、":{"docs":{},"链":{"docs":{},"表":{"docs":{},"转":{"docs":{},"树":{"docs":{},"，":{"docs":{},"效":{"docs":{},"率":{"docs":{},"会":{"docs":{},"很":{"docs":{},"低":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}},"docs":{}}}}},"分":{"docs":{},"析":{"docs":{},"监":{"docs":{},"控":{"docs":{},"结":{"docs":{},"果":{"docs":{},"后":{"docs":{},"决":{"docs":{},"定":{"docs":{},"是":{"docs":{},"否":{"docs":{},"需":{"docs":{},"要":{"docs":{},"优":{"docs":{},"化":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}},"把":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.006046863189720333}}},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"目":{"docs":{},"标":{"docs":{},"就":{"docs":{},"是":{"docs":{},"把":{"docs":{},"主":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"的":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"存":{"docs":{},"储":{"docs":{},"一":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"；":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}},"读":{"docs":{},"写":{"docs":{},"分":{"docs":{},"离":{"docs":{},"，":{"docs":{},"使":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"能":{"docs":{},"支":{"docs":{},"撑":{"docs":{},"更":{"docs":{},"大":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"。":{"docs":{},"部":{"docs":{},"分":{"docs":{},"报":{"docs":{},"表":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"语":{"docs":{},"句":{"docs":{},"非":{"docs":{},"常":{"docs":{},"的":{"docs":{},"慢":{"docs":{},"，":{"docs":{},"导":{"docs":{},"致":{"docs":{},"锁":{"docs":{},"表":{"docs":{},"，":{"docs":{},"影":{"docs":{},"响":{"docs":{},"前":{"docs":{},"台":{"docs":{},"服":{"docs":{},"务":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"前":{"docs":{},"台":{"docs":{},"使":{"docs":{},"用":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"，":{"docs":{},"报":{"docs":{},"表":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"报":{"docs":{},"表":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"将":{"docs":{},"不":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"前":{"docs":{},"台":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"前":{"docs":{},"台":{"docs":{},"速":{"docs":{},"度":{"docs":{},"。":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"的":{"docs":{},"旧":{"docs":{},"值":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}},"，":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"依":{"docs":{},"次":{"docs":{},"类":{"docs":{},"推":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}},"*":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{},"+":{"1":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"docs":{}}}}}}}},"的":{"docs":{},"n":{"docs":{},"次":{"docs":{},"方":{"docs":{},"大":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"－":{"3":{"docs":{},"a":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}},"docs":{}}},"m":{"docs":{},"b":{"docs":{},"/":{"docs":{},"s":{"docs":{},",":{"docs":{},"某":{"docs":{},"个":{"docs":{},"资":{"docs":{},"源":{"docs":{},"的":{"docs":{},"下":{"docs":{},"载":{"docs":{},"速":{"docs":{},"度":{"docs":{},"为":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}},"、":{"4":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}},"docs":{}},"秒":{"docs":{},"处":{"docs":{},"理":{"docs":{},"文":{"docs":{},"件":{"docs":{},"a":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}}},"b":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}}}}}}}},",":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},"j":{"docs":{},"=":{"docs":{},"a":{"docs":{},"，":{"docs":{},"合":{"docs":{},"并":{"docs":{},"一":{"docs":{},"下":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"这":{"docs":{},"个":{"docs":{},"修":{"docs":{},"改":{"docs":{},"对":{"docs":{},"跑":{"docs":{},"在":{"docs":{},"右":{"docs":{},"边":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}},"）":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.005836575875486381},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}},",":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}},":":{"1":{"2":{"docs":{},".":{"4":{"6":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"docs":{}},"2":{"0":{"docs":{},".":{"5":{"5":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"docs":{}},"5":{"6":{"docs":{},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"8":{"docs":{},",":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"g":{"docs":{},"b":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"l":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}},"3":{"0":{"0":{"0":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}},"docs":{}},"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}},")":{"docs":{},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},".":{"3":{"docs":{},"f":{"docs":{},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}},"docs":{}},",":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}}}},"1":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}},")":{"docs":{},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},",":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}},"2":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"5":{"0":{"5":{"0":{"0":{"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"7":{"8":{"3":{"0":{"4":{"4":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"m":{"docs":{},"，":{"docs":{},"蓝":{"docs":{},"色":{"docs":{},"区":{"docs":{},"域":{"docs":{},"保":{"docs":{},"持":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"绿":{"docs":{},"色":{"docs":{},"区":{"docs":{},"域":{"docs":{},"保":{"docs":{},"持":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}},")":{"docs":{},"}":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"4":{"2":{"5":{"2":{"4":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"6":{"docs":{},".":{"8":{"0":{"6":{"3":{"4":{"8":{"3":{"4":{"3":{"9":{"7":{"0":{"0":{"7":{"docs":{},"%":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"7":{"1":{"0":{"9":{"3":{"docs":{},"k":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"8":{"5":{"1":{"8":{"docs":{},".":{"3":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"3":{"0":{"7":{"5":{"2":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.008379888268156424},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.004310344827586207},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.007246376811594203},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385},"javacore/jvm/jvm-interview.html":{"ref":"javacore/jvm/jvm-interview.html","tf":0.09090909090909091},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}},".":{"1":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"2":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"3":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"4":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"6":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"9":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}}},"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.02197802197802198}}}}}}},"扩":{"docs":{},"容":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"让":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"粒":{"docs":{},"度":{"docs":{},"更":{"docs":{},"精":{"docs":{},"细":{"docs":{},"，":{"docs":{},"并":{"docs":{},"发":{"docs":{},"性":{"docs":{},"能":{"docs":{},"更":{"docs":{},"好":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"d":{"docs":{},"k":{"1":{"docs":{},".":{"8":{"docs":{},"使":{"docs":{},"用":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"来":{"docs":{},"优":{"docs":{},"化":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"基":{"docs":{},"于":{"docs":{},"长":{"docs":{},"度":{"docs":{},"很":{"docs":{},"长":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"很":{"docs":{},"漫":{"docs":{},"长":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"而":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"效":{"docs":{},"率":{"docs":{},"是":{"docs":{},"很":{"docs":{},"快":{"docs":{},"的":{"docs":{},"，":{"docs":{},"代":{"docs":{},"替":{"docs":{},"一":{"docs":{},"定":{"docs":{},"阈":{"docs":{},"值":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"形":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"拍":{"docs":{},"档":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}},"在":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"框":{"docs":{},"架":{"docs":{},"中":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"到":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"集":{"docs":{},"合":{"docs":{},"中":{"docs":{},"存":{"docs":{},"放":{"docs":{},"的":{"docs":{},"是":{"docs":{},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"没":{"docs":{},"有":{"docs":{},"重":{"docs":{},"写":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"则":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"父":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"按":{"docs":{},"照":{"docs":{},"地":{"docs":{},"址":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"往":{"docs":{},"往":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"应":{"docs":{},"该":{"docs":{},"根":{"docs":{},"据":{"docs":{},"业":{"docs":{},"务":{"docs":{},"需":{"docs":{},"求":{"docs":{},"重":{"docs":{},"写":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"量":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"操":{"docs":{},"作":{"docs":{},"下":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"压":{"docs":{},"力":{"docs":{},"，":{"docs":{},"基":{"docs":{},"于":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"的":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"会":{"docs":{},"开":{"docs":{},"销":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"不":{"docs":{},"是":{"docs":{},"瓶":{"docs":{},"颈":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"也":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"选":{"docs":{},"择":{"docs":{},"依":{"docs":{},"据":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"否":{"docs":{},"提":{"docs":{},"供":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}},"设":{"docs":{},"置":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"进":{"docs":{},"行":{"docs":{},"读":{"docs":{},"或":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.006046863189720333}}}}}}}}},"拟":{"docs":{},"写":{"docs":{},"入":{"docs":{},"的":{"docs":{},"新":{"docs":{},"值":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}},"让":{"docs":{},"其":{"docs":{},"在":{"docs":{},"从":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}},"非":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"小":{"docs":{},"于":{"docs":{},"其":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"大":{"docs":{},"于":{"docs":{},"其":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"子":{"docs":{},"树":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"；":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"，":{"docs":{},"并":{"docs":{},"分":{"docs":{},"别":{"docs":{},"写":{"docs":{},"回":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{},"最":{"docs":{},"终":{"docs":{},"的":{"docs":{},"值":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"期":{"docs":{},"望":{"docs":{},"的":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}},"）":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},",":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}}},"/":{"8":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}}},"4":{"0":{"0":{"0":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}},"docs":{}},"3":{"2":{"5":{"7":{"6":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"6":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"docs":{}},"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"2":{"7":{"2":{"4":{"docs":{},".":{"7":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"3":{"4":{"1":{"7":{"6":{"docs":{},".":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"4":{"9":{"7":{"4":{"2":{"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}},"6":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}},"8":{"3":{"5":{"4":{"6":{"4":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},":":{"5":{"8":{"docs":{},".":{"6":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/jvm/jvm-interview.html":{"ref":"javacore/jvm/jvm-interview.html","tf":0.09090909090909091},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.0041841004184100415},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},".":{"1":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}}},"2":{"docs":{},".":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}}},"3":{"docs":{},".":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}}},"4":{"docs":{},".":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}}},"5":{"docs":{},".":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}}},"6":{"docs":{},".":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}}},"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"和":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"是":{"docs":{},"否":{"docs":{},"允":{"docs":{},"许":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"值":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"析":{"docs":{},"结":{"docs":{},"果":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"关":{"docs":{},"闭":{"docs":{},"流":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0045351473922902496}}}}}},"]":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"5":{"0":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"%":{"docs":{},"或":{"docs":{},"者":{"docs":{},"更":{"docs":{},"大":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"它":{"docs":{},"们":{"docs":{},"被":{"docs":{},"保":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{},"集":{"docs":{},"合":{"docs":{},"里":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{},"就":{"docs":{},"是":{"docs":{},"堆":{"docs":{},"空":{"docs":{},"间":{"docs":{},"里":{"docs":{},"没":{"docs":{},"有":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"5":{"docs":{},"f":{"docs":{},"}":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"docs":{}}},"1":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},".":{"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"2":{"4":{"2":{"8":{"8":{"docs":{},".":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},".":{"1":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"3":{"7":{"5":{"3":{"6":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},".":{"1":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"7":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"docs":{}}},"4":{"3":{"9":{"4":{"8":{"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},".":{"4":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"7":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"e":{"docs":{},"e":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"会":{"docs":{},"用":{"docs":{},"到":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"5":{"9":{"6":{"7":{"7":{"4":{"4":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"6":{"4":{"2":{"2":{"4":{"docs":{},".":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"9":{"2":{"docs":{},"\"":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"7":{"docs":{},".":{"7":{"6":{"1":{"6":{"0":{"8":{"7":{"1":{"4":{"7":{"8":{"8":{"7":{"3":{"6":{"docs":{},"%":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"8":{"8":{"0":{"8":{"7":{"2":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.00400962309542903},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/jvm/jvm-interview.html":{"ref":"javacore/jvm/jvm-interview.html","tf":0.09090909090909091},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.005578800557880056},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}},".":{"1":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"2":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}},"两":{"docs":{},"个":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"方":{"docs":{},"式":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"实":{"docs":{},"现":{"docs":{},"上":{"docs":{},"不":{"docs":{},"同":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"结":{"docs":{},"果":{"docs":{},"令":{"docs":{},"人":{"docs":{},"满":{"docs":{},"意":{"docs":{},"，":{"docs":{},"将":{"docs":{},"参":{"docs":{},"数":{"docs":{},"应":{"docs":{},"用":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"上":{"docs":{},"并":{"docs":{},"结":{"docs":{},"束":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"然":{"docs":{},"而":{"docs":{},"由":{"docs":{},"于":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"是":{"docs":{},"交":{"docs":{},"叉":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"从":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"读":{"docs":{},"出":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"都":{"docs":{},"是":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"秒":{"docs":{},"读":{"docs":{},"取":{"docs":{},"文":{"docs":{},"件":{"docs":{},"a":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}}},"b":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}}}}}}}},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"最":{"docs":{},"后":{"docs":{},"写":{"docs":{},"回":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"上":{"docs":{},"面":{"docs":{},"例":{"docs":{},"子":{"docs":{},"中":{"docs":{},"最":{"docs":{},"后":{"docs":{},"写":{"docs":{},"回":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}},":":{"5":{"4":{"docs":{},".":{"1":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"6":{"0":{"2":{"4":{"3":{"1":{"1":{"2":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"1":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"2":{"0":{"6":{"2":{"5":{"9":{"2":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"4":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"5":{"5":{"3":{"6":{"docs":{},")":{"docs":{},"来":{"docs":{},"做":{"docs":{},"到":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"docs":{}},"docs":{}},"6":{"2":{"docs":{},".":{"5":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"docs":{}},"docs":{}},"7":{"3":{"5":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"9":{"5":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"7":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"9":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"8":{"0":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"1":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"2":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"3":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"4":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"7":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"9":{"7":{"4":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"9":{"1":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},".":{"1":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"2":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"3":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"4":{"1":{"7":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"5":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"8":{"1":{"5":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}},"哈":{"docs":{},"希":{"docs":{},"值":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"不":{"docs":{},"同":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}},":":{"3":{"2":{"docs":{},".":{"0":{"6":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"docs":{}},"5":{"5":{"docs":{},".":{"4":{"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"7":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},".":{"1":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.008564231738035265}}},"docs":{}}},"1":{"7":{"2":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.008564231738035265}}},"docs":{}},"docs":{}},"3":{"6":{"2":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"6":{"1":{"3":{"1":{"0":{"4":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"2":{"7":{"4":{"docs":{},".":{"5":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},".":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"1":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"7":{"6":{"docs":{},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"8":{"2":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}},"内":{"docs":{},"部":{"docs":{},"实":{"docs":{},"现":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"和":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"方":{"docs":{},"式":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}},":":{"4":{"2":{"docs":{},".":{"7":{"2":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"8":{"3":{"8":{"8":{"6":{"0":{"8":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"4":{"1":{"1":{"docs":{},"k":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}},"6":{"docs":{},".":{"3":{"9":{"7":{"3":{"3":{"6":{"2":{"9":{"4":{"2":{"7":{"6":{"9":{"3":{"docs":{},"%":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"8":{"0":{"8":{"0":{"3":{"8":{"4":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},")":{"docs":{},"，":{"docs":{},"则":{"docs":{},"使":{"docs":{},"用":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"来":{"docs":{},"替":{"docs":{},"换":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"提":{"docs":{},"高":{"docs":{},"速":{"docs":{},"度":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}},".":{"1":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"4":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}},"(":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},")":{"docs":{},"的":{"docs":{},"列":{"docs":{},"表":{"docs":{},"，":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"1":{"docs":{},".":{"8":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"docs":{}}},"docs":{}}}}}}}}}}}}},":":{"0":{"0":{"docs":{},".":{"3":{"2":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"docs":{}},"1":{"docs":{},"，":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"利":{"docs":{},"用":{"docs":{},"率":{"docs":{},"达":{"docs":{},"到":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"docs":{}},"，":{"docs":{},"则":{"docs":{},"两":{"docs":{},"个":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}},"9":{"0":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},".":{"4":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"1":{"4":{"6":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"3":{"0":{"6":{"1":{"1":{"2":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"7":{"docs":{},".":{"0":{"6":{"8":{"3":{"1":{"4":{"5":{"1":{"7":{"0":{"6":{"0":{"4":{"6":{"docs":{},"%":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164}},".":{"1":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"2":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"3":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"4":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"5":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"docs":{},"s":{"0":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"u":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"1":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"u":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.008060453400503778},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"u":{"docs":{},"d":{"docs":{},"y":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.5}}}}}}},"f":{"docs":{},"f":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"b":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099},"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.00631578947368421},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.004891062694530902},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.019146608315098467},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.011494252873563218},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.009836065573770493},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.007142857142857143},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.02529182879377432},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.014056224899598393},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.012924071082390954},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.015341701534170154},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.01056338028169014},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.019652305366591082},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.01966041108132261},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"主":{"docs":{},"要":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"作":{"docs":{},"用":{"docs":{},"：":{"docs":{},"第":{"docs":{},"一":{"docs":{},"，":{"docs":{},"为":{"docs":{},"某":{"docs":{},"特":{"docs":{},"定":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"或":{"docs":{},"对":{"docs":{},"象":{"docs":{},"分":{"docs":{},"配":{"docs":{},"单":{"docs":{},"一":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"而":{"docs":{},"与":{"docs":{},"创":{"docs":{},"建":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"无":{"docs":{},"关":{"docs":{},"。":{"docs":{},"第":{"docs":{},"二":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"某":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"属":{"docs":{},"性":{"docs":{},"与":{"docs":{},"类":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"对":{"docs":{},"象":{"docs":{},"关":{"docs":{},"联":{"docs":{},"在":{"docs":{},"一":{"docs":{},"起":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"在":{"docs":{},"不":{"docs":{},"创":{"docs":{},"建":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"类":{"docs":{},"来":{"docs":{},"直":{"docs":{},"接":{"docs":{},"调":{"docs":{},"用":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"使":{"docs":{},"用":{"docs":{},"类":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"作":{"docs":{},"用":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.010810810810810811}}}}}}}}}},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}},"方":{"docs":{},"法":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}},"s":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}},"e":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"a":{"docs":{},"q":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}},"u":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"r":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.006415396952686447},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0038293216630196935}}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}},"c":{"docs":{},"k":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.015748031496062992}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}},",":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}},"r":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.003779289493575208}},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"f":{"docs":{},"p":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"作":{"docs":{},"用":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}},"l":{"docs":{},"i":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"n":{"docs":{},"g":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.009727626459143969},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.0041841004184100415},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.007042253521126761},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.013605442176870748},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.009830205540661306},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},"e":{"docs":{},"r":{"docs":{},"：":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"在":{"docs":{},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{},"下":{"docs":{},"操":{"docs":{},"作":{"docs":{},"大":{"docs":{},"量":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"应":{"docs":{},"优":{"docs":{},"先":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"。":{"docs":{},"（":{"docs":{},"效":{"docs":{},"率":{"docs":{},"最":{"docs":{},"高":{"docs":{},"）":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"、":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"、":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"和":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.010810810810810811}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}},"[":{"docs":{},"]":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"的":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}},"(":{"docs":{},"b":{"docs":{},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}},"c":{"docs":{},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}},"p":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0033613445378151263}},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"停":{"docs":{},"止":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"正":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"或":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"等":{"docs":{},"待":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"列":{"docs":{},"表":{"docs":{},"，":{"docs":{},"而":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.009363295880149813},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0026678523788350376},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"(":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"针":{"docs":{},"对":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"集":{"docs":{},"合":{"docs":{},"而":{"docs":{},"言":{"docs":{},"的":{"docs":{},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"查":{"docs":{},"看":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"中":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}},"]":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},"只":{"docs":{},"能":{"docs":{},"获":{"docs":{},"取":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"；":{"docs":{},"而":{"docs":{},"如":{"docs":{},"果":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"过":{"docs":{},"多":{"docs":{},"，":{"docs":{},"超":{"docs":{},"过":{"docs":{},"了":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"则":{"docs":{},"推":{"docs":{},"荐":{"docs":{},"使":{"docs":{},"用":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"获":{"docs":{},"取":{"docs":{},"其":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"了":{"docs":{},"多":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"）":{"docs":{},"，":{"docs":{},"要":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"1":{"docs":{},".":{"7":{"docs":{},"版":{"docs":{},"本":{"docs":{},"用":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"案":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}}},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"a":{"docs":{},"l":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"（":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},";":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.004310344827586207},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},";":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"y":{"docs":{},"y":{"docs":{},"y":{"docs":{},"i":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0056134723336006415},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0032822757111597373}},"、":{"docs":{},"y":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"、":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}},"和":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"o":{"docs":{},"t":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}},"s":{"docs":{},"）":{"docs":{},"。":{"docs":{},"当":{"docs":{},"然":{"docs":{},"将":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}},"来":{"docs":{},"自":{"docs":{},"动":{"docs":{},"做":{"docs":{},"一":{"docs":{},"些":{"docs":{},"清":{"docs":{},"除":{"docs":{},"工":{"docs":{},"作":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"清":{"docs":{},"除":{"docs":{},"的":{"docs":{},"话":{"docs":{},"容":{"docs":{},"易":{"docs":{},"产":{"docs":{},"生":{"docs":{},"内":{"docs":{},"存":{"docs":{},"无":{"docs":{},"法":{"docs":{},"释":{"docs":{},"放":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.00528169014084507},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}},"\"":{"1":{"docs":{},"、":{"docs":{},"进":{"docs":{},"入":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}},"2":{"docs":{},"、":{"docs":{},"已":{"docs":{},"经":{"docs":{},"完":{"docs":{},"成":{"docs":{},"了":{"docs":{},"休":{"docs":{},"眠":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}},"个":{"docs":{},"子":{"docs":{},"线":{"docs":{},"程":{"docs":{},"已":{"docs":{},"经":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}},"3":{"docs":{},"、":{"docs":{},"休":{"docs":{},"眠":{"docs":{},"被":{"docs":{},"终":{"docs":{},"止":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}},"4":{"docs":{},"、":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"正":{"docs":{},"常":{"docs":{},"结":{"docs":{},"束":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}},"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"a":{"docs":{},"l":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"x":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"主":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"：":{"docs":{},"\"":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"执":{"docs":{},"行":{"docs":{},"之":{"docs":{},"后":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"开":{"docs":{},"始":{"docs":{},"执":{"docs":{},"行":{"docs":{},"之":{"docs":{},"前":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"后":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"满":{"docs":{},"，":{"docs":{},"等":{"docs":{},"待":{"docs":{},"有":{"docs":{},"空":{"docs":{},"余":{"docs":{},"空":{"docs":{},"间":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}},"空":{"docs":{},"，":{"docs":{},"等":{"docs":{},"待":{"docs":{},"数":{"docs":{},"据":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"开":{"docs":{},"始":{"docs":{},"执":{"docs":{},"行":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"开":{"docs":{},"始":{"docs":{},"执":{"docs":{},"行":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"：":{"docs":{},"\"":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.007782101167315175}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}},"初":{"docs":{},"始":{"docs":{},"对":{"docs":{},"象":{"docs":{},"为":{"docs":{},"：":{"docs":{},"\"":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}},"新":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"为":{"docs":{},"：":{"docs":{},"\"":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}},"子":{"docs":{},"线":{"docs":{},"程":{"docs":{},"\"":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.008032128514056224}}}}}},"等":{"docs":{},"待":{"2":{"docs":{},"个":{"docs":{},"子":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"毕":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}},"docs":{}}},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{},"主":{"docs":{},"线":{"docs":{},"程":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}},"往":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"中":{"docs":{},"加":{"docs":{},"入":{"3":{"0":{"docs":{},"w":{"docs":{},"内":{"docs":{},"容":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"docs":{}},"4":{"0":{"docs":{},"w":{"docs":{},"内":{"docs":{},"容":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"人":{"docs":{},"生":{"docs":{},"若":{"docs":{},"只":{"docs":{},"如":{"docs":{},"初":{"docs":{},"见":{"docs":{},"，":{"docs":{},"何":{"docs":{},"事":{"docs":{},"秋":{"docs":{},"风":{"docs":{},"悲":{"docs":{},"画":{"docs":{},"扇":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}},"小":{"docs":{},"数":{"docs":{},"数":{"docs":{},"据":{"docs":{},"：":{"docs":{},"\"":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"据":{"docs":{},"：":{"docs":{},"\"":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"不":{"docs":{},"是":{"docs":{},"小":{"docs":{},"数":{"docs":{},"！":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}},"整":{"docs":{},"数":{"docs":{},"！":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}},"内":{"docs":{},"容":{"docs":{},"为":{"docs":{},"：":{"docs":{},"\"":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"日":{"docs":{},"期":{"docs":{},"格":{"docs":{},"式":{"docs":{},"错":{"docs":{},"误":{"docs":{},"！":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}},"内":{"docs":{},"容":{"docs":{},"为":{"docs":{},"：":{"docs":{},"\"":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}},"压":{"docs":{},"缩":{"docs":{},"实":{"docs":{},"体":{"docs":{},"名":{"docs":{},"称":{"docs":{},"：":{"docs":{},"\"":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{},"：":{"docs":{},"\"":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}},"接":{"docs":{},"收":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"为":{"docs":{},"：":{"docs":{},"\"":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}},"文":{"docs":{},"件":{"docs":{},"字":{"docs":{},"符":{"docs":{},"数":{"docs":{},"为":{"docs":{},"：":{"docs":{},"\"":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.006024096385542169},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.008077544426494346}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}},")":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}}}},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"i":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}},"\"":{"docs":{},"请":{"docs":{},"输":{"docs":{},"入":{"docs":{},"内":{"docs":{},"容":{"docs":{},"：":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}},"输":{"docs":{},"入":{"docs":{},"小":{"docs":{},"数":{"docs":{},"：":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}},"整":{"docs":{},"数":{"docs":{},"：":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}},"日":{"docs":{},"期":{"docs":{},"（":{"docs":{},"y":{"docs":{},"y":{"docs":{},"y":{"docs":{},"i":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}},"退":{"docs":{},"出":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},",":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}},"s":{"docs":{},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"此":{"docs":{},"处":{"docs":{},"有":{"docs":{},"误":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"(":{"docs":{},"p":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}},"=":{"0":{"docs":{},".":{"0":{"2":{"docs":{},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"8":{"docs":{},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}}},"docs":{}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"n":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.01440922190201729},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.01440922190201729},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.01440922190201729}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}},"c":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.005714285714285714}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.012028869286287089},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.022988505747126436},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.006557377049180328},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0064285714285714285},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.023809523809523808}},"e":{"docs":{},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"存":{"docs":{},"储":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{},"每":{"docs":{},"个":{"docs":{},"插":{"docs":{},"入":{"docs":{},"操":{"docs":{},"作":{"docs":{},"必":{"docs":{},"须":{"docs":{},"等":{"docs":{},"到":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"移":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"插":{"docs":{},"入":{"docs":{},"操":{"docs":{},"作":{"docs":{},"一":{"docs":{},"直":{"docs":{},"处":{"docs":{},"于":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"通":{"docs":{},"常":{"docs":{},"要":{"docs":{},"高":{"docs":{},"于":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"比":{"docs":{},"较":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"，":{"docs":{},"它":{"docs":{},"不":{"docs":{},"会":{"docs":{},"保":{"docs":{},"存":{"docs":{},"提":{"docs":{},"交":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"将":{"docs":{},"直":{"docs":{},"接":{"docs":{},"新":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"来":{"docs":{},"执":{"docs":{},"行":{"docs":{},"新":{"docs":{},"来":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"沿":{"docs":{},"用":{"docs":{},"了":{"docs":{},"与":{"docs":{},"它":{"docs":{},"同":{"docs":{},"时":{"docs":{},"期":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"，":{"docs":{},"底":{"docs":{},"层":{"docs":{},"依":{"docs":{},"然":{"docs":{},"由":{"docs":{},"数":{"docs":{},"组":{"docs":{},"+":{"docs":{},"链":{"docs":{},"表":{"docs":{},"+":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"思":{"docs":{},"想":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"+":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"+":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"+":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"0":{"1":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}},"2":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}},"3":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}},"4":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}},"docs":{}},"docs":{}}}}},"，":{"docs":{},"它":{"docs":{},"在":{"docs":{},"多":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"开":{"docs":{},"发":{"docs":{},"中":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"“":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"”":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"了":{"docs":{},"以":{"docs":{},"上":{"docs":{},"的":{"docs":{},"缺":{"docs":{},"陷":{"docs":{},"：":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"/":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},")":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.037894736842105266},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0033613445378151263},"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}},",":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}},"架":{"docs":{},"构":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}},">":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"对":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"用":{"docs":{},"来":{"docs":{},"设":{"docs":{},"置":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"副":{"docs":{},"本":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}},"t":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"，":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"它":{"docs":{},"内":{"docs":{},"部":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}},"在":{"docs":{},"做":{"docs":{},"可":{"docs":{},"达":{"docs":{},"性":{"docs":{},"分":{"docs":{},"析":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"避":{"docs":{},"免":{"docs":{},"全":{"docs":{},"堆":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"来":{"docs":{},"记":{"docs":{},"录":{"docs":{},"该":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"d":{"docs":{},"a":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}},"、":{"docs":{},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"、":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}},"、":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"、":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}},"。":{"docs":{},"它":{"docs":{},"由":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"b":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},",":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"：":{"docs":{},"设":{"docs":{},"置":{"docs":{},"核":{"docs":{},"心":{"docs":{},"池":{"docs":{},"大":{"docs":{},"小":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}},"：":{"docs":{},"设":{"docs":{},"置":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"最":{"docs":{},"大":{"docs":{},"能":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"目":{"docs":{},"大":{"docs":{},"小":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.015126050420168067},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"i":{"docs":{},"z":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.014298480786416443}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"支":{"docs":{},"持":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.008421052631578947}}}}}}}}}},"支":{"docs":{},"持":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.009523809523809525}}}}}}}},"它":{"docs":{},"增":{"docs":{},"添":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"0":{"1":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.002680965147453083}}},"2":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}},"3":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}},"4":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}},"5":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}},"docs":{}},"docs":{}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.014298480786416443}},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}},"，":{"docs":{},"则":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"将":{"docs":{},"基":{"docs":{},"于":{"docs":{},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{},"各":{"docs":{},"个":{"docs":{},"方":{"docs":{},"面":{"docs":{},"计":{"docs":{},"算":{"docs":{},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{},"默":{"docs":{},"认":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}},"？":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}},"v":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.014084507042253521}},"i":{"docs":{},"c":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}},"e":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0033613445378151263},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"：":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"端":{"docs":{},"类":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}}}}}}}},"。":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}},"g":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0031124944419742106},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164}},"[":{"docs":{},"]":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}},"s":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}},")":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"继":{"docs":{},"承":{"docs":{},"自":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"，":{"docs":{},"它":{"docs":{},"继":{"docs":{},"承":{"docs":{},"自":{"docs":{},"重":{"docs":{},"入":{"docs":{},"锁":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"即":{"docs":{},"类":{"docs":{},"似":{"docs":{},"于":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}},")":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}},"下":{"docs":{},"面":{"docs":{},"包":{"docs":{},"含":{"docs":{},"很":{"docs":{},"多":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"列":{"docs":{},"表":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"经":{"docs":{},"过":{"docs":{},"三":{"docs":{},"次":{"docs":{},"（":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"要":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"三":{"docs":{},"次":{"docs":{},"下":{"docs":{},"文":{"docs":{},"会":{"docs":{},"详":{"docs":{},"细":{"docs":{},"讲":{"docs":{},"解":{"docs":{},"）":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"才":{"docs":{},"能":{"docs":{},"最":{"docs":{},"终":{"docs":{},"定":{"docs":{},"位":{"docs":{},"这":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"这":{"docs":{},"三":{"docs":{},"次":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"docs":{},"：":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"可":{"docs":{},"重":{"docs":{},"入":{"docs":{},"锁":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"和":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"链":{"docs":{},"表":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"f":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.010040160642570281}},"e":{"docs":{},"(":{"1":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}},"docs":{}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}},"源":{"docs":{},"码":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}},"的":{"docs":{},"重":{"docs":{},"要":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}},"示":{"docs":{},"例":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}},"要":{"docs":{},"点":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"）":{"docs":{},"：":{"docs":{},"导":{"docs":{},"致":{"docs":{},"竞":{"docs":{},"态":{"docs":{},"条":{"docs":{},"件":{"docs":{},"发":{"docs":{},"生":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"区":{"docs":{},"称":{"docs":{},"作":{"docs":{},"临":{"docs":{},"界":{"docs":{},"区":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"]":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686}}}}}}},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}},"n":{"docs":{},"d":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}},"(":{"docs":{},")":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"x":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.006255585344057194}},")":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}},":":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.006255585344057194}}},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}}},"=":{"docs":{},"\"":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"}":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}},"q":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.014736842105263158}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},"，":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.02247191011235955}},"s":{"docs":{},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}},"：":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"类":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"e":{"docs":{},"r":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"将":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"进":{"docs":{},"行":{"docs":{},"再":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"，":{"docs":{},"让":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"的":{"docs":{},"高":{"docs":{},"位":{"docs":{},"也":{"docs":{},"参":{"docs":{},"与":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"减":{"docs":{},"少":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"查":{"docs":{},"询":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.003526448362720403}},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}}},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"区":{"docs":{},"域":{"docs":{},"称":{"docs":{},"为":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"。":{"docs":{},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"会":{"docs":{},"发":{"docs":{},"现":{"docs":{},"它":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"还":{"docs":{},"是":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"1":{"6":{"docs":{},",":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}},"docs":{}},"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"[":{"1":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}},"docs":{}},"docs":{},"]":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"'":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"(":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},".":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"m":{"1":{"docs":{},"=":{"3":{"0":{"0":{"0":{"0":{"0":{"docs":{},";":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"2":{"docs":{},"=":{"4":{"0":{"0":{"0":{"0":{"0":{"docs":{},";":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}},")":{"docs":{},"{":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{},"，":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.015748031496062992},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.013445378151260505},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.003022670025188917}},"。":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"在":{"docs":{},"回":{"docs":{},"收":{"docs":{},"时":{"docs":{},"，":{"docs":{},"将":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"(":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"p":{"docs":{},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"：":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}},"e":{"docs":{},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"定":{"docs":{},"时":{"docs":{},"调":{"docs":{},"度":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},")":{"docs":{},"和":{"docs":{},"时":{"docs":{},"间":{"docs":{},"分":{"docs":{},"片":{"docs":{},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}},"a":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.008403361344537815}}}}}},"n":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.007042253521126761}},"(":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"^":{"docs":{},"\\":{"docs":{},"\\":{"docs":{},"d":{"docs":{},"{":{"4":{"docs":{},"}":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}},"docs":{}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"m":{"docs":{},"e":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"p":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"(":{"docs":{},"计":{"docs":{},"算":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"时":{"docs":{},"进":{"docs":{},"行":{"docs":{},"移":{"docs":{},"位":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},")":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"等":{"docs":{},"于":{"1":{"6":{"docs":{},"，":{"docs":{},"则":{"docs":{},"s":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"等":{"docs":{},"于":{"4":{"docs":{},"，":{"docs":{},"则":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"为":{"2":{"8":{"docs":{},"。":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"3":{"2":{"docs":{},"位":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"向":{"docs":{},"右":{"docs":{},"移":{"docs":{},"动":{"2":{"8":{"docs":{},"位":{"docs":{},"就":{"docs":{},"变":{"docs":{},"成":{"docs":{},"这":{"docs":{},"个":{"docs":{},"样":{"docs":{},"子":{"docs":{},"：":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},")":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"，":{"docs":{},"比":{"docs":{},"较":{"docs":{},"交":{"docs":{},"换":{"docs":{},"）":{"docs":{},"：":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"有":{"docs":{},"三":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"数":{"docs":{},"，":{"docs":{},"内":{"docs":{},"存":{"docs":{},"值":{"docs":{},"v":{"docs":{},"、":{"docs":{},"预":{"docs":{},"期":{"docs":{},"值":{"docs":{},"a":{"docs":{},"、":{"docs":{},"要":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"新":{"docs":{},"值":{"docs":{},"b":{"docs":{},"，":{"docs":{},"当":{"docs":{},"且":{"docs":{},"仅":{"docs":{},"当":{"docs":{},"a":{"docs":{},"和":{"docs":{},"v":{"docs":{},"相":{"docs":{},"等":{"docs":{},"时":{"docs":{},"才":{"docs":{},"会":{"docs":{},"将":{"docs":{},"v":{"docs":{},"修":{"docs":{},"改":{"docs":{},"为":{"docs":{},"b":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"什":{"docs":{},"么":{"docs":{},"都":{"docs":{},"不":{"docs":{},"做":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"）":{"docs":{},"，":{"docs":{},"字":{"docs":{},"面":{"docs":{},"意":{"docs":{},"思":{"docs":{},"为":{"docs":{},"比":{"docs":{},"较":{"docs":{},"并":{"docs":{},"交":{"docs":{},"换":{"docs":{},"。":{"docs":{},"c":{"docs":{},"a":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"（":{"docs":{},"比":{"docs":{},"较":{"docs":{},"与":{"docs":{},"交":{"docs":{},"换":{"docs":{},"）":{"docs":{},"，":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"有":{"docs":{},"名":{"docs":{},"的":{"docs":{},"无":{"docs":{},"锁":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"）":{"docs":{},"，":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"o":{"docs":{},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"，":{"docs":{},"直":{"docs":{},"至":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.011308562197092083}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"和":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"则":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"处":{"docs":{},"于":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}},"：":{"docs":{},"不":{"docs":{},"会":{"docs":{},"立":{"docs":{},"即":{"docs":{},"终":{"docs":{},"止":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"要":{"docs":{},"等":{"docs":{},"所":{"docs":{},"有":{"docs":{},"任":{"docs":{},"务":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"都":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"后":{"docs":{},"才":{"docs":{},"终":{"docs":{},"止":{"docs":{},"，":{"docs":{},"但":{"docs":{},"再":{"docs":{},"也":{"docs":{},"不":{"docs":{},"会":{"docs":{},"接":{"docs":{},"受":{"docs":{},"新":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"则":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"处":{"docs":{},"于":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"：":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}},"：":{"docs":{},"立":{"docs":{},"即":{"docs":{},"终":{"docs":{},"止":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"并":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"打":{"docs":{},"断":{"docs":{},"正":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"清":{"docs":{},"空":{"docs":{},"任":{"docs":{},"务":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"尚":{"docs":{},"未":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}},"r":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"f":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"q":{"docs":{},"l":{"docs":{},"语":{"docs":{},"句":{"docs":{},"优":{"docs":{},"化":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}},"本":{"docs":{},"人":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"工":{"docs":{},"程":{"docs":{},"师":{"docs":{},"一":{"docs":{},"名":{"docs":{},"，":{"docs":{},"此":{"docs":{},"笔":{"docs":{},"记":{"docs":{},"记":{"docs":{},"录":{"docs":{},"本":{"docs":{},"人":{"docs":{},"掌":{"docs":{},"握":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"知":{"docs":{},"识":{"docs":{},"点":{"docs":{},"，":{"docs":{},"以":{"docs":{},"备":{"docs":{},"复":{"docs":{},"习":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.5}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"质":{"docs":{},"是":{"docs":{},"在":{"docs":{},"告":{"docs":{},"诉":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}},"上":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"类":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"小":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"，":{"docs":{},"里":{"docs":{},"面":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"数":{"docs":{},"组":{"docs":{},"存":{"docs":{},"储":{"docs":{},"了":{"docs":{},"各":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"继":{"docs":{},"承":{"docs":{},"了":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"地":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"允":{"docs":{},"许":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}},"方":{"docs":{},"法":{"docs":{},"不":{"docs":{},"是":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}},"栈":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.015748031496062992}},"中":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"进":{"docs":{},"程":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"文":{"docs":{},"内":{"docs":{},"容":{"docs":{},"基":{"docs":{},"于":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}},"编":{"docs":{},"者":{"docs":{},"序":{"docs":{"./":{"ref":"./","tf":10}}}},"程":{"docs":{},"思":{"docs":{},"想":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}},"（":{"docs":{},"第":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"有":{"docs":{},"所":{"docs":{},"区":{"docs":{},"别":{"docs":{},"，":{"docs":{},"它":{"docs":{},"包":{"docs":{},"括":{"docs":{},"了":{"docs":{},"实":{"docs":{},"例":{"docs":{},"字":{"docs":{},"段":{"docs":{},"、":{"docs":{},"静":{"docs":{},"态":{"docs":{},"字":{"docs":{},"段":{"docs":{},"和":{"docs":{},"构":{"docs":{},"成":{"docs":{},"数":{"docs":{},"组":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"包":{"docs":{},"括":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"与":{"docs":{},"方":{"docs":{},"法":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"后":{"docs":{},"者":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"共":{"docs":{},"享":{"docs":{},"，":{"docs":{},"自":{"docs":{},"然":{"docs":{},"就":{"docs":{},"不":{"docs":{},"会":{"docs":{},"存":{"docs":{},"在":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"获":{"docs":{},"得":{"docs":{},"较":{"docs":{},"好":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"效":{"docs":{},"能":{"docs":{},"，":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"译":{"docs":{},"等":{"docs":{},"运":{"docs":{},"行":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"很":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"生":{"docs":{},"成":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}},"书":{"docs":{},"籍":{"docs":{},"，":{"docs":{},"完":{"docs":{},"成":{"docs":{},"以":{"docs":{},"后":{"docs":{},"会":{"docs":{},"打":{"docs":{},"开":{"docs":{},"一":{"docs":{},"个":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}},"电":{"docs":{},"子":{"docs":{},"书":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}},"写":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}},"\"":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.008205689277899343},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.05642023346303502},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.006024096385542169},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.012924071082390954},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.002680965147453083}},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"用":{"docs":{},"来":{"docs":{},"比":{"docs":{},"较":{"docs":{},"两":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"该":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"用":{"docs":{},"于":{"docs":{},"比":{"docs":{},"较":{"docs":{},"变":{"docs":{},"量":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"所":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"要":{"docs":{},"比":{"docs":{},"较":{"docs":{},"两":{"docs":{},"个":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"或":{"docs":{},"两":{"docs":{},"个":{"docs":{},"引":{"docs":{},"用":{"docs":{},"变":{"docs":{},"量":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"“":{"docs":{},"=":{"docs":{},"=":{"docs":{},"”":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},"a":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"b":{"docs":{},"c":{"docs":{},"\"":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}},"b":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"c":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"0":{"docs":{},"\"":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},":":{"docs":{},"\\":{"docs":{},"\\":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"x":{"docs":{},"t":{"docs":{},"\"":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"x":{"docs":{},"t":{"docs":{},"\"":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"x":{"docs":{},"t":{"docs":{},"\"":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}}}}}}}}}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},".":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"\"":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"\"":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}}}}}}}},"m":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"\"":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}},"l":{"docs":{},"d":{"docs":{},"n":{"docs":{},"_":{"docs":{},"u":{"docs":{},"n":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},".":{"docs":{},"t":{"docs":{},"x":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"\"":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"{":{"docs":{},"\"":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"。":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"毫":{"docs":{},"秒":{"docs":{},"。":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686}}}}},"a":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"b":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"c":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"，":{"docs":{},"休":{"docs":{},"眠":{"docs":{},"\"":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"\"":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"w":{"docs":{},"u":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}},"得":{"docs":{},"到":{"docs":{},"了":{"docs":{},"锁":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},",":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}}},"[":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}},"\\":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}}}}}}}}}},"]":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"\"":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}},"\"":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{},"\"":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"x":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}}}}}}}}},"正":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}}}}}}}}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"\"":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}},"%":{"docs":{},"x":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}},"w":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"v":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804}}},"z":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{},"\"":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}},"；":{"docs":{},"年":{"docs":{},"龄":{"docs":{},"：":{"docs":{},"\"":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.00528169014084507},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"围":{"docs":{},"巾":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"姓":{"docs":{},"名":{"docs":{},"：":{"docs":{},"\"":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"张":{"docs":{},"三":{"docs":{},"\"":{"docs":{},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"手":{"docs":{},"套":{"docs":{},"\"":{"docs":{},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}},"=":{"docs":{},"'":{"docs":{},"\"":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"f":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}},",":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}},":":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.016216216216216217},"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.02197802197802198},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0026678523788350376},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},":":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0136327185244587},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.004310344827586207},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}},"x":{"docs":{},":":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},":":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}},"b":{"1":{"6":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.005747126436781609},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.025362318840579712},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.008645533141210375},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.008645533141210375},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.008645533141210375},"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}},"r":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"、":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"e":{"docs":{},"以":{"docs":{},"及":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.004371584699453552},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}}}}}}}},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.007246376811594203},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"e":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}},"o":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0026678523788350376},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.005366726296958855},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.010714285714285714},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.00528169014084507}}}}}},"k":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"则":{"docs":{},"新":{"docs":{},"建":{"docs":{},")":{"docs":{},"中":{"docs":{},"添":{"docs":{},"加":{"docs":{},"插":{"docs":{},"件":{"docs":{},"配":{"docs":{},"置":{"docs":{},"，":{"docs":{},"如":{"docs":{},"图":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.023809523809523808},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"e":{"docs":{},",":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.009523809523809525}}},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.007142857142857143}}}}}}}}}}},"通":{"docs":{},"常":{"docs":{},"可":{"docs":{},"以":{"docs":{},"取":{"docs":{},"下":{"docs":{},"面":{"docs":{},"三":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"是":{"docs":{},"无":{"docs":{},"界":{"docs":{},"队":{"docs":{},"列":{"docs":{},"（":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"s":{"docs":{},"e":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"1":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}},",":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}},"2":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}},")":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}}}},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}},"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.008032128514056224}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}},"。":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"1":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}},"2":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}},"docs":{}}}}}}}}}}}}}},"o":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}},"i":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},"n":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164}},")":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}},"s":{"docs":{},")":{"docs":{},"，":{"docs":{},"在":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"]":{"docs":{},"#":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"线":{"docs":{},"程":{"docs":{},"：":{"docs":{},"负":{"docs":{},"责":{"docs":{},"将":{"docs":{},"主":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"上":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"更":{"docs":{},"改":{"docs":{},"写":{"docs":{},"入":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"日":{"docs":{},"志":{"docs":{},"中":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"）":{"docs":{},"限":{"docs":{},"制":{"docs":{},"；":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.008003557136505114}}}}}},"f":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"s":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0030234315948601664},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}},"i":{"docs":{},"s":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.014084507042253521}}}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}},"、":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"、":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"[":{"1":{"0":{"2":{"4":{"docs":{},"]":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}},"docs":{}},"docs":{}},"docs":{}},"8":{"docs":{},"]":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}},"docs":{},"]":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.0041841004184100415},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"]":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0030234315948601664}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0030234315948601664}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}},"s":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}},":":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.008379888268156424}}},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"采":{"docs":{},"用":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"的":{"docs":{},"交":{"docs":{},"叉":{"docs":{},"执":{"docs":{},"行":{"docs":{},"情":{"docs":{},"况":{"docs":{},"就":{"docs":{},"无":{"docs":{},"法":{"docs":{},"预":{"docs":{},"料":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"且":{"docs":{},"仅":{"docs":{},"当":{"docs":{},"预":{"docs":{},"期":{"docs":{},"值":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"，":{"docs":{},"又":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}},"否":{"docs":{},"则":{"docs":{},"什":{"docs":{},"么":{"docs":{},"都":{"docs":{},"不":{"docs":{},"做":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"只":{"docs":{},"把":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"/":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"[":{"docs":{},"]":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},"+":{"docs":{},"树":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"域":{"docs":{},"记":{"docs":{},"录":{"docs":{},"完":{"docs":{},"整":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"记":{"docs":{},"录":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"聚":{"docs":{},"簇":{"docs":{},"索":{"docs":{},"引":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"b":{"docs":{},"树":{"docs":{},"区":{"docs":{},"别":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}},"所":{"docs":{},"有":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"形":{"docs":{},"成":{"docs":{},"有":{"docs":{},"序":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"便":{"docs":{},"于":{"docs":{},"范":{"docs":{},"围":{"docs":{},"查":{"docs":{},"询":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}},"查":{"docs":{},"询":{"docs":{},"都":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"查":{"docs":{},"询":{"docs":{},"性":{"docs":{},"能":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"。":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}},"索":{"docs":{},"引":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}},"树":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}},"和":{"docs":{},"b":{"docs":{},"+":{"docs":{},"树":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.011494252873563218}}}}}}}},"c":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.007246376811594203},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.005578800557880056},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}},"/":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"异":{"docs":{},"同":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.010810810810810811}}}}}}},"的":{"docs":{},"堆":{"docs":{},"栈":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"a":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0048115477145148355},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.04310344827586207},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.005},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}},"p":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}},"a":{"docs":{},"c":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0025188916876574307}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},";":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}},")":{"docs":{},"，":{"docs":{},"就":{"docs":{},"要":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"docs":{}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"2":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"3":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"4":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"docs":{}}}}}},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"思":{"docs":{},"想":{"docs":{},"和":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"理":{"docs":{},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"调":{"docs":{},"用":{"docs":{},"j":{"docs":{},"n":{"docs":{},"i":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"。":{"docs":{},"j":{"docs":{},"n":{"docs":{},"i":{"docs":{},":":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}},"。":{"docs":{},"不":{"docs":{},"推":{"docs":{},"荐":{"docs":{},"在":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"操":{"docs":{},"作":{"docs":{},"中":{"docs":{},"引":{"docs":{},"入":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}},"，":{"docs":{},"会":{"docs":{},"使":{"docs":{},"程":{"docs":{},"序":{"docs":{},"可":{"docs":{},"读":{"docs":{},"性":{"docs":{},"变":{"docs":{},"差":{"docs":{},"，":{"docs":{},"且":{"docs":{},"难":{"docs":{},"以":{"docs":{},"测":{"docs":{},"试":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"算":{"docs":{},"法":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}},"l":{"docs":{},"l":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.014434643143544507},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.005470459518599562}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"：":{"docs":{},"只":{"docs":{},"用":{"docs":{},"调":{"docs":{},"用":{"docs":{},"者":{"docs":{},"所":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"来":{"docs":{},"运":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002857142857142857}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"作":{"docs":{},"废":{"docs":{},")":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"应":{"docs":{},"该":{"docs":{},"从":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"移":{"docs":{},"除":{"docs":{},".":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}},"（":{"1":{"docs":{},"）":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"docs":{}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.006017505470459519},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.010040160642570281},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.006462035541195477},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0045351473922902496}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0056179775280898875},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.010526315789473684},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.014285714285714285},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0031124944419742106},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.01586433260393873},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.008620689655172414},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.009836065573770493},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002857142857142857},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.013618677042801557},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.008032128514056224},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.006462035541195477},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0033613445378151263},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.03765690376569038},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.01056338028169014},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.010582010582010581},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0160857908847185}},"）":{"docs":{},"与":{"docs":{},"接":{"docs":{},"口":{"docs":{},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"）":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"异":{"docs":{},"同":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.005578800557880056}},"e":{"docs":{},"r":{"docs":{},"）":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.0041841004184100415}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},",":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},".":{"docs":{},"'":{"docs":{},",":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.00697350069735007},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.009830205540661306}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"自":{"docs":{},"己":{"docs":{},"去":{"docs":{},"加":{"docs":{},"载":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.0041841004184100415}}}}}},"，":{"docs":{},"使":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925}},"，":{"docs":{},"能":{"docs":{},"被":{"docs":{},"克":{"docs":{},"隆":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925}},"e":{"docs":{},",":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.008421052631578947},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"支":{"docs":{},"持":{"docs":{},"克":{"docs":{},"隆":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.008421052631578947}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}},"(":{"docs":{},")":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"链":{"docs":{},"接":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"i":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.014084507042253521}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0033613445378151263}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925}},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"定":{"docs":{},"位":{"docs":{},"到":{"docs":{},"我":{"docs":{},"们":{"docs":{},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"上":{"docs":{},"。":{"docs":{},"重":{"docs":{},"载":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"向":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"表":{"docs":{},"明":{"docs":{},"当":{"docs":{},"前":{"docs":{},"对":{"docs":{},"象":{"docs":{},"和":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"上":{"docs":{},"所":{"docs":{},"保":{"docs":{},"存":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"我":{"docs":{},"们":{"docs":{},"才":{"docs":{},"真":{"docs":{},"正":{"docs":{},"地":{"docs":{},"获":{"docs":{},"得":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"所":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"这":{"docs":{},"个":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.04395604395604396},"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.00631578947368421},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.007142857142857143},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}},"之":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":10}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":10}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":10}}}}}}},"，":{"docs":{},"二":{"docs":{},"者":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"完":{"docs":{},"全":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}},"只":{"docs":{},"是":{"docs":{},"行":{"docs":{},"为":{"docs":{},"略":{"docs":{},"有":{"docs":{},"不":{"docs":{},"同":{"docs":{},"：":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"i":{"docs":{},"s":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},"r":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0031124944419742106},"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"e":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},")":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},",":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}},"i":{"docs":{},"t":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.008620689655172414},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.004201680672268907}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.004371584699453552}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"们":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"快":{"docs":{},"照":{"docs":{},"上":{"docs":{},"工":{"docs":{},"作":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"无":{"docs":{},"论":{"docs":{},"后":{"docs":{},"续":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"docs":{},"（":{"2":{"docs":{},",":{"4":{"docs":{},"）":{"docs":{},"如":{"docs":{},"何":{"docs":{},"，":{"docs":{},"都":{"docs":{},"会":{"docs":{},"像":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"创":{"docs":{},"建":{"docs":{},"时":{"docs":{},"那":{"docs":{},"样":{"docs":{},"完":{"docs":{},"全":{"docs":{},"返":{"docs":{},"回":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"o":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"p":{"1":{"docs":{},".":{"7":{"docs":{},"分":{"docs":{},"段":{"docs":{},"数":{"docs":{},"组":{"docs":{},"+":{"docs":{},"链":{"docs":{},"表":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}},"8":{"docs":{},"数":{"docs":{},"组":{"docs":{},"+":{"docs":{},"链":{"docs":{},"表":{"docs":{},"/":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"原":{"docs":{},"理":{"docs":{},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}},"docs":{}}},"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.006557377049180328},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"?":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.007155635062611807}}},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"其":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"数":{"docs":{},"组":{"docs":{},"；":{"docs":{},"而":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"继":{"docs":{},"承":{"docs":{},"自":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"而":{"docs":{},"当":{"docs":{},"这":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"结":{"docs":{},"构":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"大":{"docs":{},"于":{"8":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"升":{"docs":{},"级":{"docs":{},"为":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"部":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"类":{"docs":{},"似":{"docs":{},"于":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"在":{"docs":{},"“":{"docs":{},"写":{"docs":{},"”":{"docs":{},"线":{"docs":{},"程":{"docs":{},"或":{"docs":{},"者":{"docs":{},"部":{"docs":{},"分":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"“":{"docs":{},"读":{"docs":{},"”":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"锁":{"docs":{},"住":{"docs":{},"的":{"docs":{},"是":{"docs":{},"某":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"其":{"docs":{},"它":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"能":{"docs":{},"够":{"docs":{},"并":{"docs":{},"发":{"docs":{},"执":{"docs":{},"行":{"docs":{},"其":{"docs":{},"它":{"docs":{},"的":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}}}}},"在":{"1":{"docs":{},".":{"8":{"docs":{},"版":{"docs":{},"本":{"docs":{},"摒":{"docs":{},"弃":{"docs":{},"了":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"（":{"docs":{},"锁":{"docs":{},"段":{"docs":{},"）":{"docs":{},"的":{"docs":{},"概":{"docs":{},"念":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"启":{"docs":{},"用":{"docs":{},"了":{"docs":{},"一":{"docs":{},"种":{"docs":{},"全":{"docs":{},"新":{"docs":{},"的":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}},"就":{"docs":{},"是":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"编":{"docs":{},"程":{"docs":{},"中":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"高":{"docs":{},"性":{"docs":{},"能":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"方":{"docs":{},"案":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"分":{"docs":{},"段":{"docs":{},"技":{"docs":{},"术":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"分":{"docs":{},"成":{"docs":{},"一":{"docs":{},"段":{"docs":{},"一":{"docs":{},"段":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"给":{"docs":{},"每":{"docs":{},"一":{"docs":{},"段":{"docs":{},"数":{"docs":{},"据":{"docs":{},"配":{"docs":{},"一":{"docs":{},"把":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"占":{"docs":{},"用":{"docs":{},"锁":{"docs":{},"访":{"docs":{},"问":{"docs":{},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"段":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"段":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"也":{"docs":{},"能":{"docs":{},"被":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{},"能":{"docs":{},"够":{"docs":{},"实":{"docs":{},"现":{"docs":{},"真":{"docs":{},"正":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"原":{"docs":{},"理":{"docs":{},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}},",":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}},"/":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"c":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"主":{"docs":{},"要":{"docs":{},"用":{"docs":{},"来":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"、":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"和":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"等":{"docs":{},"；":{"docs":{},"而":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"和":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"则":{"docs":{},"主":{"docs":{},"要":{"docs":{},"用":{"docs":{},"来":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"每":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"分":{"docs":{},"段":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"并":{"docs":{},"发":{"docs":{},"级":{"docs":{},"别":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"值":{"docs":{},"用":{"docs":{},"来":{"docs":{},"确":{"docs":{},"定":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"是":{"docs":{},"大":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"2":{"docs":{},"的":{"docs":{},"n":{"docs":{},"次":{"docs":{},"方":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"为":{"1":{"2":{"docs":{},"，":{"1":{"3":{"docs":{},"，":{"1":{"4":{"docs":{},"，":{"1":{"5":{"docs":{},"，":{"1":{"6":{"docs":{},"这":{"docs":{},"些":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"为":{"1":{"6":{"docs":{},"(":{"2":{"docs":{},"的":{"4":{"docs":{},"次":{"docs":{},"方":{"docs":{},")":{"docs":{},"。":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"b":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925}}}}}},"u":{"docs":{},"m":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"a":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}},"b":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.009523809523809525},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"，":{"docs":{},"简":{"docs":{},"单":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}},"）":{"docs":{},"：":{"docs":{},"当":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"同":{"docs":{},"一":{"docs":{},"资":{"docs":{},"源":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"对":{"docs":{},"资":{"docs":{},"源":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"敏":{"docs":{},"感":{"docs":{},"，":{"docs":{},"就":{"docs":{},"称":{"docs":{},"存":{"docs":{},"在":{"docs":{},"竞":{"docs":{},"态":{"docs":{},"条":{"docs":{},"件":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}},"（":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},"e":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}},"u":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.011235955056179775},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.006557377049180328}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"本":{"docs":{},"质":{"docs":{},"上":{"docs":{},"是":{"docs":{},"由":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"，":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"这":{"docs":{},"篇":{"docs":{},"文":{"docs":{},"章":{"docs":{},"了":{"docs":{},"解":{"docs":{},"如":{"docs":{},"何":{"docs":{},"避":{"docs":{},"免":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.008379888268156424},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.025362318840579712},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.006024096385542169}},",":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},";":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},".":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.010040160642570281}},"(":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}},"源":{"docs":{},"码":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}},"示":{"docs":{},"例":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}},"要":{"docs":{},"点":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}},"e":{"docs":{},"r":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}},"=":{"docs":{},"\"":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}},")":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}},"。":{"docs":{},"每":{"docs":{},"次":{"docs":{},"执":{"docs":{},"行":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"需":{"docs":{},"要":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"事":{"docs":{},"件":{"docs":{},"数":{"docs":{},"量":{"docs":{},"。":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}},"：":{"docs":{},"默":{"docs":{},"认":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"在":{"docs":{},"创":{"docs":{},"建":{"docs":{},"了":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"后":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"为":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"跟":{"docs":{},"后":{"docs":{},"面":{"docs":{},"讲":{"docs":{},"述":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"理":{"docs":{},"有":{"docs":{},"非":{"docs":{},"常":{"docs":{},"大":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{},"在":{"docs":{},"创":{"docs":{},"建":{"docs":{},"了":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"后":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"任":{"docs":{},"何":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"等":{"docs":{},"待":{"docs":{},"有":{"docs":{},"任":{"docs":{},"务":{"docs":{},"到":{"docs":{},"来":{"docs":{},"才":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"去":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"除":{"docs":{},"非":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}},"[":{"1":{"0":{"2":{"4":{"docs":{},"]":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"]":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}}},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.009389671361502348}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.009389671361502348}}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},".":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"m":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.02689075630252101},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"g":{"docs":{},"）":{"docs":{},"；":{"docs":{},"反":{"docs":{},"之":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"程":{"docs":{},"序":{"docs":{},"是":{"docs":{},"在":{"docs":{},"单":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"上":{"docs":{},"运":{"docs":{},"行":{"docs":{},"，":{"docs":{},"就":{"docs":{},"省":{"docs":{},"略":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"（":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"，":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"对":{"docs":{},"象":{"docs":{},"就":{"docs":{},"地":{"docs":{},"释":{"docs":{},"放":{"docs":{},"。":{"docs":{},"它":{"docs":{},"们":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"来":{"docs":{},"回":{"docs":{},"移":{"docs":{},"动":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"空":{"docs":{},"间":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"除":{"docs":{},"非":{"docs":{},"发":{"docs":{},"生":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}},"u":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.006415396952686447},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.0223463687150838},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.01293103448275862},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.11231884057971014},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0067226890756302525},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.004534005037783375}},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"些":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}}}}}}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0032076984763432237},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.018072289156626505}},"e":{"docs":{},"r":{"docs":{},"(":{"2":{"docs":{},",":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"0":{"2":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}},"docs":{}},"docs":{}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.006024096385542169}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"1":{"docs":{},",":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}}}},"docs":{}}}}}}}},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}},"源":{"docs":{},"码":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}},"示":{"docs":{},"例":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}},"要":{"docs":{},"点":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},";":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"(":{"docs":{},"t":{"docs":{},",":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}},"t":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}},"[":{"docs":{},"]":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"]":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"d":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.009389671361502348}}}},"f":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.01584507042253521},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.006802721088435374},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}},"i":{"docs":{},"n":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.020172910662824207},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.020172910662824207},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.020172910662824207}},"a":{"docs":{},"l":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.02619047619047619},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.008892841262783458},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.01073345259391771},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.004310344827586207},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.013114754098360656},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.02},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.004201680672268907},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.00697350069735007},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.003779289493575208},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.00804289544235925}},"、":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},"和":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0025210084033613447}},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"d":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"(":{"docs":{},")":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"(":{"docs":{},"g":{"1":{"docs":{},")":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}},"docs":{}}},"）":{"docs":{},"，":{"docs":{},"是":{"docs":{},"面":{"docs":{},"向":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"应":{"docs":{},"用":{"docs":{},"的":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}},".":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"（":{"docs":{},"先":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"）":{"docs":{},"原":{"docs":{},"则":{"docs":{},"对":{"docs":{},"元":{"docs":{},"素":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"l":{"docs":{},"o":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"e":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723},"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.022887323943661973},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.02872260015117158},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.00528169014084507},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},")":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}},"f":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}},"(":{"docs":{},"\"":{"docs":{},"d":{"docs":{},":":{"docs":{},"\\":{"docs":{},"\\":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"x":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}},"f":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}},"(":{"docs":{},"\"":{"docs":{},"d":{"docs":{},":":{"docs":{},"\"":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.008802816901408451},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.006046863189720333}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0030234315948601664}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.003779289493575208}},")":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.005291005291005291}}},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},"e":{"docs":{},")":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},"o":{"docs":{},"r":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},"）":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"提":{"docs":{},"高":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"效":{"docs":{},"率":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"g":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.00528169014084507}}}}},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.004371584699453552},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},",":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.004285714285714286}},"u":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0033613445378151263}},"e":{"docs":{},"。":{"docs":{},"浮":{"docs":{},"动":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"是":{"docs":{},"指":{"docs":{},"并":{"docs":{},"发":{"docs":{},"清":{"docs":{},"除":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"由":{"docs":{},"于":{"docs":{},"用":{"docs":{},"户":{"docs":{},"线":{"docs":{},"程":{"docs":{},"继":{"docs":{},"续":{"docs":{},"运":{"docs":{},"行":{"docs":{},"而":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"，":{"docs":{},"这":{"docs":{},"部":{"docs":{},"分":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"只":{"docs":{},"能":{"docs":{},"到":{"docs":{},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"将":{"docs":{},"临":{"docs":{},"时":{"docs":{},"启":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}},"r":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"s":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}},"c":{"docs":{},"o":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},")":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"，":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"办":{"docs":{},"？":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}},"l":{"docs":{},"s":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}},"e":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.005714285714285714}}},"，":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"为":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"让":{"docs":{},"它":{"docs":{},"为":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"此":{"docs":{},"时":{"docs":{},"维":{"docs":{},"护":{"docs":{},"的":{"docs":{},"是":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}},"重":{"docs":{},"新":{"docs":{},"进":{"docs":{},"入":{"docs":{},"外":{"docs":{},"部":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"无":{"docs":{},"论":{"docs":{},"如":{"docs":{},"何":{"docs":{},"都":{"docs":{},"会":{"docs":{},"立":{"docs":{},"即":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"获":{"docs":{},"取":{"docs":{},"不":{"docs":{},"到":{"docs":{},"锁":{"docs":{},"时":{"docs":{},"不":{"docs":{},"会":{"docs":{},"一":{"docs":{},"直":{"docs":{},"等":{"docs":{},"待":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"开":{"docs":{},"始":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"锁":{"docs":{},"或":{"docs":{},"者":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"期":{"docs":{},"间":{"docs":{},"内":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"了":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}}}}},"q":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}},"e":{"docs":{},"w":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.00400962309542903},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.011308562197092083}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.007217321571772253},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002735229759299781}},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"什":{"docs":{},"么":{"docs":{},"是":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.019327731092436976},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.006045340050377834}},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},")":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},")":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}},"m":{"docs":{},"k":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"h":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0025188916876574307}},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},".":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"g":{"1":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.012605042016806723},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"回":{"docs":{},"收":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"详":{"docs":{},"细":{"docs":{},"步":{"docs":{},"骤":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"轻":{"docs":{},"代":{"docs":{},"详":{"docs":{},"细":{"docs":{},"步":{"docs":{},"骤":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"机":{"docs":{},"制":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"（":{"docs":{},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}},"o":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}},"上":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"函":{"docs":{},"数":{"docs":{},"重":{"docs":{},"载":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"具":{"docs":{},"有":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"名":{"docs":{},"称":{"docs":{},"。":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"允":{"docs":{},"许":{"docs":{},"函":{"docs":{},"数":{"docs":{},"重":{"docs":{},"载":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"值":{"docs":{},"传":{"docs":{},"递":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"它":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"指":{"docs":{},"针":{"docs":{},"来":{"docs":{},"完":{"docs":{},"成":{"docs":{},"引":{"docs":{},"用":{"docs":{},"传":{"docs":{},"递":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}},"语":{"docs":{},"言":{"docs":{},"的":{"docs":{},"继":{"docs":{},"承":{"docs":{},"通":{"docs":{},"过":{"docs":{},"匿":{"docs":{},"名":{"docs":{},"组":{"docs":{},"合":{"docs":{},"完":{"docs":{},"成":{"docs":{},"：":{"docs":{},"基":{"docs":{},"类":{"docs":{},"以":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"子":{"docs":{},"类":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"基":{"docs":{},"类":{"docs":{},"作":{"docs":{},"为":{"docs":{},"成":{"docs":{},"员":{"docs":{},"放":{"docs":{},"在":{"docs":{},"子":{"docs":{},"类":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"中":{"docs":{},"，":{"docs":{},"支":{"docs":{},"持":{"docs":{},"多":{"docs":{},"继":{"docs":{},"承":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0022232103156958646},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002857142857142857},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.031092436974789917},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.039798488664987405}},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"概":{"docs":{},"念":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"强":{"docs":{},"弱":{"docs":{},"软":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"等":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"可":{"docs":{},"以":{"docs":{},"准":{"docs":{},"备":{"docs":{},"下":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-interview.html":{"ref":"javacore/jvm/jvm-interview.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.005042016806722689}},"如":{"docs":{},"果":{"docs":{},"经":{"docs":{},"过":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"而":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"）":{"docs":{},"，":{"docs":{},"便":{"docs":{},"会":{"docs":{},"报":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"增":{"docs":{},"加":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"其":{"docs":{},"触":{"docs":{},"发":{"docs":{},"条":{"docs":{},"件":{"docs":{},"非":{"docs":{},"常":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"当":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}},"可":{"docs":{},"采":{"docs":{},"用":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"为":{"docs":{},"增":{"docs":{},"大":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"空":{"docs":{},"间":{"docs":{},"或":{"docs":{},"转":{"docs":{},"为":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}},"尽":{"docs":{},"管":{"docs":{},"这":{"docs":{},"次":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"虽":{"docs":{},"然":{"docs":{},"只":{"docs":{},"是":{"docs":{},"建":{"docs":{},"议":{"docs":{},"而":{"docs":{},"非":{"docs":{},"一":{"docs":{},"定":{"docs":{},"，":{"docs":{},"但":{"docs":{},"很":{"docs":{},"多":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"它":{"docs":{},"会":{"docs":{},"触":{"docs":{},"发":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"优":{"docs":{},"时":{"docs":{},"应":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"做":{"docs":{},"到":{"docs":{},"让":{"docs":{},"对":{"docs":{},"象":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"对":{"docs":{},"象":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"：":{"docs":{},"发":{"docs":{},"生":{"docs":{},"在":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"上":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"对":{"docs":{},"象":{"docs":{},"存":{"docs":{},"活":{"docs":{},"时":{"docs":{},"间":{"docs":{},"很":{"docs":{},"短":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"上":{"docs":{},"，":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"对":{"docs":{},"象":{"docs":{},"和":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"的":{"docs":{},"相":{"docs":{},"反":{"docs":{},"，":{"docs":{},"其":{"docs":{},"存":{"docs":{},"活":{"docs":{},"时":{"docs":{},"间":{"docs":{},"长":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"「":{"docs":{},"译":{"docs":{},"」":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"e":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},"[":{"docs":{},"]":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"者":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"获":{"docs":{},"取":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},";":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}},"k":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}}}},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"，":{"docs":{},"它":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},":":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"操":{"docs":{},"作":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"t":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"o":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.023622047244094488}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0025210084033613447}}}}}}},"h":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.023474178403755867}}},"i":{"docs":{},"t":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.028169014084507043}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.06572769953051644}},"根":{"docs":{},"目":{"docs":{},"录":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}},"源":{"docs":{},"文":{"docs":{},"件":{"docs":{},"发":{"docs":{},"布":{"docs":{},"到":{"docs":{},"g":{"docs":{},"h":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}},"目":{"docs":{},"录":{"docs":{},"折":{"docs":{},"叠":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},"，":{"docs":{},"在":{"docs":{},"托":{"docs":{},"管":{"docs":{},"电":{"docs":{},"子":{"docs":{},"书":{"docs":{},"的":{"docs":{},"仓":{"docs":{},"库":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"a":{"docs":{},"s":{"docs":{},"h":{"1":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"；":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"h":{"1":{"docs":{},"高":{"docs":{},"几":{"docs":{},"位":{"docs":{},")":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"h":{"2":{"docs":{},"能":{"docs":{},"够":{"docs":{},"确":{"docs":{},"定":{"docs":{},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"放":{"docs":{},"在":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"；":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}},"3":{"docs":{},"(":{"docs":{},"h":{"1":{"docs":{},")":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"h":{"3":{"docs":{},"能":{"docs":{},"够":{"docs":{},"确":{"docs":{},"定":{"docs":{},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"放":{"docs":{},"置":{"docs":{},"在":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}},"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.008892841262783458},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.00546448087431694}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"和":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}},"做":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}},"的":{"docs":{},"都":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"作":{"docs":{},"用":{"docs":{},"？":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"高":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"进":{"docs":{},"行":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.01263157894736842},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.009782125389061804},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.01073345259391771},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143}},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"比":{"docs":{},"较":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"要":{"docs":{},"同":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"！":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"1":{"6":{"docs":{},"，":{"docs":{},"加":{"docs":{},"载":{"docs":{},"因":{"docs":{},"子":{"0":{"docs":{},".":{"7":{"5":{"docs":{},"。":{"docs":{},"并":{"docs":{},"且":{"docs":{},"每":{"docs":{},"次":{"docs":{},"自":{"docs":{},"动":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"或":{"docs":{},"手":{"docs":{},"动":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"时":{"docs":{},"，":{"docs":{},"长":{"docs":{},"度":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"2":{"docs":{},"的":{"docs":{},"幂":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}},"docs":{}},"docs":{}}}}}}}}}},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}},"，":{"docs":{},"它":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}},"因":{"docs":{},"此":{"docs":{},"具":{"docs":{},"有":{"docs":{},"和":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"并":{"docs":{},"且":{"docs":{},"重":{"docs":{},"新":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"、":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"、":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"和":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"类":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}},"？":{"docs":{},"他":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"特":{"docs":{},"点":{"docs":{},"？":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"容":{"docs":{},"量":{"docs":{},"更":{"docs":{},"大":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"来":{"docs":{},"代":{"docs":{},"替":{"docs":{},"旧":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"（":{"docs":{},"）":{"docs":{},"方":{"docs":{},"法":{"docs":{},"将":{"docs":{},"原":{"docs":{},"有":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"到":{"docs":{},"新":{"docs":{},"的":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"，":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"必":{"docs":{},"须":{"docs":{},"重":{"docs":{},"新":{"docs":{},"计":{"docs":{},"算":{"docs":{},"其":{"docs":{},"在":{"docs":{},"新":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"并":{"docs":{},"放":{"docs":{},"进":{"docs":{},"去":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"把":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"去":{"docs":{},"掉":{"docs":{},"了":{"docs":{},"，":{"docs":{},"改":{"docs":{},"成":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"和":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"基":{"docs":{},"于":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"的":{"docs":{},"原":{"docs":{},"理":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"，":{"docs":{},"在":{"docs":{},"并":{"docs":{},"发":{"docs":{},"环":{"docs":{},"境":{"docs":{},"下":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"形":{"docs":{},"成":{"docs":{},"环":{"docs":{},"状":{"docs":{},"链":{"docs":{},"表":{"docs":{},"（":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"时":{"docs":{},"可":{"docs":{},"能":{"docs":{},"造":{"docs":{},"成":{"docs":{},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"原":{"docs":{},"因":{"docs":{},"自":{"docs":{},"行":{"docs":{},"百":{"docs":{},"度":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"或":{"docs":{},"查":{"docs":{},"看":{"docs":{},"源":{"docs":{},"码":{"docs":{},"分":{"docs":{},"析":{"docs":{},"）":{"docs":{},"，":{"docs":{},"导":{"docs":{},"致":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"空":{"docs":{},"转":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"原":{"docs":{},"理":{"docs":{},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}},"扩":{"docs":{},"容":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}}}}},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"等":{"docs":{},"于":{"2":{"docs":{},"的":{"docs":{},"幂":{"docs":{},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}},"docs":{}}}}}}}},"默":{"docs":{},"认":{"docs":{},"容":{"docs":{},"量":{"docs":{},"为":{"1":{"6":{"docs":{},"，":{"docs":{},"要":{"docs":{},"求":{"docs":{},"底":{"docs":{},"层":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"为":{"2":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"次":{"docs":{},"幂":{"docs":{},"，":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"时":{"docs":{},"将":{"docs":{},"容":{"docs":{},"量":{"docs":{},"变":{"docs":{},"为":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"2":{"docs":{},"倍":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"采":{"docs":{},"用":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"实":{"docs":{},"现":{"docs":{},"高":{"docs":{},"效":{"docs":{},"并":{"docs":{},"发":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}},"（":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"7":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"docs":{}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.05052631578947368}},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"支":{"docs":{},"持":{"docs":{},"快":{"docs":{},"速":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{},"有":{"docs":{},"序":{"docs":{},"性":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"并":{"docs":{},"且":{"docs":{},"失":{"docs":{},"去":{"docs":{},"了":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"使":{"docs":{},"用":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"是":{"docs":{},"不":{"docs":{},"确":{"docs":{},"定":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.01967799642218247},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}},"e":{"docs":{},"：":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}},"，":{"docs":{},"除":{"docs":{},"了":{"docs":{},"它":{"docs":{},"是":{"docs":{},"不":{"docs":{},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"并":{"docs":{},"且":{"docs":{},"允":{"docs":{},"许":{"docs":{},"为":{"docs":{},"空":{"docs":{},"值":{"docs":{},"。":{"docs":{},"）":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"不":{"docs":{},"保":{"docs":{},"序":{"docs":{},"；":{"docs":{},"特":{"docs":{},"别":{"docs":{},"是":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"随":{"docs":{},"着":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"推":{"docs":{},"移":{"docs":{},"变":{"docs":{},"化":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"、":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"都":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"允":{"docs":{},"许":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}},"则":{"docs":{},"保":{"docs":{},"留":{"docs":{},"了":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"和":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"三":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"和":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"功":{"docs":{},"能":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"+":{"docs":{},"链":{"docs":{},"表":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}},"所":{"docs":{},"有":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"会":{"docs":{},"锁":{"docs":{},"住":{"docs":{},"整":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"能":{"docs":{},"够":{"docs":{},"保":{"docs":{},"证":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"性":{"docs":{},"能":{"docs":{},"较":{"docs":{},"差":{"docs":{},"；":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"扩":{"docs":{},"容":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"、":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"重":{"docs":{},"新":{"docs":{},"计":{"docs":{},"算":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"用":{"docs":{},"于":{"docs":{},"代":{"docs":{},"替":{"docs":{},"求":{"docs":{},"模":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"策":{"docs":{},"略":{"docs":{},"实":{"docs":{},"现":{"docs":{},"代":{"docs":{},"价":{"docs":{},"却":{"docs":{},"太":{"docs":{},"大":{"docs":{},"了":{"docs":{},"，":{"docs":{},"简":{"docs":{},"单":{"docs":{},"粗":{"docs":{},"暴":{"docs":{},"，":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"所":{"docs":{},"有":{"docs":{},"相":{"docs":{},"关":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"是":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"给":{"docs":{},"整":{"docs":{},"个":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"加":{"docs":{},"了":{"docs":{},"一":{"docs":{},"把":{"docs":{},"大":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"或":{"docs":{},"操":{"docs":{},"作":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"那":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"只":{"docs":{},"能":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"将":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"串":{"docs":{},"行":{"docs":{},"化":{"docs":{},"，":{"docs":{},"在":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"激":{"docs":{},"烈":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"场":{"docs":{},"景":{"docs":{},"中":{"docs":{},"性":{"docs":{},"能":{"docs":{},"就":{"docs":{},"会":{"docs":{},"非":{"docs":{},"常":{"docs":{},"差":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"继":{"docs":{},"承":{"docs":{},"自":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"类":{"docs":{},"，":{"docs":{},"而":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"继":{"docs":{},"承":{"docs":{},"自":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"类":{"docs":{},"。":{"docs":{},"但":{"docs":{},"二":{"docs":{},"者":{"docs":{},"都":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"接":{"docs":{},"口":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"容":{"docs":{},"量":{"docs":{},"为":{"1":{"1":{"docs":{},"，":{"docs":{},"不":{"docs":{},"要":{"docs":{},"求":{"docs":{},"底":{"docs":{},"层":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"为":{"2":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"次":{"docs":{},"幂":{"docs":{},"，":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"时":{"docs":{},"将":{"docs":{},"容":{"docs":{},"量":{"docs":{},"变":{"docs":{},"为":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"2":{"docs":{},"倍":{"docs":{},"加":{"1":{"docs":{},"，":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"获":{"docs":{},"得":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},")":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"]":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164}}},"y":{"docs":{},"[":{"docs":{},"]":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164}}}},"{":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"节":{"docs":{},"点":{"docs":{},"都":{"docs":{},"是":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"，":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"其":{"docs":{},"在":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"同":{"docs":{},"时":{"docs":{},"读":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"不":{"docs":{},"用":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"，":{"docs":{},"并":{"docs":{},"计":{"docs":{},"算":{"docs":{},"下":{"docs":{},"标":{"docs":{},"(":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"看":{"docs":{},"看":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"计":{"docs":{},"算":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"确":{"docs":{},"定":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"算":{"docs":{},"法":{"docs":{},"计":{"docs":{},"算":{"docs":{},"方":{"docs":{},"式":{"docs":{},"改":{"docs":{},"变":{"docs":{},"：":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}},"l":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}},"：":{"docs":{},"饱":{"docs":{},"和":{"docs":{},"策":{"docs":{},"略":{"docs":{},"。":{"docs":{},"当":{"docs":{},"队":{"docs":{},"列":{"docs":{},"和":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"都":{"docs":{},"满":{"docs":{},"了":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"处":{"docs":{},"于":{"docs":{},"饱":{"docs":{},"和":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"必":{"docs":{},"须":{"docs":{},"采":{"docs":{},"取":{"docs":{},"一":{"docs":{},"种":{"docs":{},"策":{"docs":{},"略":{"docs":{},"处":{"docs":{},"理":{"docs":{},"提":{"docs":{},"交":{"docs":{},"的":{"docs":{},"新":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"策":{"docs":{},"略":{"docs":{},"默":{"docs":{},"认":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"是":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"\"":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0025210084033613447}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.010869565217391304}}}}}},"c":{"docs":{},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.015748031496062992}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"、":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"、":{"docs":{},"避":{"docs":{},"免":{"docs":{},"临":{"docs":{},"时":{"docs":{},"表":{"docs":{},"、":{"docs":{},"避":{"docs":{},"免":{"docs":{},"使":{"docs":{},"用":{"docs":{},"i":{"docs":{},"n":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}},"避":{"docs":{},"免":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"耗":{"docs":{},"费":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"操":{"docs":{},"作":{"docs":{},",":{"docs":{},"模":{"docs":{},"糊":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"临":{"docs":{},"时":{"docs":{},"表":{"docs":{},"，":{"docs":{},"减":{"docs":{},"少":{"docs":{},"重":{"docs":{},"复":{"docs":{},"工":{"docs":{},"作":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}},"g":{"docs":{},"h":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"e":{"docs":{},"r":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}}}}},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.008645533141210375},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.008645533141210375},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.008645533141210375}},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"c":{"docs":{},"n":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"s":{"docs":{},"k":{"docs":{},"y":{"docs":{},"w":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"1":{"2":{"3":{"4":{"5":{"docs":{},"/":{"docs":{},"p":{"docs":{},"/":{"3":{"3":{"0":{"8":{"8":{"0":{"7":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{},"i":{"docs":{},"a":{"docs":{},"o":{"docs":{},"/":{"docs":{},"p":{"docs":{},"/":{"6":{"8":{"8":{"1":{"9":{"7":{"4":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"l":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"0":{"5":{"2":{"0":{"docs":{},"/":{"docs":{},"p":{"docs":{},"/":{"3":{"9":{"2":{"0":{"3":{"9":{"7":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"3":{"1":{"6":{"7":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"3":{"3":{"4":{"0":{"4":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"1":{"4":{"9":{"5":{"8":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"2":{"0":{"1":{"2":{"docs":{},"/":{"0":{"6":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"j":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"/":{"2":{"0":{"1":{"2":{"docs":{},"/":{"0":{"2":{"docs":{},"/":{"1":{"3":{"docs":{},"/":{"3":{"6":{"9":{"8":{"9":{"8":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"1":{"1":{"4":{"0":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"e":{"docs":{},"n":{"docs":{},"k":{"docs":{},"o":{"docs":{},"v":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.007782101167315175}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"u":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"n":{"docs":{},"/":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"/":{"3":{"5":{"3":{"7":{"6":{"2":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"4":{"0":{"0":{"0":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"。":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"c":{"docs":{},"n":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"s":{"docs":{},"k":{"docs":{},"y":{"docs":{},"w":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"1":{"2":{"3":{"4":{"5":{"docs":{},"/":{"docs":{},"p":{"docs":{},"/":{"3":{"3":{"0":{"8":{"5":{"5":{"6":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"f":{"4":{"5":{"6":{"docs":{},"/":{"docs":{},"p":{"docs":{},"/":{"5":{"5":{"4":{"7":{"8":{"5":{"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}}}}}},"x":{"docs":{},"r":{"docs":{},"q":{"7":{"3":{"0":{"docs":{},"/":{"docs":{},"p":{"docs":{},"/":{"5":{"0":{"2":{"0":{"7":{"6":{"0":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}}}},"q":{"docs":{},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"/":{"docs":{},"p":{"docs":{},"/":{"6":{"8":{"3":{"1":{"0":{"5":{"5":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"/":{"docs":{},"p":{"docs":{},"/":{"5":{"4":{"3":{"6":{"4":{"8":{"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"t":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.008379888268156424}}}}}}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"h":{"docs":{},"i":{"docs":{},"h":{"docs":{},"u":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"3":{"3":{"5":{"1":{"5":{"4":{"8":{"1":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"1":{"0":{"3":{"7":{"docs":{},"/":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"/":{"4":{"7":{"3":{"docs":{},"e":{"1":{"4":{"docs":{},"d":{"5":{"docs":{},"a":{"docs":{},"b":{"2":{"docs":{},"d":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}},"docs":{}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{},"c":{"0":{"6":{"4":{"2":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"0":{"3":{"docs":{},"e":{"0":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"f":{"6":{"7":{"3":{"0":{"docs":{},"d":{"5":{"7":{"8":{"4":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"n":{"docs":{},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"9":{"6":{"0":{"6":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"d":{"docs":{},"n":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"y":{"docs":{},"a":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"2":{"0":{"1":{"1":{"docs":{},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"4":{"4":{"2":{"8":{"0":{"7":{"9":{"7":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"8":{"9":{"6":{"4":{"4":{"1":{"4":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"w":{"docs":{},"a":{"docs":{},"n":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"5":{"4":{"9":{"7":{"2":{"9":{"5":{"2":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"s":{"5":{"7":{"1":{"8":{"docs":{},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"5":{"2":{"5":{"6":{"3":{"9":{"5":{"9":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"u":{"0":{"1":{"0":{"4":{"2":{"5":{"7":{"7":{"6":{"docs":{},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"5":{"4":{"8":{"9":{"0":{"2":{"1":{"5":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"2":{"4":{"0":{"3":{"2":{"9":{"0":{"docs":{},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"6":{"4":{"9":{"1":{"0":{"9":{"2":{"6":{"docs":{},"?":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"=":{"1":{"1":{"docs":{},"&":{"docs":{},"f":{"docs":{},"p":{"docs":{},"s":{"docs":{},"=":{"1":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"docs":{}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"w":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{},"i":{"docs":{},"a":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"f":{"docs":{},"a":{"docs":{},"n":{"docs":{},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"5":{"2":{"0":{"7":{"4":{"1":{"6":{"0":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"/":{"8":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"2":{"7":{"4":{"0":{"6":{"2":{"0":{"0":{"docs":{},"/":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"m":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"y":{"docs":{},".":{"docs":{},"o":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"/":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"/":{"6":{"7":{"5":{"8":{"8":{"4":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"i":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"a":{"docs":{},"/":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"/":{"1":{"9":{"6":{"5":{"7":{"5":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"o":{"0":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"/":{"2":{"0":{"1":{"6":{"docs":{},"/":{"0":{"4":{"docs":{},"/":{"0":{"1":{"docs":{},"/":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"docs":{}}}}}},"z":{"docs":{},"h":{"docs":{},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},".":{"docs":{},"z":{"docs":{},"h":{"docs":{},"i":{"docs":{},"h":{"docs":{},"u":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"/":{"2":{"7":{"1":{"3":{"4":{"1":{"1":{"0":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"y":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"/":{"8":{"5":{"9":{"0":{"5":{"2":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"n":{"docs":{},"p":{"docs":{},"m":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"o":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"u":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002857142857142857}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}}},";":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002857142857142857}}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.008060453400503778}},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}}},"l":{"docs":{},"p":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"&":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}},")":{"docs":{},")":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"s":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}}}}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},")":{"docs":{},";":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"i":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.004310344827586207},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"作":{"docs":{},"用":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}},";":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}},"t":{"docs":{},"n":{"docs":{},"c":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}},"e":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}},"l":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0149812734082397},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.009523809523809525},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.011116051578479324},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.007155635062611807},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0038293216630196935},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.017241379310344827},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.013114754098360656},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.008571428571428572},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.007782101167315175},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.006024096385542169},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.008077544426494346},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.009762900976290097},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.007042253521126761},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.009070294784580499}},"[":{"docs":{},"]":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}},"e":{"docs":{},"g":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.008936550491510277}},"e":{"docs":{},"[":{"docs":{},"]":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"；":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.00631578947368421},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.004761904761904762},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},"e":{"docs":{},")":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{},"对":{"docs":{},"比":{"docs":{},"同":{"docs":{},"步":{"docs":{},"它":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"优":{"docs":{},"势":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"(":{"docs":{},")":{"docs":{},"。":{"docs":{},"这":{"docs":{},"部":{"docs":{},"分":{"docs":{},"常":{"docs":{},"量":{"docs":{},"也":{"docs":{},"会":{"docs":{},"被":{"docs":{},"放":{"docs":{},"入":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"类":{"docs":{},"适":{"docs":{},"合":{"docs":{},"作":{"docs":{},"为":{"docs":{},"键":{"docs":{},"？":{"docs":{},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"）":{"docs":{},",":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.007246376811594203},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002857142857142857},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}},"e":{"docs":{},"d":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002857142857142857},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.007782101167315175},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.008032128514056224}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002857142857142857}}}}},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},",":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}}}}}}}}}}}},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"读":{"docs":{},"取":{"docs":{},"它":{"docs":{},"的":{"docs":{},"值":{"docs":{},"并":{"docs":{},"加":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.004310344827586207}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}},")":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.004371584699453552}},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.004371584699453552},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}}},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}},"+":{"1":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}},",":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"docs":{}},",":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}},"，":{"docs":{},"并":{"docs":{},"对":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"把":{"docs":{},"节":{"docs":{},"点":{"docs":{},"再":{"docs":{},"放":{"docs":{},"到":{"docs":{},"新":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"；":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"i":{"docs":{},"t":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.018779342723004695}},"i":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},",":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"表":{"docs":{},"示":{"docs":{},"新":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"这":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"容":{"docs":{},"量":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"图":{"docs":{},"中":{"docs":{},"的":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"数":{"docs":{},"量":{"docs":{},"。":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0071492403932082215}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.005361930294906166}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.004468275245755138}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"o":{"docs":{},")":{"docs":{},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"实":{"docs":{},"时":{"docs":{},"查":{"docs":{},"看":{"docs":{},"和":{"docs":{},"调":{"docs":{},"整":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"运":{"docs":{},"行":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"1":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0045351473922902496}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.003779289493575208},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.02247191011235955}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}},"（":{"docs":{},"输":{"docs":{},"入":{"docs":{},"）":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.003779289493575208}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}}}},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.02247191011235955}},"：":{"docs":{},"用":{"docs":{},"于":{"docs":{},"表":{"docs":{},"示":{"docs":{},"网":{"docs":{},"络":{"docs":{},"上":{"docs":{},"的":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"即":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"[":{"docs":{},"]":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},"。":{"docs":{},"其":{"docs":{},"中":{"docs":{},"，":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}},"s":{"docs":{},";":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}},"r":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"的":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"能":{"docs":{},"够":{"docs":{},"产":{"docs":{},"生":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"。":{"docs":{},"而":{"docs":{},"由":{"docs":{},"于":{"docs":{},"历":{"docs":{},"史":{"docs":{},"原":{"docs":{},"因":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"还":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"0":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}},"i":{"1":{"0":{"docs":{},")":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}}},"docs":{}},"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"docs":{}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.010526315789473684},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.014285714285714285},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0022232103156958646},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.006017505470459519},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.005747126436781609},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.004371584699453552},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.00804289544235925}}}}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"r":{"docs":{},"t":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.00528169014084507},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.009826152683295541}}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"a":{"docs":{},"l":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}},":":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.007782101167315175}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}},"r":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}},"d":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.003022670025188917}},"%":{"docs":{},"机":{"docs":{},"器":{"docs":{},"数":{"docs":{},"”":{"docs":{},"，":{"docs":{},"计":{"docs":{},"算":{"docs":{},"得":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"机":{"docs":{},"器":{"docs":{},"编":{"docs":{},"号":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"由":{"docs":{},"对":{"docs":{},"应":{"docs":{},"编":{"docs":{},"号":{"docs":{},"的":{"docs":{},"机":{"docs":{},"器":{"docs":{},"处":{"docs":{},"理":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"软":{"docs":{},"件":{"docs":{},"资":{"docs":{},"源":{"docs":{},"受":{"docs":{},"限":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"资":{"docs":{},"源":{"docs":{},"池":{"docs":{},"来":{"docs":{},"复":{"docs":{},"用":{"docs":{},"如":{"docs":{},"使":{"docs":{},"用":{"docs":{},"连":{"docs":{},"接":{"docs":{},"池":{"docs":{},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"和":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"以":{"docs":{},"后":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"进":{"docs":{},"入":{"docs":{},"该":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"再":{"docs":{},"次":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"@":{"docs":{},"]":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"l":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"查":{"docs":{},"询":{"docs":{},"的":{"docs":{},"标":{"docs":{},"识":{"docs":{},"符":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}},"o":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.008379888268156424},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":2.5035211267605635},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}},"。":{"docs":{},"它":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"网":{"docs":{},"络":{"docs":{},"的":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"用":{"docs":{},"户":{"docs":{},"输":{"docs":{},"入":{"docs":{},"。":{"docs":{},"通":{"docs":{},"常":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"网":{"docs":{},"络":{"docs":{},"和":{"docs":{},"磁":{"docs":{},"盘":{"docs":{},"的":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}},"面":{"docs":{},"经":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":10}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.007042253521126761},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.007558578987150416},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0071492403932082215},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.009830205540661306}}}}}}}}}}}}},")":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.004310344827586207}}}}},"f":{"docs":{},"(":{"docs":{},"a":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},",":{"docs":{},"a":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"=":{"docs":{},"b":{"docs":{},")":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}}}}}}}}}}}}}}}}},"!":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}},"j":{"docs":{},"=":{"2":{"docs":{},"a":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"用":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}},"docs":{}},"。":{"docs":{},"从":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}},"j":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0031124944419742106},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.011494252873563218}},"a":{"docs":{},"v":{"docs":{},"a":{"1":{"docs":{},".":{"5":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}}},"docs":{}}},"docs":{"javacore/advanced.html":{"ref":"javacore/advanced.html","tf":0.25},"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":5.037690457097033},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.0223463687150838},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.009846827133479213},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.01867816091954023},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.07608695652173914},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.007857142857142858},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.11023622047244094},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.007563025210084034},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.012552301255230125},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.02367758186397985},"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":2.5017605633802815},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":5.00302343159486},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":5.013404825737266},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":5.022471910112359}},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{},"多":{"docs":{},"重":{"docs":{},"继":{"docs":{},"承":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"语":{"docs":{},"言":{"docs":{},"引":{"docs":{},"入":{"docs":{},"了":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"概":{"docs":{},"念":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"同":{"docs":{},"时":{"docs":{},"实":{"docs":{},"现":{"docs":{},"多":{"docs":{},"个":{"docs":{},"接":{"docs":{},"口":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"接":{"docs":{},"口":{"docs":{},"也":{"docs":{},"具":{"docs":{},"有":{"docs":{},"多":{"docs":{},"态":{"docs":{},"特":{"docs":{},"性":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"在":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"语":{"docs":{},"言":{"docs":{},"中":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"实":{"docs":{},"现":{"docs":{},"多":{"docs":{},"个":{"docs":{},"接":{"docs":{},"口":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"与":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"语":{"docs":{},"言":{"docs":{},"中":{"docs":{},"多":{"docs":{},"重":{"docs":{},"继":{"docs":{},"承":{"docs":{},"类":{"docs":{},"似":{"docs":{},"的":{"docs":{},"目":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"与":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"都":{"docs":{},"是":{"docs":{},"面":{"docs":{},"向":{"docs":{},"对":{"docs":{},"象":{"docs":{},"语":{"docs":{},"言":{"docs":{},"，":{"docs":{},"都":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"面":{"docs":{},"向":{"docs":{},"对":{"docs":{},"象":{"docs":{},"思":{"docs":{},"想":{"docs":{},"（":{"docs":{},"封":{"docs":{},"装":{"docs":{},"，":{"docs":{},"继":{"docs":{},"承":{"docs":{},"，":{"docs":{},"多":{"docs":{},"态":{"docs":{},"）":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"类":{"docs":{},"默":{"docs":{},"认":{"docs":{},"都":{"docs":{},"继":{"docs":{},"承":{"docs":{},"自":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"类":{"docs":{},"，":{"docs":{},"而":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"类":{"docs":{},"中":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"是":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"复":{"docs":{},"制":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"复":{"docs":{},"制":{"docs":{},"函":{"docs":{},"数":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"对":{"docs":{},"象":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}},"的":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"作":{"docs":{},"用":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.010810810810810811}}}}}}}}}}}}}}},"直":{"docs":{},"接":{"docs":{},"支":{"docs":{},"持":{"docs":{},"数":{"docs":{},"组":{"docs":{},"这":{"docs":{},"种":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"除":{"docs":{},"此":{"docs":{},"之":{"docs":{},"外":{"docs":{},"还":{"docs":{},"有":{"docs":{},"通":{"docs":{},"过":{"docs":{},"数":{"docs":{},"组":{"docs":{},"结":{"docs":{},"构":{"docs":{},"延":{"docs":{},"伸":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"操":{"docs":{},"作":{"docs":{},"通":{"docs":{},"过":{"docs":{},"j":{"docs":{},"n":{"docs":{},"i":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"在":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"中":{"docs":{},"程":{"docs":{},"序":{"docs":{},"会":{"docs":{},"根":{"docs":{},"据":{"docs":{},"当":{"docs":{},"前":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"来":{"docs":{},"决":{"docs":{},"定":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"g":{"docs":{},"指":{"docs":{},"令":{"docs":{},"添":{"docs":{},"加":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"程":{"docs":{},"序":{"docs":{},"是":{"docs":{},"在":{"docs":{},"多":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"上":{"docs":{},"运":{"docs":{},"行":{"docs":{},"，":{"docs":{},"就":{"docs":{},"为":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"g":{"docs":{},"指":{"docs":{},"令":{"docs":{},"加":{"docs":{},"上":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"（":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"纯":{"docs":{},"面":{"docs":{},"向":{"docs":{},"对":{"docs":{},"象":{"docs":{},"语":{"docs":{},"言":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"代":{"docs":{},"码":{"docs":{},"（":{"docs":{},"包":{"docs":{},"括":{"docs":{},"函":{"docs":{},"数":{"docs":{},"、":{"docs":{},"变":{"docs":{},"量":{"docs":{},"等":{"docs":{},"）":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"类":{"docs":{},"中":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"释":{"docs":{},"型":{"docs":{},"语":{"docs":{},"言":{"docs":{},"，":{"docs":{},"其":{"docs":{},"运":{"docs":{},"行":{"docs":{},"过":{"docs":{},"程":{"docs":{},"为":{"docs":{},"：":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"为":{"docs":{},"解":{"docs":{},"释":{"docs":{},"型":{"docs":{},"语":{"docs":{},"言":{"docs":{},"，":{"docs":{},"程":{"docs":{},"序":{"docs":{},"源":{"docs":{},"代":{"docs":{},"码":{"docs":{},"经":{"docs":{},"过":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"编":{"docs":{},"译":{"docs":{},"成":{"docs":{},"字":{"docs":{},"节":{"docs":{},"码":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"由":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"解":{"docs":{},"释":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"传":{"docs":{},"递":{"docs":{},"的":{"docs":{},"值":{"docs":{},"为":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"的":{"docs":{},"值":{"docs":{},"（":{"docs":{},"值":{"docs":{},"传":{"docs":{},"递":{"docs":{},"+":{"docs":{},"引":{"docs":{},"用":{"docs":{},"传":{"docs":{},"递":{"docs":{},"）":{"docs":{},"。":{"docs":{},"其":{"docs":{},"中":{"docs":{},"：":{"docs":{},"值":{"docs":{},"传":{"docs":{},"递":{"docs":{},"是":{"docs":{},"对":{"docs":{},"基":{"docs":{},"本":{"docs":{},"型":{"docs":{},"变":{"docs":{},"量":{"docs":{},"而":{"docs":{},"言":{"docs":{},"的":{"docs":{},",":{"docs":{},"传":{"docs":{},"递":{"docs":{},"的":{"docs":{},"是":{"docs":{},"该":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"副":{"docs":{},"本":{"docs":{},",":{"docs":{},"改":{"docs":{},"变":{"docs":{},"副":{"docs":{},"本":{"docs":{},"不":{"docs":{},"影":{"docs":{},"响":{"docs":{},"原":{"docs":{},"变":{"docs":{},"量":{"docs":{},".":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.010810810810810811}},"g":{"docs":{},"o":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.010810810810810811}}}}}}}},"基":{"docs":{},"本":{"docs":{},"概":{"docs":{},"念":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.010810810810810811}}}}},"础":{"docs":{},"特":{"docs":{},"性":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":10.005405405405405}}}}}},"执":{"docs":{},"行":{"docs":{},"速":{"docs":{},"度":{"docs":{},"比":{"docs":{},"c":{"docs":{},"/":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"慢":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"能":{"docs":{},"够":{"docs":{},"块":{"docs":{},"平":{"docs":{},"台":{"docs":{},"，":{"docs":{},"而":{"docs":{},"c":{"docs":{},"/":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"不":{"docs":{},"能":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"基":{"docs":{},"本":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}},"很":{"docs":{},"多":{"docs":{},"内":{"docs":{},"置":{"docs":{},"的":{"docs":{},"类":{"docs":{},"库":{"docs":{},"。":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"对":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"支":{"docs":{},"持":{"docs":{},"，":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"对":{"docs":{},"网":{"docs":{},"络":{"docs":{},"通":{"docs":{},"信":{"docs":{},"的":{"docs":{},"支":{"docs":{},"持":{"docs":{},"，":{"docs":{},"最":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"是":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"继":{"docs":{},"承":{"docs":{},"通":{"docs":{},"过":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"完":{"docs":{},"成":{"docs":{},"，":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{},"多":{"docs":{},"继":{"docs":{},"承":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}},"语":{"docs":{},"言":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"器":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"的":{"docs":{},"自":{"docs":{},"动":{"docs":{},"回":{"docs":{},"收":{"docs":{},"，":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"语":{"docs":{},"言":{"docs":{},"中":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"没":{"docs":{},"有":{"docs":{},"析":{"docs":{},"构":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"但":{"docs":{},"却":{"docs":{},"引":{"docs":{},"入":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"当":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"期":{"docs":{},"将":{"docs":{},"要":{"docs":{},"释":{"docs":{},"放":{"docs":{},"无":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"首":{"docs":{},"先":{"docs":{},"调":{"docs":{},"用":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"开":{"docs":{},"放":{"docs":{},"人":{"docs":{},"员":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"关":{"docs":{},"心":{"docs":{},"也":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"知":{"docs":{},"道":{"docs":{},"对":{"docs":{},"象":{"docs":{},"所":{"docs":{},"占":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"何":{"docs":{},"时":{"docs":{},"会":{"docs":{},"被":{"docs":{},"释":{"docs":{},"放":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"优":{"docs":{},"点":{"docs":{},"：":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.010810810810810811}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"允":{"docs":{},"许":{"docs":{},"多":{"docs":{},"态":{"docs":{},"。":{"docs":{},"而":{"docs":{},"g":{"docs":{},"o":{"docs":{},"没":{"docs":{},"有":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}},"正":{"docs":{},"则":{"docs":{"javacore/advanced.html":{"ref":"javacore/advanced.html","tf":0.25}}}},"高":{"docs":{},"级":{"docs":{},"特":{"docs":{},"性":{"docs":{"javacore/advanced.html":{"ref":"javacore/advanced.html","tf":10.25}}}}}},".":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"#":{"docs":{},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"2":{"2":{"1":{"9":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"4":{"5":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"4":{"4":{"0":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"2":{"0":{"8":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"2":{"1":{"6":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"2":{"4":{"2":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"4":{"6":{"7":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"$":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},".":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"(":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"2":{"0":{"8":{"2":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"2":{"2":{"6":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"$":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"6":{"1":{"5":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"1":{"0":{"6":{"8":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"1":{"1":{"3":{"0":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},".":{"docs":{},"*":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"{":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.00749063670411985},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.008421052631578947},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.011904761904761904},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}},"*":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.00528169014084507},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.006802721088435374}}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"7":{"4":{"5":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}},"e":{"docs":{},"r":{"docs":{},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"加":{"docs":{},"载":{"docs":{},"文":{"docs":{},"件":{"docs":{},"系":{"docs":{},"统":{"docs":{},"上":{"docs":{},"的":{"docs":{},"类":{"docs":{},"。":{"docs":{},"它":{"docs":{},"首":{"docs":{},"先":{"docs":{},"根":{"docs":{},"据":{"docs":{},"类":{"docs":{},"的":{"docs":{},"全":{"docs":{},"名":{"docs":{},"在":{"docs":{},"文":{"docs":{},"件":{"docs":{},"系":{"docs":{},"统":{"docs":{},"上":{"docs":{},"查":{"docs":{},"找":{"docs":{},"类":{"docs":{},"的":{"docs":{},"字":{"docs":{},"节":{"docs":{},"代":{"docs":{},"码":{"docs":{},"文":{"docs":{},"件":{"docs":{},"（":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"。":{"docs":{},"为":{"docs":{},"避":{"docs":{},"免":{"docs":{},"以":{"docs":{},"上":{"docs":{},"原":{"docs":{},"因":{"docs":{},"引":{"docs":{},"起":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}},"，":{"docs":{},"为":{"docs":{},"避":{"docs":{},"免":{"docs":{},"以":{"docs":{},"上":{"docs":{},"原":{"docs":{},"因":{"docs":{},"引":{"docs":{},"起":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}}}}}}}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"4":{"7":{"4":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"x":{"docs":{},"i":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"$":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"1":{"5":{"9":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"$":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"1":{"1":{"6":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"$":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"1":{"1":{"6":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"3":{"2":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}},"容":{"docs":{},"器":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"之":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.004761904761904762}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"之":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"）":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}},"本":{"docs":{},"地":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"允":{"docs":{},"许":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"与":{"docs":{},"其":{"docs":{},"他":{"docs":{},"语":{"docs":{},"言":{"docs":{},"交":{"docs":{},"互":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{},"：":{"docs":{},"循":{"docs":{},"环":{"docs":{},"使":{"docs":{},"用":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{"javacore/jvm/jvm-interview.html":{"ref":"javacore/jvm/jvm-interview.html","tf":0.09090909090909091}},"面":{"docs":{},"经":{"docs":{"javacore/jvm/jvm-interview.html":{"ref":"javacore/jvm/jvm-interview.html","tf":10}}}},"启":{"docs":{},"动":{"docs":{},"时":{"docs":{},"选":{"docs":{},"定":{"docs":{},"区":{"docs":{},"域":{"docs":{},"大":{"docs":{},"小":{"docs":{},"。":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"通":{"docs":{},"常":{"docs":{},"会":{"docs":{},"指":{"docs":{},"定":{"2":{"0":{"0":{"0":{"docs":{},"个":{"docs":{},"左":{"docs":{},"右":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"相":{"docs":{},"等":{"docs":{},"、":{"docs":{},"每":{"docs":{},"个":{"docs":{},"大":{"docs":{},"小":{"docs":{},"范":{"docs":{},"围":{"docs":{},"在":{"1":{"docs":{},"到":{"3":{"2":{"docs":{},"m":{"docs":{},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"s":{"docs":{},"=":{"docs":{},"\"":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"这":{"docs":{},"些":{"docs":{},"内":{"docs":{},"存":{"docs":{},"无":{"docs":{},"法":{"docs":{},"省":{"docs":{},"下":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"无":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}},"常":{"docs":{},"用":{"docs":{},"i":{"docs":{},"o":{"docs":{},"类":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285}}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285}}}}},"流":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285}}}}},"网":{"docs":{},"络":{"docs":{},"编":{"docs":{},"程":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285}}}}}},"/":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}},"e":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":10}}}}},"r":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0025188916876574307}},"、":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"、":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}},"，":{"docs":{},"用":{"docs":{},"不":{"docs":{},"上":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"c":{"docs":{},"k":{"docs":{},",":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"、":{"docs":{},"g":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"、":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"k":{"1":{"docs":{},".":{"5":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"，":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"7":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.01073345259391771},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"头":{"docs":{},"插":{"docs":{},"法":{"docs":{},"，":{"docs":{},"而":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"1":{"docs":{},".":{"8":{"docs":{},"及":{"docs":{},"之":{"docs":{},"后":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"都":{"docs":{},"是":{"docs":{},"尾":{"docs":{},"插":{"docs":{},"法":{"docs":{},"，":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"操":{"docs":{},"作":{"docs":{},"是":{"docs":{},"不":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"在":{"docs":{},"每":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"在":{"docs":{},"每":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"和":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"8":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.005366726296958855}},"中":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"还":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"要":{"docs":{},"属":{"docs":{},"性":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"，":{"docs":{},"其":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"控":{"docs":{},"制":{"docs":{},"标":{"docs":{},"识":{"docs":{},"符":{"docs":{},"，":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"值":{"docs":{},"代":{"docs":{},"表":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"意":{"docs":{},"思":{"docs":{},"：":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"使":{"docs":{},"用":{"docs":{},"内":{"docs":{},"置":{"docs":{},"锁":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"来":{"docs":{},"代":{"docs":{},"替":{"docs":{},"重":{"docs":{},"入":{"docs":{},"锁":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"?":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"优":{"docs":{},"化":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"保":{"docs":{},"存":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"方":{"docs":{},"法":{"docs":{},"也":{"docs":{},"有":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"在":{"docs":{},"添":{"docs":{},"加":{"docs":{},"和":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"通":{"docs":{},"过":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"操":{"docs":{},"作":{"docs":{},"更":{"docs":{},"新":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"属":{"docs":{},"性":{"docs":{},"值":{"docs":{},"来":{"docs":{},"统":{"docs":{},"计":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"操":{"docs":{},"作":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"又":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"数":{"docs":{},"组":{"docs":{},"来":{"docs":{},"记":{"docs":{},"录":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"操":{"docs":{},"作":{"docs":{},"失":{"docs":{},"败":{"docs":{},"时":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"优":{"docs":{},"化":{"docs":{},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}}}}},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}},"docs":{}}},"6":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}},"7":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"8":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"的":{"docs":{},"新":{"docs":{},"特":{"docs":{},"性":{"docs":{"javacore/advanced.html":{"ref":"javacore/advanced.html","tf":0.25}}}}}},"：":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.007155635062611807},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.015748031496062992},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"e":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"m":{"docs":{},"m":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.025362318840579712},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}},"j":{"docs":{},"m":{"docs":{},"m":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}},"a":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0055415617128463475}}}},"x":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002735229759299781}},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"）":{"docs":{},"中":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"几":{"docs":{},"个":{"docs":{},"非":{"docs":{},"常":{"docs":{},"有":{"docs":{},"用":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"容":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"工":{"docs":{},"具":{"docs":{},"类":{"docs":{},"。":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"m":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0056134723336006415},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0025210084033613447},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":3.3484466834592777}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}}},"y":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"系":{"docs":{},"统":{"docs":{},"中":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"存":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"（":{"4":{"docs":{},"）":{"docs":{},"：":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"docs":{}}}},"n":{"docs":{},"i":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}},"（":{"docs":{},"j":{"docs":{},"n":{"docs":{},"i":{"docs":{},":":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.006045340050377834}}}},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.003526448362720403}},"(":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"o":{"docs":{},"n":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}},"(":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}},"(":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}},"s":{"docs":{},"(":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"l":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}},"e":{"docs":{},"n":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406},"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.00546448087431694},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.003779289493575208}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"针":{"docs":{},"对":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"而":{"docs":{},"言":{"docs":{},"的":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}},"属":{"docs":{},"性":{"docs":{},"与":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"a":{"docs":{},"k":{"docs":{},"）":{"docs":{},"还":{"docs":{},"是":{"docs":{},"内":{"docs":{},"存":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"（":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0022232103156958646},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0035571365051133837}},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"来":{"docs":{},"维":{"docs":{},"护":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"为":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"或":{"docs":{},"者":{"docs":{},"最":{"docs":{},"近":{"docs":{},"最":{"docs":{},"少":{"docs":{},"使":{"docs":{},"用":{"docs":{},"（":{"docs":{},"l":{"docs":{},"r":{"docs":{},"u":{"docs":{},"）":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0022232103156958646}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.029473684210526315}},"：":{"docs":{},"具":{"docs":{},"有":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{},"效":{"docs":{},"果":{"docs":{},"，":{"docs":{},"且":{"docs":{},"内":{"docs":{},"部":{"docs":{},"使":{"docs":{},"用":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"维":{"docs":{},"护":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.033707865168539325}},"：":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"它":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"双":{"docs":{},"向":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}}}}},"基":{"docs":{},"于":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"快":{"docs":{},"速":{"docs":{},"地":{"docs":{},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"间":{"docs":{},"插":{"docs":{},"入":{"docs":{},"和":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"如":{"docs":{},"此":{"docs":{},"，":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"做":{"docs":{},"栈":{"docs":{},"、":{"docs":{},"队":{"docs":{},"列":{"docs":{},"和":{"docs":{},"双":{"docs":{},"向":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"原":{"docs":{},"理":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"要":{"docs":{},"点":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.023809523809523808},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"e":{"docs":{},"，":{"docs":{},"静":{"docs":{},"态":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"基":{"docs":{},"于":{"docs":{},"链":{"docs":{},"表":{"docs":{},"结":{"docs":{},"构":{"docs":{},"的":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"此":{"docs":{},"队":{"docs":{},"列":{"docs":{},"按":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"于":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"先":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"创":{"docs":{},"建":{"docs":{},"时":{"docs":{},"没":{"docs":{},"有":{"docs":{},"指":{"docs":{},"定":{"docs":{},"此":{"docs":{},"队":{"docs":{},"列":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"则":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"”":{"docs":{},"的":{"docs":{},"更":{"docs":{},"小":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"块":{"docs":{},"中":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"被":{"docs":{},"更":{"docs":{},"新":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"者":{"docs":{},"多":{"docs":{},"个":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"可":{"docs":{},"能":{"docs":{},"被":{"docs":{},"读":{"docs":{},"到":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"者":{"docs":{},"多":{"docs":{},"个":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"可":{"docs":{},"能":{"docs":{},"再":{"docs":{},"被":{"docs":{},"刷":{"docs":{},"新":{"docs":{},"回":{"docs":{},"主":{"docs":{},"存":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}},"u":{"docs":{},"x":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"linux/linux.html":{"ref":"linux/linux.html","tf":10.5}}}}},"s":{"docs":{},"t":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.07692307692307693},"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.02247191011235955},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.006557377049180328},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},")":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}},"{":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}},".":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}},"b":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}},",":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"e":{"docs":{},"n":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.004371584699453552}}},"(":{"docs":{},")":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},":":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},":":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}},"s":{"docs":{},"[":{"docs":{},"]":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},",":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}},"b":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"r":{"docs":{},"g":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}},".":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}}}}}}}}}}}}}}}}}},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"）":{"docs":{},"不":{"docs":{},"参":{"docs":{},"与":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"传":{"docs":{},"输":{"docs":{},"，":{"docs":{},"它":{"docs":{},"提":{"docs":{},"供":{"docs":{},"包":{"docs":{},"括":{"docs":{},"访":{"docs":{},"问":{"docs":{},"验":{"docs":{},"证":{"docs":{},"和":{"docs":{},"会":{"docs":{},"话":{"docs":{},"管":{"docs":{},"理":{"docs":{},"在":{"docs":{},"内":{"docs":{},"的":{"docs":{},"建":{"docs":{},"立":{"docs":{},"和":{"docs":{},"维":{"docs":{},"护":{"docs":{},"应":{"docs":{},"用":{"docs":{},"之":{"docs":{},"间":{"docs":{},"通":{"docs":{},"信":{"docs":{},"的":{"docs":{},"机":{"docs":{},"制":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"两":{"docs":{},"台":{"docs":{},"主":{"docs":{},"机":{"docs":{},"中":{"docs":{},"进":{"docs":{},"程":{"docs":{},"间":{"docs":{},"的":{"docs":{},"通":{"docs":{},"信":{"docs":{},"提":{"docs":{},"供":{"docs":{},"通":{"docs":{},"用":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"传":{"docs":{},"输":{"docs":{},"服":{"docs":{},"务":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"组":{"docs":{},"交":{"docs":{},"换":{"docs":{},"网":{"docs":{},"上":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"docs":{},"主":{"docs":{},"机":{"docs":{},"提":{"docs":{},"供":{"docs":{},"通":{"docs":{},"信":{"docs":{},"服":{"docs":{},"务":{"docs":{},"。":{"docs":{},"在":{"docs":{},"发":{"docs":{},"送":{"docs":{},"数":{"docs":{},"据":{"docs":{},"时":{"docs":{},"，":{"docs":{},"网":{"docs":{},"络":{"docs":{},"层":{"docs":{},"把":{"docs":{},"运":{"docs":{},"输":{"docs":{},"层":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"报":{"docs":{},"文":{"docs":{},"段":{"docs":{},"或":{"docs":{},"用":{"docs":{},"户":{"docs":{},"数":{"docs":{},"据":{"docs":{},"报":{"docs":{},"封":{"docs":{},"装":{"docs":{},"成":{"docs":{},"分":{"docs":{},"组":{"docs":{},"或":{"docs":{},"包":{"docs":{},"进":{"docs":{},"行":{"docs":{},"传":{"docs":{},"送":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"接":{"docs":{},"收":{"docs":{},"和":{"docs":{},"发":{"docs":{},"送":{"docs":{},"一":{"docs":{},"串":{"docs":{},"比":{"docs":{},"特":{"docs":{},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},")":{"docs":{},"流":{"docs":{},"，":{"docs":{},"不":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"信":{"docs":{},"息":{"docs":{},"的":{"docs":{},"意":{"docs":{},"义":{"docs":{},"和":{"docs":{},"信":{"docs":{},"息":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"为":{"docs":{},"同":{"docs":{},"一":{"docs":{},"链":{"docs":{},"路":{"docs":{},"的":{"docs":{},"主":{"docs":{},"机":{"docs":{},"提":{"docs":{},"供":{"docs":{},"数":{"docs":{},"据":{"docs":{},"传":{"docs":{},"输":{"docs":{},"服":{"docs":{},"务":{"docs":{},"。":{"docs":{},"数":{"docs":{},"据":{"docs":{},"链":{"docs":{},"路":{"docs":{},"层":{"docs":{},"把":{"docs":{},"网":{"docs":{},"络":{"docs":{},"层":{"docs":{},"传":{"docs":{},"下":{"docs":{},"来":{"docs":{},"的":{"docs":{},"分":{"docs":{},"组":{"docs":{},"封":{"docs":{},"装":{"docs":{},"成":{"docs":{},"帧":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"为":{"docs":{},"在":{"docs":{},"应":{"docs":{},"用":{"docs":{},"过":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"传":{"docs":{},"送":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"提":{"docs":{},"供":{"docs":{},"表":{"docs":{},"示":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"服":{"docs":{},"务":{"docs":{},"，":{"docs":{},"它":{"docs":{},"关":{"docs":{},"心":{"docs":{},"的":{"docs":{},"只":{"docs":{},"是":{"docs":{},"发":{"docs":{},"出":{"docs":{},"信":{"docs":{},"息":{"docs":{},"的":{"docs":{},"语":{"docs":{},"法":{"docs":{},"与":{"docs":{},"语":{"docs":{},"义":{"docs":{},"。":{"docs":{},"表":{"docs":{},"示":{"docs":{},"层":{"docs":{},"要":{"docs":{},"完":{"docs":{},"成":{"docs":{},"某":{"docs":{},"些":{"docs":{},"特":{"docs":{},"定":{"docs":{},"的":{"docs":{},"功":{"docs":{},"能":{"docs":{},"，":{"docs":{},"主":{"docs":{},"要":{"docs":{},"有":{"docs":{},"不":{"docs":{},"同":{"docs":{},"数":{"docs":{},"据":{"docs":{},"编":{"docs":{},"码":{"docs":{},"格":{"docs":{},"式":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{},"，":{"docs":{},"提":{"docs":{},"供":{"docs":{},"数":{"docs":{},"据":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"、":{"docs":{},"解":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"服":{"docs":{},"务":{"docs":{},"，":{"docs":{},"对":{"docs":{},"数":{"docs":{},"据":{"docs":{},"进":{"docs":{},"行":{"docs":{},"加":{"docs":{},"密":{"docs":{},"、":{"docs":{},"解":{"docs":{},"密":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"应":{"docs":{},"用":{"docs":{},"进":{"docs":{},"程":{"docs":{},"间":{"docs":{},"的":{"docs":{},"交":{"docs":{},"互":{"docs":{},"来":{"docs":{},"完":{"docs":{},"成":{"docs":{},"特":{"docs":{},"定":{"docs":{},"网":{"docs":{},"络":{"docs":{},"应":{"docs":{},"用":{"docs":{},"。":{"docs":{},"应":{"docs":{},"用":{"docs":{},"层":{"docs":{},"协":{"docs":{},"议":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"是":{"docs":{},"应":{"docs":{},"用":{"docs":{},"进":{"docs":{},"程":{"docs":{},"间":{"docs":{},"通":{"docs":{},"信":{"docs":{},"和":{"docs":{},"交":{"docs":{},"互":{"docs":{},"的":{"docs":{},"规":{"docs":{},"则":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0032076984763432237},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.006557377049180328},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.013571428571428571},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723},"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{},"，":{"docs":{},"避":{"docs":{},"免":{"docs":{},"锁":{"docs":{},"一":{"docs":{},"直":{"docs":{},"不":{"docs":{},"能":{"docs":{},"释":{"docs":{},"放":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}},",":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.004761904761904762}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"、":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143}}}}}}}}}}}}}}}},"重":{"docs":{},"新":{"docs":{},"进":{"docs":{},"入":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"而":{"docs":{},"言":{"docs":{},",":{"docs":{},"也":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"重":{"docs":{},"入":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"可":{"docs":{},"重":{"docs":{},"入":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"好":{"docs":{},"处":{"docs":{},"是":{"docs":{},"可":{"docs":{},"一":{"docs":{},"定":{"docs":{},"程":{"docs":{},"度":{"docs":{},"避":{"docs":{},"免":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"主":{"docs":{},"动":{"docs":{},"去":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"在":{"docs":{},"发":{"docs":{},"生":{"docs":{},"异":{"docs":{},"常":{"docs":{},"时":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"一":{"docs":{},"般":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"a":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}},")":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}},";":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},",":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}}},"表":{"docs":{},"示":{"docs":{},"负":{"docs":{},"载":{"docs":{},"因":{"docs":{},"子":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"当":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"n":{"docs":{},"g":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.008944543828264758},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.005361930294906166}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},";":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"。":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"解":{"docs":{},"决":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"使":{"docs":{},"得":{"docs":{},"线":{"docs":{},"程":{"docs":{},"阻":{"docs":{},"塞":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"g":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"文":{"docs":{},"件":{"docs":{},"，":{"docs":{},"记":{"docs":{},"录":{"docs":{},"了":{"docs":{},"所":{"docs":{},"有":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"语":{"docs":{},"句":{"docs":{},"。":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"语":{"docs":{},"句":{"docs":{},"复":{"docs":{},"制":{"docs":{},"过":{"docs":{},"来":{"docs":{},"。":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}},"重":{"docs":{},"做":{"docs":{},"日":{"docs":{},"志":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"再":{"docs":{},"执":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"这":{"docs":{},"些":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"语":{"docs":{},"句":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}},"）":{"docs":{},"中":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}},"r":{"docs":{},"u":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0026678523788350376}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"v":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0025188916876574307}}}}}}},"m":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445},"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"类":{"docs":{},"中":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"、":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"l":{"docs":{},"和":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"功":{"docs":{},"能":{"docs":{},"各":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"p":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.04395604395604396},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.014736842105263158},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":10.007558915073366},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.00546448087431694},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}},";":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}},"（":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}},"看":{"docs":{},"一":{"docs":{},"下":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"架":{"docs":{},"构":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}},"之":{"docs":{},"面":{"docs":{},"试":{"docs":{},"问":{"docs":{},"题":{"docs":{},"集":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":10}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"使":{"docs":{},"用":{"docs":{},"跳":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"高":{"docs":{},"效":{"docs":{},"并":{"docs":{},"发":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.01056338028169014},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.006046863189720333}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.007658643326039387},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.005836575875486381},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.006024096385542169},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.006462035541195477},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}},")":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"k":{"docs":{},"e":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}},"s":{"docs":{},"k":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}},"x":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}},"：":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"允":{"docs":{},"许":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"满":{"docs":{},"了":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"已":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"小":{"docs":{},"于":{"docs":{},"最":{"docs":{},"大":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"会":{"docs":{},"再":{"docs":{},"创":{"docs":{},"建":{"docs":{},"新":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{},"值":{"docs":{},"得":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"无":{"docs":{},"界":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"队":{"docs":{},"列":{"docs":{},"这":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"就":{"docs":{},"没":{"docs":{},"什":{"docs":{},"么":{"docs":{},"效":{"docs":{},"果":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"满":{"docs":{},"了":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"已":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"小":{"docs":{},"于":{"docs":{},"最":{"docs":{},"大":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"会":{"docs":{},"再":{"docs":{},"创":{"docs":{},"建":{"docs":{},"新":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{},"值":{"docs":{},"得":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"无":{"docs":{},"界":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"队":{"docs":{},"列":{"docs":{},"这":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"就":{"docs":{},"没":{"docs":{},"什":{"docs":{},"么":{"docs":{},"效":{"docs":{},"果":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"还":{"docs":{},"有":{"docs":{},"任":{"docs":{},"务":{"docs":{},"到":{"docs":{},"来":{"docs":{},"就":{"docs":{},"会":{"docs":{},"采":{"docs":{},"取":{"docs":{},"任":{"docs":{},"务":{"docs":{},"拒":{"docs":{},"绝":{"docs":{},"策":{"docs":{},"略":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"四":{"docs":{},"种":{"docs":{},"策":{"docs":{},"略":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"s":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}},"r":{"docs":{},"k":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0032076984763432237},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},")":{"docs":{},"*":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"l":{"docs":{},"e":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}},",":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0056179775280898875}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0056179775280898875}},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.012605042016806723},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"!":{"docs":{},"!":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}},"i":{"docs":{},"f":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"e":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.005042016806722689}},"l":{"docs":{},"，":{"docs":{},"简":{"docs":{},"称":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}},"）":{"docs":{},"，":{"docs":{},"以":{"docs":{},"下":{"docs":{},"简":{"docs":{},"称":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}},"。":{"docs":{},"该":{"docs":{},"模":{"docs":{},"型":{"docs":{},"要":{"docs":{},"求":{"docs":{},"除":{"docs":{},"了":{"docs":{},"顶":{"docs":{},"层":{"docs":{},"的":{"docs":{},"启":{"docs":{},"动":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"外":{"docs":{},"，":{"docs":{},"其":{"docs":{},"余":{"docs":{},"的":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"都":{"docs":{},"应":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"父":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"父":{"docs":{},"子":{"docs":{},"关":{"docs":{},"系":{"docs":{},"一":{"docs":{},"般":{"docs":{},"通":{"docs":{},"过":{"docs":{},"组":{"docs":{},"合":{"docs":{},"（":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"关":{"docs":{},"系":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"继":{"docs":{},"承":{"docs":{},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"）":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"v":{"docs":{},"e":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"d":{"docs":{},")":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},"，":{"docs":{},"是":{"docs":{},"用":{"docs":{},"于":{"docs":{},"监":{"docs":{},"视":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"状":{"docs":{},"态":{"docs":{},"信":{"docs":{},"息":{"docs":{},"的":{"docs":{},"命":{"docs":{},"令":{"docs":{},"，":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"显":{"docs":{},"示":{"docs":{},"出":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"进":{"docs":{},"程":{"docs":{},"中":{"docs":{},"的":{"docs":{},"类":{"docs":{},"装":{"docs":{},"载":{"docs":{},"、":{"docs":{},"内":{"docs":{},"存":{"docs":{},"、":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"、":{"docs":{},"j":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}}}}}},"a":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"（":{"docs":{},"元":{"docs":{},"数":{"docs":{},"据":{"docs":{},"）":{"docs":{},"区":{"docs":{},"替":{"docs":{},"代":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}},")":{"docs":{},"中":{"docs":{},"，":{"docs":{},"元":{"docs":{},"数":{"docs":{},"据":{"docs":{},"并":{"docs":{},"不":{"docs":{},"在":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"中":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"本":{"docs":{},"地":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.007246376811594203},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"y":{"docs":{},"）":{"docs":{},"中":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"本":{"docs":{},"地":{"docs":{},"内":{"docs":{},"存":{"docs":{},"（":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"本":{"docs":{},"地":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"存":{"docs":{},"储":{"docs":{},"了":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"以":{"docs":{},"读":{"docs":{},"/":{"docs":{},"写":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"副":{"docs":{},"本":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.021400778210116732}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}}}}}}}}}}},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.008379888268156424}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}},"t":{"1":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"2":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825}}},"y":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.008205689277899343}},"(":{"docs":{},"\"":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"线":{"docs":{},"程":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686}}}}}}}},")":{"docs":{},",":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825}}},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002735229759299781}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"1":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}},"2":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}},"docs":{}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"s":{"docs":{},"下":{"docs":{},"注":{"docs":{},"入":{"docs":{},"防":{"docs":{},"范":{"docs":{},"：":{"docs":{},"m":{"docs":{},"y":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"s":{"docs":{},"是":{"docs":{},"支":{"docs":{},"持":{"docs":{},"定":{"docs":{},"制":{"docs":{},"化":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"、":{"docs":{},"存":{"docs":{},"储":{"docs":{},"过":{"docs":{},"程":{"docs":{},"以":{"docs":{},"及":{"docs":{},"高":{"docs":{},"级":{"docs":{},"映":{"docs":{},"射":{"docs":{},"的":{"docs":{},"优":{"docs":{},"秀":{"docs":{},"的":{"docs":{},"持":{"docs":{},"久":{"docs":{},"层":{"docs":{},"框":{"docs":{},"架":{"docs":{},"，":{"docs":{},"几":{"docs":{},"乎":{"docs":{},"避":{"docs":{},"免":{"docs":{},"了":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"j":{"docs":{},"d":{"docs":{},"b":{"docs":{},"c":{"docs":{},"代":{"docs":{},"码":{"docs":{},"和":{"docs":{},"手":{"docs":{},"动":{"docs":{},"设":{"docs":{},"置":{"docs":{},"参":{"docs":{},"数":{"docs":{},"以":{"docs":{},"及":{"docs":{},"获":{"docs":{},"取":{"docs":{},"结":{"docs":{},"果":{"docs":{},"集":{"docs":{},"。":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"高":{"docs":{},"并":{"docs":{},"发":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}},"b":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"k":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}},"(":{"docs":{},")":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"当":{"docs":{},"父":{"docs":{},"路":{"docs":{},"径":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"连":{"docs":{},"同":{"docs":{},"上":{"docs":{},"级":{"docs":{},"目":{"docs":{},"录":{"docs":{},"都":{"docs":{},"一":{"docs":{},"并":{"docs":{},"创":{"docs":{},"建":{"docs":{},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804}}},"s":{"docs":{},"s":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},"v":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.004891062694530902},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"o":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"l":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}},"(":{"docs":{},")":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}},",":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},";":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}},"t":{"docs":{},"r":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}},"s":{"docs":{},"/":{"3":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}}},"r":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.02619047619047619},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"e":{"docs":{},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"堆":{"docs":{},"结":{"docs":{},"构":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"它":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"优":{"docs":{},"先":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.03333333333333333}},"e":{"docs":{},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"具":{"docs":{},"有":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"的":{"docs":{},"无":{"docs":{},"限":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"1":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.004534005037783375}}},"docs":{}},"docs":{}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.013108614232209739},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.008421052631578947},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.02857142857142857},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.008205689277899343},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.004310344827586207},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.012857142857142857},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.01556420233463035},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.006024096385542169},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0033613445378151263},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.005578800557880056},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0045351473922902496},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.03395889186773905}}}}},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}},"f":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.003779289493575208}},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"]":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}},"e":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"v":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.01263157894736842}},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}},"r":{"docs":{},"v":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"或":{"docs":{},"者":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}},"：":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"所":{"docs":{},"有":{"docs":{},"核":{"docs":{},"心":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"从":{"docs":{},"这":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}},"：":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"一":{"docs":{},"个":{"docs":{},"核":{"docs":{},"心":{"docs":{},"线":{"docs":{},"程":{"docs":{},"；":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}},",":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"a":{"docs":{},"g":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"（":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.0041841004184100415}}}}},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"）":{"docs":{},"，":{"docs":{},"即":{"docs":{},"传":{"docs":{},"输":{"docs":{},"控":{"docs":{},"制":{"docs":{},"协":{"docs":{},"议":{"docs":{},"，":{"docs":{},"它":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"面":{"docs":{},"向":{"docs":{},"连":{"docs":{},"接":{"docs":{},"的":{"docs":{},"、":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"的":{"docs":{},"、":{"docs":{},"基":{"docs":{},"于":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"的":{"docs":{},"传":{"docs":{},"输":{"docs":{},"层":{"docs":{},"通":{"docs":{},"信":{"docs":{},"协":{"docs":{},"议":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"）":{"docs":{},"，":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"进":{"docs":{},"程":{"docs":{},"里":{"docs":{},"可":{"docs":{},"以":{"docs":{},"创":{"docs":{},"建":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"各":{"docs":{},"自":{"docs":{},"的":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"、":{"docs":{},"堆":{"docs":{},"栈":{"docs":{},"和":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"等":{"docs":{},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"能":{"docs":{},"够":{"docs":{},"访":{"docs":{},"问":{"docs":{},"共":{"docs":{},"享":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"生":{"docs":{},"产":{"docs":{},"者":{"docs":{},"a":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}},"b":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"x":{"docs":{},"y":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"x":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099},"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.011235955056179775},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.02736842105263158},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.01904761904761905},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.007114273010226767},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.005366726296958855},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.027899343544857767},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.022988505747126436},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.015300546448087432},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.011428571428571429},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.02529182879377432},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.04417670682730924},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0210016155088853},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0058823529411764705},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.015341701534170154},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.02112676056338028},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.027966742252456538},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.01876675603217158},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}},"t":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.004446420631391729},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},"(":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}},"k":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},",":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},";":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.007142857142857143}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"k":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}},"、":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"）":{"docs":{},"。":{"docs":{},"在":{"docs":{},"设":{"docs":{},"置":{"docs":{},"初":{"docs":{},"始":{"docs":{},"容":{"docs":{},"量":{"docs":{},"时":{"docs":{},"，":{"docs":{},"应":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"映":{"docs":{},"射":{"docs":{},"中":{"docs":{},"的":{"docs":{},"条":{"docs":{},"目":{"docs":{},"数":{"docs":{},"量":{"docs":{},"及":{"docs":{},"其":{"docs":{},"负":{"docs":{},"载":{"docs":{},"因":{"docs":{},"子":{"docs":{},"，":{"docs":{},"以":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"减":{"docs":{},"少":{"docs":{},"重":{"docs":{},"新":{"docs":{},"运":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"初":{"docs":{},"始":{"docs":{},"容":{"docs":{},"量":{"docs":{},"大":{"docs":{},"于":{"docs":{},"最":{"docs":{},"大":{"docs":{},"入":{"docs":{},"口":{"docs":{},"数":{"docs":{},"除":{"docs":{},"以":{"docs":{},"负":{"docs":{},"载":{"docs":{},"因":{"docs":{},"子":{"docs":{},"，":{"docs":{},"则":{"docs":{},"不":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"重":{"docs":{},"新":{"docs":{},"刷":{"docs":{},"新":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"操":{"docs":{},"作":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}},"是":{"docs":{},"要":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"导":{"docs":{},"致":{"docs":{},"的":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"据":{"docs":{},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.004761904761904762}},"(":{"docs":{},")":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.009727626459143969},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.021447721179624665}},"(":{"docs":{},"\"":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"p":{"docs":{},"\"":{"docs":{},",":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}}}}}}},"o":{"docs":{},"m":{"docs":{},"\"":{"docs":{},",":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}},"张":{"docs":{},"三":{"docs":{},"\"":{"docs":{},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"李":{"docs":{},"四":{"docs":{},"\"":{"docs":{},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"王":{"docs":{},"五":{"docs":{},"\"":{"docs":{},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"\"":{"docs":{},",":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}},")":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.009727626459143969}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}},"{":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"=":{"docs":{},"'":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"'":{"docs":{},",":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}},".":{"docs":{},"q":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"3":{"6":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"2":{"6":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"i":{"docs":{},"t":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}},"s":{"docs":{},")":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.006024096385542169}}},",":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}},"。":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"就":{"docs":{},"等":{"docs":{},"待":{"docs":{},"；":{"docs":{},"而":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}},"并":{"docs":{},"且":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"模":{"docs":{},"式":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"设":{"docs":{},"置":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"公":{"docs":{},"平":{"docs":{},"模":{"docs":{},"式":{"docs":{},"。":{"docs":{},"所":{"docs":{},"谓":{"docs":{},"公":{"docs":{},"平":{"docs":{},"，":{"docs":{},"是":{"docs":{},"指":{"docs":{},"等":{"docs":{},"待":{"docs":{},"久":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"获":{"docs":{},"取":{"docs":{},"许":{"docs":{},"可":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},"[":{"docs":{},"]":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"e":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"u":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0026678523788350376},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.005578800557880056}},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.008032128514056224}},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}},",":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.014285714285714285},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.007563025210084034},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"t":{"docs":{},"h":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"g":{"docs":{},"e":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034},"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.018779342723004695}},"s":{"docs":{},"'":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}},"分":{"docs":{},"支":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}},"下":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}},"就":{"docs":{},"是":{"docs":{},"全":{"docs":{},"部":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"页":{"docs":{},"面":{"docs":{},"文":{"docs":{},"件":{"docs":{},"了":{"docs":{},"，":{"docs":{},"接":{"docs":{},"下":{"docs":{},"来":{"docs":{},"就":{"docs":{},"是":{"docs":{},"提":{"docs":{},"交":{"docs":{},"到":{"docs":{},"远":{"docs":{},"程":{"docs":{},"g":{"docs":{},"h":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"目":{"docs":{},"录":{"docs":{},"下":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"推":{"docs":{},"送":{"docs":{},"、":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}},"i":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}},"p":{"docs":{},"e":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"e":{"docs":{},"）":{"docs":{},",":{"docs":{},"使":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"不":{"docs":{},"会":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"过":{"docs":{},"多":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"取":{"docs":{},"决":{"docs":{},"于":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"在":{"docs":{},"一":{"docs":{},"些":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"上":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"时":{"docs":{},"间":{"docs":{},"是":{"docs":{},"零":{"docs":{},"。":{"docs":{},"第":{"docs":{},"二":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"避":{"docs":{},"免":{"docs":{},"在":{"docs":{},"退":{"docs":{},"出":{"docs":{},"循":{"docs":{},"环":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"因":{"docs":{},"内":{"docs":{},"存":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"（":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"，":{"docs":{},"前":{"docs":{},"两":{"docs":{},"种":{"docs":{},"面":{"docs":{},"向":{"docs":{},"字":{"docs":{},"节":{"docs":{},"，":{"docs":{},"而":{"docs":{},"后":{"docs":{},"两":{"docs":{},"种":{"docs":{},"面":{"docs":{},"向":{"docs":{},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.003779289493575208}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.003779289493575208}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}},"d":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.004030226700251889}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}},"f":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"c":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"s":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.003022670025188917},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"姓":{"docs":{},"名":{"docs":{},"：":{"docs":{},"%":{"docs":{},"s":{"docs":{},"；":{"docs":{},"年":{"docs":{},"龄":{"docs":{},"：":{"docs":{},"%":{"docs":{},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}},"l":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{},"!":{"docs":{},"!":{"docs":{},"!":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"1":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}},"2":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}},"3":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.009299781181619256},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0035714285714285713}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"与":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}}}}},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"x":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}},"i":{"docs":{},"z":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.0223463687150838}}}}}}},"i":{"docs":{},"n":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.005836575875486381},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.002680965147453083}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}},"a":{"docs":{},"g":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.005836575875486381},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.002680965147453083}},"e":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"1":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}},".":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}},"2":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}},".":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}},"docs":{}}}}}}}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},",":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}},"，":{"docs":{},"即":{"docs":{},"为":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.004371584699453552},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.008571428571428572},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.007782101167315175},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.012048192771084338},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.008368200836820083},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.008802816901408451},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.013605442176870748},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.016979445933869526},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}},"n":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}}}}}}}},"a":{"docs":{},"d":{"0":{"2":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686}},"(":{"docs":{},"\"":{"docs":{},"线":{"docs":{},"程":{"docs":{},"a":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"b":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}},"docs":{}},"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.016840417000801924},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.022428884026258207},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.007782101167315175},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.003022670025188917},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"(":{"1":{"0":{"0":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}},"/":{"docs":{},"/":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}},"docs":{}},"docs":{}},"docs":{}},"2":{"0":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}}}}},"docs":{}},"docs":{}},"docs":{}},"3":{"0":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}}}}},"docs":{}},"docs":{}},"docs":{}},"5":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}},"docs":{}},"docs":{}},"docs":{},"s":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.007782101167315175},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.008032128514056224}},",":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}},"y":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}},"y":{"docs":{},",":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}},"：":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"线":{"docs":{},"程":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"给":{"docs":{},"每":{"docs":{},"个":{"docs":{},"创":{"docs":{},"建":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"设":{"docs":{},"置":{"docs":{},"更":{"docs":{},"有":{"docs":{},"意":{"docs":{},"义":{"docs":{},"的":{"docs":{},"名":{"docs":{},"字":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0136327185244587},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.011487964989059081}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0032822757111597373}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"s":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"，":{"docs":{},"很":{"docs":{},"多":{"docs":{},"地":{"docs":{},"方":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"线":{"docs":{},"程":{"docs":{},"本":{"docs":{},"地":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"也":{"docs":{},"有":{"docs":{},"些":{"docs":{},"地":{"docs":{},"方":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"线":{"docs":{},"程":{"docs":{},"本":{"docs":{},"地":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"意":{"docs":{},"思":{"docs":{},"差":{"docs":{},"不":{"docs":{},"多":{"docs":{},"。":{"docs":{},"可":{"docs":{},"能":{"docs":{},"很":{"docs":{},"多":{"docs":{},"朋":{"docs":{},"友":{"docs":{},"都":{"docs":{},"知":{"docs":{},"道":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.017770597738287562}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}},".":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},":":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"任":{"docs":{},"务":{"docs":{},"并":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"：":{"docs":{},"由":{"docs":{},"调":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{},"处":{"docs":{},"理":{"docs":{},"该":{"docs":{},"任":{"docs":{},"务":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"：":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"队":{"docs":{},"列":{"docs":{},"最":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"重":{"docs":{},"新":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"（":{"docs":{},"重":{"docs":{},"复":{"docs":{},"此":{"docs":{},"过":{"docs":{},"程":{"docs":{},"）":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"：":{"docs":{},"也":{"docs":{},"是":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}},"）":{"docs":{},"是":{"docs":{},"在":{"docs":{},"后":{"docs":{},"台":{"docs":{},"执":{"docs":{},"行":{"docs":{},"并":{"docs":{},"且":{"docs":{},"不":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"止":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}},"相":{"docs":{},"反":{"docs":{},"的":{"docs":{},"，":{"docs":{},"叫":{"docs":{},"用":{"docs":{},"户":{"docs":{},"线":{"docs":{},"程":{"docs":{},"（":{"docs":{},"u":{"docs":{},"s":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"非":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},"。":{"docs":{},"当":{"docs":{},"工":{"docs":{},"作":{"docs":{},"者":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"繁":{"docs":{},"忙":{"docs":{},"地":{"docs":{},"处":{"docs":{},"理":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"自":{"docs":{},"由":{"docs":{},"地":{"docs":{},"响":{"docs":{},"应":{"docs":{},"其":{"docs":{},"他":{"docs":{},"用":{"docs":{},"户":{"docs":{},"的":{"docs":{},"请":{"docs":{},"求":{"docs":{},"。":{"docs":{},"当":{"docs":{},"工":{"docs":{},"作":{"docs":{},"者":{"docs":{},"线":{"docs":{},"程":{"docs":{},"完":{"docs":{},"成":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"它":{"docs":{},"发":{"docs":{},"送":{"docs":{},"信":{"docs":{},"号":{"docs":{},"给":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"线":{"docs":{},"程":{"docs":{},"便":{"docs":{},"可":{"docs":{},"以":{"docs":{},"更":{"docs":{},"新":{"docs":{},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"，":{"docs":{},"并":{"docs":{},"显":{"docs":{},"示":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"对":{"docs":{},"用":{"docs":{},"户":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"具":{"docs":{},"有":{"docs":{},"工":{"docs":{},"作":{"docs":{},"者":{"docs":{},"线":{"docs":{},"程":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"显":{"docs":{},"得":{"docs":{},"响":{"docs":{},"应":{"docs":{},"速":{"docs":{},"度":{"docs":{},"更":{"docs":{},"快":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"立":{"docs":{},"刻":{"docs":{},"返":{"docs":{},"回":{"docs":{},"去":{"docs":{},"监":{"docs":{},"听":{"docs":{},"。":{"docs":{},"而":{"docs":{},"工":{"docs":{},"作":{"docs":{},"者":{"docs":{},"线":{"docs":{},"程":{"docs":{},"则":{"docs":{},"能":{"docs":{},"够":{"docs":{},"处":{"docs":{},"理":{"docs":{},"这":{"docs":{},"个":{"docs":{},"请":{"docs":{},"求":{"docs":{},"并":{"docs":{},"发":{"docs":{},"送":{"docs":{},"一":{"docs":{},"个":{"docs":{},"回":{"docs":{},"复":{"docs":{},"给":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"设":{"docs":{},"计":{"docs":{},"如":{"docs":{},"下":{"docs":{},"所":{"docs":{},"述":{"docs":{},"：":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.008379888268156424}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}},"m":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},",":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.00437636761487965},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686}}}}}}}}}},",":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}},"w":{"docs":{},"o":{"docs":{},",":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002857142857142857},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"1":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}},"2":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"s":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}},"r":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"0":{"2":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"docs":{}},"docs":{}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"0":{"3":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"docs":{}},"docs":{}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"0":{"2":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"y":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}},"\"":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"、":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.008421052631578947},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.004891062694530902}},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}},"，":{"docs":{},"它":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.03368421052631579}},":":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}},"。":{"docs":{},"它":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},")":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"，":{"docs":{},"就":{"docs":{},"把":{"docs":{},"链":{"docs":{},"表":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"；":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.00749063670411985},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.007142857142857143},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.004891062694530902},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.00546448087431694},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.00804289544235925}},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"i":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.006564551422319475},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.005},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.010040160642570281},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0045351473922902496}}},"u":{"docs":{},"e":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.005714285714285714}}},")":{"docs":{},";":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.00631578947368421},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}},"/":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"，":{"docs":{},"取":{"docs":{},"决":{"docs":{},"于":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"）":{"docs":{},"；":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"当":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"都":{"docs":{},"已":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"后":{"docs":{},",":{"docs":{},"才":{"docs":{},"表":{"docs":{},"示":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"至":{"docs":{},"于":{"docs":{},"我":{"docs":{},"们":{"docs":{},"应":{"docs":{},"该":{"docs":{},"调":{"docs":{},"用":{"docs":{},"哪":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"由":{"docs":{},"提":{"docs":{},"交":{"docs":{},"到":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"特":{"docs":{},"性":{"docs":{},"决":{"docs":{},"定":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"则":{"docs":{},"会":{"docs":{},"将":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"移":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"。":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"指":{"docs":{},"定":{"docs":{},"为":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"解":{"docs":{},"锁":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}},"开":{"docs":{},"启":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"需":{"docs":{},"要":{"docs":{},"继":{"docs":{},"承":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"也":{"docs":{},"包":{"docs":{},"括":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"失":{"docs":{},"败":{"docs":{},"（":{"docs":{},"即":{"docs":{},"锁":{"docs":{},"已":{"docs":{},"被":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"取":{"docs":{},"）":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}}}}}},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143}},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002857142857142857}}}}},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}},",":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},";":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.007142857142857143}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164}},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}},"[":{"docs":{},"(":{"docs":{},"n":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"i":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"]":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"l":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0026678523788350376},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.006557377049180328}},"e":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},";":{"docs":{},")":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"[":{"3":{"docs":{},"]":{"docs":{},"为":{"docs":{},"首":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"[":{"3":{"docs":{},"]":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"docs":{}}}}}}}}}}}}}},"docs":{}},"，":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}},"s":{"docs":{},"k":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},",":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}},"docs":{}}}}}}}},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}},")":{"docs":{},"，":{"docs":{},"即":{"docs":{},"重":{"docs":{},"传":{"docs":{},"超":{"docs":{},"时":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}},"+":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"d":{"docs":{},"_":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825}}}}}},"d":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"i":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.008077544426494346}}},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"=":{"0":{"docs":{},"x":{"0":{"0":{"0":{"0":{"7":{"docs":{},"f":{"3":{"docs":{},"b":{"0":{"5":{"0":{"1":{"3":{"8":{"0":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"9":{"5":{"0":{"0":{"4":{"3":{"docs":{},"e":{"0":{"0":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"8":{"1":{"3":{"4":{"8":{"7":{"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"7":{"0":{"docs":{},"f":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"docs":{},"c":{"docs":{},"a":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}}},"docs":{}},"4":{"2":{"docs":{},"f":{"0":{"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"3":{"docs":{},"c":{"5":{"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"6":{"5":{"docs":{},"f":{"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"docs":{}},"7":{"7":{"6":{"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002735229759299781}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"：":{"docs":{},"连":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"哪":{"docs":{},"种":{"docs":{},"类":{"docs":{},"别":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}}},"d":{"docs":{},"o":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}},"m":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}},",":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}},"o":{"docs":{},"l":{"docs":{},")":{"docs":{},"打":{"docs":{},"开":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"，":{"docs":{},"是":{"docs":{},"与":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"显":{"docs":{},"示":{"docs":{},"指":{"docs":{},"定":{"docs":{},"系":{"docs":{},"统":{"docs":{},"内":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}}}}}},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.008379888268156424}}}}}}}}}}}}}},",":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"w":{"docs":{},"o":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"取":{"docs":{},"消":{"docs":{},"，":{"docs":{},"使":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"能":{"docs":{},"够":{"docs":{},"感":{"docs":{},"知":{"docs":{},"o":{"docs":{},"n":{"docs":{},"为":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"而":{"docs":{},"结":{"docs":{},"束":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.003779289493575208}},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}}}},"c":{"docs":{},"p":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.06628242074927954},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.06628242074927954},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.06628242074927954}},"/":{"docs":{},"u":{"docs":{},"d":{"docs":{},"p":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}}}}},"（":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}},"，":{"docs":{},"用":{"docs":{},"户":{"docs":{},"数":{"docs":{},"据":{"docs":{},"报":{"docs":{},"协":{"docs":{},"议":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}},"？":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}}}}},"v":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.005780346820809248},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.004371584699453552},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.004201680672268907},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584},"database/database.html":{"ref":"database/database.html","tf":0.011494252873563218},"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.009389671361502348}},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.011226944667201283},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.04597701149425287},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.014492753623188406},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.00546448087431694},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.005},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"e":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"符":{"docs":{},"，":{"docs":{},"它":{"docs":{},"是":{"docs":{},"被":{"docs":{},"用":{"docs":{},"来":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"被":{"docs":{},"不":{"docs":{},"同":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"和":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{},"被":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"类":{"docs":{},"型":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"系":{"docs":{},"统":{"docs":{},"每":{"docs":{},"次":{"docs":{},"用":{"docs":{},"到":{"docs":{},"它":{"docs":{},"时":{"docs":{},"都":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"从":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"当":{"docs":{},"中":{"docs":{},"提":{"docs":{},"取":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"会":{"docs":{},"利":{"docs":{},"用":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"，":{"docs":{},"在":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"后":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"任":{"docs":{},"何":{"docs":{},"时":{"docs":{},"候":{"docs":{},"所":{"docs":{},"看":{"docs":{},"到":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"值":{"docs":{},"都":{"docs":{},"是":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"作":{"docs":{},"用":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.010810810810810811}}}}}}},"，":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}},"；":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}},"i":{"docs":{},"d":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.00749063670411985},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0031124944419742106},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0175054704595186},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.011494252873563218},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.006557377049180328},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.012142857142857143},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.01556420233463035},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.02208835341365462},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.012924071082390954},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.01056338028169014},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.015117157974300832},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.016979445933869526},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.00749063670411985},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.01092896174863388}},"：":{"docs":{},"和":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"但":{"docs":{},"它":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"同":{"docs":{},"步":{"docs":{},"操":{"docs":{},"作":{"docs":{},"完":{"docs":{},"全":{"docs":{},"可":{"docs":{},"以":{"docs":{},"由":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"自":{"docs":{},"己":{"docs":{},"来":{"docs":{},"控":{"docs":{},"制":{"docs":{},"；":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}},"虽":{"docs":{},"然":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"只":{"docs":{},"能":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"它":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"排":{"docs":{},"除":{"docs":{},"这":{"docs":{},"种":{"docs":{},"可":{"docs":{},"能":{"docs":{},"：":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"、":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"、":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"，":{"docs":{},"与":{"docs":{},"之":{"docs":{},"相":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"、":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"）":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}},"；":{"docs":{},"第":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},":":{"docs":{},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.005578800557880056}},"e":{"docs":{},"(":{"docs":{},"保":{"docs":{},"证":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"映":{"docs":{},"射":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"键":{"docs":{},"和":{"docs":{},"值":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}},"存":{"docs":{},"储":{"docs":{},"对":{"docs":{},"象":{"docs":{},"到":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"从":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"获":{"docs":{},"取":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"{":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}},")":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0031124944419742106},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},":":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.005366726296958855},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}}}}}}}}},"，":{"docs":{},"存":{"docs":{},"到":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"；":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"值":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"而":{"docs":{},"引":{"docs":{},"起":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"流":{"docs":{},"水":{"docs":{},"线":{"docs":{},"被":{"docs":{},"清":{"docs":{},"空":{"docs":{},"（":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"r":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"s":{"docs":{},".":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}},"，":{"docs":{},"旧":{"docs":{},"的":{"docs":{},"预":{"docs":{},"期":{"docs":{},"值":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}},")":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},";":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}},";":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}}}},"​":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.032432432432432434},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.017889087656529516}}},"“":{"docs":{},"=":{"docs":{},"=":{"docs":{},"”":{"docs":{},"、":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"和":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.010810810810810811}}}}}}}}}}}}}}}}}}}}}}}}}},"读":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}},"标":{"docs":{},"记":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"索":{"docs":{},"引":{"docs":{},"的":{"docs":{},"叶":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"数":{"docs":{},"据":{"docs":{},"节":{"docs":{},"点":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}},"不":{"docs":{},"通":{"docs":{},"点":{"docs":{},"：":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}},"适":{"docs":{},"合":{"docs":{},"内":{"docs":{},"存":{"docs":{},"敏":{"docs":{},"感":{"docs":{},"以":{"docs":{},"及":{"docs":{},"对":{"docs":{},"实":{"docs":{},"时":{"docs":{},"性":{"docs":{},"要":{"docs":{},"求":{"docs":{},"很":{"docs":{},"高":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"于":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.008421052631578947},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}},"并":{"docs":{},"发":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"，":{"docs":{},"则":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}},"接":{"docs":{},"受":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.007142857142857143}}}},"变":{"docs":{},"，":{"docs":{},"低":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"类":{"docs":{},"和":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"类":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}},"过":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"操":{"docs":{},"作":{"docs":{},"也":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"些":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"：":{"1":{"docs":{},".":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}},"docs":{}}}}}}}}}}}}}}},"允":{"docs":{},"许":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}},"可":{"docs":{},"变":{"docs":{},"性":{"docs":{},"还":{"docs":{},"有":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"优":{"docs":{},"点":{"docs":{},"如":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}},"能":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}},"在":{"docs":{},"非":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"命":{"docs":{},"中":{"docs":{},"；":{"docs":{},"非":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"索":{"docs":{},"引":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"；":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}},"消":{"docs":{},"耗":{"docs":{},"过":{"docs":{},"多":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"取":{"docs":{},"决":{"docs":{},"于":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"在":{"docs":{},"一":{"docs":{},"些":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"上":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"时":{"docs":{},"间":{"docs":{},"是":{"docs":{},"零":{"docs":{},"。":{"docs":{},"第":{"docs":{},"二":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"避":{"docs":{},"免":{"docs":{},"在":{"docs":{},"退":{"docs":{},"出":{"docs":{},"循":{"docs":{},"环":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"因":{"docs":{},"内":{"docs":{},"存":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"（":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"保":{"docs":{},"证":{"docs":{},"所":{"docs":{},"有":{"docs":{},"过":{"docs":{},"期":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}},"能":{"docs":{},"重":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"响":{"docs":{},"应":{"docs":{},"中":{"docs":{},"断":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"要":{"docs":{},"认":{"docs":{},"为":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"分":{"docs":{},"配":{"docs":{},"给":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"服":{"docs":{},"务":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"读":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"或":{"docs":{},"者":{"docs":{},"计":{"docs":{},"算":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"就":{"docs":{},"设":{"docs":{},"置":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"；":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"再":{"docs":{},"创":{"docs":{},"建":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"示":{"docs":{},"例":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}},"属":{"docs":{},"于":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"片":{"docs":{},"段":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"可":{"docs":{},"以":{"docs":{},"并":{"docs":{},"发":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"大":{"docs":{},"大":{"docs":{},"提":{"docs":{},"高":{"docs":{},"了":{"docs":{},"性":{"docs":{},"能":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}},"足":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"仅":{"docs":{},"能":{"docs":{},"生":{"docs":{},"成":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"输":{"docs":{},"出":{"docs":{},"类":{"docs":{},"名":{"docs":{},"、":{"docs":{},"j":{"docs":{},"a":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"需":{"docs":{},"要":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"一":{"docs":{},"致":{"docs":{},"，":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}},"确":{"docs":{},"定":{"docs":{},"自":{"docs":{},"己":{"docs":{},"发":{"docs":{},"消":{"docs":{},"息":{"docs":{},"是":{"docs":{},"否":{"docs":{},"没":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"第":{"docs":{},"三":{"docs":{},"次":{"docs":{},"握":{"docs":{},"手":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}},"与":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.004468275245755138}},"c":{"docs":{},"/":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"语":{"docs":{},"言":{"docs":{},"相":{"docs":{},"比":{"docs":{},"，":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"语":{"docs":{},"言":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"概":{"docs":{},"念":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"（":{"docs":{},"d":{"docs":{},"a":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}},"类":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"（":{"docs":{},"或":{"docs":{},"者":{"docs":{},"说":{"docs":{},"实":{"docs":{},"例":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}},"发":{"docs":{},"送":{"docs":{},"方":{"docs":{},"发":{"docs":{},"送":{"docs":{},"的":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"：":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"使":{"docs":{},"用":{"docs":{},"b":{"docs":{},"+":{"docs":{},"树":{"docs":{},"实":{"docs":{},"现":{"docs":{},"索":{"docs":{},"引":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"也":{"docs":{},"支":{"docs":{},"持":{"docs":{},"数":{"docs":{},"组":{"docs":{},"这":{"docs":{},"种":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"是":{"docs":{},"值":{"docs":{},"传":{"docs":{},"递":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"如":{"docs":{},"何":{"docs":{},"在":{"docs":{},"其":{"docs":{},"他":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"真":{"docs":{},"实":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"docs":{},"数":{"docs":{},"据":{"docs":{},"呢":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"包":{"docs":{},"含":{"docs":{},"三":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"：":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},",":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}},"用":{"docs":{},"来":{"docs":{},"被":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"为":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"提":{"docs":{},"供":{"docs":{},"快":{"docs":{},"速":{"docs":{},"访":{"docs":{},"问":{"docs":{},"功":{"docs":{},"能":{"docs":{},"的":{"docs":{},"。":{"docs":{},"在":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.008368200836820083},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.002680965147453083}},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},"是":{"docs":{},"无":{"docs":{},"序":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}},"都":{"docs":{},"被":{"docs":{},"当":{"docs":{},"成":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}},"根":{"docs":{},"据":{"docs":{},"自":{"docs":{},"然":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"或":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}},"内":{"docs":{},"容":{"docs":{},"是":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"值":{"docs":{},"，":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"比":{"docs":{},"较":{"docs":{},"器":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"，":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"比":{"docs":{},"较":{"docs":{},"器":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"“":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"”":{"docs":{},"！":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}},"绝":{"docs":{},"大":{"docs":{},"部":{"docs":{},"分":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"为":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}},"大":{"docs":{},"部":{"docs":{},"分":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"数":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"线":{"docs":{},"程":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"如":{"docs":{},"何":{"docs":{},"控":{"docs":{},"制":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"是":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"共":{"docs":{},"享":{"docs":{},"属":{"docs":{},"于":{"docs":{},"该":{"docs":{},"进":{"docs":{},"程":{"docs":{},"的":{"docs":{},"堆":{"docs":{},"。":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"几":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"访":{"docs":{},"问":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"线":{"docs":{},"程":{"docs":{},"共":{"docs":{},"享":{"docs":{},"堆":{"docs":{},"并":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"堆":{"docs":{},"栈":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"如":{"docs":{},"何":{"docs":{},"调":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"以":{"docs":{},"及":{"docs":{},"它":{"docs":{},"的":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"保":{"docs":{},"持":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"堆":{"docs":{},"不":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"并":{"docs":{},"且":{"docs":{},"为":{"docs":{},"了":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"必":{"docs":{},"须":{"docs":{},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"要":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"本":{"docs":{},"质":{"docs":{},"上":{"docs":{},"都":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}},"缓":{"docs":{},"存":{"docs":{},"大":{"docs":{},"得":{"docs":{},"多":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"是":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"（":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"完":{"docs":{},"全":{"docs":{},"基":{"docs":{},"于":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"设":{"docs":{},"计":{"docs":{},"，":{"docs":{},"其":{"docs":{},"基":{"docs":{},"本":{"docs":{},"结":{"docs":{},"构":{"docs":{},"如":{"docs":{},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"利":{"docs":{},"用":{"docs":{},"各":{"docs":{},"种":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"乐":{"docs":{},"观":{"docs":{},"锁":{"docs":{},"在":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}},"是":{"docs":{},"无":{"docs":{},"锁":{"docs":{},"编":{"docs":{},"程":{"docs":{},"，":{"docs":{},"常":{"docs":{},"常":{"docs":{},"采":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"就":{"docs":{},"是":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}},"回":{"docs":{},"收":{"docs":{},"价":{"docs":{},"值":{"docs":{},"和":{"docs":{},"成":{"docs":{},"本":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"用":{"docs":{},"户":{"docs":{},"所":{"docs":{},"期":{"docs":{},"望":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"命":{"docs":{},"令":{"docs":{},"来":{"docs":{},"创":{"docs":{},"建":{"docs":{},"。":{"docs":{},"在":{"docs":{},"创":{"docs":{},"建":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}},"网":{"docs":{},"络":{"docs":{},"支":{"docs":{},"持":{"docs":{},"：":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}},"流":{"docs":{},"操":{"docs":{},"作":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"类":{"docs":{},"：":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"类":{"docs":{},"，":{"docs":{},"常":{"docs":{},"常":{"docs":{},"是":{"docs":{},"以":{"docs":{},"输":{"docs":{},"入":{"docs":{},"、":{"docs":{},"输":{"docs":{},"出":{"docs":{},"两":{"docs":{},"种":{"docs":{},"形":{"docs":{},"式":{"docs":{},"成":{"docs":{},"对":{"docs":{},"提":{"docs":{},"供":{"docs":{},"。":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"即":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"序":{"docs":{},"号":{"docs":{},"快":{"docs":{},"速":{"docs":{},"获":{"docs":{},"取":{"docs":{},"元":{"docs":{},"素":{"docs":{},"对":{"docs":{},"象":{"docs":{},"；":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"快":{"docs":{},"速":{"docs":{},"随":{"docs":{},"机":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"获":{"docs":{},"取":{"docs":{},"队":{"docs":{},"列":{"docs":{},"元":{"docs":{},"素":{"docs":{},"但":{"docs":{},"是":{"docs":{},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"等":{"docs":{},"待":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"再":{"docs":{},"返":{"docs":{},"回":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"添":{"docs":{},"加":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"队":{"docs":{},"列":{"docs":{},"已":{"docs":{},"满":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"等":{"docs":{},"到":{"docs":{},"队":{"docs":{},"列":{"docs":{},"可":{"docs":{},"以":{"docs":{},"放":{"docs":{},"入":{"docs":{},"新":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"再":{"docs":{},"放":{"docs":{},"入":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"编":{"docs":{},"写":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}},"利":{"docs":{},"用":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"替":{"docs":{},"换":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"就":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"某":{"docs":{},"个":{"docs":{},"键":{"docs":{},"不":{"docs":{},"再":{"docs":{},"正":{"docs":{},"常":{"docs":{},"使":{"docs":{},"用":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"被":{"docs":{},"从":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}},"描":{"docs":{},"述":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"前":{"docs":{},"都":{"docs":{},"会":{"docs":{},"保":{"docs":{},"持":{"docs":{},"在":{"docs":{},"就":{"docs":{},"绪":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"此":{"docs":{},"时":{"docs":{},"，":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"高":{"docs":{},"，":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"就":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"被":{"docs":{},"先":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"步":{"docs":{},"容":{"docs":{},"器":{"docs":{},"主":{"docs":{},"要":{"docs":{},"包":{"docs":{},"括":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}},"摒":{"docs":{},"弃":{"docs":{},"了":{"docs":{},"锁":{"docs":{},"分":{"docs":{},"段":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"改":{"docs":{},"为":{"docs":{},"利":{"docs":{},"用":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"不":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"们":{"docs":{},"在":{"docs":{},"内":{"docs":{},"部":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"快":{"docs":{},"照":{"docs":{},"上":{"docs":{},"工":{"docs":{},"作":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"多":{"docs":{},"个":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"可":{"docs":{},"以":{"docs":{},"同":{"docs":{},"时":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"而":{"docs":{},"不":{"docs":{},"会":{"docs":{},"相":{"docs":{},"互":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"（":{"1":{"docs":{},",":{"2":{"docs":{},",":{"4":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"自":{"docs":{},"旋":{"docs":{},"锁":{"docs":{},"是":{"docs":{},"指":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"会":{"docs":{},"立":{"docs":{},"即":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"采":{"docs":{},"用":{"docs":{},"循":{"docs":{},"环":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"去":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"好":{"docs":{},"处":{"docs":{},"是":{"docs":{},"减":{"docs":{},"少":{"docs":{},"线":{"docs":{},"程":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{},"的":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"，":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"是":{"docs":{},"循":{"docs":{},"环":{"docs":{},"会":{"docs":{},"消":{"docs":{},"耗":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"年":{"docs":{},"龄":{"docs":{},"就":{"docs":{},"增":{"docs":{},"加":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"而":{"docs":{},"不":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"放":{"docs":{},"入":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"用":{"docs":{},"了":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"程":{"docs":{},"序":{"docs":{},"可":{"docs":{},"以":{"docs":{},"编":{"docs":{},"译":{"docs":{},"通":{"docs":{},"过":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"委":{"docs":{},"派":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}},"流":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"一":{"docs":{},"般":{"docs":{},"流":{"docs":{},"程":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"按":{"docs":{},"照":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"保":{"docs":{},"存":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}},"原":{"docs":{},"理":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}},"无":{"docs":{},"序":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"。":{"docs":{},"排":{"docs":{},"序":{"docs":{},"规":{"docs":{},"则":{"docs":{},"是":{"docs":{},"自":{"docs":{},"然":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"或":{"docs":{},"比":{"docs":{},"较":{"docs":{},"器":{"docs":{},"（":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"）":{"docs":{},"中":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"规":{"docs":{},"则":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"容":{"docs":{},"是":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}},"完":{"docs":{},"成":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}},"当":{"docs":{},"前":{"docs":{},"操":{"docs":{},"作":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"值":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"指":{"docs":{},"定":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"过":{"docs":{},"期":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}},"维":{"docs":{},"护":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}}}}},"不":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}},"元":{"docs":{},"素":{"docs":{},"按":{"docs":{},"照":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"保":{"docs":{},"存":{"docs":{},"（":{"docs":{},"f":{"docs":{},"i":{"docs":{},"f":{"docs":{},"o":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}},"得":{"docs":{},"到":{"docs":{},"了":{"docs":{},"应":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},"这":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"需":{"docs":{},"要":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"可":{"docs":{},"并":{"docs":{},"行":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}},"保":{"docs":{},"存":{"docs":{},"了":{"docs":{},"全":{"docs":{},"部":{"docs":{},"的":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"，":{"docs":{},"而":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"被":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"了":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"碰":{"docs":{},"撞":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"超":{"docs":{},"过":{"docs":{},"某":{"docs":{},"个":{"docs":{},"限":{"docs":{},"制":{"docs":{},"(":{"docs":{},"默":{"docs":{},"认":{"docs":{},"是":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}},"被":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"自":{"docs":{},"动":{"docs":{},"移":{"docs":{},"除":{"docs":{},"。":{"docs":{},"更":{"docs":{},"精":{"docs":{},"确":{"docs":{},"地":{"docs":{},"说":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"键":{"docs":{},"，":{"docs":{},"其":{"docs":{},"映":{"docs":{},"射":{"docs":{},"的":{"docs":{},"存":{"docs":{},"在":{"docs":{},"并":{"docs":{},"不":{"docs":{},"阻":{"docs":{},"止":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"器":{"docs":{},"对":{"docs":{},"该":{"docs":{},"键":{"docs":{},"的":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"使":{"docs":{},"该":{"docs":{},"键":{"docs":{},"成":{"docs":{},"为":{"docs":{},"可":{"docs":{},"终":{"docs":{},"止":{"docs":{},"的":{"docs":{},"，":{"docs":{},"被":{"docs":{},"终":{"docs":{},"止":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{},"某":{"docs":{},"个":{"docs":{},"键":{"docs":{},"被":{"docs":{},"终":{"docs":{},"止":{"docs":{},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"也":{"docs":{},"就":{"docs":{},"从":{"docs":{},"映":{"docs":{},"射":{"docs":{},"中":{"docs":{},"有":{"docs":{},"效":{"docs":{},"地":{"docs":{},"移":{"docs":{},"除":{"docs":{},"了":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"引":{"docs":{},"入":{"docs":{},"。":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"反":{"docs":{},"斜":{"docs":{},"杠":{"docs":{},"表":{"docs":{},"示":{"docs":{},"目":{"docs":{},"录":{"docs":{},"的":{"docs":{},"分":{"docs":{},"隔":{"docs":{},"符":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}},"正":{"docs":{},"斜":{"docs":{},"杠":{"docs":{},"表":{"docs":{},"示":{"docs":{},"目":{"docs":{},"录":{"docs":{},"的":{"docs":{},"分":{"docs":{},"隔":{"docs":{},"符":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"消":{"docs":{},"息":{"docs":{},"传":{"docs":{},"递":{"docs":{},"方":{"docs":{},"式":{"docs":{},"就":{"docs":{},"是":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"总":{"docs":{},"结":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"定":{"docs":{},"义":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"了":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"无":{"docs":{},"效":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}},"有":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"哪":{"docs":{},"些":{"docs":{},"锁":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}},"线":{"docs":{},"程":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"一":{"docs":{},"一":{"docs":{},"对":{"docs":{},"应":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"栈":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"调":{"docs":{},"用":{"docs":{},"相":{"docs":{},"关":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"也":{"docs":{},"把":{"docs":{},"它":{"docs":{},"称":{"docs":{},"作":{"docs":{},"调":{"docs":{},"用":{"docs":{},"栈":{"docs":{},"。":{"docs":{},"随":{"docs":{},"着":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"不":{"docs":{},"断":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"调":{"docs":{},"用":{"docs":{},"栈":{"docs":{},"会":{"docs":{},"不":{"docs":{},"断":{"docs":{},"变":{"docs":{},"化":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"断":{"docs":{},"状":{"docs":{},"态":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"标":{"docs":{},"识":{"docs":{},"位":{"docs":{},"，":{"docs":{},"而":{"docs":{},"中":{"docs":{},"断":{"docs":{},"操":{"docs":{},"作":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"简":{"docs":{},"便":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"交":{"docs":{},"互":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"而":{"docs":{},"这":{"docs":{},"种":{"docs":{},"交":{"docs":{},"互":{"docs":{},"方":{"docs":{},"式":{"docs":{},"最":{"docs":{},"适":{"docs":{},"合":{"docs":{},"用":{"docs":{},"来":{"docs":{},"取":{"docs":{},"消":{"docs":{},"或":{"docs":{},"停":{"docs":{},"止":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}},"执":{"docs":{},"行":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"规":{"docs":{},"则":{"docs":{},"：":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"上":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"只":{"docs":{},"能":{"docs":{},"对":{"docs":{},"应":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"同":{"docs":{},"时":{"docs":{},"只":{"docs":{},"允":{"docs":{},"许":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"层":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}},"成":{"docs":{},"功":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"在":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}},"试":{"docs":{},"图":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"种":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}},"主":{"docs":{},"要":{"docs":{},"做":{"docs":{},"了":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}},"采":{"docs":{},"用":{"docs":{},"了":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"查":{"docs":{},"询":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"可":{"docs":{},"以":{"docs":{},"降":{"docs":{},"低":{"docs":{},"到":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}},"声":{"docs":{},"明":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"在":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}}}}}}}}},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"对":{"docs":{},"其":{"docs":{},"进":{"docs":{},"行":{"docs":{},"重":{"docs":{},"写":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"也":{"docs":{},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"向":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"提":{"docs":{},"交":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"它":{"docs":{},"和":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"几":{"docs":{},"种":{"docs":{},"具":{"docs":{},"有":{"docs":{},"代":{"docs":{},"表":{"docs":{},"性":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"是":{"docs":{},"基":{"docs":{},"于":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}},"三":{"docs":{},"个":{"docs":{},"常":{"docs":{},"用":{"docs":{},"于":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"接":{"docs":{},"口":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}},"的":{"docs":{},"具":{"docs":{},"有":{"docs":{},"代":{"docs":{},"表":{"docs":{},"性":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}},"新":{"docs":{},"加":{"docs":{},"入":{"docs":{},"了":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"年":{"docs":{},"龄":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"还":{"docs":{},"存":{"docs":{},"活":{"docs":{},"着":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"一":{"docs":{},"次":{"docs":{},"性":{"docs":{},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{},"另":{"docs":{},"一":{"docs":{},"块":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"大":{"docs":{},"小":{"docs":{},"有":{"docs":{},"三":{"docs":{},"方":{"docs":{},"面":{"docs":{},"限":{"docs":{},"制":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}},"给":{"docs":{},"出":{"docs":{},"了":{"docs":{},"两":{"docs":{},"种":{"docs":{},"列":{"docs":{},"出":{"docs":{},"文":{"docs":{},"件":{"docs":{},"夹":{"docs":{},"内":{"docs":{},"容":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}},"读":{"docs":{},"取":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}}}},"什":{"docs":{},"么":{"docs":{},"是":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.006415396952686447},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"类":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}},"反":{"docs":{},"射":{"docs":{},"机":{"docs":{},"制":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}},"继":{"docs":{},"承":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"?":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"o":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"p":{"docs":{},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"技":{"docs":{},"术":{"docs":{},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{},"？":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"原":{"docs":{},"子":{"docs":{},"类":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"原":{"docs":{},"子":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"理":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"步":{"docs":{},"容":{"docs":{},"器":{"docs":{},"？":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"常":{"docs":{},"见":{"docs":{},"同":{"docs":{},"步":{"docs":{},"容":{"docs":{},"器":{"docs":{},"？":{"docs":{},"它":{"docs":{},"们":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"实":{"docs":{},"现":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"？":{"docs":{},"同":{"docs":{},"步":{"docs":{},"容":{"docs":{},"器":{"docs":{},"真":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"吗":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"？":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"要":{"docs":{},"用":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"？":{"docs":{},"如":{"docs":{},"何":{"docs":{},"创":{"docs":{},"建":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"发":{"docs":{},"容":{"docs":{},"器":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}},"死":{"docs":{},"锁":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{},"？":{"docs":{},"如":{"docs":{},"何":{"docs":{},"分":{"docs":{},"析":{"docs":{},"和":{"docs":{},"避":{"docs":{},"免":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}},"池":{"docs":{},"？":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}},"如":{"docs":{},"何":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}},"调":{"docs":{},"度":{"docs":{},"器":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}}},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}},"安":{"docs":{},"全":{"docs":{},"？":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}},"进":{"docs":{},"程":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"什":{"docs":{},"么":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"？":{"docs":{},"进":{"docs":{},"程":{"docs":{},"和":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}}}}}}}}}}},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"？":{"docs":{},"如":{"docs":{},"何":{"docs":{},"使":{"docs":{},"用":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"生":{"docs":{},"产":{"docs":{},"者":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{},"？":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}},"活":{"docs":{},"锁":{"docs":{},"？":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}},"资":{"docs":{},"源":{"docs":{},"限":{"docs":{},"制":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"？":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}},"m":{"docs":{},"y":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.011494252873563218}}}}}}}},"时":{"docs":{},"候":{"docs":{},"会":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"从":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099},"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"使":{"docs":{},"用":{"docs":{},"方":{"docs":{},"面":{"docs":{},"来":{"docs":{},"说":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}},"内":{"docs":{},"存":{"docs":{},"方":{"docs":{},"面":{"docs":{},"来":{"docs":{},"说":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}},"获":{"docs":{},"取":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}},"概":{"docs":{},"念":{"docs":{},"方":{"docs":{},"面":{"docs":{},"来":{"docs":{},"说":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"不":{"docs":{},"难":{"docs":{},"看":{"docs":{},"出":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"基":{"docs":{},"本":{"docs":{},"特":{"docs":{},"性":{"docs":{},"：":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"而":{"docs":{},"得":{"docs":{},"到":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}},"检":{"docs":{},"查":{"docs":{},"系":{"docs":{},"统":{"docs":{},"中":{"docs":{},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"计":{"docs":{},"算":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"对":{"docs":{},"应":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"某":{"docs":{},"一":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"通":{"docs":{},"过":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"的":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"在":{"docs":{},"对":{"docs":{},"应":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"切":{"docs":{},"换":{"docs":{},"到":{"docs":{},"执":{"docs":{},"行":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"时":{"docs":{},"，":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}},"磁":{"docs":{},"盘":{"docs":{},"中":{"docs":{},"读":{"docs":{},"取":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"大":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"取":{"docs":{},"走":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"队":{"docs":{},"列":{"docs":{},"当":{"docs":{},"前":{"docs":{},"有":{"docs":{},"：":{"docs":{},"\"":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"描":{"docs":{},"述":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"，":{"docs":{},"悲":{"docs":{},"观":{"docs":{},"锁":{"docs":{},"适":{"docs":{},"合":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"非":{"docs":{},"常":{"docs":{},"多":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"，":{"docs":{},"乐":{"docs":{},"观":{"docs":{},"锁":{"docs":{},"适":{"docs":{},"合":{"docs":{},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"非":{"docs":{},"常":{"docs":{},"多":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"，":{"docs":{},"不":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"会":{"docs":{},"带":{"docs":{},"来":{"docs":{},"大":{"docs":{},"量":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"提":{"docs":{},"升":{"docs":{},"。":{"docs":{},"悲":{"docs":{},"观":{"docs":{},"锁":{"docs":{},"在":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"到":{"docs":{},"里":{"docs":{},"学":{"docs":{},"习":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"读":{"docs":{},"取":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"场":{"docs":{},"景":{"docs":{},"相":{"docs":{},"对":{"docs":{},"少":{"docs":{},"见":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"有":{"docs":{},"些":{"docs":{},"中":{"docs":{},"间":{"docs":{},"件":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"（":{"docs":{},"如":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"网":{"docs":{},"络":{"docs":{},"中":{"docs":{},"获":{"docs":{},"取":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"场":{"docs":{},"景":{"docs":{},"最":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"是":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"启":{"docs":{},"动":{"docs":{},"到":{"docs":{},"采":{"docs":{},"样":{"docs":{},"时":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"发":{"docs":{},"生":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}},"键":{"docs":{},"盘":{"docs":{},"接":{"docs":{},"收":{"docs":{},"数":{"docs":{},"据":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}},"该":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"一":{"docs":{},"方":{"docs":{},"面":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}},"输":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"，":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}},"库":{"docs":{},"i":{"docs":{},"/":{"docs":{},"o":{"docs":{},"线":{"docs":{},"程":{"docs":{},"：":{"docs":{},"负":{"docs":{},"责":{"docs":{},"从":{"docs":{},"主":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"上":{"docs":{},"读":{"docs":{},"取":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"日":{"docs":{},"志":{"docs":{},"，":{"docs":{},"并":{"docs":{},"写":{"docs":{},"入":{"docs":{},"从":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"的":{"docs":{},"重":{"docs":{},"放":{"docs":{},"日":{"docs":{},"志":{"docs":{},"（":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"线":{"docs":{},"程":{"docs":{},"：":{"docs":{},"负":{"docs":{},"责":{"docs":{},"读":{"docs":{},"取":{"docs":{},"重":{"docs":{},"放":{"docs":{},"日":{"docs":{},"志":{"docs":{},"并":{"docs":{},"重":{"docs":{},"放":{"docs":{},"其":{"docs":{},"中":{"docs":{},"的":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"语":{"docs":{},"句":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"m":{"docs":{},"y":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"，":{"docs":{},"提":{"docs":{},"升":{"docs":{},"查":{"docs":{},"询":{"docs":{},"性":{"docs":{},"能":{"docs":{},"以":{"docs":{},"及":{"docs":{},"节":{"docs":{},"约":{"docs":{},"系":{"docs":{},"统":{"docs":{},"开":{"docs":{},"销":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"传":{"docs":{},"递":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}},"性":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}},"给":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}},"输":{"docs":{},"层":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"（":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"包":{"docs":{},"保":{"docs":{},"证":{"docs":{},"以":{"docs":{},"原":{"docs":{},"始":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"到":{"docs":{},"达":{"docs":{},"目":{"docs":{},"的":{"docs":{},"地":{"docs":{},"，":{"docs":{},"且":{"docs":{},"数":{"docs":{},"据":{"docs":{},"包":{"docs":{},"不":{"docs":{},"被":{"docs":{},"损":{"docs":{},"坏":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"实":{"docs":{},"现":{"docs":{},"这":{"docs":{},"点":{"docs":{},"，":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"但":{"docs":{},"是":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}},"他":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"结":{"docs":{},"构":{"docs":{},"类":{"docs":{},"似":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}},"速":{"docs":{},"度":{"docs":{},"慢":{"docs":{},"，":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}},"，":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"s":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"已":{"docs":{},"经":{"docs":{},"分":{"docs":{},"配":{"docs":{},"了":{"docs":{},"大":{"docs":{},"约":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"在":{"docs":{},"并":{"docs":{},"发":{"docs":{},"容":{"docs":{},"器":{"docs":{},"中":{"docs":{},"不":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}},"值":{"docs":{},"传":{"docs":{},"递":{"docs":{},"与":{"docs":{},"引":{"docs":{},"用":{"docs":{},"传":{"docs":{},"递":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.010810810810810811}}}}}}}}}}}}}},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}},"（":{"docs":{},"并":{"docs":{},"发":{"docs":{},"包":{"docs":{},"中":{"docs":{},"的":{"docs":{},"容":{"docs":{},"器":{"docs":{},"类":{"docs":{},"好":{"docs":{},"像":{"docs":{},"都":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{},"插":{"docs":{},"入":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"新":{"docs":{},"增":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.007142857142857143}}}}},"往":{"docs":{},"往":{"docs":{},"用":{"docs":{},"作":{"docs":{},"其":{"docs":{},"他":{"docs":{},"用":{"docs":{},"途":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"用":{"docs":{},"于":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"代":{"docs":{},"表":{"docs":{},"操":{"docs":{},"作":{"docs":{},"失":{"docs":{},"败":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}},"则":{"docs":{},"新":{"docs":{},"插":{"docs":{},"入":{"docs":{},"节":{"docs":{},"点":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"类":{"docs":{},"变":{"docs":{},"量":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}},"通":{"docs":{},"信":{"docs":{},"双":{"docs":{},"方":{"docs":{},"商":{"docs":{},"定":{"docs":{},"通":{"docs":{},"信":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"报":{"docs":{},"文":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"应":{"docs":{},"用":{"docs":{},"层":{"docs":{},"交":{"docs":{},"付":{"docs":{},"下":{"docs":{},"来":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"过":{"docs":{},"大":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"对":{"docs":{},"数":{"docs":{},"据":{"docs":{},"分":{"docs":{},"段":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"发":{"docs":{},"送":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"通":{"docs":{},"过":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"来":{"docs":{},"控":{"docs":{},"制":{"docs":{},"通":{"docs":{},"信":{"docs":{},"双":{"docs":{},"发":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"新":{"docs":{},"增":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"进":{"docs":{},"一":{"docs":{},"步":{"docs":{},"计":{"docs":{},"算":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}},"选":{"docs":{},"择":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"为":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}},"还":{"docs":{},"没":{"docs":{},"变":{"docs":{},"为":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}},"。":{"docs":{},"尽":{"docs":{},"管":{"docs":{},"这":{"docs":{},"样":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"建":{"docs":{},"议":{"docs":{},"在":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"中":{"docs":{},"显":{"docs":{},"式":{"docs":{},"指":{"docs":{},"定":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}},"得":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"从":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"获":{"docs":{},"取":{"docs":{},"的":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.010810810810810811},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"f":{"docs":{},"p":{"docs":{},"是":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}},"会":{"docs":{},"阻":{"docs":{},"止":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"取":{"docs":{},"当":{"docs":{},"前":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"监":{"docs":{},"控":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"使":{"docs":{},"得":{"docs":{},"当":{"docs":{},"前":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"被":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"保":{"docs":{},"护":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"无":{"docs":{},"法":{"docs":{},"被":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"无":{"docs":{},"法":{"docs":{},"并":{"docs":{},"发":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{},"更":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"修":{"docs":{},"饰":{"docs":{},"方":{"docs":{},"法":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"方":{"docs":{},"法":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"容":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"有":{"docs":{},"两":{"docs":{},"层":{"docs":{},"含":{"docs":{},"义":{"docs":{},"：":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"当":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"没":{"docs":{},"有":{"docs":{},"加":{"docs":{},"入":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}},"时":{"docs":{},"所":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"汇":{"docs":{},"编":{"docs":{},"代":{"docs":{},"码":{"docs":{},"发":{"docs":{},"现":{"docs":{},"，":{"docs":{},"加":{"docs":{},"入":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}},"，":{"docs":{},"会":{"docs":{},"多":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}},"来":{"docs":{},"标":{"docs":{},"记":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"者":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"，":{"docs":{},"当":{"docs":{},"某":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"析":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}},"。":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"直":{"docs":{},"接":{"docs":{},"从":{"docs":{},"主":{"docs":{},"存":{"docs":{},"中":{"docs":{},"读":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"这":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"被":{"docs":{},"修":{"docs":{},"改":{"docs":{},"后":{"docs":{},"，":{"docs":{},"总":{"docs":{},"是":{"docs":{},"会":{"docs":{},"被":{"docs":{},"写":{"docs":{},"回":{"docs":{},"到":{"docs":{},"主":{"docs":{},"存":{"docs":{},"中":{"docs":{},"去":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"做":{"docs":{},"对":{"docs":{},"象":{"docs":{},"所":{"docs":{},"属":{"docs":{},"关":{"docs":{},"系":{"docs":{},"判":{"docs":{},"定":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"；":{"docs":{},"读":{"docs":{},"取":{"docs":{},"或":{"docs":{},"设":{"docs":{},"置":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"字":{"docs":{},"段":{"docs":{},"（":{"docs":{},"被":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}},"词":{"docs":{},"：":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"、":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"、":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"、":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"、":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"、":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"、":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"、":{"docs":{},"i":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},"、":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"、":{"docs":{},"路":{"docs":{},"由":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"、":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"、":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}}}}}}}}},"d":{"docs":{},"p":{"docs":{},"、":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"、":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"、":{"docs":{},"拥":{"docs":{},"塞":{"docs":{},"控":{"docs":{},"制":{"docs":{},"、":{"docs":{},"三":{"docs":{},"次":{"docs":{},"握":{"docs":{},"手":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"、":{"docs":{},"d":{"docs":{},"n":{"docs":{},"s":{"docs":{},"、":{"docs":{},"f":{"docs":{},"t":{"docs":{},"p":{"docs":{},"、":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"、":{"docs":{},"d":{"docs":{},"h":{"docs":{},"c":{"docs":{},"p":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}},"点":{"docs":{},"对":{"docs":{},"点":{"docs":{},"信":{"docs":{},"道":{"docs":{},"、":{"docs":{},"广":{"docs":{},"播":{"docs":{},"信":{"docs":{},"道":{"docs":{},"、":{"docs":{},"p":{"docs":{},"p":{"docs":{},"p":{"docs":{},"、":{"docs":{},"c":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"/":{"docs":{},"c":{"docs":{},"d":{"docs":{},"、":{"docs":{},"局":{"docs":{},"域":{"docs":{},"网":{"docs":{},"、":{"docs":{},"以":{"docs":{},"太":{"docs":{},"网":{"docs":{},"、":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"、":{"docs":{},"适":{"docs":{},"配":{"docs":{},"器":{"docs":{},"、":{"docs":{},"集":{"docs":{},"线":{"docs":{},"器":{"docs":{},"、":{"docs":{},"网":{"docs":{},"桥":{"docs":{},"、":{"docs":{},"交":{"docs":{},"换":{"docs":{},"机":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"制":{"docs":{},"、":{"docs":{},"解":{"docs":{},"调":{"docs":{},"、":{"docs":{},"数":{"docs":{},"字":{"docs":{},"信":{"docs":{},"号":{"docs":{},"、":{"docs":{},"模":{"docs":{},"拟":{"docs":{},"信":{"docs":{},"号":{"docs":{},"、":{"docs":{},"通":{"docs":{},"信":{"docs":{},"媒":{"docs":{},"介":{"docs":{},"、":{"docs":{},"信":{"docs":{},"道":{"docs":{},"复":{"docs":{},"用":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"闭":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804}},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}},"流":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}},"输":{"docs":{},"入":{"docs":{},"流":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},"出":{"docs":{},"流":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"于":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"插":{"docs":{},"件":{"docs":{},"，":{"docs":{},"读":{"docs":{},"者":{"docs":{},"可":{"docs":{},"以":{"docs":{},"参":{"docs":{},"考":{"docs":{},"插":{"docs":{},"件":{"docs":{},"网":{"docs":{},"站":{"docs":{},"。":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}}}},"具":{"docs":{},"体":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"在":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"语":{"docs":{},"言":{"docs":{},"中":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"主":{"docs":{},"要":{"docs":{},"有":{"4":{"docs":{},"种":{"docs":{},"使":{"docs":{},"用":{"docs":{},"情":{"docs":{},"况":{"docs":{},"：":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"成":{"docs":{},"员":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"和":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}}}}},"有":{"docs":{},"较":{"docs":{},"好":{"docs":{},"的":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"和":{"docs":{},"健":{"docs":{},"壮":{"docs":{},"性":{"docs":{},"。":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"是":{"docs":{},"指":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"运":{"docs":{},"行":{"docs":{},"环":{"docs":{},"境":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"程":{"docs":{},"序":{"docs":{},"访":{"docs":{},"问":{"docs":{},"当":{"docs":{},"前":{"docs":{},"浏":{"docs":{},"览":{"docs":{},"器":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"以":{"docs":{},"外":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"。":{"docs":{},"健":{"docs":{},"壮":{"docs":{},"性":{"docs":{},"是":{"docs":{},"指":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"提":{"docs":{},"供":{"docs":{},"很":{"docs":{},"多":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"检":{"docs":{},"查":{"docs":{},"和":{"docs":{},"异":{"docs":{},"常":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"特":{"docs":{},"性":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"保":{"docs":{},"存":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"都":{"docs":{},"会":{"docs":{},"被":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"没":{"docs":{},"必":{"docs":{},"要":{"docs":{},"全":{"docs":{},"部":{"docs":{},"进":{"docs":{},"行":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"。":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"四":{"docs":{},"种":{"docs":{},"强":{"docs":{},"度":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"备":{"docs":{},"如":{"docs":{},"下":{"docs":{},"特":{"docs":{},"点":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"重":{"docs":{},"载":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}},"库":{"docs":{},"直":{"docs":{},"接":{"docs":{},"分":{"docs":{},"配":{"docs":{},"堆":{"docs":{},"外":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"个":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}},"去":{"docs":{},"除":{"docs":{},"了":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"语":{"docs":{},"言":{"docs":{},"中":{"docs":{},"难":{"docs":{},"易":{"docs":{},"理":{"docs":{},"解":{"docs":{},"，":{"docs":{},"容":{"docs":{},"易":{"docs":{},"混":{"docs":{},"淆":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"头":{"docs":{},"文":{"docs":{},"件":{"docs":{},"，":{"docs":{},"指":{"docs":{},"针":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"做":{"docs":{},"了":{"docs":{},"。":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"异":{"docs":{},"或":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"既":{"docs":{},"减":{"docs":{},"少":{"docs":{},"了":{"docs":{},"系":{"docs":{},"统":{"docs":{},"的":{"docs":{},"开":{"docs":{},"销":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"的":{"docs":{},"因":{"docs":{},"为":{"docs":{},"高":{"docs":{},"位":{"docs":{},"没":{"docs":{},"有":{"docs":{},"参":{"docs":{},"与":{"docs":{},"下":{"docs":{},"标":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"处":{"docs":{},"理":{"docs":{},"已":{"docs":{},"经":{"docs":{},"读":{"docs":{},"取":{"docs":{},"完":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{},"。":{"docs":{},"其":{"docs":{},"结":{"docs":{},"果":{"docs":{},"就":{"docs":{},"是":{"docs":{},"，":{"docs":{},"磁":{"docs":{},"盘":{"docs":{},"总":{"docs":{},"是":{"docs":{},"在":{"docs":{},"繁":{"docs":{},"忙":{"docs":{},"地":{"docs":{},"读":{"docs":{},"取":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{},"到":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"。":{"docs":{},"这":{"docs":{},"会":{"docs":{},"带":{"docs":{},"来":{"docs":{},"磁":{"docs":{},"盘":{"docs":{},"和":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"反":{"docs":{},"之":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"一":{"docs":{},"等":{"docs":{},"能":{"docs":{},"推":{"docs":{},"出":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"也":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"而":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"则":{"docs":{},"可":{"docs":{},"能":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"则":{"docs":{},"先":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},"是":{"docs":{},"将":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}},"（":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"）":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"指":{"docs":{},"定":{"docs":{},"或":{"docs":{},"者":{"docs":{},"是":{"2":{"docs":{},"的":{"docs":{},"倍":{"docs":{},"数":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}},"docs":{}}}}}},"以":{"docs":{},"把":{"docs":{},"数":{"docs":{},"组":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0025210084033613447},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.00528169014084507}}},"锁":{"docs":{},"更":{"docs":{},"公":{"docs":{},"平":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"响":{"docs":{},"应":{"docs":{},"中":{"docs":{},"断":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"线":{"docs":{},"程":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"并":{"docs":{},"在":{"docs":{},"无":{"docs":{},"法":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"立":{"docs":{},"即":{"docs":{},"返":{"docs":{},"回":{"docs":{},"或":{"docs":{},"者":{"docs":{},"等":{"docs":{},"待":{"docs":{},"一":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"，":{"docs":{},"以":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"获":{"docs":{},"取":{"docs":{},"和":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"更":{"docs":{},"多":{"docs":{},"关":{"docs":{},"于":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"指":{"docs":{},"定":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"集":{"docs":{},"合":{"docs":{},"来":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"将":{"docs":{},"此":{"docs":{},"集":{"docs":{},"合":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"期":{"docs":{},"间":{"docs":{},"就":{"docs":{},"先":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"视":{"docs":{},"为":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}},"看":{"docs":{},"到":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"大":{"docs":{},"概":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"就":{"docs":{},"是":{"docs":{},"：":{"docs":{},"高":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}},"认":{"docs":{},"为":{"docs":{},"是":{"docs":{},"随":{"docs":{},"机":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"直":{"docs":{},"接":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"用":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"于":{"docs":{},"方":{"docs":{},"便":{"docs":{},"的":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"资":{"docs":{},"源":{"docs":{},"池":{"docs":{},"，":{"docs":{},"如":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"连":{"docs":{},"接":{"docs":{},"池":{"docs":{},"。":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}},"将":{"docs":{},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"种":{"docs":{},"容":{"docs":{},"器":{"docs":{},"变":{"docs":{},"成":{"docs":{},"有":{"docs":{},"界":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"容":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}},"博":{"docs":{},"客":{"docs":{},"园":{"docs":{},"的":{"docs":{},"此":{"docs":{},"编":{"docs":{},"辑":{"docs":{},"器":{"docs":{},"，":{"docs":{},"添":{"docs":{},"加":{"docs":{},"图":{"docs":{},"片":{"docs":{},"后":{"docs":{},"发":{"docs":{},"布":{"docs":{},"出":{"docs":{},"来":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"编":{"docs":{},"辑":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"到":{"docs":{},"图":{"docs":{},"片":{"docs":{},"的":{"docs":{},"链":{"docs":{},"接":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{},"本":{"docs":{},"地":{"docs":{},"编":{"docs":{},"辑":{"docs":{},"器":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"直":{"docs":{},"接":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"对":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"和":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"一":{"docs":{},"起":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"从":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}},"设":{"docs":{},"置":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"超":{"docs":{},"时":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"避":{"docs":{},"免":{"docs":{},"一":{"docs":{},"致":{"docs":{},"等":{"docs":{},"待":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}},"选":{"docs":{},"择":{"docs":{},"以":{"docs":{},"下":{"docs":{},"几":{"docs":{},"个":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"或":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"两":{"docs":{},"种":{"docs":{},"模":{"docs":{},"式":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.015748031496062992},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"保":{"docs":{},"证":{"docs":{},"在":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"执":{"docs":{},"行":{"docs":{},"某":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"者":{"docs":{},"某":{"docs":{},"个":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"通":{"docs":{},"信":{"docs":{},"。":{"docs":{},"把":{"docs":{},"这":{"docs":{},"些":{"docs":{},"特":{"docs":{},"性":{"docs":{},"整":{"docs":{},"合":{"docs":{},"在":{"docs":{},"一":{"docs":{},"起":{"docs":{},"，":{"docs":{},"就":{"docs":{},"形":{"docs":{},"成":{"docs":{},"了":{"docs":{},"整":{"docs":{},"个":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}},"作":{"docs":{},"为":{"docs":{},"互":{"docs":{},"拆":{"docs":{},"锁":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}},"响":{"docs":{},"应":{"docs":{},"中":{"docs":{},"断":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"手":{"docs":{},"动":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"（":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}},"被":{"docs":{},"重":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}},"确":{"docs":{},"认":{"docs":{},"是":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"成":{"docs":{},"立":{"docs":{},"的":{"docs":{},"话":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"会":{"docs":{},"查":{"docs":{},"看":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}},"完":{"docs":{},"成":{"docs":{},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"并":{"docs":{},"对":{"docs":{},"数":{"docs":{},"据":{"docs":{},"进":{"docs":{},"行":{"docs":{},"验":{"docs":{},"证":{"docs":{},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"进":{"docs":{},"行":{"docs":{},"通":{"docs":{},"信":{"docs":{},"。":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}},"将":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},"能":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}},"做":{"docs":{},"一":{"docs":{},"些":{"docs":{},"事":{"docs":{},"情":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"造":{"docs":{},"成":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"几":{"docs":{},"个":{"docs":{},"取":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}},"出":{"docs":{},"现":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"运":{"docs":{},"行":{"docs":{},"（":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"）":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}},"见":{"docs":{},"性":{"docs":{},"的":{"docs":{},"意":{"docs":{},"思":{"docs":{},"是":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"修":{"docs":{},"改":{"docs":{},"一":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"时":{"docs":{},"，":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"能":{"docs":{},"读":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"入":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"又":{"docs":{},"名":{"docs":{},"递":{"docs":{},"归":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"是":{"docs":{},"指":{"docs":{},"在":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"外":{"docs":{},"层":{"docs":{},"方":{"docs":{},"法":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"在":{"docs":{},"进":{"docs":{},"入":{"docs":{},"内":{"docs":{},"层":{"docs":{},"方":{"docs":{},"法":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"达":{"docs":{},"性":{"docs":{},"分":{"docs":{},"析":{"docs":{},"算":{"docs":{},"法":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0025210084033613447}}}}}}}},"预":{"docs":{},"测":{"docs":{},"的":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"：":{"docs":{},"能":{"docs":{},"让":{"docs":{},"使":{"docs":{},"用":{"docs":{},"者":{"docs":{},"明":{"docs":{},"确":{"docs":{},"指":{"docs":{},"定":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"常":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"存":{"docs":{},"在":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"类":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}},"靠":{"docs":{},"是":{"docs":{},"指":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},"的":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}},"因":{"docs":{},"为":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"类":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"继":{"docs":{},"承":{"docs":{},"于":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"类":{"docs":{},"，":{"docs":{},"其":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"码":{"docs":{},"为":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"地":{"docs":{},"址":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"即":{"docs":{},"便":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"含":{"docs":{},"义":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"比":{"docs":{},"较":{"docs":{},"也":{"docs":{},"是":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"。":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"是":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"先":{"docs":{},"求":{"docs":{},"出":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"比":{"docs":{},"较":{"docs":{},"其":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"若":{"docs":{},"相":{"docs":{},"等":{"docs":{},"再":{"docs":{},"比":{"docs":{},"较":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"若":{"docs":{},"相":{"docs":{},"等":{"docs":{},"则":{"docs":{},"认":{"docs":{},"为":{"docs":{},"他":{"docs":{},"们":{"docs":{},"是":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"。":{"docs":{},"若":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"则":{"docs":{},"认":{"docs":{},"为":{"docs":{},"他":{"docs":{},"们":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"只":{"docs":{},"重":{"docs":{},"写":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"不":{"docs":{},"重":{"docs":{},"写":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"当":{"docs":{},"比":{"docs":{},"较":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"时":{"docs":{},"只":{"docs":{},"是":{"docs":{},"看":{"docs":{},"他":{"docs":{},"们":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"同":{"docs":{},"一":{"docs":{},"对":{"docs":{},"象":{"docs":{},"（":{"docs":{},"即":{"docs":{},"进":{"docs":{},"行":{"docs":{},"内":{"docs":{},"存":{"docs":{},"地":{"docs":{},"址":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"）":{"docs":{},",":{"docs":{},"所":{"docs":{},"以":{"docs":{},"必":{"docs":{},"定":{"docs":{},"要":{"docs":{},"两":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"一":{"docs":{},"起":{"docs":{},"重":{"docs":{},"写":{"docs":{},"。":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"用":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"是":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"判":{"docs":{},"断":{"docs":{},"加":{"docs":{},"入":{"docs":{},"元":{"docs":{},"素":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"d":{"docs":{},"k":{"1":{"docs":{},".":{"7":{"docs":{},"是":{"docs":{},"用":{"docs":{},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"进":{"docs":{},"行":{"docs":{},"的":{"docs":{},"纵":{"docs":{},"向":{"docs":{},"延":{"docs":{},"伸":{"docs":{},"，":{"docs":{},"当":{"docs":{},"采":{"docs":{},"用":{"docs":{},"头":{"docs":{},"插":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"能":{"docs":{},"够":{"docs":{},"提":{"docs":{},"高":{"docs":{},"插":{"docs":{},"入":{"docs":{},"的":{"docs":{},"效":{"docs":{},"率":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"也":{"docs":{},"会":{"docs":{},"容":{"docs":{},"易":{"docs":{},"出":{"docs":{},"现":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"且":{"docs":{},"环":{"docs":{},"形":{"docs":{},"链":{"docs":{},"表":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"1":{"docs":{},".":{"8":{"docs":{},"之":{"docs":{},"后":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"加":{"docs":{},"入":{"docs":{},"了":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"尾":{"docs":{},"插":{"docs":{},"法":{"docs":{},"能":{"docs":{},"够":{"docs":{},"避":{"docs":{},"免":{"docs":{},"出":{"docs":{},"现":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"且":{"docs":{},"链":{"docs":{},"表":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}},"它":{"docs":{},"不":{"docs":{},"会":{"docs":{},"锁":{"docs":{},"住":{"docs":{},"整":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"（":{"docs":{},"当":{"docs":{},"然":{"docs":{},"你":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"它":{"docs":{},"锁":{"docs":{},"住":{"docs":{},"整":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"）":{"docs":{},"。":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"会":{"docs":{},"锁":{"docs":{},"住":{"docs":{},"整":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"哪":{"docs":{},"怕":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"中":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"不":{"docs":{},"相":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"，":{"docs":{},"这":{"docs":{},"通":{"docs":{},"常":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"他":{"docs":{},"们":{"docs":{},"停":{"docs":{},"止":{"docs":{},"执":{"docs":{},"行":{"docs":{},"并":{"docs":{},"需":{"docs":{},"要":{"docs":{},"等":{"docs":{},"待":{"docs":{},"获":{"docs":{},"得":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"区":{"docs":{},"主":{"docs":{},"要":{"docs":{},"存":{"docs":{},"放":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"而":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"回":{"docs":{},"收":{"docs":{},"率":{"docs":{},"比":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"差":{"docs":{},"很":{"docs":{},"多":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"在":{"docs":{},"方":{"docs":{},"法":{"docs":{},"区":{"docs":{},"上":{"docs":{},"进":{"docs":{},"行":{"docs":{},"回":{"docs":{},"收":{"docs":{},"性":{"docs":{},"价":{"docs":{},"比":{"docs":{},"不":{"docs":{},"高":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"无":{"docs":{},"法":{"docs":{},"把":{"docs":{},"数":{"docs":{},"据":{"docs":{},"行":{"docs":{},"存":{"docs":{},"放":{"docs":{},"在":{"docs":{},"两":{"docs":{},"个":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"一":{"docs":{},"个":{"docs":{},"表":{"docs":{},"只":{"docs":{},"能":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"聚":{"docs":{},"簇":{"docs":{},"索":{"docs":{},"引":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"此":{"docs":{},"元":{"docs":{},"素":{"docs":{},"在":{"docs":{},"重":{"docs":{},"新":{"docs":{},"计":{"docs":{},"算":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"在":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"扩":{"docs":{},"充":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"设":{"docs":{},"计":{"docs":{},"者":{"docs":{},"想":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顾":{"docs":{},"全":{"docs":{},"大":{"docs":{},"局":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"(":{"docs":{},"综":{"docs":{},"合":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"了":{"docs":{},"速":{"docs":{},"度":{"docs":{},"、":{"docs":{},"作":{"docs":{},"用":{"docs":{},"、":{"docs":{},"质":{"docs":{},"量":{"docs":{},")":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"把":{"docs":{},"高":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"则":{"docs":{},"通":{"docs":{},"过":{"docs":{},"如":{"docs":{},"下":{"docs":{},"方":{"docs":{},"式":{"docs":{},"获":{"docs":{},"得":{"docs":{},"：":{"docs":{},"元":{"docs":{},"素":{"docs":{},"总":{"docs":{},"数":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"你":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"设":{"docs":{},"置":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"“":{"docs":{},"合":{"docs":{},"适":{"docs":{},"”":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"了":{"docs":{},"保":{"docs":{},"证":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"方":{"docs":{},"法":{"docs":{},"调":{"docs":{},"用":{"docs":{},"端":{"docs":{},"做":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"措":{"docs":{},"施":{"docs":{},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"被":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"在":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0032822757111597373},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"语":{"docs":{},"言":{"docs":{},"中":{"docs":{},"，":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}},"基":{"docs":{},"本":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"在":{"docs":{},"床":{"docs":{},"底":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"都":{"docs":{},"是":{"docs":{},"按":{"docs":{},"值":{"docs":{},"传":{"docs":{},"递":{"docs":{},"，":{"docs":{},"而":{"docs":{},"包":{"docs":{},"装":{"docs":{},"类":{"docs":{},"型":{"docs":{},"在":{"docs":{},"传":{"docs":{},"递":{"docs":{},"参":{"docs":{},"数":{"docs":{},"时":{"docs":{},"是":{"docs":{},"按":{"docs":{},"引":{"docs":{},"用":{"docs":{},"传":{"docs":{},"递":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"包":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"变":{"docs":{},"量":{"docs":{},"类":{"docs":{},"就":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"乐":{"docs":{},"观":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"实":{"docs":{},"现":{"docs":{},"方":{"docs":{},"式":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"k":{"1":{"docs":{},".":{"7":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"机":{"docs":{},"制":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"其":{"docs":{},"最":{"docs":{},"大":{"docs":{},"并":{"docs":{},"发":{"docs":{},"度":{"docs":{},"受":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"限":{"docs":{},"制":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"在":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"1":{"docs":{},".":{"8":{"docs":{},"中":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"理":{"docs":{},"摒":{"docs":{},"弃":{"docs":{},"了":{"docs":{},"这":{"docs":{},"种":{"docs":{},"设":{"docs":{},"计":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"选":{"docs":{},"择":{"docs":{},"了":{"docs":{},"与":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"类":{"docs":{},"似":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"+":{"docs":{},"链":{"docs":{},"表":{"docs":{},"+":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"而":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"则":{"docs":{},"采":{"docs":{},"用":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"和":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"8":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"直":{"docs":{},"接":{"docs":{},"用":{"docs":{},"了":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"1":{"docs":{},".":{"7":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"计":{"docs":{},"算":{"docs":{},"的":{"docs":{},"规":{"docs":{},"律":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"前":{"docs":{},"的":{"docs":{},"原":{"docs":{},"始":{"docs":{},"位":{"docs":{},"置":{"docs":{},"+":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"值":{"docs":{},"=":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"1":{"docs":{},".":{"8":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"再":{"docs":{},"是":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"1":{"docs":{},".":{"7":{"docs":{},"的":{"docs":{},"那":{"docs":{},"种":{"docs":{},"与":{"docs":{},"计":{"docs":{},"算":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"就":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"的":{"docs":{},"新":{"docs":{},"增":{"docs":{},"参":{"docs":{},"与":{"docs":{},"运":{"docs":{},"算":{"docs":{},"的":{"docs":{},"位":{"docs":{},"是":{"0":{"docs":{},"还":{"docs":{},"是":{"1":{"docs":{},"就":{"docs":{},"直":{"docs":{},"接":{"docs":{},"迅":{"docs":{},"速":{"docs":{},"计":{"docs":{},"算":{"docs":{},"出":{"docs":{},"了":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"后":{"docs":{},"的":{"docs":{},"储":{"docs":{},"存":{"docs":{},"方":{"docs":{},"式":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}},"docs":{}}},"docs":{}}}},"方":{"docs":{},"法":{"docs":{},"调":{"docs":{},"用":{"docs":{},"中":{"docs":{},"，":{"docs":{},"实":{"docs":{},"参":{"docs":{},"会":{"docs":{},"把":{"docs":{},"它":{"docs":{},"的":{"docs":{},"值":{"docs":{},"传":{"docs":{},"递":{"docs":{},"给":{"docs":{},"形":{"docs":{},"参":{"docs":{},"，":{"docs":{},"形":{"docs":{},"参":{"docs":{},"只":{"docs":{},"是":{"docs":{},"用":{"docs":{},"实":{"docs":{},"参":{"docs":{},"的":{"docs":{},"值":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"一":{"docs":{},"个":{"docs":{},"临":{"docs":{},"时":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"单":{"docs":{},"元":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"形":{"docs":{},"参":{"docs":{},"与":{"docs":{},"实":{"docs":{},"参":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"有":{"docs":{},"着":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"却":{"docs":{},"有":{"docs":{},"着":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"单":{"docs":{},"元":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"对":{"docs":{},"形":{"docs":{},"参":{"docs":{},"的":{"docs":{},"改":{"docs":{},"变":{"docs":{},"不":{"docs":{},"会":{"docs":{},"影":{"docs":{},"响":{"docs":{},"实":{"docs":{},"参":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"方":{"docs":{},"面":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},",":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}},"里":{"docs":{},"简":{"docs":{},"单":{"docs":{},"解":{"docs":{},"释":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"理":{"docs":{},"想":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"在":{"docs":{},"随":{"docs":{},"机":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"代":{"docs":{},"码":{"docs":{},"下":{"docs":{},"，":{"docs":{},"桶":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"频":{"docs":{},"率":{"docs":{},"遵":{"docs":{},"循":{"docs":{},"泊":{"docs":{},"松":{"docs":{},"分":{"docs":{},"布":{"docs":{},"，":{"docs":{},"文":{"docs":{},"中":{"docs":{},"给":{"docs":{},"出":{"docs":{},"了":{"docs":{},"桶":{"docs":{},"长":{"docs":{},"度":{"docs":{},"k":{"docs":{},"的":{"docs":{},"频":{"docs":{},"率":{"docs":{},"表":{"docs":{},"。":{"docs":{},"由":{"docs":{},"频":{"docs":{},"率":{"docs":{},"表":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"，":{"docs":{},"桶":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"超":{"docs":{},"过":{"8":{"docs":{},"的":{"docs":{},"概":{"docs":{},"率":{"docs":{},"非":{"docs":{},"常":{"docs":{},"非":{"docs":{},"常":{"docs":{},"小":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"作":{"docs":{},"者":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"根":{"docs":{},"据":{"docs":{},"概":{"docs":{},"率":{"docs":{},"统":{"docs":{},"计":{"docs":{},"而":{"docs":{},"选":{"docs":{},"择":{"docs":{},"了":{"8":{"docs":{},"作":{"docs":{},"为":{"docs":{},"阀":{"docs":{},"值":{"docs":{},"，":{"docs":{},"由":{"docs":{},"此":{"docs":{},"可":{"docs":{},"见":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"选":{"docs":{},"择":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"严":{"docs":{},"谨":{"docs":{},"和":{"docs":{},"科":{"docs":{},"学":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"采":{"docs":{},"用":{"docs":{},"了":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}},"任":{"docs":{},"意":{"docs":{},"位":{"docs":{},"置":{"docs":{},"添":{"docs":{},"加":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"更":{"docs":{},"快":{"docs":{},"；":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"同":{"docs":{},"时":{"docs":{},"允":{"docs":{},"许":{"docs":{},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"大":{"docs":{},"大":{"docs":{},"提":{"docs":{},"高":{"docs":{},"了":{"docs":{},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"很":{"docs":{},"适":{"docs":{},"合":{"docs":{},"读":{"docs":{},"多":{"docs":{},"写":{"docs":{},"少":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"或":{"docs":{},"者":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"等":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"比":{"docs":{},"较":{"docs":{},"操":{"docs":{},"作":{"docs":{},"前":{"docs":{},"后":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"执":{"docs":{},"行":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}},"树":{"docs":{},"中":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"理":{"docs":{},"解":{"docs":{},"了":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"设":{"docs":{},"计":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"置":{"docs":{},"完":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"我":{"docs":{},"们":{"docs":{},"说":{"docs":{},"过":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"的":{"docs":{},"值":{"docs":{},"等":{"docs":{},"于":{"3":{"2":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"下":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},",":{"docs":{},"产":{"docs":{},"生":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"碰":{"docs":{},"撞":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"写":{"docs":{},"入":{"docs":{},"操":{"docs":{},"作":{"docs":{},"会":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"先":{"docs":{},"前":{"docs":{},"的":{"docs":{},"写":{"docs":{},"入":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"，":{"docs":{},"什":{"docs":{},"么":{"docs":{},"是":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}}}}}}}}}}}}}},"扩":{"docs":{},"容":{"docs":{},"后":{"docs":{},"插":{"docs":{},"入":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"次":{"docs":{},"序":{"docs":{},"会":{"docs":{},"反":{"docs":{},"过":{"docs":{},"来":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"新":{"docs":{},"的":{"docs":{},"b":{"docs":{},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"并":{"docs":{},"不":{"docs":{},"会":{"docs":{},"将":{"docs":{},"元":{"docs":{},"素":{"docs":{},"放":{"docs":{},"在":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"放":{"docs":{},"在":{"docs":{},"头":{"docs":{},"部":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"避":{"docs":{},"免":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"共":{"docs":{},"享":{"docs":{},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{},"中":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"显":{"docs":{},"示":{"docs":{},"指":{"docs":{},"定":{"docs":{},"某":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"某":{"docs":{},"段":{"docs":{},"代":{"docs":{},"码":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"互":{"docs":{},"斥":{"docs":{},"地":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"消":{"docs":{},"息":{"docs":{},"传":{"docs":{},"递":{"docs":{},"模":{"docs":{},"型":{"docs":{},"中":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"发":{"docs":{},"送":{"docs":{},"消":{"docs":{},"息":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"接":{"docs":{},"收":{"docs":{},"消":{"docs":{},"息":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"同":{"docs":{},"步":{"docs":{},"是":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"进":{"docs":{},"行":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"机":{"docs":{},"内":{"docs":{},"存":{"docs":{},"(":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},")":{"docs":{},"中":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"方":{"docs":{},"式":{"docs":{},"。":{"docs":{},"j":{"docs":{},"m":{"docs":{},"m":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}},"单":{"docs":{},"个":{"docs":{},"进":{"docs":{},"程":{"docs":{},"中":{"docs":{},"运":{"docs":{},"行":{"docs":{},"，":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"想":{"docs":{},"编":{"docs":{},"写":{"docs":{},"程":{"docs":{},"序":{"docs":{},"手":{"docs":{},"动":{"docs":{},"处":{"docs":{},"理":{"docs":{},"上":{"docs":{},"面":{"docs":{},"所":{"docs":{},"提":{"docs":{},"到":{"docs":{},"的":{"docs":{},"读":{"docs":{},"取":{"docs":{},"和":{"docs":{},"处":{"docs":{},"理":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"你":{"docs":{},"必":{"docs":{},"须":{"docs":{},"记":{"docs":{},"录":{"docs":{},"每":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"读":{"docs":{},"取":{"docs":{},"和":{"docs":{},"处":{"docs":{},"理":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"相":{"docs":{},"反":{"docs":{},"，":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"启":{"docs":{},"动":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"处":{"docs":{},"理":{"docs":{},"一":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"读":{"docs":{},"取":{"docs":{},"和":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"线":{"docs":{},"程":{"docs":{},"会":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"磁":{"docs":{},"盘":{"docs":{},"读":{"docs":{},"取":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"。":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"能":{"docs":{},"够":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"里":{"docs":{},"实":{"docs":{},"现":{"docs":{},"多":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"调":{"docs":{},"度":{"docs":{},"，":{"docs":{},"并":{"docs":{},"在":{"docs":{},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{},"里":{"docs":{},"维":{"docs":{},"持":{"docs":{},"多":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"间":{"docs":{},"的":{"docs":{},"切":{"docs":{},"换":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"一":{"docs":{},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"运":{"docs":{},"行":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"本":{"docs":{},"身":{"docs":{},"不":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"问":{"docs":{},"题":{"docs":{},"在":{"docs":{},"于":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"了":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"资":{"docs":{},"源":{"docs":{},"。":{"docs":{},"如":{"docs":{},"：":{"docs":{},"同":{"docs":{},"一":{"docs":{},"内":{"docs":{},"存":{"docs":{},"区":{"docs":{},"（":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"或":{"docs":{},"对":{"docs":{},"象":{"docs":{},"）":{"docs":{},"、":{"docs":{},"系":{"docs":{},"统":{"docs":{},"（":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"，":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"将":{"docs":{},"代":{"docs":{},"码":{"docs":{},"执":{"docs":{},"行":{"docs":{},"速":{"docs":{},"度":{"docs":{},"加":{"docs":{},"快":{"docs":{},"的":{"docs":{},"原":{"docs":{},"则":{"docs":{},"是":{"docs":{},"将":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"串":{"docs":{},"行":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"变":{"docs":{},"成":{"docs":{},"并":{"docs":{},"发":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"将":{"docs":{},"某":{"docs":{},"段":{"docs":{},"串":{"docs":{},"行":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"并":{"docs":{},"发":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"受":{"docs":{},"限":{"docs":{},"于":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"在":{"docs":{},"串":{"docs":{},"行":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"程":{"docs":{},"序":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"不":{"docs":{},"会":{"docs":{},"加":{"docs":{},"快":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"反":{"docs":{},"而":{"docs":{},"会":{"docs":{},"更":{"docs":{},"慢":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{},"和":{"docs":{},"资":{"docs":{},"源":{"docs":{},"调":{"docs":{},"度":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"迭":{"docs":{},"代":{"docs":{},"访":{"docs":{},"问":{"docs":{},"时":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}}}}}}}}}},"行":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"算":{"docs":{},"法":{"docs":{},"中":{"docs":{},"非":{"docs":{},"常":{"docs":{},"有":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}},"资":{"docs":{},"源":{"docs":{},"限":{"docs":{},"制":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"进":{"docs":{},"行":{"docs":{},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"资":{"docs":{},"源":{"docs":{},"限":{"docs":{},"制":{"docs":{},"调":{"docs":{},"整":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"度":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"保":{"docs":{},"存":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"副":{"docs":{},"本":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"里":{"docs":{},"面":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"副":{"docs":{},"本":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"线":{"docs":{},"程":{"docs":{},"操":{"docs":{},"作":{"docs":{},"中":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}},"无":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"但":{"docs":{},"要":{"docs":{},"明":{"docs":{},"确":{"docs":{},"应":{"docs":{},"用":{"docs":{},"场":{"docs":{},"合":{"docs":{},"，":{"docs":{},"非":{"docs":{},"常":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"且":{"docs":{},"又":{"docs":{},"不":{"docs":{},"想":{"docs":{},"引":{"docs":{},"入":{"docs":{},"锁":{"docs":{},"可":{"docs":{},"以":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"上":{"docs":{},"执":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"速":{"docs":{},"度":{"docs":{},"远":{"docs":{},"大":{"docs":{},"于":{"docs":{},"在":{"docs":{},"主":{"docs":{},"存":{"docs":{},"上":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"速":{"docs":{},"度":{"docs":{},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.010869565217391304}}}},"某":{"docs":{},"一":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"运":{"docs":{},"行":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"是":{"docs":{},"没":{"docs":{},"有":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"。":{"docs":{},"这":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"的":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"部":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"存":{"docs":{},"中":{"docs":{},"生":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"代":{"docs":{},"表":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}},"超":{"docs":{},"时":{"docs":{},"时":{"docs":{},"间":{"docs":{},"内":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"成":{"docs":{},"功":{"docs":{},"获":{"docs":{},"取":{"docs":{},"了":{"docs":{},"锁":{"docs":{},"；":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}},"前":{"docs":{},"面":{"docs":{},"我":{"docs":{},"们":{"docs":{},"多":{"docs":{},"次":{"docs":{},"提":{"docs":{},"到":{"docs":{},"了":{"docs":{},"任":{"docs":{},"务":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"即":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"际":{"docs":{},"中":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"创":{"docs":{},"建":{"docs":{},"之":{"docs":{},"后":{"docs":{},"立":{"docs":{},"即":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"以":{"docs":{},"下":{"docs":{},"两":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"办":{"docs":{},"到":{"docs":{},"：":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"中":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"往":{"docs":{},"往":{"docs":{},"不":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}},"之":{"docs":{},"前":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"标":{"docs":{},"记":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"会":{"docs":{},"被":{"docs":{},"就":{"docs":{},"地":{"docs":{},"释":{"docs":{},"放":{"docs":{},"。":{"docs":{},"不":{"docs":{},"进":{"docs":{},"行":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"发":{"docs":{},"生":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"后":{"docs":{},"台":{"docs":{},"运":{"docs":{},"算":{"docs":{},"而":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"太":{"docs":{},"多":{"docs":{},"交":{"docs":{},"互":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}}}}}}}}}}}}}}},"大":{"docs":{},"量":{"docs":{},"使":{"docs":{},"用":{"docs":{},"反":{"docs":{},"射":{"docs":{},"、":{"docs":{},"动":{"docs":{},"态":{"docs":{},"代":{"docs":{},"理":{"docs":{},"、":{"docs":{},"c":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"耗":{"docs":{},"时":{"docs":{},"最":{"docs":{},"长":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"标":{"docs":{},"记":{"docs":{},"和":{"docs":{},"并":{"docs":{},"发":{"docs":{},"清":{"docs":{},"除":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"与":{"docs":{},"用":{"docs":{},"户":{"docs":{},"线":{"docs":{},"程":{"docs":{},"一":{"docs":{},"起":{"docs":{},"工":{"docs":{},"作":{"docs":{},"，":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"注":{"docs":{},"重":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"以":{"docs":{},"及":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"准":{"docs":{},"备":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"，":{"docs":{},"类":{"docs":{},"变":{"docs":{},"量":{"docs":{},"已":{"docs":{},"经":{"docs":{},"赋":{"docs":{},"过":{"docs":{},"一":{"docs":{},"次":{"docs":{},"系":{"docs":{},"统":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"，":{"docs":{},"而":{"docs":{},"在":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"通":{"docs":{},"过":{"docs":{},"程":{"docs":{},"序":{"docs":{},"制":{"docs":{},"定":{"docs":{},"的":{"docs":{},"主":{"docs":{},"观":{"docs":{},"计":{"docs":{},"划":{"docs":{},"去":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"类":{"docs":{},"变":{"docs":{},"量":{"docs":{},"和":{"docs":{},"其":{"docs":{},"它":{"docs":{},"资":{"docs":{},"源":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"章":{"docs":{},"节":{"docs":{},"中":{"docs":{},"，":{"docs":{},"你":{"docs":{},"将":{"docs":{},"会":{"docs":{},"看":{"docs":{},"到":{"docs":{},"上":{"docs":{},"述":{"docs":{},"每":{"docs":{},"一":{"docs":{},"步":{"docs":{},"所":{"docs":{},"做":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"工":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}},"主":{"docs":{},"程":{"docs":{},"序":{"docs":{},"运":{"docs":{},"行":{"docs":{},"期":{"docs":{},"间":{"docs":{},"不":{"docs":{},"会":{"docs":{},"对":{"docs":{},"年":{"docs":{},"老":{"docs":{},"区":{"docs":{},"进":{"docs":{},"行":{"docs":{},"清":{"docs":{},"理":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"是":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}},"容":{"docs":{},"器":{"docs":{},"中":{"docs":{},"设":{"docs":{},"置":{"docs":{},"相":{"docs":{},"关":{"docs":{},"参":{"docs":{},"数":{"docs":{},"打":{"docs":{},"印":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"打":{"docs":{},"印":{"docs":{},"的":{"docs":{},"堆":{"docs":{},"栈":{"docs":{},"日":{"docs":{},"志":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"，":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}},"检":{"docs":{},"查":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"被":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"现":{"docs":{},"实":{"docs":{},"应":{"docs":{},"用":{"docs":{},"中":{"docs":{},"，":{"docs":{},"有":{"docs":{},"些":{"docs":{},"时":{"docs":{},"候":{"docs":{},"不":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"默":{"docs":{},"认":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"机":{"docs":{},"制":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"，":{"docs":{},"希":{"docs":{},"望":{"docs":{},"在":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"掉":{"docs":{},"敏":{"docs":{},"感":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"简":{"docs":{},"化":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{},"下":{"docs":{},"面":{"docs":{},"将":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"若":{"docs":{},"干":{"docs":{},"影":{"docs":{},"响":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"网":{"docs":{},"络":{"docs":{},"上":{"docs":{},"传":{"docs":{},"送":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"字":{"docs":{},"节":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}},"事":{"docs":{},"务":{"docs":{},"完":{"docs":{},"成":{"docs":{},"以":{"docs":{},"后":{"docs":{},"，":{"docs":{},"该":{"docs":{},"事":{"docs":{},"务":{"docs":{},"所":{"docs":{},"对":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"做":{"docs":{},"的":{"docs":{},"更":{"docs":{},"改":{"docs":{},"会":{"docs":{},"持":{"docs":{},"久":{"docs":{},"保":{"docs":{},"存":{"docs":{},"在":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"中":{"docs":{},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"回":{"docs":{},"滚":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"和":{"docs":{},"在":{"docs":{},"事":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"成":{"docs":{},"后":{"docs":{},"，":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"的":{"docs":{},"完":{"docs":{},"整":{"docs":{},"性":{"docs":{},"约":{"docs":{},"束":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"破":{"docs":{},"坏":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"根":{"docs":{},"目":{"docs":{},"录":{"docs":{},"(":{"docs":{},"即":{"docs":{},"与":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{},"同":{"docs":{},"级":{"docs":{},"的":{"docs":{},"目":{"docs":{},"录":{"docs":{},")":{"docs":{},"下":{"docs":{},"的":{"docs":{},"配":{"docs":{},"置":{"docs":{},"文":{"docs":{},"件":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"本":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"和":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"与":{"docs":{},"运":{"docs":{},"算":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.010810810810810811}}}}},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"赋":{"docs":{},"具":{"docs":{},"体":{"docs":{},"值":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{},"=":{"docs":{},"=":{"docs":{},"号":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{},"名":{"docs":{},"指":{"docs":{},"向":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}},"在":{"docs":{},"声":{"docs":{},"明":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"就":{"docs":{},"会":{"docs":{},"立":{"docs":{},"即":{"docs":{},"分":{"docs":{},"配":{"docs":{},"给":{"docs":{},"他":{"docs":{},"内":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"存":{"docs":{},"储":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"，":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}},"于":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"支":{"docs":{},"持":{"docs":{},"有":{"docs":{},"序":{"docs":{},"性":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"根":{"docs":{},"据":{"docs":{},"一":{"docs":{},"个":{"docs":{},"范":{"docs":{},"围":{"docs":{},"查":{"docs":{},"找":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"查":{"docs":{},"找":{"docs":{},"效":{"docs":{},"率":{"docs":{},"不":{"docs":{},"如":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"，":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"则":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"动":{"docs":{},"态":{"docs":{},"数":{"docs":{},"组":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"是":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"它":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"访":{"docs":{},"问":{"docs":{},"会":{"docs":{},"非":{"docs":{},"常":{"docs":{},"高":{"docs":{},"效":{"docs":{},"，":{"docs":{},"而":{"docs":{},"随":{"docs":{},"机":{"docs":{},"访":{"docs":{},"问":{"docs":{},"效":{"docs":{},"率":{"docs":{},"比":{"docs":{},"较":{"docs":{},"低":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"；":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}},"链":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"容":{"docs":{},"量":{"docs":{},"限":{"docs":{},"制":{"docs":{},"；":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"存":{"docs":{},"在":{"docs":{},"容":{"docs":{},"量":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"当":{"docs":{},"元":{"docs":{},"素":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{},"最":{"docs":{},"大":{"docs":{},"容":{"docs":{},"量":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"；":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}},"进":{"docs":{},"入":{"docs":{},"和":{"docs":{},"退":{"docs":{},"出":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"的":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}},"b":{"docs":{},"树":{"docs":{},"和":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"访":{"docs":{},"问":{"docs":{},"指":{"docs":{},"针":{"docs":{},"进":{"docs":{},"行":{"docs":{},"实":{"docs":{},"现":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}},"多":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"态":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"机":{"docs":{},"制":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"和":{"docs":{},"并":{"docs":{},"发":{"docs":{},"基":{"docs":{},"础":{"docs":{},"面":{"docs":{},"试":{"docs":{},"问":{"docs":{},"答":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}},"夺":{"docs":{},"命":{"docs":{},"连":{"docs":{},"环":{"docs":{},"问":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}},"面":{"docs":{},"试":{"docs":{},"题":{"docs":{},"集":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":5}}}}}},"的":{"docs":{},"优":{"docs":{},"点":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}}}},"风":{"docs":{},"险":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}}}}},"竞":{"docs":{},"争":{"docs":{},"锁":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"引":{"docs":{},"起":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"处":{"docs":{},"理":{"docs":{},"数":{"docs":{},"据":{"docs":{},"时":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"一":{"docs":{},"些":{"docs":{},"办":{"docs":{},"法":{"docs":{},"来":{"docs":{},"避":{"docs":{},"免":{"docs":{},"使":{"docs":{},"用":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"如":{"docs":{},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"互":{"docs":{},"相":{"docs":{},"等":{"docs":{},"待":{"docs":{},"对":{"docs":{},"方":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}},"用":{"docs":{},"户":{"docs":{},"访":{"docs":{},"问":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"时":{"docs":{},"，":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"为":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"用":{"docs":{},"户":{"docs":{},"开":{"docs":{},"启":{"docs":{},"一":{"docs":{},"个":{"docs":{},"事":{"docs":{},"务":{"docs":{},"，":{"docs":{},"事":{"docs":{},"务":{"docs":{},"之":{"docs":{},"间":{"docs":{},"互":{"docs":{},"不":{"docs":{},"干":{"docs":{},"扰":{"docs":{},"。":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"何":{"docs":{},"获":{"docs":{},"取":{"docs":{},"父":{"docs":{},"类":{"docs":{},"的":{"docs":{},"类":{"docs":{},"名":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}},"减":{"docs":{},"少":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"确":{"docs":{},"保":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"资":{"docs":{},"源":{"docs":{},"限":{"docs":{},"制":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"集":{"docs":{},"群":{"docs":{},"并":{"docs":{},"行":{"docs":{},"执":{"docs":{},"行":{"docs":{},"程":{"docs":{},"序":{"docs":{},"，":{"docs":{},"既":{"docs":{},"然":{"docs":{},"单":{"docs":{},"机":{"docs":{},"的":{"docs":{},"资":{"docs":{},"源":{"docs":{},"有":{"docs":{},"限":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"程":{"docs":{},"序":{"docs":{},"在":{"docs":{},"多":{"docs":{},"机":{"docs":{},"上":{"docs":{},"运":{"docs":{},"行":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}},"让":{"docs":{},"正":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"一":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}}}}}}}},"避":{"docs":{},"免":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"呢":{"docs":{},"？":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}},"分":{"docs":{},"析":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"合":{"docs":{},"理":{"docs":{},"的":{"docs":{},"规":{"docs":{},"划":{"docs":{},"一":{"docs":{},"次":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"保":{"docs":{},"证":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}},"果":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"x":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"即":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"根":{"docs":{},"据":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"比":{"docs":{},"较":{"docs":{},"是":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"调":{"docs":{},"用":{"docs":{},"者":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"必":{"docs":{},"须":{"docs":{},"产":{"docs":{},"生":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"x":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"，":{"docs":{},"即":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"根":{"docs":{},"据":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"比":{"docs":{},"较":{"docs":{},"是":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"x":{"docs":{},"和":{"docs":{},"y":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"也":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"没":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"定":{"docs":{},"义":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"它":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"(":{"docs":{},"从":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"类":{"docs":{},"继":{"docs":{},"承":{"docs":{},"的":{"docs":{},")":{"docs":{},"就":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"\"":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"在":{"docs":{},"比":{"docs":{},"较":{"docs":{},"两":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"使":{"docs":{},"用":{"docs":{},"“":{"docs":{},"=":{"docs":{},"=":{"docs":{},"”":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"会":{"docs":{},"得":{"docs":{},"到":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"若":{"docs":{},"比":{"docs":{},"较":{"docs":{},"的":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"独":{"docs":{},"立":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"则":{"docs":{},"总":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"编":{"docs":{},"写":{"docs":{},"的":{"docs":{},"类":{"docs":{},"希":{"docs":{},"望":{"docs":{},"能":{"docs":{},"够":{"docs":{},"比":{"docs":{},"较":{"docs":{},"该":{"docs":{},"类":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"必":{"docs":{},"须":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"由":{"docs":{},"开":{"docs":{},"发":{"docs":{},"人":{"docs":{},"员":{"docs":{},"自":{"docs":{},"己":{"docs":{},"编":{"docs":{},"写":{"docs":{},"代":{"docs":{},"码":{"docs":{},"来":{"docs":{},"决":{"docs":{},"定":{"docs":{},"在":{"docs":{},"什":{"docs":{},"么":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"即":{"docs":{},"可":{"docs":{},"认":{"docs":{},"为":{"docs":{},"连":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"是":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"请":{"docs":{},"求":{"docs":{},"需":{"docs":{},"要":{"docs":{},"占":{"docs":{},"用":{"docs":{},"大":{"docs":{},"量":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"来":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"在":{"docs":{},"这":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"内":{"docs":{},"新":{"docs":{},"的":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"就":{"docs":{},"无":{"docs":{},"法":{"docs":{},"发":{"docs":{},"送":{"docs":{},"请":{"docs":{},"求":{"docs":{},"给":{"docs":{},"服":{"docs":{},"务":{"docs":{},"端":{"docs":{},"。":{"docs":{},"只":{"docs":{},"有":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"在":{"docs":{},"监":{"docs":{},"听":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"请":{"docs":{},"求":{"docs":{},"才":{"docs":{},"能":{"docs":{},"被":{"docs":{},"接":{"docs":{},"收":{"docs":{},"。":{"docs":{},"另":{"docs":{},"一":{"docs":{},"种":{"docs":{},"设":{"docs":{},"计":{"docs":{},"是":{"docs":{},"，":{"docs":{},"监":{"docs":{},"听":{"docs":{},"线":{"docs":{},"程":{"docs":{},"把":{"docs":{},"请":{"docs":{},"求":{"docs":{},"传":{"docs":{},"递":{"docs":{},"给":{"docs":{},"工":{"docs":{},"作":{"docs":{},"者":{"docs":{},"线":{"docs":{},"程":{"docs":{},"(":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"段":{"docs":{},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"成":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}},"是":{"docs":{},"在":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"下":{"docs":{},"操":{"docs":{},"作":{"docs":{},"大":{"docs":{},"量":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"应":{"docs":{},"优":{"docs":{},"先":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"。":{"docs":{},"（":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"）":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"需":{"docs":{},"要":{"docs":{},"经":{"docs":{},"常":{"docs":{},"被":{"docs":{},"修":{"docs":{},"改":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"它":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"其":{"docs":{},"他":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}},"要":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"量":{"docs":{},"比":{"docs":{},"较":{"docs":{},"小":{"docs":{},"，":{"docs":{},"应":{"docs":{},"优":{"docs":{},"先":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"类":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"队":{"docs":{},"列":{"docs":{},"是":{"docs":{},"满":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"等":{"docs":{},"待":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"队":{"docs":{},"列":{"docs":{},"是":{"docs":{},"空":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"等":{"docs":{},"待":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"候":{"docs":{},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"进":{"docs":{},"入":{"docs":{},"到":{"docs":{},"读":{"docs":{},"线":{"docs":{},"程":{"docs":{},"队":{"docs":{},"列":{"docs":{},"排":{"docs":{},"队":{"docs":{},"，":{"docs":{},"等":{"docs":{},"待":{"docs":{},"写":{"docs":{},"线":{"docs":{},"程":{"docs":{},"写":{"docs":{},"入":{"docs":{},"新":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"读":{"docs":{},"线":{"docs":{},"程":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"等":{"docs":{},"待":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"已":{"docs":{},"满":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"候":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"进":{"docs":{},"入":{"docs":{},"到":{"docs":{},"写":{"docs":{},"线":{"docs":{},"程":{"docs":{},"队":{"docs":{},"列":{"docs":{},"排":{"docs":{},"队":{"docs":{},"，":{"docs":{},"等":{"docs":{},"待":{"docs":{},"读":{"docs":{},"线":{"docs":{},"程":{"docs":{},"将":{"docs":{},"队":{"docs":{},"列":{"docs":{},"元":{"docs":{},"素":{"docs":{},"移":{"docs":{},"除":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"写":{"docs":{},"线":{"docs":{},"程":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"等":{"docs":{},"待":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"尝":{"docs":{},"试":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"有":{"docs":{},"左":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"后":{"docs":{},"继":{"docs":{},"节":{"docs":{},"点":{"docs":{},"替":{"docs":{},"换":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"成":{"docs":{},"功":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"即":{"docs":{},"可":{"docs":{},"以":{"docs":{},"获":{"docs":{},"得":{"docs":{},"独":{"docs":{},"占":{"docs":{},"式":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"大":{"docs":{},"于":{"6":{"4":{"docs":{},"，":{"docs":{},"则":{"docs":{},"使":{"docs":{},"用":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"获":{"docs":{},"取":{"docs":{},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"对":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"通":{"docs":{},"过":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"只":{"docs":{},"对":{"docs":{},"一":{"docs":{},"个":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"节":{"docs":{},"点":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"该":{"docs":{},"操":{"docs":{},"作":{"docs":{},"并":{"docs":{},"不":{"docs":{},"影":{"docs":{},"响":{"docs":{},"其":{"docs":{},"他":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"极":{"docs":{},"大":{"docs":{},"的":{"docs":{},"提":{"docs":{},"高":{"docs":{},"了":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"效":{"docs":{},"率":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}},"书":{"docs":{},"籍":{"docs":{},"写":{"docs":{},"完":{"docs":{},"了":{"docs":{},"，":{"docs":{},"想":{"docs":{},"要":{"docs":{},"发":{"docs":{},"布":{"docs":{},"到":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"网":{"docs":{},"站":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"命":{"docs":{},"令":{"docs":{},"输":{"docs":{},"出":{"docs":{},"成":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"文":{"docs":{},"件":{"docs":{},"使":{"docs":{},"用":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"，":{"docs":{},"则":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"比":{"docs":{},"较":{"docs":{},"器":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"比":{"docs":{},"较":{"docs":{},"器":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"没":{"docs":{},"碰":{"docs":{},"撞":{"docs":{},"直":{"docs":{},"接":{"docs":{},"放":{"docs":{},"到":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"有":{"docs":{},"找":{"docs":{},"到":{"docs":{},"值":{"docs":{},"为":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"新":{"docs":{},"建":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"并":{"docs":{},"加":{"docs":{},"入":{"docs":{},"链":{"docs":{},"表":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"碰":{"docs":{},"撞":{"docs":{},"了":{"docs":{},"，":{"docs":{},"以":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"存":{"docs":{},"在":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}},"导":{"docs":{},"致":{"docs":{},"链":{"docs":{},"表":{"docs":{},"过":{"docs":{},"长":{"docs":{},"(":{"docs":{},"大":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"已":{"docs":{},"经":{"docs":{},"存":{"docs":{},"在":{"docs":{},"就":{"docs":{},"替":{"docs":{},"换":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"数":{"docs":{},">":{"docs":{},"＝":{"8":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"转":{"docs":{},"换":{"docs":{},"链":{"docs":{},"表":{"docs":{},"结":{"docs":{},"构":{"docs":{},"为":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"许":{"docs":{},"多":{"docs":{},"映":{"docs":{},"射":{"docs":{},"要":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"超":{"docs":{},"过":{"docs":{},"了":{"docs":{},"负":{"docs":{},"载":{"docs":{},"因":{"docs":{},"子":{"docs":{},"(":{"docs":{},"默":{"docs":{},"认":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}},"还":{"docs":{},"是":{"docs":{},"产":{"docs":{},"生":{"docs":{},"了":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"的":{"docs":{},"碰":{"docs":{},"撞":{"docs":{},"，":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"什":{"docs":{},"么":{"docs":{},"问":{"docs":{},"题":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"作":{"docs":{},"者":{"docs":{},"注":{"docs":{},"释":{"docs":{},"说":{"docs":{},"，":{"docs":{},"他":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"树":{"docs":{},"来":{"docs":{},"处":{"docs":{},"理":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"的":{"docs":{},"碰":{"docs":{},"撞":{"docs":{},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"且":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"节":{"docs":{},"点":{"docs":{},"也":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"但":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"为":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"但":{"docs":{},"没":{"docs":{},"有":{"docs":{},"找":{"docs":{},"到":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"则":{"docs":{},"直":{"docs":{},"接":{"docs":{},"调":{"docs":{},"用":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"不":{"docs":{},"用":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"；":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"首":{"docs":{},"先":{"docs":{},"进":{"docs":{},"行":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"之":{"docs":{},"后":{"docs":{},"再":{"docs":{},"次":{"docs":{},"进":{"docs":{},"入":{"docs":{},"循":{"docs":{},"环":{"docs":{},"获":{"docs":{},"取":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"；":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"计":{"docs":{},"算":{"docs":{},"得":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"索":{"docs":{},"引":{"docs":{},"i":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"新":{"docs":{},"建":{"docs":{},"节":{"docs":{},"点":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"注":{"docs":{},"：":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"实":{"docs":{},"质":{"docs":{},"为":{"docs":{},"链":{"docs":{},"表":{"docs":{},"或":{"docs":{},"者":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"的":{"docs":{},"首":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"并":{"docs":{},"且":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"为":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"该":{"docs":{},"链":{"docs":{},"表":{"docs":{},"正":{"docs":{},"在":{"docs":{},"进":{"docs":{},"行":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"完":{"docs":{},"成":{"docs":{},"后":{"docs":{},"的":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"重":{"docs":{},"写":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"比":{"docs":{},"较":{"docs":{},"的":{"docs":{},"将":{"docs":{},"是":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"是":{"docs":{},"否":{"docs":{},"指":{"docs":{},"向":{"docs":{},"同":{"docs":{},"一":{"docs":{},"块":{"docs":{},"内":{"docs":{},"存":{"docs":{},"地":{"docs":{},"址":{"docs":{},"，":{"docs":{},"重":{"docs":{},"写":{"docs":{},"之":{"docs":{},"后":{"docs":{},"目":{"docs":{},"的":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"比":{"docs":{},"较":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"维":{"docs":{},"护":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"命":{"docs":{},"令":{"docs":{},"，":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}},"指":{"docs":{},"定":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"关":{"docs":{},"闭":{"docs":{},"流":{"docs":{},"，":{"docs":{},"则":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"是":{"docs":{},"无":{"docs":{},"法":{"docs":{},"输":{"docs":{},"出":{"docs":{},"的":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}},"是":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}},"检":{"docs":{},"测":{"docs":{},"出":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"处":{"docs":{},"理":{"docs":{},"手":{"docs":{},"段":{"docs":{},"：":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}},"能":{"docs":{},"确":{"docs":{},"保":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"是":{"docs":{},"按":{"docs":{},"照":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"获":{"docs":{},"得":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"就":{"docs":{},"不":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"长":{"docs":{},"时":{"docs":{},"间":{"docs":{},"不":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"会":{"docs":{},"给":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}},"没":{"docs":{},"有":{"docs":{},"往":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"提":{"docs":{},"交":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"即":{"docs":{},"如":{"docs":{},"果":{"docs":{},"工":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"了":{"docs":{},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"（":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"或":{"docs":{},"者":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"共":{"docs":{},"享":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"更":{"docs":{},"新":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"就":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"发":{"docs":{},"生":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"没":{"docs":{},"有":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"些":{"docs":{},"增":{"docs":{},"加":{"docs":{},"操":{"docs":{},"作":{"docs":{},"被":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"变":{"docs":{},"量":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"值":{"docs":{},"为":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"e":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"设":{"docs":{},"置":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}},"首":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"为":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"执":{"docs":{},"行":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"失":{"docs":{},"败":{"docs":{},"或":{"docs":{},"状":{"docs":{},"态":{"docs":{},"由":{"docs":{},"于":{"docs":{},"等":{"docs":{},"待":{"docs":{},"线":{"docs":{},"程":{"docs":{},"而":{"docs":{},"改":{"docs":{},"变":{"docs":{},"也":{"docs":{},"是":{"docs":{},"正":{"docs":{},"常":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}},"头":{"docs":{},"指":{"docs":{},"针":{"docs":{},"变":{"docs":{},"化":{"docs":{},"，":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"成":{"docs":{},"功":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"则":{"docs":{},"结":{"docs":{},"束":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"；":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"你":{"docs":{},"本":{"docs":{},"地":{"docs":{},"具":{"docs":{},"备":{"docs":{},"了":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{},"为":{"docs":{},"负":{"docs":{},"值":{"docs":{},"（":{"docs":{},"即":{"docs":{},"可":{"docs":{},"能":{"docs":{},"需":{"docs":{},"要":{"docs":{},"信":{"docs":{},"号":{"docs":{},"）":{"docs":{},"，":{"docs":{},"请":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"清":{"docs":{},"除":{"docs":{},"信":{"docs":{},"号":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}},"采":{"docs":{},"用":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"任":{"docs":{},"务":{"docs":{},"排":{"docs":{},"队":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"我":{"docs":{},"们":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"失":{"docs":{},"败":{"docs":{},"了":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"已":{"docs":{},"经":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"了":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"已":{"docs":{},"经":{"docs":{},"饱":{"docs":{},"和":{"docs":{},"了":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"拒":{"docs":{},"绝":{"docs":{},"这":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"需":{"docs":{},"要":{"docs":{},"仔":{"docs":{},"细":{"docs":{},"检":{"docs":{},"查":{"docs":{},"是":{"docs":{},"否":{"docs":{},"应":{"docs":{},"该":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"（":{"docs":{},"因":{"docs":{},"为":{"docs":{},"现":{"docs":{},"有":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"自":{"docs":{},"上":{"docs":{},"次":{"docs":{},"检":{"docs":{},"查":{"docs":{},"以":{"docs":{},"来":{"docs":{},"已":{"docs":{},"经":{"docs":{},"死":{"docs":{},"亡":{"docs":{},"）":{"docs":{},"或":{"docs":{},"者":{"docs":{},"自":{"docs":{},"从":{"docs":{},"进":{"docs":{},"入":{"docs":{},"方":{"docs":{},"法":{"docs":{},"后":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"就":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"了":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"重":{"docs":{},"新":{"docs":{},"检":{"docs":{},"查":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"停":{"docs":{},"止":{"docs":{},"状":{"docs":{},"态":{"docs":{},"时":{"docs":{},"回":{"docs":{},"滚":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"就":{"docs":{},"开":{"docs":{},"始":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"少":{"docs":{},"于":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}}},"到":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"显":{"docs":{},"示":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"请":{"docs":{},"求":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"深":{"docs":{},"度":{"docs":{},"大":{"docs":{},"于":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"所":{"docs":{},"允":{"docs":{},"许":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"深":{"docs":{},"度":{"docs":{},"，":{"docs":{},"将":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"在":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"栈":{"docs":{},"时":{"docs":{},"无":{"docs":{},"法":{"docs":{},"申":{"docs":{},"请":{"docs":{},"到":{"docs":{},"足":{"docs":{},"够":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"则":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}},"发":{"docs":{},"现":{"docs":{},"空":{"docs":{},"区":{"docs":{},"域":{"docs":{},"(":{"docs":{},"“":{"docs":{},"x":{"docs":{},"”":{"docs":{},"标":{"docs":{},"示":{"docs":{},"的":{"docs":{},")":{"docs":{},"，":{"docs":{},"在":{"docs":{},"重":{"docs":{},"新":{"docs":{},"标":{"docs":{},"记":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"它":{"docs":{},"们":{"docs":{},"会":{"docs":{},"被":{"docs":{},"马":{"docs":{},"上":{"docs":{},"清":{"docs":{},"除":{"docs":{},"掉":{"docs":{},"。":{"docs":{},"当":{"docs":{},"然":{"docs":{},"，":{"docs":{},"决":{"docs":{},"定":{"docs":{},"活":{"docs":{},"性":{"docs":{},"的":{"docs":{},"审":{"docs":{},"计":{"docs":{},"信":{"docs":{},"息":{"docs":{},"也":{"docs":{},"在":{"docs":{},"此":{"docs":{},"时":{"docs":{},"被":{"docs":{},"计":{"docs":{},"算":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"送":{"docs":{},"者":{"docs":{},"没":{"docs":{},"有":{"docs":{},"收":{"docs":{},"到":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"响":{"docs":{},"应":{"docs":{},"，":{"docs":{},"它":{"docs":{},"将":{"docs":{},"重":{"docs":{},"新":{"docs":{},"发":{"docs":{},"送":{"docs":{},"数":{"docs":{},"据":{"docs":{},"包":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"多":{"docs":{},"次":{"docs":{},"超":{"docs":{},"时":{"docs":{},"，":{"docs":{},"连":{"docs":{},"接":{"docs":{},"就":{"docs":{},"会":{"docs":{},"断":{"docs":{},"开":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"变":{"docs":{},"量":{"docs":{},"是":{"docs":{},"常":{"docs":{},"量":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"会":{"docs":{},"按":{"docs":{},"照":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"你":{"docs":{},"决":{"docs":{},"定":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"开":{"docs":{},"启":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"现":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"通":{"docs":{},"过":{"docs":{},"减":{"docs":{},"小":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"内":{"docs":{},"存":{"docs":{},"来":{"docs":{},"减":{"docs":{},"少":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}},"想":{"docs":{},"在":{"docs":{},"不":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"流":{"docs":{},"时":{"docs":{},"，":{"docs":{},"将":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"内":{"docs":{},"容":{"docs":{},"输":{"docs":{},"出":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}},"仅":{"docs":{},"仅":{"docs":{},"只":{"docs":{},"是":{"docs":{},"让":{"docs":{},"某":{"docs":{},"个":{"docs":{},"类":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}},"可":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"类":{"docs":{},"没":{"docs":{},"有":{"docs":{},"显":{"docs":{},"式":{"docs":{},"声":{"docs":{},"明":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"想":{"docs":{},"要":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}},"文":{"docs":{},"本":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"、":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}},"下":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}},"上":{"docs":{},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{},"，":{"docs":{},"三":{"docs":{},"次":{"docs":{},"握":{"docs":{},"手":{"docs":{},"流":{"docs":{},"程":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}},"四":{"docs":{},"次":{"docs":{},"挥":{"docs":{},"手":{"docs":{},"流":{"docs":{},"程":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}},"子":{"docs":{},"类":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"父":{"docs":{},"类":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"和":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"和":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"即":{"docs":{},"创":{"docs":{},"建":{"docs":{},"了":{"docs":{},"线":{"docs":{},"程":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"与":{"docs":{},"数":{"docs":{},"组":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.010810810810810811}}}}},"创":{"docs":{},"建":{"docs":{},"与":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"机":{"docs":{},"制":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}},"长":{"docs":{},"度":{"docs":{},"为":{"8":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.00528169014084507}}},"docs":{}}}}},"流":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}},"和":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}},"主":{"docs":{},"要":{"docs":{},"操":{"docs":{},"作":{"docs":{},"字":{"docs":{},"符":{"docs":{},"类":{"docs":{},"型":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"占":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"节":{"docs":{},"。":{"docs":{},"主":{"docs":{},"要":{"docs":{},"类":{"docs":{},"是":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"，":{"docs":{},"并":{"docs":{},"在":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"时":{"docs":{},"会":{"docs":{},"强":{"docs":{},"制":{"docs":{},"将":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"内":{"docs":{},"容":{"docs":{},"输":{"docs":{},"出":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"段":{"docs":{},"用":{"docs":{},"于":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"采":{"docs":{},"用":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}},"如":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}},"在":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"（":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"、":{"docs":{},"对":{"docs":{},"象":{"docs":{},"、":{"docs":{},"数":{"docs":{},"组":{"docs":{},"）":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{},"和":{"docs":{},"描":{"docs":{},"述":{"docs":{},"符":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}},"表":{"docs":{},"用":{"docs":{},"于":{"docs":{},"描":{"docs":{},"述":{"docs":{},"接":{"docs":{},"口":{"docs":{},"或":{"docs":{},"者":{"docs":{},"类":{"docs":{},"中":{"docs":{},"声":{"docs":{},"明":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{},"字":{"docs":{},"段":{"docs":{},"包":{"docs":{},"括":{"docs":{},"类":{"docs":{},"级":{"docs":{},"变":{"docs":{},"量":{"docs":{},"以":{"docs":{},"及":{"docs":{},"实":{"docs":{},"例":{"docs":{},"级":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"包":{"docs":{},"括":{"docs":{},"在":{"docs":{},"方":{"docs":{},"法":{"docs":{},"内":{"docs":{},"部":{"docs":{},"声":{"docs":{},"明":{"docs":{},"的":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"集":{"docs":{},"合":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}},"访":{"docs":{},"问":{"docs":{},"标":{"docs":{},"志":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}},"写":{"docs":{},"入":{"docs":{},"到":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"，":{"docs":{},"但":{"docs":{},"要":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"掉":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}},"面":{"docs":{},"意":{"docs":{},"思":{"docs":{},"为":{"docs":{},"写":{"docs":{},"入":{"docs":{},"时":{"docs":{},"复":{"docs":{},"制":{"docs":{},"。":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"可":{"docs":{},"重":{"docs":{},"入":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"量":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"节":{"docs":{},"码":{"docs":{},"验":{"docs":{},"证":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}},"流":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}},"主":{"docs":{},"要":{"docs":{},"操":{"docs":{},"作":{"docs":{},"字":{"docs":{},"节":{"docs":{},"类":{"docs":{},"型":{"docs":{},"数":{"docs":{},"据":{"docs":{},"（":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"）":{"docs":{},"。":{"docs":{},"主":{"docs":{},"要":{"docs":{},"类":{"docs":{},"是":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"；":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"主":{"docs":{},"要":{"docs":{},"操":{"docs":{},"作":{"docs":{},"字":{"docs":{},"符":{"docs":{},"类":{"docs":{},"型":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"占":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"节":{"docs":{},"。":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"本":{"docs":{},"身":{"docs":{},"不":{"docs":{},"会":{"docs":{},"用":{"docs":{},"到":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"（":{"docs":{},"内":{"docs":{},"存":{"docs":{},"）":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"对":{"docs":{},"文":{"docs":{},"件":{"docs":{},"本":{"docs":{},"身":{"docs":{},"直":{"docs":{},"接":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"；":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"在":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"再":{"docs":{},"操":{"docs":{},"作":{"docs":{},"文":{"docs":{},"件":{"docs":{},"。":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"第":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}}}}},"它":{"docs":{},"有":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"，":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}},"保":{"docs":{},"存":{"docs":{},"了":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"与":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"优":{"docs":{},"势":{"docs":{},"有":{"docs":{},"：":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}},"是":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"轮":{"docs":{},"询":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"等":{"docs":{},"待":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}},"会":{"docs":{},"强":{"docs":{},"制":{"docs":{},"将":{"docs":{},"对":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"docs":{},"操":{"docs":{},"作":{"docs":{},"立":{"docs":{},"即":{"docs":{},"写":{"docs":{},"入":{"docs":{},"主":{"docs":{},"存":{"docs":{},"；":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}},"确":{"docs":{},"保":{"docs":{},"指":{"docs":{},"令":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"时":{"docs":{},"不":{"docs":{},"会":{"docs":{},"把":{"docs":{},"其":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"指":{"docs":{},"令":{"docs":{},"排":{"docs":{},"到":{"docs":{},"内":{"docs":{},"存":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"会":{"docs":{},"把":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"指":{"docs":{},"令":{"docs":{},"排":{"docs":{},"到":{"docs":{},"内":{"docs":{},"存":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"的":{"docs":{},"后":{"docs":{},"面":{"docs":{},"；":{"docs":{},"即":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"到":{"docs":{},"内":{"docs":{},"存":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"这":{"docs":{},"句":{"docs":{},"指":{"docs":{},"令":{"docs":{},"时":{"docs":{},"，":{"docs":{},"在":{"docs":{},"它":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"已":{"docs":{},"经":{"docs":{},"全":{"docs":{},"部":{"docs":{},"完":{"docs":{},"成":{"docs":{},"；":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"由":{"docs":{},"大":{"docs":{},"小":{"docs":{},"已":{"docs":{},"知":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"组":{"docs":{},"成":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}}}}}}}}}},"封":{"docs":{},"装":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}},"将":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.007246376811594203}},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"进":{"docs":{},"行":{"docs":{},"私":{"docs":{},"有":{"docs":{},"化":{"docs":{},"，":{"docs":{},"只":{"docs":{},"提":{"docs":{},"供":{"docs":{},"公":{"docs":{},"共":{"docs":{},"的":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"和":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}},"得":{"docs":{},"到":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"向":{"docs":{},"右":{"docs":{},"按":{"docs":{},"位":{"docs":{},"移":{"docs":{},"动":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"位":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"与":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"做":{"docs":{},"&":{"docs":{},"运":{"docs":{},"算":{"docs":{},"得":{"docs":{},"到":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"j":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"h":{"1":{"docs":{},"的":{"docs":{},"高":{"docs":{},"几":{"docs":{},"位":{"docs":{},"进":{"docs":{},"行":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"h":{"2":{"docs":{},"，":{"docs":{},"也":{"docs":{},"即":{"docs":{},"h":{"2":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"第":{"docs":{},"三":{"docs":{},"次":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"h":{"3":{"docs":{},"，":{"docs":{},"也":{"docs":{},"即":{"docs":{},"h":{"3":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"变":{"docs":{},"成":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{},"目":{"docs":{},"的":{"docs":{},"是":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"响":{"docs":{},"应":{"docs":{},"更":{"docs":{},"快":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"。":{"docs":{},"设":{"docs":{},"想":{"docs":{},"一":{"docs":{},"个":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"应":{"docs":{},"用":{"docs":{},"，":{"docs":{},"它":{"docs":{},"在":{"docs":{},"某":{"docs":{},"一":{"docs":{},"个":{"docs":{},"端":{"docs":{},"口":{"docs":{},"监":{"docs":{},"听":{"docs":{},"进":{"docs":{},"来":{"docs":{},"的":{"docs":{},"请":{"docs":{},"求":{"docs":{},"。":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"请":{"docs":{},"求":{"docs":{},"到":{"docs":{},"来":{"docs":{},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"去":{"docs":{},"处":{"docs":{},"理":{"docs":{},"这":{"docs":{},"个":{"docs":{},"请":{"docs":{},"求":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"返":{"docs":{},"回":{"docs":{},"去":{"docs":{},"监":{"docs":{},"听":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"中":{"docs":{},"的":{"docs":{},"值":{"docs":{},"写":{"docs":{},"回":{"docs":{},"内":{"docs":{},"存":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}},"增":{"docs":{},"加":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}},"的":{"docs":{},"值":{"docs":{},"加":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}}}}}}}},"输":{"docs":{},"出":{"docs":{},"流":{"docs":{},"和":{"docs":{},"输":{"docs":{},"入":{"docs":{},"流":{"docs":{},"进":{"docs":{},"行":{"docs":{},"连":{"docs":{},"接":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"在":{"docs":{},"使":{"docs":{},"用":{"docs":{},"时":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"i":{"docs":{},"o":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}},"它":{"docs":{},"们":{"docs":{},"编":{"docs":{},"译":{"docs":{},"为":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"机":{"docs":{},"器":{"docs":{},"指":{"docs":{},"令":{"docs":{},"；":{"docs":{},"在":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"原":{"docs":{},"先":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"整":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"分":{"docs":{},"成":{"docs":{},"几":{"docs":{},"个":{"docs":{},"小":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"都":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"；":{"docs":{},"与":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"相":{"docs":{},"比":{"docs":{},"，":{"docs":{},"这":{"docs":{},"么":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"目":{"docs":{},"的":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"构":{"docs":{},"建":{"docs":{},"成":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"节":{"docs":{},"点":{"docs":{},"插":{"docs":{},"入":{"docs":{},"队":{"docs":{},"列":{"docs":{},"尾":{"docs":{},"部":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"节":{"docs":{},"点":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}},"状":{"docs":{},"态":{"docs":{},"由":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"读":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"分":{"docs":{},"离":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"使":{"docs":{},"读":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"分":{"docs":{},"开":{"docs":{},"，":{"docs":{},"有":{"docs":{},"效":{"docs":{},"提":{"docs":{},"高":{"docs":{},"并":{"docs":{},"发":{"docs":{},"性":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}},"屏":{"docs":{},"障":{"docs":{},"重":{"docs":{},"置":{"docs":{},"为":{"docs":{},"初":{"docs":{},"始":{"docs":{},"状":{"docs":{},"态":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}},"内":{"docs":{},"存":{"docs":{},"划":{"docs":{},"分":{"docs":{},"为":{"docs":{},"大":{"docs":{},"小":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"两":{"docs":{},"块":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"只":{"docs":{},"使":{"docs":{},"用":{"docs":{},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"块":{"docs":{},"，":{"docs":{},"当":{"docs":{},"这":{"docs":{},"一":{"docs":{},"块":{"docs":{},"内":{"docs":{},"存":{"docs":{},"用":{"docs":{},"完":{"docs":{},"了":{"docs":{},"就":{"docs":{},"将":{"docs":{},"还":{"docs":{},"存":{"docs":{},"活":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{},"另":{"docs":{},"一":{"docs":{},"块":{"docs":{},"上":{"docs":{},"面":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"把":{"docs":{},"使":{"docs":{},"用":{"docs":{},"过":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"清":{"docs":{},"理":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"回":{"docs":{},"收":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"进":{"docs":{},"行":{"docs":{},"标":{"docs":{},"记":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"清":{"docs":{},"理":{"docs":{},"掉":{"docs":{},"被":{"docs":{},"标":{"docs":{},"记":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"所":{"docs":{},"代":{"docs":{},"表":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"构":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"方":{"docs":{},"法":{"docs":{},"区":{"docs":{},"的":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"每":{"docs":{},"次":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"写":{"docs":{},"到":{"docs":{},"日":{"docs":{},"志":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"，":{"docs":{},"文":{"docs":{},"件":{"docs":{},"名":{"docs":{},"由":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"入":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"数":{"docs":{},"量":{"docs":{},"降":{"docs":{},"到":{"docs":{},"最":{"docs":{},"低":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}}}}}}}}}}},"姓":{"docs":{},"名":{"docs":{},"写":{"docs":{},"入":{"docs":{},"文":{"docs":{},"件":{"docs":{},"之":{"docs":{},"中":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.00528169014084507}}}}}}}}}},"年":{"docs":{},"龄":{"docs":{},"写":{"docs":{},"入":{"docs":{},"文":{"docs":{},"件":{"docs":{},"之":{"docs":{},"中":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.00528169014084507}}}}}}}}}},"记":{"docs":{},"录":{"docs":{},"从":{"docs":{},"一":{"docs":{},"处":{"docs":{},"转":{"docs":{},"移":{"docs":{},"到":{"docs":{},"另":{"docs":{},"一":{"docs":{},"处":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"读":{"docs":{},"取":{"docs":{},"或":{"docs":{},"者":{"docs":{},"修":{"docs":{},"改":{"docs":{},"记":{"docs":{},"录":{"docs":{},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"变":{"docs":{},"为":{"docs":{},"小":{"docs":{},"写":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}},"占":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"序":{"docs":{},"号":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}},"平":{"docs":{},"台":{"docs":{},"无":{"docs":{},"关":{"docs":{},"性":{"docs":{},"。":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"为":{"docs":{},"解":{"docs":{},"释":{"docs":{},"型":{"docs":{},"语":{"docs":{},"言":{"docs":{},"，":{"docs":{},"程":{"docs":{},"序":{"docs":{},"源":{"docs":{},"代":{"docs":{},"码":{"docs":{},"经":{"docs":{},"过":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"编":{"docs":{},"译":{"docs":{},"成":{"docs":{},"字":{"docs":{},"节":{"docs":{},"码":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"由":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"解":{"docs":{},"释":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"衡":{"docs":{},"树":{"docs":{},"查":{"docs":{},"找":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"等":{"docs":{},"于":{"docs":{},"树":{"docs":{},"高":{"docs":{},"，":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"的":{"docs":{},"树":{"docs":{},"高":{"docs":{},"太":{"docs":{},"高":{"docs":{},"而":{"docs":{},"引":{"docs":{},"起":{"docs":{},"i":{"docs":{},"/":{"docs":{},"o":{"docs":{},"操":{"docs":{},"作":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"，":{"docs":{},"导":{"docs":{},"致":{"docs":{},"效":{"docs":{},"率":{"docs":{},"低":{"docs":{},"下":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"原":{"docs":{},"对":{"docs":{},"象":{"docs":{},"本":{"docs":{},"身":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}},"将":{"docs":{},"这":{"docs":{},"段":{"docs":{},"代":{"docs":{},"码":{"docs":{},"视":{"docs":{},"为":{"docs":{},"单":{"docs":{},"条":{"docs":{},"指":{"docs":{},"令":{"docs":{},"来":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"按":{"docs":{},"照":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"：":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"能":{"docs":{},"完":{"docs":{},"全":{"docs":{},"避":{"docs":{},"免":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"露":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"最":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"办":{"docs":{},"法":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"是":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}},"发":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}},"包":{"docs":{},"下":{"docs":{},"的":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}},"队":{"docs":{},"列":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}},"一":{"docs":{},"定":{"docs":{},"比":{"docs":{},"串":{"docs":{},"行":{"docs":{},"更":{"docs":{},"快":{"docs":{},"吗":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}},"容":{"docs":{},"器":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}},"支":{"docs":{},"持":{"docs":{},"并":{"docs":{},"发":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"和":{"docs":{},"并":{"docs":{},"发":{"docs":{},"的":{"docs":{},"更":{"docs":{},"新":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}},"工":{"docs":{},"具":{"docs":{},"类":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":5.002008032128514}}}}},"机":{"docs":{},"制":{"docs":{},"的":{"docs":{},"底":{"docs":{},"层":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":5.001436781609195}},"原":{"docs":{},"理":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}},"简":{"docs":{},"介":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":5.0027932960893855}}}},"编":{"docs":{},"程":{"docs":{},"领":{"docs":{},"域":{"docs":{},"两":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"通":{"docs":{},"信":{"docs":{},"和":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"同":{"docs":{},"步":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"、":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"、":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}},"同":{"docs":{},"步":{"docs":{},"容":{"docs":{},"器":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}},"深":{"docs":{},"入":{"docs":{},"剖":{"docs":{},"析":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}},"间":{"docs":{},"协":{"docs":{},"作":{"docs":{},"的":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"、":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"、":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"a":{"docs":{},"l":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"战":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"：":{"docs":{},"第":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}},"的":{"docs":{},"挑":{"docs":{},"战":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}},"艺":{"docs":{},"术":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"：":{"docs":{},"第":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}},"（":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"）":{"docs":{},"编":{"docs":{},"程":{"docs":{},"的":{"docs":{},"好":{"docs":{},"处":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}}}}}}},"和":{"docs":{},"并":{"docs":{},"行":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}}}}},"执":{"docs":{},"行":{"docs":{},"一":{"docs":{},"定":{"docs":{},"比":{"docs":{},"串":{"docs":{},"行":{"docs":{},"执":{"docs":{},"行":{"docs":{},"快":{"docs":{},"吗":{"docs":{},"？":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}},"术":{"docs":{},"语":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}}}},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"是":{"docs":{},"你":{"docs":{},"有":{"docs":{},"处":{"docs":{},"理":{"docs":{},"多":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"能":{"docs":{},"力":{"docs":{},"，":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"同":{"docs":{},"时":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}},"之":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}},"指":{"docs":{},"的":{"docs":{},"是":{"docs":{},"用":{"docs":{},"户":{"docs":{},"线":{"docs":{},"程":{"docs":{},"和":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"收":{"docs":{},"集":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"标":{"docs":{},"记":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"寻":{"docs":{},"找":{"docs":{},"活":{"docs":{},"跃":{"docs":{},"对":{"docs":{},"象":{"docs":{},"在":{"docs":{},"应":{"docs":{},"用":{"docs":{},"连":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{},"时":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}},"清":{"docs":{},"除":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}},"是":{"docs":{},"以":{"docs":{},"获":{"docs":{},"取":{"docs":{},"最":{"docs":{},"短":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"时":{"docs":{},"间":{"docs":{},"为":{"docs":{},"目":{"docs":{},"标":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"进":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"扫":{"docs":{},"描":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"器":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}}}}}},"清":{"docs":{},"除":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"：":{"docs":{},"回":{"docs":{},"收":{"docs":{},"在":{"docs":{},"标":{"docs":{},"记":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"被":{"docs":{},"鉴":{"docs":{},"定":{"docs":{},"为":{"docs":{},"不":{"docs":{},"可":{"docs":{},"达":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"（":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"）":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}},"且":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"覆":{"docs":{},"盖":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"这":{"docs":{},"在":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}},"行":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.004201680672268907}},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"是":{"docs":{},"你":{"docs":{},"有":{"docs":{},"同":{"docs":{},"时":{"docs":{},"处":{"docs":{},"理":{"docs":{},"多":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"能":{"docs":{},"力":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}},"与":{"docs":{},"串":{"docs":{},"行":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"工":{"docs":{},"作":{"docs":{},"模":{"docs":{},"式":{"docs":{},"相":{"docs":{},"似":{"docs":{},"，":{"docs":{},"都":{"docs":{},"是":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}},"是":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"器":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"异":{"docs":{},"常":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164}},"处":{"docs":{},"理":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.03937007874015748},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"：":{"docs":{},"在":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"操":{"docs":{},"作":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"会":{"docs":{},"对":{"docs":{},"类":{"docs":{},"型":{"docs":{},"进":{"docs":{},"行":{"docs":{},"检":{"docs":{},"查":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"满":{"docs":{},"足":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"类":{"docs":{},"型":{"docs":{},"要":{"docs":{},"求":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"；":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}},"，":{"docs":{},"关":{"docs":{},"于":{"docs":{},"这":{"docs":{},"个":{"docs":{},"异":{"docs":{},"常":{"docs":{},"将":{"docs":{},"会":{"docs":{},"在":{"docs":{},"后":{"docs":{},"续":{"docs":{},"文":{"docs":{},"章":{"docs":{},"中":{"docs":{},"讲":{"docs":{},"述":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}},"、":{"docs":{},"堆":{"docs":{},"内":{"docs":{},"存":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"、":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"或":{"docs":{},"了":{"docs":{},"一":{"docs":{},"下":{"docs":{},"。":{"docs":{},"设":{"docs":{},"计":{"docs":{},"者":{"docs":{},"还":{"docs":{},"解":{"docs":{},"释":{"docs":{},"到":{"docs":{},"因":{"docs":{},"为":{"docs":{},"现":{"docs":{},"在":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}},"步":{"docs":{},"则":{"docs":{},"是":{"docs":{},"相":{"docs":{},"反":{"docs":{},"，":{"docs":{},"调":{"docs":{},"用":{"docs":{},"在":{"docs":{},"发":{"docs":{},"出":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"调":{"docs":{},"用":{"docs":{},"就":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"了":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"没":{"docs":{},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"换":{"docs":{},"句":{"docs":{},"话":{"docs":{},"说":{"docs":{},"，":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"异":{"docs":{},"步":{"docs":{},"过":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"发":{"docs":{},"出":{"docs":{},"后":{"docs":{},"，":{"docs":{},"调":{"docs":{},"用":{"docs":{},"者":{"docs":{},"不":{"docs":{},"会":{"docs":{},"立":{"docs":{},"刻":{"docs":{},"得":{"docs":{},"到":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"而":{"docs":{},"是":{"docs":{},"在":{"docs":{},"调":{"docs":{},"用":{"docs":{},"发":{"docs":{},"出":{"docs":{},"后":{"docs":{},"，":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"者":{"docs":{},"通":{"docs":{},"过":{"docs":{},"状":{"docs":{},"态":{"docs":{},"、":{"docs":{},"通":{"docs":{},"知":{"docs":{},"来":{"docs":{},"通":{"docs":{},"知":{"docs":{},"调":{"docs":{},"用":{"docs":{},"者":{"docs":{},"，":{"docs":{},"或":{"docs":{},"通":{"docs":{},"过":{"docs":{},"回":{"docs":{},"调":{"docs":{},"函":{"docs":{},"数":{"docs":{},"处":{"docs":{},"理":{"docs":{},"这":{"docs":{},"个":{"docs":{},"调":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"像":{"docs":{},"是":{"docs":{},"发":{"docs":{},"短":{"docs":{},"信":{"docs":{},"，":{"docs":{},"发":{"docs":{},"完":{"docs":{},"短":{"docs":{},"信":{"docs":{},"后":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"做":{"docs":{},"其":{"docs":{},"他":{"docs":{},"事":{"docs":{},"，":{"docs":{},"短":{"docs":{},"信":{"docs":{},"来":{"docs":{},"了":{"docs":{},"，":{"docs":{},"手":{"docs":{},"机":{"docs":{},"会":{"docs":{},"提":{"docs":{},"醒":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"传":{"docs":{},"递":{"docs":{},"一":{"docs":{},"般":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"对":{"docs":{},"象":{"docs":{},"型":{"docs":{},"变":{"docs":{},"量":{"docs":{},"而":{"docs":{},"言":{"docs":{},"的":{"docs":{},",":{"docs":{},"传":{"docs":{},"递":{"docs":{},"的":{"docs":{},"是":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"地":{"docs":{},"址":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"副":{"docs":{},"本":{"docs":{},",":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{},"时":{"docs":{},"可":{"docs":{},"以":{"docs":{},"赋":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{},"名":{"docs":{},"指":{"docs":{},"向":{"docs":{},"内":{"docs":{},"存":{"docs":{},"数":{"docs":{},"据":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"地":{"docs":{},"址":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}},"它":{"docs":{},"以":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"（":{"docs":{},"类":{"docs":{},"似":{"docs":{},"c":{"docs":{},"指":{"docs":{},"针":{"docs":{},"）":{"docs":{},"向":{"docs":{},"对":{"docs":{},"象":{"docs":{},"实":{"docs":{},"体":{"docs":{},"（":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"值":{"docs":{},"）":{"docs":{},"，":{"docs":{},"这":{"docs":{},"类":{"docs":{},"变":{"docs":{},"量":{"docs":{},"声":{"docs":{},"明":{"docs":{},"时":{"docs":{},"不":{"docs":{},"会":{"docs":{},"分":{"docs":{},"配":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"存":{"docs":{},"储":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"内":{"docs":{},"存":{"docs":{},"地":{"docs":{},"址":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"计":{"docs":{},"数":{"docs":{},"算":{"docs":{},"法":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}}}},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"申":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"：":{"docs":{},"浅":{"docs":{},"复":{"docs":{},"制":{"docs":{},"和":{"docs":{},"深":{"docs":{},"复":{"docs":{},"制":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}},"起":{"docs":{},"的":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"时":{"docs":{},"间":{"docs":{},"或":{"docs":{},"内":{"docs":{},"存":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"，":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"能":{"docs":{},"支":{"docs":{},"撑":{"docs":{},"应":{"docs":{},"用":{"docs":{},"达":{"docs":{},"到":{"docs":{},"的":{"docs":{},"最":{"docs":{},"高":{"docs":{},"性":{"docs":{},"能":{"docs":{},"指":{"docs":{},"标":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"以":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}},"对":{"docs":{},"引":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"进":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"会":{"docs":{},"同":{"docs":{},"时":{"docs":{},"改":{"docs":{},"变":{"docs":{},"原":{"docs":{},"对":{"docs":{},"象":{"docs":{},".":{"docs":{},"一":{"docs":{},"般":{"docs":{},"认":{"docs":{},"为":{"docs":{},",":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"内":{"docs":{},"的":{"docs":{},"传":{"docs":{},"递":{"docs":{},"都":{"docs":{},"是":{"docs":{},"值":{"docs":{},"传":{"docs":{},"递":{"docs":{},".":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"长":{"docs":{},"度":{"1":{"6":{"docs":{},"或":{"docs":{},"者":{"docs":{},"其":{"docs":{},"他":{"2":{"docs":{},"的":{"docs":{},"幂":{"docs":{},"，":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}},"docs":{}}}}}},"docs":{}},"docs":{}}},"我":{"docs":{},"觉":{"docs":{},"得":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"反":{"docs":{},"向":{"docs":{},"理":{"docs":{},"解":{"docs":{},"，":{"docs":{},"知":{"docs":{},"道":{"docs":{},"什":{"docs":{},"么":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"安":{"docs":{},"全":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"能":{"docs":{},"定":{"docs":{},"义":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"边":{"docs":{},"界":{"docs":{},"了":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"希":{"docs":{},"望":{"docs":{},"的":{"docs":{},"比":{"docs":{},"例":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"导":{"docs":{},"致":{"docs":{},"无":{"docs":{},"法":{"docs":{},"被":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}},"谓":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"在":{"docs":{},"发":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"调":{"docs":{},"用":{"docs":{},"时":{"docs":{},"，":{"docs":{},"在":{"docs":{},"没":{"docs":{},"有":{"docs":{},"得":{"docs":{},"到":{"docs":{},"结":{"docs":{},"果":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"该":{"docs":{},"调":{"docs":{},"用":{"docs":{},"就":{"docs":{},"不":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"调":{"docs":{},"用":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"就":{"docs":{},"得":{"docs":{},"到":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"了":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"具":{"docs":{},"有":{"docs":{},"的":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}},"有":{"docs":{},"原":{"docs":{},"始":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"本":{"docs":{},"地":{"docs":{},"变":{"docs":{},"量":{"docs":{},"都":{"docs":{},"存":{"docs":{},"放":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"栈":{"docs":{},"上":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"对":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"可":{"docs":{},"见":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"能":{"docs":{},"向":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"传":{"docs":{},"递":{"docs":{},"一":{"docs":{},"个":{"docs":{},"原":{"docs":{},"始":{"docs":{},"类":{"docs":{},"型":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"它":{"docs":{},"不":{"docs":{},"能":{"docs":{},"共":{"docs":{},"享":{"docs":{},"这":{"docs":{},"个":{"docs":{},"原":{"docs":{},"始":{"docs":{},"类":{"docs":{},"型":{"docs":{},"变":{"docs":{},"量":{"docs":{},"自":{"docs":{},"身":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"是":{"docs":{},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"。":{"docs":{},"他":{"docs":{},"们":{"docs":{},"在":{"docs":{},"备":{"docs":{},"份":{"docs":{},"数":{"docs":{},"组":{"docs":{},"（":{"3":{"docs":{},"）":{"docs":{},"的":{"docs":{},"副":{"docs":{},"本":{"docs":{},"上":{"docs":{},"工":{"docs":{},"作":{"docs":{},"。":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"完":{"docs":{},"成":{"docs":{},"后":{"docs":{},"，":{"docs":{},"后":{"docs":{},"备":{"docs":{},"阵":{"docs":{},"列":{"docs":{},"将":{"docs":{},"被":{"docs":{},"替":{"docs":{},"换":{"docs":{},"为":{"docs":{},"复":{"docs":{},"制":{"docs":{},"的":{"docs":{},"阵":{"docs":{},"列":{"docs":{},"，":{"docs":{},"并":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"。":{"docs":{},"支":{"docs":{},"持":{"docs":{},"数":{"docs":{},"组":{"docs":{},"变":{"docs":{},"得":{"docs":{},"易":{"docs":{},"变":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"替":{"docs":{},"换":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"是":{"docs":{},"原":{"docs":{},"子":{"docs":{},"（":{"5":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"就":{"docs":{},"全":{"docs":{},"部":{"docs":{},"都":{"docs":{},"在":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"中":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"实":{"docs":{},"例":{"docs":{},"都":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"分":{"docs":{},"配":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"都":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"。":{"docs":{},"且":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"恰":{"docs":{},"好":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"；":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"（":{"docs":{},"单":{"docs":{},"位":{"docs":{},"秒":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"需":{"docs":{},"时":{"docs":{},"间":{"docs":{},"越":{"docs":{},"多":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"扩":{"docs":{},"展":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"：":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}},"传":{"docs":{},"输":{"docs":{},"控":{"docs":{},"制":{"docs":{},"协":{"docs":{},"议":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}},"域":{"docs":{},"名":{"docs":{},"系":{"docs":{},"统":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}},"计":{"docs":{},"算":{"docs":{},"机":{"docs":{},"网":{"docs":{},"络":{"docs":{},"之":{"docs":{},"应":{"docs":{},"用":{"docs":{},"层":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}},"数":{"docs":{},"据":{"docs":{},"链":{"docs":{},"路":{"docs":{},"层":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}},"物":{"docs":{},"理":{"docs":{},"层":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}},"网":{"docs":{},"络":{"docs":{},"层":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}}}}}}}}}},"超":{"docs":{},"文":{"docs":{},"本":{"docs":{},"传":{"docs":{},"输":{"docs":{},"协":{"docs":{},"议":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}},"为":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"（":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}},"容":{"docs":{},"操":{"docs":{},"作":{"docs":{},"需":{"docs":{},"要":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}},"后":{"docs":{},"不":{"docs":{},"是":{"docs":{},"重":{"docs":{},"新":{"docs":{},"计":{"docs":{},"算":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"：":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}},"增":{"docs":{},"量":{"docs":{},"：":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}},"充":{"docs":{},"为":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.004761904761904762}},"（":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}},"指":{"docs":{},"定":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}},"原":{"docs":{},"来":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"首":{"docs":{},"地":{"docs":{},"址":{"docs":{},"值":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}},"独":{"docs":{},"占":{"docs":{},"锁":{"docs":{},"是":{"docs":{},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"还":{"docs":{},"是":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"比":{"docs":{},"较":{"docs":{},"高":{"docs":{},"，":{"docs":{},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"每":{"docs":{},"次":{"docs":{},"都":{"docs":{},"是":{"docs":{},"等":{"docs":{},"待":{"docs":{},"最":{"docs":{},"久":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"锁":{"docs":{},"；":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"文":{"docs":{},"件":{"docs":{},"名":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"服":{"docs":{},"务":{"docs":{},"监":{"docs":{},"听":{"docs":{},"端":{"docs":{},"口":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"输":{"docs":{},"出":{"docs":{},"格":{"docs":{},"式":{"docs":{},"，":{"docs":{},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"，":{"docs":{},"文":{"docs":{},"件":{"docs":{},"格":{"docs":{},"式":{"docs":{},"是":{"docs":{},"平":{"docs":{},"文":{"docs":{},"件":{"docs":{},"，":{"docs":{},"内":{"docs":{},"容":{"docs":{},"和":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}},"要":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804}}}}}}}}},"令":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"作":{"docs":{},"用":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"流":{"docs":{},"水":{"docs":{},"线":{"docs":{},"执":{"docs":{},"行":{"docs":{},"指":{"docs":{},"令":{"docs":{},"（":{"docs":{},"d":{"docs":{},"e":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}},"那":{"docs":{},"么":{"docs":{},"效":{"docs":{},"率":{"docs":{},"会":{"docs":{},"有":{"docs":{},"一":{"docs":{},"定":{"docs":{},"的":{"docs":{},"提":{"docs":{},"升":{"docs":{},"，":{"docs":{},"p":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"借":{"docs":{},"助":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"指":{"docs":{},"令":{"docs":{},"通":{"docs":{},"常":{"docs":{},"比":{"docs":{},"锁":{"docs":{},"更":{"docs":{},"快":{"docs":{},"。":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}}}},"针":{"docs":{},"进":{"docs":{},"行":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"回":{"docs":{},"到":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"开":{"docs":{},"头":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}},"的":{"docs":{},"是":{"docs":{},"标":{"docs":{},"记":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"一":{"docs":{},"个":{"docs":{},"进":{"docs":{},"程":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"内":{"docs":{},"存":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"不":{"docs":{},"考":{"docs":{},"虑":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"明":{"docs":{},"是":{"docs":{},"活":{"docs":{},"着":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}},"对":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"应":{"docs":{},"用":{"docs":{},"开":{"docs":{},"发":{"docs":{},"的":{"docs":{},"支":{"docs":{},"持":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"指":{"docs":{},"令":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"自":{"docs":{},"动":{"docs":{},"更":{"docs":{},"新":{"docs":{},"共":{"docs":{},"享":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"能":{"docs":{},"够":{"docs":{},"检":{"docs":{},"测":{"docs":{},"到":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"干":{"docs":{},"扰":{"docs":{},"，":{"docs":{},"而":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"调":{"docs":{},"整":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"容":{"docs":{},"量":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"和":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"常":{"docs":{},"方":{"docs":{},"便":{"docs":{},"的":{"docs":{},"打":{"docs":{},"印":{"docs":{},"功":{"docs":{},"能":{"docs":{},"。":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}},"四":{"docs":{},"种":{"docs":{},"策":{"docs":{},"略":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}},"。":{"docs":{},"关":{"docs":{},"于":{"docs":{},"分":{"docs":{},"代":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"缓":{"docs":{},"存":{"docs":{},"功":{"docs":{},"能":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}},"交":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}},"版":{"docs":{},"本":{"docs":{},"必":{"docs":{},"须":{"docs":{},"大":{"docs":{},"于":{"docs":{},"记":{"docs":{},"录":{"docs":{},"当":{"docs":{},"前":{"docs":{},"版":{"docs":{},"本":{"docs":{},"才":{"docs":{},"能":{"docs":{},"执":{"docs":{},"行":{"docs":{},"更":{"docs":{},"新":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}},"循":{"docs":{},"环":{"docs":{},"即":{"docs":{},"可":{"docs":{},"了":{"docs":{},"。":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}},"高":{"docs":{},"响":{"docs":{},"应":{"docs":{},"速":{"docs":{},"度":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"可":{"docs":{},"管":{"docs":{},"理":{"docs":{},"性":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}},"性":{"docs":{},"能":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}},"查":{"docs":{},"询":{"docs":{},"速":{"docs":{},"度":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"属":{"docs":{},"性":{"docs":{},"来":{"docs":{},"获":{"docs":{},"取":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"保":{"docs":{},"存":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"既":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"；":{"docs":{},"同":{"docs":{},"时":{"docs":{},"又":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}},"+":{"docs":{},"链":{"docs":{},"表":{"docs":{},"+":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"，":{"docs":{},"当":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"达":{"docs":{},"到":{"8":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"默":{"docs":{},"认":{"docs":{},"阈":{"docs":{},"值":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"把":{"docs":{},"链":{"docs":{},"表":{"docs":{},"转":{"docs":{},"成":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"来":{"docs":{},"把":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"从":{"docs":{},"o":{"docs":{},"（":{"docs":{},"n":{"docs":{},"）":{"docs":{},"变":{"docs":{},"成":{"docs":{},"o":{"docs":{},"（":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},"）":{"docs":{},"提":{"docs":{},"高":{"docs":{},"了":{"docs":{},"效":{"docs":{},"率":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"每":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"长":{"docs":{},"度":{"docs":{},"主":{"docs":{},"要":{"docs":{},"为":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"作":{"docs":{},"为":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"对":{"docs":{},"每":{"docs":{},"一":{"docs":{},"行":{"docs":{},"数":{"docs":{},"据":{"docs":{},"进":{"docs":{},"行":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"进":{"docs":{},"一":{"docs":{},"步":{"docs":{},"减":{"docs":{},"少":{"docs":{},"并":{"docs":{},"发":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"概":{"docs":{},"率":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}},"＋":{"docs":{},"单":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"变":{"docs":{},"更":{"docs":{},"为":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}},"＋":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}},"方":{"docs":{},"式":{"docs":{},"读":{"docs":{},"取":{"docs":{},"出":{"docs":{},"来":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"长":{"docs":{},"度":{"docs":{},"必":{"docs":{},"须":{"docs":{},"和":{"docs":{},"写":{"docs":{},"入":{"docs":{},"时":{"docs":{},"的":{"docs":{},"固":{"docs":{},"定":{"docs":{},"大":{"docs":{},"小":{"docs":{},"相":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"据":{"docs":{},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"：":{"docs":{},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"不":{"docs":{},"能":{"docs":{},"读":{"docs":{},"取":{"docs":{},"实":{"docs":{},"时":{"docs":{},"性":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"部":{"docs":{},"分":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"还":{"docs":{},"未":{"docs":{},"同":{"docs":{},"步":{"docs":{},"到":{"docs":{},"读":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"构":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}},"变":{"docs":{},"化":{"docs":{},"：":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}},"库":{"docs":{"database/database.html":{"ref":"database/database.html","tf":10.005747126436782}},"连":{"docs":{},"接":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"池":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.011494252873563218}}}}}}}},"事":{"docs":{},"务":{"docs":{},"的":{"docs":{},"四":{"docs":{},"个":{"docs":{},"特":{"docs":{},"性":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.011494252873563218}}}}}}}}},"优":{"docs":{},"化":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.011494252873563218}}}},"范":{"docs":{},"式":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}},"包":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"号":{"docs":{},"和":{"docs":{},"校":{"docs":{},"验":{"docs":{},"码":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}},"单":{"docs":{},"元":{"docs":{},"：":{"docs":{},"i":{"docs":{},"p":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},"帧":{"docs":{},"（":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"）":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}},"报":{"docs":{},"文":{"docs":{},"段":{"docs":{},"（":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"）":{"docs":{},"或":{"docs":{},"用":{"docs":{},"户":{"docs":{},"数":{"docs":{},"据":{"docs":{},"报":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"）":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}},"比":{"docs":{},"特":{"docs":{},"流":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}},"报":{"docs":{},"（":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"）":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}},"流":{"docs":{},"中":{"docs":{},"最":{"docs":{},"早":{"docs":{},"的":{"docs":{},"字":{"docs":{},"节":{"docs":{},"已":{"docs":{},"经":{"docs":{},"发":{"docs":{},"送":{"docs":{},"并":{"docs":{},"得":{"docs":{},"到":{"docs":{},"确":{"docs":{},"认":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"数":{"docs":{},"据":{"docs":{},"是":{"docs":{},"站":{"docs":{},"在":{"docs":{},"发":{"docs":{},"送":{"docs":{},"端":{"docs":{},"的":{"docs":{},"角":{"docs":{},"度":{"docs":{},"来":{"docs":{},"看":{"docs":{},"的":{"docs":{},"。":{"docs":{},"上":{"docs":{},"图":{"docs":{},"中":{"docs":{},"的":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"路":{"docs":{},"层":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}},"量":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"同":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"超":{"docs":{},"过":{"docs":{},"负":{"docs":{},"载":{"docs":{},"因":{"docs":{},"子":{"docs":{},"和":{"docs":{},"当":{"docs":{},"前":{"docs":{},"容":{"docs":{},"量":{"docs":{},"的":{"docs":{},"乘":{"docs":{},"积":{"docs":{},"时":{"docs":{},"，":{"docs":{},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"就":{"docs":{},"会":{"docs":{},"被":{"docs":{},"重":{"docs":{},"新":{"docs":{},"映":{"docs":{},"射":{"docs":{},"（":{"docs":{},"即":{"docs":{},"重":{"docs":{},"建":{"docs":{},"内":{"docs":{},"部":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"）":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"大":{"docs":{},"约":{"docs":{},"是":{"docs":{},"存":{"docs":{},"储":{"docs":{},"桶":{"docs":{},"数":{"docs":{},"量":{"docs":{},"的":{"docs":{},"两":{"docs":{},"倍":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"时":{"docs":{},"会":{"docs":{},"跳":{"docs":{},"闸":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"在":{"docs":{},"跳":{"docs":{},"闸":{"docs":{},"时":{"docs":{},"不":{"docs":{},"执":{"docs":{},"行":{"docs":{},"预":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"动":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"动":{"docs":{},"作":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"，":{"docs":{},"当":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}}}}}}}}}}},"字":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"4":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.00528169014084507}}},"docs":{}}}}}}},"是":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0025210084033613447},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{},"重":{"docs":{},"载":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"对":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"，":{"docs":{},"能":{"docs":{},"得":{"docs":{},"到":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"改":{"docs":{},"变":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"改":{"docs":{},"变":{"docs":{},"了":{"docs":{},"需":{"docs":{},"要":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}},"存":{"docs":{},"在":{"docs":{},"指":{"docs":{},"向":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"测":{"docs":{},"试":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"则":{"docs":{},"表":{"docs":{},"示":{"docs":{},"获":{"docs":{},"得":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"检":{"docs":{},"测":{"docs":{},"是":{"docs":{},"否":{"docs":{},"设":{"docs":{},"置":{"docs":{},"有":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"，":{"docs":{},"则":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"过":{"docs":{},"期":{"docs":{},"（":{"docs":{},"根":{"docs":{},"据":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}},"是":{"docs":{},"守":{"docs":{},"护":{"docs":{},"进":{"docs":{},"程":{"docs":{},"：":{"docs":{},"\"":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}},"一":{"docs":{},"个":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"继":{"docs":{},"承":{"docs":{},"于":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"，":{"docs":{},"它":{"docs":{},"继":{"docs":{},"承":{"docs":{},"于":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"类":{"docs":{},"：":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"，":{"docs":{},"它":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"是":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"它":{"docs":{},"会":{"docs":{},"保":{"docs":{},"存":{"docs":{},"被":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"双":{"docs":{},"链":{"docs":{},"表":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"典":{"docs":{},"型":{"docs":{},"且":{"docs":{},"优":{"docs":{},"秀":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"它":{"docs":{},"具":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"提":{"docs":{},"高":{"docs":{},"程":{"docs":{},"序":{"docs":{},"效":{"docs":{},"率":{"docs":{},"和":{"docs":{},"节":{"docs":{},"省":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"时":{"docs":{},"所":{"docs":{},"耗":{"docs":{},"的":{"docs":{},"开":{"docs":{},"销":{"docs":{},"的":{"docs":{},"优":{"docs":{},"点":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"，":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"时":{"docs":{},"，":{"docs":{},"即":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"可":{"docs":{},"运":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"不":{"docs":{},"会":{"docs":{},"释":{"docs":{},"放":{"docs":{},"工":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"还":{"docs":{},"会":{"docs":{},"占":{"docs":{},"用":{"docs":{},"一":{"docs":{},"定":{"docs":{},"的":{"docs":{},"系":{"docs":{},"统":{"docs":{},"资":{"docs":{},"源":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"耗":{"docs":{},"时":{"docs":{},"并":{"docs":{},"且":{"docs":{},"耗":{"docs":{},"费":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"资":{"docs":{},"源":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"把":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}},"种":{"docs":{},"非":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"其":{"docs":{},"避":{"docs":{},"免":{"docs":{},"了":{"docs":{},"线":{"docs":{},"程":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"时":{"docs":{},"的":{"docs":{},"等":{"docs":{},"待":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}},"关":{"docs":{},"系":{"docs":{},"型":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"管":{"docs":{},"理":{"docs":{},"系":{"docs":{},"统":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"开":{"docs":{},"销":{"docs":{},"就":{"docs":{},"比":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}},"基":{"docs":{},"于":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"数":{"docs":{},"组":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},"无":{"docs":{},"界":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"当":{"docs":{},"做":{"docs":{},"无":{"docs":{},"界":{"docs":{},"队":{"docs":{},"列":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"当":{"docs":{},"做":{"docs":{},"有":{"docs":{},"界":{"docs":{},"队":{"docs":{},"列":{"docs":{},"来":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"所":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}},"的":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}},"非":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925}}}}}}}},"常":{"docs":{},"有":{"docs":{},"用":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"。":{"docs":{},"以":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"值":{"docs":{},"在":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}},"它":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"规":{"docs":{},"则":{"docs":{},"是":{"docs":{},"：":{"docs":{},"根":{"docs":{},"据":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}},"风":{"docs":{},"险":{"docs":{},"的":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"小":{"docs":{},"于":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}},"用":{"docs":{},"于":{"docs":{},"关":{"docs":{},"联":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.008421052631578947}}}}},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}},"关":{"docs":{},"闭":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}},"不":{"docs":{},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},":":{"docs":{},"有":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"弱":{"docs":{},"键":{"docs":{},"，":{"docs":{},"即":{"docs":{},"是":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"映":{"docs":{},"射":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"它":{"docs":{},"支":{"docs":{},"持":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"还":{"docs":{},"会":{"docs":{},"报":{"docs":{},"这":{"docs":{},"个":{"docs":{},"错":{"docs":{},"？":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}},"继":{"docs":{},"承":{"docs":{},"于":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}}}}},"通":{"docs":{},"过":{"docs":{},"数":{"docs":{},"组":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"各":{"docs":{},"种":{"docs":{},"操":{"docs":{},"作":{"docs":{},"来":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"，":{"docs":{},"包":{"docs":{},"括":{"docs":{},"对":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"读":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"的":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"和":{"docs":{},"释":{"docs":{},"放":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"启":{"docs":{},"动":{"docs":{},"和":{"docs":{},"合":{"docs":{},"并":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"指":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{},"c":{"docs":{},"a":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}},"隶":{"docs":{},"属":{"docs":{},"于":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"如":{"docs":{},"何":{"docs":{},"为":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"创":{"docs":{},"建":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"副":{"docs":{},"本":{"docs":{},"的":{"docs":{},"：":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}},"怎":{"docs":{},"么":{"docs":{},"做":{"docs":{},"到":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"的":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}},"围":{"docs":{},"绕":{"docs":{},"着":{"docs":{},"在":{"docs":{},"并":{"docs":{},"发":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"如":{"docs":{},"何":{"docs":{},"处":{"docs":{},"理":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"、":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"和":{"docs":{},"有":{"docs":{},"序":{"docs":{},"性":{"docs":{},"这":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}},"唯":{"docs":{},"一":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"的":{"docs":{},"主":{"docs":{},"要":{"docs":{},"区":{"docs":{},"域":{"docs":{},"（":{"docs":{},"\"":{"docs":{},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}},"由":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"自":{"docs":{},"动":{"docs":{},"收":{"docs":{},"集":{"docs":{},"类":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"类":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"动":{"docs":{},"作":{"docs":{},"和":{"docs":{},"静":{"docs":{},"态":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"（":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"{":{"docs":{},"}":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"还":{"docs":{},"是":{"docs":{},"接":{"docs":{},"口":{"docs":{},"；":{"docs":{},"是":{"docs":{},"否":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"，":{"docs":{},"继":{"docs":{},"承":{"docs":{},"自":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"输":{"docs":{},"入":{"docs":{},"输":{"docs":{},"出":{"docs":{},"流":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"用":{"docs":{},"于":{"docs":{},"对":{"docs":{},"象":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"。":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}},"电":{"docs":{},"子":{"docs":{},"书":{"docs":{},"的":{"docs":{},"简":{"docs":{},"单":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"，":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}},"虚":{"docs":{},"拟":{"docs":{},"的":{"docs":{},"表":{"docs":{},"，":{"docs":{},"与":{"docs":{},"包":{"docs":{},"含":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"表":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"视":{"docs":{},"图":{"docs":{},"包":{"docs":{},"含":{"docs":{},"使":{"docs":{},"用":{"docs":{},"时":{"docs":{},"动":{"docs":{},"态":{"docs":{},"检":{"docs":{},"索":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"查":{"docs":{},"询":{"docs":{},"，":{"docs":{},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"任":{"docs":{},"何":{"docs":{},"列":{"docs":{},"或":{"docs":{},"数":{"docs":{},"据":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"电":{"docs":{},"子":{"docs":{},"书":{"docs":{},"的":{"docs":{},"目":{"docs":{},"录":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}},"浅":{"docs":{},"复":{"docs":{},"制":{"docs":{},"：":{"docs":{},"被":{"docs":{},"复":{"docs":{},"制":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"变":{"docs":{},"量":{"docs":{},"都":{"docs":{},"含":{"docs":{},"有":{"docs":{},"与":{"docs":{},"原":{"docs":{},"来":{"docs":{},"对":{"docs":{},"象":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"而":{"docs":{},"所":{"docs":{},"有":{"docs":{},"对":{"docs":{},"其":{"docs":{},"他":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"指":{"docs":{},"向":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"换":{"docs":{},"言":{"docs":{},"之":{"docs":{},"，":{"docs":{},"浅":{"docs":{},"复":{"docs":{},"制":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"复":{"docs":{},"制":{"docs":{},"所":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"复":{"docs":{},"制":{"docs":{},"它":{"docs":{},"所":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"深":{"docs":{},"复":{"docs":{},"制":{"docs":{},"：":{"docs":{},"被":{"docs":{},"复":{"docs":{},"制":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"变":{"docs":{},"量":{"docs":{},"都":{"docs":{},"含":{"docs":{},"有":{"docs":{},"与":{"docs":{},"原":{"docs":{},"来":{"docs":{},"对":{"docs":{},"象":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"除":{"docs":{},"去":{"docs":{},"那":{"docs":{},"些":{"docs":{},"引":{"docs":{},"用":{"docs":{},"其":{"docs":{},"他":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{},"那":{"docs":{},"些":{"docs":{},"引":{"docs":{},"用":{"docs":{},"其":{"docs":{},"他":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"将":{"docs":{},"指":{"docs":{},"向":{"docs":{},"被":{"docs":{},"复":{"docs":{},"制":{"docs":{},"的":{"docs":{},"新":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"再":{"docs":{},"是":{"docs":{},"原":{"docs":{},"有":{"docs":{},"的":{"docs":{},"那":{"docs":{},"些":{"docs":{},"被":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"换":{"docs":{},"言":{"docs":{},"之":{"docs":{},"，":{"docs":{},"深":{"docs":{},"复":{"docs":{},"制":{"docs":{},"把":{"docs":{},"复":{"docs":{},"制":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"所":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"都":{"docs":{},"复":{"docs":{},"制":{"docs":{},"了":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"入":{"docs":{},"理":{"docs":{},"解":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}},"的":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0031124944419742106},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.004310344827586207},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}},"缩":{"docs":{},"写":{"docs":{},"，":{"docs":{},"指":{"docs":{},"的":{"docs":{},"是":{"docs":{},"精":{"docs":{},"确":{"docs":{},"浮":{"docs":{},"点":{"docs":{},"，":{"docs":{},"它":{"docs":{},"用":{"docs":{},"来":{"docs":{},"确":{"docs":{},"保":{"docs":{},"浮":{"docs":{},"点":{"docs":{},"数":{"docs":{},"运":{"docs":{},"算":{"docs":{},"的":{"docs":{},"准":{"docs":{},"确":{"docs":{},"性":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}},"参":{"docs":{},"数":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"为":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"的":{"docs":{},"变":{"docs":{},"长":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"数":{"docs":{},"组":{"docs":{},"作":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"包":{"docs":{},"装":{"docs":{},"类":{"docs":{},"型":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"些":{"docs":{},"基":{"docs":{},"本":{"docs":{},"特":{"docs":{},"性":{"docs":{},"：":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"影":{"docs":{},"响":{"docs":{},"其":{"docs":{},"性":{"docs":{},"能":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"：":{"docs":{},"初":{"docs":{},"始":{"docs":{},"容":{"docs":{},"量":{"docs":{},"和":{"docs":{},"负":{"docs":{},"载":{"docs":{},"因":{"docs":{},"子":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"础":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"它":{"docs":{},"同":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"显":{"docs":{},"著":{"docs":{},"优":{"docs":{},"点":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"种":{"docs":{},"控":{"docs":{},"制":{"docs":{},"网":{"docs":{},"络":{"docs":{},"流":{"docs":{},"量":{"docs":{},"的":{"docs":{},"技":{"docs":{},"术":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"它":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"当":{"docs":{},"作":{"docs":{},"堆":{"docs":{},"栈":{"docs":{},"、":{"docs":{},"队":{"docs":{},"列":{"docs":{},"或":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"进":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"出":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"制":{"docs":{},"化":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}},"比":{"docs":{},"较":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"实":{"docs":{},"现":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"类":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"便":{"docs":{},"利":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"继":{"docs":{},"承":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"中":{"docs":{},"，":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"也":{"docs":{},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"过":{"docs":{},"长":{"docs":{},"时":{"docs":{},"会":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}},"吗":{"docs":{},"？":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"要":{"docs":{},"这":{"docs":{},"样":{"docs":{},"实":{"docs":{},"现":{"docs":{},"？":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}},"不":{"docs":{},"是":{"docs":{},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"它":{"docs":{},"不":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{},"它":{"docs":{},"的":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"、":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"。":{"docs":{},"此":{"docs":{},"外":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"不":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"原":{"docs":{},"理":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178}}}}}}}},"：":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"）":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"即":{"docs":{},"内":{"docs":{},"部":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"定":{"docs":{},"时":{"docs":{},"调":{"docs":{},"度":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}},"例":{"docs":{},"为":{"docs":{},"公":{"docs":{},"平":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"（":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"）":{"docs":{},"或":{"docs":{},"不":{"docs":{},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"（":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"）":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"（":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"）":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"口":{"docs":{},"。":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}},"，":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}},"相":{"docs":{},"比":{"docs":{},"于":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}},"函":{"docs":{},"数":{"docs":{},"将":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"查":{"docs":{},"找":{"docs":{},"效":{"docs":{},"率":{"docs":{},"，":{"docs":{},"且":{"docs":{},"内":{"docs":{},"部":{"docs":{},"使":{"docs":{},"用":{"docs":{},"链":{"docs":{},"表":{"docs":{},"维":{"docs":{},"护":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}}}}}}}}},"核":{"docs":{},"心":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"维":{"docs":{},"护":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"当":{"docs":{},"然":{"docs":{},"是":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"向":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"提":{"docs":{},"交":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"交":{"docs":{},"由":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"去":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}},"重":{"docs":{},"要":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"如":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}},"：":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}}}}},"成":{"docs":{},"员":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}},"非":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}},"阻":{"docs":{},"塞":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{},"其":{"docs":{},"它":{"docs":{},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"是":{"docs":{},"利":{"docs":{},"用":{"docs":{},"类":{"docs":{},"似":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"完":{"docs":{},"成":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}},"时":{"docs":{},"，":{"docs":{},"基":{"docs":{},"本":{"docs":{},"分":{"docs":{},"两":{"docs":{},"步":{"docs":{},"：":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"了":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}},"肯":{"docs":{},"定":{"docs":{},"就":{"docs":{},"会":{"docs":{},"出":{"docs":{},"问":{"docs":{},"题":{"docs":{},"了":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}},"各":{"docs":{},"个":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{},"都":{"docs":{},"遵":{"docs":{},"循":{"docs":{},"了":{"docs":{},"这":{"docs":{},"些":{"docs":{},"规":{"docs":{},"则":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}},"种":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"容":{"docs":{},"量":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"有":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"限":{"docs":{},"制":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"容":{"docs":{},"量":{"docs":{},"已":{"docs":{},"满":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"新":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"为":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}},"器":{"docs":{},"性":{"docs":{},"能":{"docs":{},"要":{"docs":{},"差":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}},"插":{"docs":{},"入":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}},"特":{"docs":{},"征":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}},"性":{"docs":{},"是":{"docs":{},"：":{"docs":{},"当":{"docs":{},"队":{"docs":{},"列":{"docs":{},"是":{"docs":{},"空":{"docs":{},"的":{"docs":{},"时":{"docs":{},"，":{"docs":{},"从":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"获":{"docs":{},"取":{"docs":{},"或":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"将":{"docs":{},"会":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"当":{"docs":{},"队":{"docs":{},"列":{"docs":{},"是":{"docs":{},"满":{"docs":{},"时":{"docs":{},"，":{"docs":{},"往":{"docs":{},"队":{"docs":{},"列":{"docs":{},"里":{"docs":{},"添":{"docs":{},"加":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"会":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}}}}}}},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"版":{"docs":{},"本":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}},"中":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"可":{"docs":{},"供":{"docs":{},"任":{"docs":{},"何":{"docs":{},"对":{"docs":{},"象":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"和":{"docs":{},"同":{"docs":{},"步":{"docs":{},"器":{"docs":{},"。":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"这":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"如":{"docs":{},"何":{"docs":{},"控":{"docs":{},"制":{"docs":{},"？":{"docs":{},"高":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}}}}},"和":{"docs":{},"他":{"docs":{},"们":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"资":{"docs":{},"源":{"docs":{},"。":{"docs":{},"每":{"docs":{},"个":{"docs":{},"资":{"docs":{},"源":{"docs":{},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}},"拷":{"docs":{},"贝":{"docs":{},"这":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"对":{"docs":{},"象":{"docs":{},"到":{"docs":{},"它":{"docs":{},"的":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"后":{"docs":{},"续":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}},"数":{"docs":{},"达":{"docs":{},"到":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"数":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"是":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"到":{"docs":{},"达":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"非":{"docs":{},"空":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"则":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"允":{"docs":{},"许":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"继":{"docs":{},"续":{"docs":{},"之":{"docs":{},"前":{"docs":{},"运":{"docs":{},"行":{"docs":{},"该":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"动":{"docs":{},"作":{"docs":{},"期":{"docs":{},"间":{"docs":{},"发":{"docs":{},"生":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"该":{"docs":{},"异":{"docs":{},"常":{"docs":{},"将":{"docs":{},"在":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"传":{"docs":{},"播":{"docs":{},"并":{"docs":{},"且":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"被":{"docs":{},"置":{"docs":{},"于":{"docs":{},"断":{"docs":{},"开":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"队":{"docs":{},"列":{"docs":{},"其":{"docs":{},"实":{"docs":{},"是":{"docs":{},"虚":{"docs":{},"的":{"docs":{},"，":{"docs":{},"其":{"docs":{},"不":{"docs":{},"提":{"docs":{},"供":{"docs":{},"任":{"docs":{},"何":{"docs":{},"空":{"docs":{},"间":{"docs":{},"（":{"docs":{},"一":{"docs":{},"个":{"docs":{},"都":{"docs":{},"没":{"docs":{},"有":{"docs":{},"）":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"数":{"docs":{},"据":{"docs":{},"必":{"docs":{},"须":{"docs":{},"从":{"docs":{},"某":{"docs":{},"个":{"docs":{},"写":{"docs":{},"线":{"docs":{},"程":{"docs":{},"交":{"docs":{},"给":{"docs":{},"某":{"docs":{},"个":{"docs":{},"读":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"写":{"docs":{},"到":{"docs":{},"某":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"等":{"docs":{},"待":{"docs":{},"被":{"docs":{},"消":{"docs":{},"费":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"产":{"docs":{},"生":{"docs":{},"碰":{"docs":{},"撞":{"docs":{},"，":{"docs":{},"则":{"docs":{},"利":{"docs":{},"用":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}},"内":{"docs":{},"容":{"docs":{},"也":{"docs":{},"是":{"docs":{},"“":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"保":{"docs":{},"证":{"docs":{},"次":{"docs":{},"序":{"docs":{},"”":{"docs":{},"。":{"docs":{},"但":{"docs":{},"和":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"“":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"保":{"docs":{},"证":{"docs":{},"次":{"docs":{},"序":{"docs":{},"”":{"docs":{},"！":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}},"部":{"docs":{},"类":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}},"分":{"docs":{},"布":{"docs":{},"已":{"docs":{},"经":{"docs":{},"很":{"docs":{},"不":{"docs":{},"错":{"docs":{},"了":{"docs":{},"，":{"docs":{},"就":{"docs":{},"算":{"docs":{},"是":{"docs":{},"发":{"docs":{},"生":{"docs":{},"了":{"docs":{},"碰":{"docs":{},"撞":{"docs":{},"也":{"docs":{},"用":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}},"析":{"docs":{},"结":{"docs":{},"果":{"docs":{},"后":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"浏":{"docs":{},"览":{"docs":{},"器":{"docs":{},"中":{"docs":{},"查":{"docs":{},"看":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}},"占":{"docs":{},"用":{"docs":{},"情":{"docs":{},"况":{"docs":{},"自":{"docs":{},"动":{"docs":{},"调":{"docs":{},"整":{"docs":{},"容":{"docs":{},"量":{"docs":{},"(":{"docs":{},"超":{"docs":{},"过":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}},"原":{"docs":{},"理":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.007183908045977011}},"吗":{"docs":{},"？":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"和":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}},"子":{"docs":{},"条":{"docs":{},"件":{"docs":{},"更":{"docs":{},"新":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"；":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}},"唯":{"docs":{},"一":{"docs":{},"性":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"大":{"docs":{},"小":{"docs":{},"超":{"docs":{},"过":{"docs":{},"了":{"docs":{},"负":{"docs":{},"载":{"docs":{},"因":{"docs":{},"子":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}},"，":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"比":{"docs":{},"例":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"密":{"docs":{},"钥":{"docs":{},"是":{"docs":{},"降":{"docs":{},"低":{"docs":{},"任":{"docs":{},"何":{"docs":{},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"性":{"docs":{},"能":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"改":{"docs":{},"善":{"docs":{},"影":{"docs":{},"响":{"docs":{},"，":{"docs":{},"当":{"docs":{},"键":{"docs":{},"是":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"工":{"docs":{},"作":{"docs":{},"原":{"docs":{},"理":{"docs":{},"吗":{"docs":{},"？":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"幂":{"docs":{},"，":{"docs":{},"而":{"docs":{},"计":{"docs":{},"算":{"docs":{},"下":{"docs":{},"标":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"是":{"docs":{},"这":{"docs":{},"样":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"(":{"docs":{},"使":{"docs":{},"用":{"docs":{},"&":{"docs":{},"位":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"而":{"docs":{},"非":{"docs":{},"%":{"docs":{},"求":{"docs":{},"余":{"docs":{},")":{"docs":{},"：":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"性":{"docs":{},"能":{"docs":{},"提":{"docs":{},"升":{"docs":{},"一":{"docs":{},"文":{"docs":{},"中":{"docs":{},"有":{"docs":{},"性":{"docs":{},"能":{"docs":{},"测":{"docs":{},"试":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"，":{"docs":{},"它":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"改":{"docs":{},"动":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"方":{"docs":{},"法":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"外":{"docs":{},"声":{"docs":{},"明":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}},"句":{"docs":{},"柄":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"句":{"docs":{},"柄":{"docs":{},"所":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"类":{"docs":{},"没":{"docs":{},"有":{"docs":{},"进":{"docs":{},"行":{"docs":{},"过":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"则":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"触":{"docs":{},"发":{"docs":{},"其":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"；":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"式":{"docs":{},"设":{"docs":{},"置":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"为":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"来":{"docs":{},"保":{"docs":{},"证":{"docs":{},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"对":{"docs":{},"多":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"循":{"docs":{},"环":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"收":{"docs":{},"集":{"docs":{},"。":{"docs":{},"当":{"docs":{},"内":{"docs":{},"存":{"docs":{},"不":{"docs":{},"足":{"docs":{},"时":{"docs":{},"，":{"docs":{},"串":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}},"时":{"docs":{},"候":{"docs":{},"才":{"docs":{},"为":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"，":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"重":{"docs":{},"新":{"docs":{},"计":{"docs":{},"算":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"只":{"docs":{},"要":{"docs":{},"不":{"docs":{},"是":{"docs":{},"放":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"分":{"docs":{},"段":{"docs":{},"中":{"docs":{},"，":{"docs":{},"就":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"真":{"docs":{},"正":{"docs":{},"的":{"docs":{},"并":{"docs":{},"行":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"，":{"docs":{},"在":{"docs":{},"统":{"docs":{},"计":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"就":{"docs":{},"是":{"docs":{},"获":{"docs":{},"取":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"自":{"docs":{},"动":{"docs":{},"生":{"docs":{},"成":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"做":{"docs":{},"一":{"docs":{},"些":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"事":{"docs":{},"情":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"就":{"docs":{},"是":{"docs":{},"磁":{"docs":{},"盘":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}},"间":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"单":{"docs":{},"位":{"docs":{},"，":{"docs":{},"有":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}},"只":{"docs":{},"有":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"可":{"docs":{},"能":{"docs":{},"因":{"docs":{},"此":{"docs":{},"增":{"docs":{},"加":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"达":{"docs":{},"到":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"间":{"docs":{},"隔":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"有":{"docs":{},"效":{"docs":{},"位":{"docs":{},"，":{"docs":{},"当":{"docs":{},"然":{"docs":{},"容":{"docs":{},"易":{"docs":{},"碰":{"docs":{},"撞":{"docs":{},"了":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}},"理":{"docs":{},"解":{"docs":{},"：":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"缓":{"docs":{},"存":{"docs":{},"中":{"docs":{},"特":{"docs":{},"别":{"docs":{},"有":{"docs":{},"用":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"移":{"docs":{},"除":{"docs":{},"最":{"docs":{},"近":{"docs":{},"最":{"docs":{},"久":{"docs":{},"未":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"保":{"docs":{},"证":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"足":{"docs":{},"够":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"都":{"docs":{},"是":{"docs":{},"热":{"docs":{},"点":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"自":{"docs":{},"然":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"或":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"器":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"计":{"docs":{},"算":{"docs":{},"中":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"不":{"docs":{},"会":{"docs":{},"有":{"docs":{},"太":{"docs":{},"大":{"docs":{},"的":{"docs":{},"开":{"docs":{},"销":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}},"话":{"docs":{},"索":{"docs":{},"引":{"docs":{},"变":{"docs":{},"成":{"docs":{},"“":{"docs":{},"原":{"docs":{},"索":{"docs":{},"引":{"docs":{},"+":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"”":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"看":{"docs":{},"下":{"docs":{},"图":{"docs":{},"为":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"变":{"docs":{},"，":{"docs":{},"是":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"就":{"docs":{},"会":{"docs":{},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"计":{"docs":{},"算":{"docs":{},"下":{"docs":{},"标":{"docs":{},"时":{"docs":{},"，":{"docs":{},"先":{"docs":{},"对":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"同":{"docs":{},"时":{"docs":{},"有":{"docs":{},"对":{"docs":{},"象":{"docs":{},"要":{"docs":{},"放":{"docs":{},"入":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"，":{"docs":{},"而":{"docs":{},"此":{"docs":{},"时":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"空":{"docs":{},"间":{"docs":{},"不":{"docs":{},"足":{"docs":{},"（":{"docs":{},"有":{"docs":{},"时":{"docs":{},"候":{"docs":{},"“":{"docs":{},"空":{"docs":{},"间":{"docs":{},"不":{"docs":{},"足":{"docs":{},"”":{"docs":{},"是":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"的":{"docs":{},"把":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"分":{"docs":{},"散":{"docs":{},"到":{"docs":{},"新":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"说":{"docs":{},"就":{"docs":{},"是":{"docs":{},"把":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"它":{"docs":{},"在":{"docs":{},"整":{"docs":{},"个":{"docs":{},"回":{"docs":{},"收":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"耗":{"docs":{},"时":{"docs":{},"最":{"docs":{},"长":{"docs":{},"，":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}},"键":{"docs":{},"值":{"docs":{},"，":{"docs":{},"是":{"docs":{},"非":{"docs":{},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}},"是":{"docs":{},"弱":{"docs":{},"键":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"在":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"类":{"docs":{},"型":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}},"值":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"容":{"docs":{},"量":{"docs":{},"*":{"docs":{},"加":{"docs":{},"载":{"docs":{},"因":{"docs":{},"子":{"docs":{},"\"":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}},"放":{"docs":{},"到":{"docs":{},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}},"处":{"docs":{},"于":{"docs":{},"一":{"docs":{},"种":{"docs":{},"不":{"docs":{},"定":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"采":{"docs":{},"用":{"docs":{},"锁":{"docs":{},"可":{"docs":{},"以":{"docs":{},"解":{"docs":{},"决":{"docs":{},"此":{"docs":{},"类":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}},"被":{"docs":{},"改":{"docs":{},"变":{"docs":{},"了":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"怎":{"docs":{},"么":{"docs":{},"办":{"docs":{},"？":{"docs":{},"a":{"docs":{},"+":{"docs":{},"+":{"docs":{},"还":{"docs":{},"执":{"docs":{},"行":{"docs":{},"吗":{"docs":{},"？":{"docs":{},"出":{"docs":{},"现":{"docs":{},"该":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"是":{"docs":{},"在":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"环":{"docs":{},"境":{"docs":{},"下":{"docs":{},"，":{"docs":{},"a":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"刷":{"docs":{},"新":{"docs":{},"回":{"docs":{},"主":{"docs":{},"存":{"docs":{},"中":{"docs":{},"去":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}},"为":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}},"等":{"docs":{},"于":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}},"函":{"docs":{},"数":{"docs":{},"都":{"docs":{},"是":{"docs":{},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"它":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{},"它":{"docs":{},"的":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"、":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"都":{"docs":{},"不":{"docs":{},"可":{"docs":{},"以":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"。":{"docs":{},"此":{"docs":{},"外":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"中":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"不":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"阈":{"docs":{},"值":{"docs":{},"，":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}},"三":{"docs":{},"大":{"docs":{},"问":{"docs":{},"题":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}},"区":{"docs":{},"别":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}},"处":{"docs":{},"理":{"docs":{},"速":{"docs":{},"度":{"docs":{},"。":{"docs":{},"软":{"docs":{},"件":{"docs":{},"资":{"docs":{},"源":{"docs":{},"限":{"docs":{},"制":{"docs":{},"有":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"的":{"docs":{},"连":{"docs":{},"接":{"docs":{},"数":{"docs":{},"和":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}},"器":{"docs":{},"上":{"docs":{},"，":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}}}}}}}}}},"并":{"docs":{},"发":{"docs":{},"采":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"共":{"docs":{},"享":{"docs":{},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}},"替":{"docs":{},"换":{"docs":{},"为":{"docs":{},"指":{"docs":{},"向":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"都":{"docs":{},"有":{"docs":{},"用":{"docs":{},"于":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"通":{"docs":{},"信":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"成":{"docs":{},"为":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"简":{"docs":{},"单":{"docs":{},"总":{"docs":{},"结":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}},"公":{"docs":{},"平":{"docs":{},"性":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"依":{"docs":{},"然":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"同":{"docs":{},"步":{"docs":{},"结":{"docs":{},"构":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"实":{"docs":{},"现":{"docs":{},"公":{"docs":{},"平":{"docs":{},"性":{"docs":{},"的":{"docs":{},"提":{"docs":{},"高":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"主":{"docs":{},"要":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"目":{"docs":{},"标":{"docs":{},"是":{"docs":{},"定":{"docs":{},"义":{"docs":{},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"各":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"即":{"docs":{},"在":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"中":{"docs":{},"将":{"docs":{},"变":{"docs":{},"量":{"docs":{},"存":{"docs":{},"储":{"docs":{},"到":{"docs":{},"内":{"docs":{},"存":{"docs":{},"和":{"docs":{},"从":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"取":{"docs":{},"出":{"docs":{},"变":{"docs":{},"量":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"底":{"docs":{},"层":{"docs":{},"细":{"docs":{},"节":{"docs":{},"。":{"docs":{},"此":{"docs":{},"处":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"与":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"和":{"docs":{},"执":{"docs":{},"行":{"docs":{},"成":{"docs":{},"本":{"docs":{},"更":{"docs":{},"低":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"不":{"docs":{},"会":{"docs":{},"引":{"docs":{},"起":{"docs":{},"线":{"docs":{},"程":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"的":{"docs":{},"切":{"docs":{},"换":{"docs":{},"和":{"docs":{},"调":{"docs":{},"度":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"应":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}}}}}},"执":{"docs":{},"行":{"docs":{},"效":{"docs":{},"率":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}},"时":{"docs":{},"间":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"比":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"要":{"docs":{},"点":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.005747126436781609}}}},"读":{"docs":{},"/":{"docs":{},"写":{"docs":{},"和":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}},"操":{"docs":{},"作":{"docs":{},"是":{"docs":{},"不":{"docs":{},"用":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"，":{"docs":{},"性":{"docs":{},"能":{"docs":{},"很":{"docs":{},"高":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}},"现":{"docs":{},"代":{"docs":{},"计":{"docs":{},"算":{"docs":{},"机":{"docs":{},"上":{"docs":{},"同":{"docs":{},"时":{"docs":{},"运":{"docs":{},"行":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"是":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"。":{"docs":{},"每":{"docs":{},"个":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"何":{"docs":{},"操":{"docs":{},"作":{"docs":{},"之":{"docs":{},"前":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"检":{"docs":{},"查":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}},"单":{"docs":{},"向":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"载":{"docs":{},"及":{"docs":{},"安":{"docs":{},"装":{"docs":{},"，":{"docs":{},"如":{"docs":{},"图":{"docs":{},"：":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"十":{"docs":{},"分":{"docs":{},"相":{"docs":{},"似":{"docs":{},"，":{"docs":{},"区":{"docs":{},"别":{"docs":{},"仅":{"docs":{},"在":{"docs":{},"于":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"以":{"docs":{},"及":{"docs":{},"节":{"docs":{},"点":{"docs":{},"出":{"docs":{},"队":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"有":{"docs":{},"所":{"docs":{},"不":{"docs":{},"同":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"片":{"docs":{},"段":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}},"理":{"docs":{},"类":{"docs":{},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"，":{"docs":{},"其":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"是":{"docs":{},"共":{"docs":{},"享":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"其":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"是":{"docs":{},"独":{"docs":{},"享":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"共":{"docs":{},"享":{"docs":{},"锁":{"docs":{},"可":{"docs":{},"保":{"docs":{},"证":{"docs":{},"并":{"docs":{},"发":{"docs":{},"读":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"高":{"docs":{},"效":{"docs":{},"的":{"docs":{},"，":{"docs":{},"读":{"docs":{},"写":{"docs":{},"，":{"docs":{},"写":{"docs":{},"读":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"步":{"docs":{},"机":{"docs":{},"制":{"docs":{},"几":{"docs":{},"乎":{"docs":{},"完":{"docs":{},"全":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}},"声":{"docs":{},"明":{"docs":{},"中":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"了":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"完":{"docs":{},"整":{"docs":{},"流":{"docs":{},"程":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"以":{"docs":{},"一":{"docs":{},"幅":{"docs":{},"图":{"docs":{},"来":{"docs":{},"说":{"docs":{},"明":{"docs":{},"：":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"度":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"任":{"docs":{},"何":{"docs":{},"办":{"docs":{},"法":{"docs":{},"使":{"docs":{},"其":{"docs":{},"变":{"docs":{},"成":{"docs":{},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}},"等":{"docs":{},"待":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"缺":{"docs":{},"陷":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"初":{"docs":{},"始":{"docs":{},"数":{"docs":{},"量":{"docs":{},"可":{"docs":{},"通":{"docs":{},"过":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"指":{"docs":{},"定":{"docs":{},"。":{"docs":{},"每":{"docs":{},"次":{"docs":{},"执":{"docs":{},"行":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}},"并":{"docs":{},"放":{"docs":{},"到":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}},"众":{"docs":{},"多":{"docs":{},"缺":{"docs":{},"陷":{"docs":{},"。":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}},"信":{"docs":{},"息":{"docs":{},"、":{"docs":{},"常":{"docs":{},"量":{"docs":{},"、":{"docs":{},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"等":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"当":{"docs":{},"系":{"docs":{},"统":{"docs":{},"中":{"docs":{},"要":{"docs":{},"加":{"docs":{},"载":{"docs":{},"的":{"docs":{},"类":{"docs":{},"、":{"docs":{},"反":{"docs":{},"射":{"docs":{},"的":{"docs":{},"类":{"docs":{},"和":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"较":{"docs":{},"多":{"docs":{},"时":{"docs":{},"，":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"被":{"docs":{},"占":{"docs":{},"满":{"docs":{},"，":{"docs":{},"在":{"docs":{},"未":{"docs":{},"配":{"docs":{},"置":{"docs":{},"为":{"docs":{},"采":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"可":{"docs":{},"以":{"docs":{},"轻":{"docs":{},"松":{"docs":{},"地":{"docs":{},"知":{"docs":{},"道":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}},"后":{"docs":{},"备":{"docs":{},"预":{"docs":{},"案":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"场":{"docs":{},"合":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"景":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"具":{"docs":{},"备":{"docs":{},"类":{"docs":{},"卸":{"docs":{},"载":{"docs":{},"功":{"docs":{},"能":{"docs":{},"，":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"不":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"内":{"docs":{},"存":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"堆":{"docs":{},"看":{"docs":{},"起":{"docs":{},"来":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"样":{"docs":{},"子":{"docs":{},"。":{"docs":{},"对":{"docs":{},"象":{"docs":{},"分":{"docs":{},"散":{"docs":{},"在":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"区":{"docs":{},"域":{"docs":{},"里":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}},"栈":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"根":{"docs":{},"据":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"可":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"存":{"docs":{},"活":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"一":{"docs":{},"块":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"收":{"docs":{},"集":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"轻":{"docs":{},"代":{"docs":{},"*":{"docs":{},"*":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"回":{"docs":{},"收":{"docs":{},"做":{"docs":{},"以":{"docs":{},"下":{"docs":{},"总":{"docs":{},"结":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"收":{"docs":{},"集":{"docs":{},"*":{"docs":{},"*":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"也":{"docs":{},"会":{"docs":{},"执":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"g":{"1":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"docs":{}}}}},"数":{"docs":{},"据":{"docs":{},"合":{"docs":{},"并":{"docs":{},"到":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"整":{"docs":{},"数":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"析":{"docs":{},"构":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"做":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"外":{"docs":{},"部":{"docs":{},"资":{"docs":{},"源":{"docs":{},"等":{"docs":{},"工":{"docs":{},"作":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}},"概":{"docs":{},"念":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"将":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"一":{"docs":{},"整":{"docs":{},"块":{"docs":{},"内":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"划":{"docs":{},"分":{"docs":{},"成":{"docs":{},"多":{"docs":{},"个":{"docs":{},"的":{"docs":{},"小":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"每":{"docs":{},"个":{"docs":{},"小":{"docs":{},"空":{"docs":{},"间":{"docs":{},"可":{"docs":{},"以":{"docs":{},"单":{"docs":{},"独":{"docs":{},"进":{"docs":{},"行":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"划":{"docs":{},"分":{"docs":{},"方":{"docs":{},"法":{"docs":{},"带":{"docs":{},"来":{"docs":{},"了":{"docs":{},"很":{"docs":{},"大":{"docs":{},"的":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"性":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"可":{"docs":{},"预":{"docs":{},"测":{"docs":{},"的":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"时":{"docs":{},"间":{"docs":{},"模":{"docs":{},"型":{"docs":{},"成":{"docs":{},"为":{"docs":{},"可":{"docs":{},"能":{"docs":{},"。":{"docs":{},"通":{"docs":{},"过":{"docs":{},"记":{"docs":{},"录":{"docs":{},"每":{"docs":{},"个":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"触":{"docs":{},"发":{"docs":{},"条":{"docs":{},"件":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}}}},"频":{"docs":{},"率":{"docs":{},"，":{"docs":{},"也":{"docs":{},"即":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"间":{"docs":{},"歇":{"docs":{},"性":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"强":{"docs":{},"烈":{"docs":{},"建":{"docs":{},"议":{"docs":{},"能":{"docs":{},"不":{"docs":{},"使":{"docs":{},"用":{"docs":{},"此":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"不":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"让":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"自":{"docs":{},"己":{"docs":{},"去":{"docs":{},"管":{"docs":{},"理":{"docs":{},"它":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{},"可":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"。":{"docs":{},"你":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"以":{"docs":{},"为":{"docs":{},"减":{"docs":{},"少":{"docs":{},"进":{"docs":{},"入":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"数":{"docs":{},"量":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"把":{"docs":{},"它":{"docs":{},"们":{"docs":{},"留":{"docs":{},"在":{"docs":{},"新":{"docs":{},"生":{"docs":{},"代":{"docs":{},"，":{"docs":{},"事":{"docs":{},"实":{"docs":{},"正":{"docs":{},"好":{"docs":{},"相":{"docs":{},"反":{"docs":{},"，":{"docs":{},"新":{"docs":{},"生":{"docs":{},"代":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"调":{"docs":{},"节":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"升":{"docs":{},"高":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"动":{"docs":{},"态":{"docs":{},"绑":{"docs":{},"定":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}},"语":{"docs":{},"言":{"docs":{},"支":{"docs":{},"持":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}},"子":{"docs":{},"类":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"和":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}},"常":{"docs":{},"量":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"几":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"十":{"docs":{},"六":{"docs":{},"进":{"docs":{},"制":{"docs":{},"值":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"为":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"含":{"docs":{},"义":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"思":{"docs":{},"路":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"呢":{"docs":{},"？":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"x":{"docs":{},"m":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"次":{"docs":{},"数":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"j":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"监":{"docs":{},"听":{"docs":{},"端":{"docs":{},"口":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"详":{"docs":{},"细":{"docs":{},"说":{"docs":{},"明":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"模":{"docs":{},"式":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"以":{"docs":{},"只":{"docs":{},"读":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"打":{"docs":{},"开":{"docs":{},"文":{"docs":{},"件":{"docs":{},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"：":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}},"作":{"docs":{},"用":{"docs":{},"则":{"docs":{},"是":{"docs":{},"针":{"docs":{},"对":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"读":{"docs":{},"取":{"docs":{},"，":{"docs":{},"其":{"docs":{},"原":{"docs":{},"理":{"docs":{},"与":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}},"七":{"docs":{},"层":{"docs":{},"体":{"docs":{},"系":{"docs":{},"结":{"docs":{},"构":{"docs":{},"概":{"docs":{},"念":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"，":{"docs":{},"理":{"docs":{},"论":{"docs":{},"完":{"docs":{},"整":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"比":{"docs":{},"较":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"且":{"docs":{},"不":{"docs":{},"实":{"docs":{},"用":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"并":{"docs":{},"不":{"docs":{},"流":{"docs":{},"行":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"交":{"docs":{},"互":{"docs":{},"是":{"docs":{},"一":{"docs":{},"次":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"块":{"docs":{},"（":{"docs":{},"大":{"docs":{},"小":{"docs":{},"不":{"docs":{},"等":{"docs":{},"）":{"docs":{},"，":{"docs":{},"但":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}},"包":{"docs":{},"丢":{"docs":{},"失":{"docs":{},"了":{"docs":{},"，":{"docs":{},"立":{"docs":{},"刻":{"docs":{},"进":{"docs":{},"行":{"docs":{},"重":{"docs":{},"传":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}},"设":{"docs":{},"置":{"docs":{},"：":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}},"运":{"docs":{},"行":{"docs":{},"环":{"docs":{},"境":{"docs":{},"（":{"docs":{},"安":{"docs":{},"装":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}},"目":{"docs":{},"前":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}},"标":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"录":{"docs":{},"中":{"docs":{},"也":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"加":{"docs":{},"载":{"docs":{},"）":{"docs":{},"类":{"docs":{},"库":{"docs":{},"加":{"docs":{},"载":{"docs":{},"到":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"。":{"docs":{},"启":{"docs":{},"动":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"无":{"docs":{},"法":{"docs":{},"被":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"被":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}},"，":{"docs":{},"减":{"docs":{},"少":{"docs":{},"重":{"docs":{},"复":{"docs":{},"加":{"docs":{},"载":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"结":{"docs":{},"构":{"docs":{},"长":{"docs":{},"这":{"docs":{},"样":{"docs":{},"：":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}},"里":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}},"相":{"docs":{},"比":{"docs":{},"“":{"docs":{},"=":{"docs":{},"=":{"docs":{},"”":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"，":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"之":{"docs":{},"处":{"docs":{},"就":{"docs":{},"在":{"docs":{},"于":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"让":{"docs":{},"它":{"docs":{},"不":{"docs":{},"是":{"docs":{},"比":{"docs":{},"较":{"docs":{},"引":{"docs":{},"用":{"docs":{},"而":{"docs":{},"是":{"docs":{},"比":{"docs":{},"较":{"docs":{},"数":{"docs":{},"据":{"docs":{},"内":{"docs":{},"容":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"类":{"docs":{},"的":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"用":{"docs":{},"于":{"docs":{},"比":{"docs":{},"较":{"docs":{},"两":{"docs":{},"个":{"docs":{},"独":{"docs":{},"立":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"即":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"于":{"docs":{},"上":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"让":{"docs":{},"这":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"等":{"docs":{},"待":{"docs":{},"至":{"docs":{},"一":{"docs":{},"定":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"还":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"没":{"docs":{},"有":{"docs":{},"到":{"docs":{},"达":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"将":{"docs":{},"内":{"docs":{},"存":{"docs":{},"值":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}},"当":{"docs":{},"于":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}},"较":{"docs":{},"于":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"关":{"docs":{},"内":{"docs":{},"容":{"docs":{},"将":{"docs":{},"在":{"docs":{},"下":{"docs":{},"一":{"docs":{},"篇":{"docs":{},"讲":{"docs":{},"述":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"模":{"docs":{},"型":{"docs":{},"（":{"3":{"2":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}}}}}}}}}}},"对":{"docs":{},"来":{"docs":{},"说":{"docs":{},"会":{"docs":{},"比":{"docs":{},"新":{"docs":{},"生":{"docs":{},"代":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"等":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}},"都":{"docs":{},"是":{"docs":{},"围":{"docs":{},"绕":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}}}},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"需":{"docs":{},"要":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"锁":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"需":{"docs":{},"要":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"锁":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"之":{"docs":{},"后":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"当":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"调":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"对":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}},"用":{"docs":{},"于":{"docs":{},"等":{"docs":{},"待":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"或":{"docs":{},"者":{"docs":{},"通":{"docs":{},"知":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"可":{"docs":{},"用":{"docs":{},"。":{"docs":{},"在":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}},"）":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"式":{"docs":{},"可":{"docs":{},"以":{"docs":{},"做":{"docs":{},"的":{"docs":{},"更":{"docs":{},"好":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"运":{"docs":{},"行":{"docs":{},"代":{"docs":{},"价":{"docs":{},"高":{"docs":{},"昂":{"docs":{},"，":{"docs":{},"不":{"docs":{},"确":{"docs":{},"定":{"docs":{},"性":{"docs":{},"大":{"docs":{},"，":{"docs":{},"无":{"docs":{},"法":{"docs":{},"保":{"docs":{},"证":{"docs":{},"各":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"最":{"docs":{},"好":{"docs":{},"不":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"发":{"docs":{},"容":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}},"待":{"docs":{},"指":{"docs":{},"定":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"处":{"docs":{},"于":{"docs":{},"定":{"docs":{},"时":{"docs":{},"等":{"docs":{},"待":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"是":{"docs":{},"由":{"docs":{},"于":{"docs":{},"执":{"docs":{},"行":{"docs":{},"了":{"docs":{},"以":{"docs":{},"下":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"处":{"docs":{},"于":{"docs":{},"等":{"docs":{},"待":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"是":{"docs":{},"由":{"docs":{},"于":{"docs":{},"执":{"docs":{},"行":{"docs":{},"了":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}},",":{"docs":{},"这":{"docs":{},"个":{"docs":{},"和":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"（":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"）":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"被":{"docs":{},"读":{"docs":{},"取":{"docs":{},"完":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"开":{"docs":{},"始":{"docs":{},"读":{"docs":{},"取":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"。":{"docs":{},"当":{"docs":{},"第":{"docs":{},"二":{"docs":{},"文":{"docs":{},"件":{"docs":{},"在":{"docs":{},"被":{"docs":{},"读":{"docs":{},"取":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"锁":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"队":{"docs":{},"头":{"docs":{},"，":{"docs":{},"懒":{"docs":{},"加":{"docs":{},"载":{"docs":{},"。":{"docs":{},"只":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}},"尾":{"docs":{},"，":{"docs":{},"懒":{"docs":{},"加":{"docs":{},"载":{"docs":{},"。":{"docs":{},"只":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}},"等":{"docs":{},"）":{"docs":{},"。":{"docs":{},"不":{"docs":{},"管":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"属":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"还":{"docs":{},"是":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"的":{"docs":{},"本":{"docs":{},"地":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"它":{"docs":{},"都":{"docs":{},"会":{"docs":{},"被":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"堆":{"docs":{},"区":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"其":{"docs":{},"记":{"docs":{},"下":{"docs":{},"。":{"docs":{},"除":{"docs":{},"此":{"docs":{},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"每":{"docs":{},"当":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"请":{"docs":{},"求":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"记":{"docs":{},"录":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"中":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"）":{"docs":{},"或":{"docs":{},"文":{"docs":{},"件":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"对":{"docs":{},"堆":{"docs":{},"快":{"docs":{},"照":{"docs":{},"文":{"docs":{},"件":{"docs":{},"进":{"docs":{},"行":{"docs":{},"分":{"docs":{},"析":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}},"容":{"docs":{},"器":{"docs":{},"并":{"docs":{},"发":{"docs":{},"地":{"docs":{},"进":{"docs":{},"行":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"修":{"docs":{},"改":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"报":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}},"集":{"docs":{},"合":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"组":{"docs":{},"合":{"docs":{},"和":{"docs":{},"继":{"docs":{},"承":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}},"继":{"docs":{},"承":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}},"了":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.008421052631578947},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"于":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"、":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"、":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"、":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"、":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"自":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"而":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"c":{"docs":{},"/":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"为":{"docs":{},"编":{"docs":{},"译":{"docs":{},"型":{"docs":{},"语":{"docs":{},"言":{"docs":{},"，":{"docs":{},"源":{"docs":{},"代":{"docs":{},"码":{"docs":{},"经":{"docs":{},"过":{"docs":{},"编":{"docs":{},"译":{"docs":{},"和":{"docs":{},"链":{"docs":{},"接":{"docs":{},"后":{"docs":{},"生":{"docs":{},"成":{"docs":{},"可":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"代":{"docs":{},"码":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"是":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"可":{"docs":{},"重":{"docs":{},"入":{"docs":{},"锁":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}},"为":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"正":{"docs":{},"数":{"docs":{},"时":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"值":{"docs":{},"表":{"docs":{},"示":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"或":{"docs":{},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"阈":{"docs":{},"值":{"docs":{},"；":{"docs":{},"即":{"docs":{},"如":{"docs":{},"果":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"的":{"docs":{},"实":{"docs":{},"际":{"docs":{},"大":{"docs":{},"小":{"docs":{},">":{"docs":{},"=":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"，":{"docs":{},"则":{"docs":{},"进":{"docs":{},"行":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"其":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"容":{"docs":{},"量":{"docs":{},"的":{"0":{"docs":{},".":{"7":{"5":{"docs":{},"倍":{"docs":{},"；":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"其":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"操":{"docs":{},"作":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"也":{"docs":{},"比":{"docs":{},"较":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"定":{"docs":{},"位":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"为":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"大":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"0":{"docs":{},"，":{"docs":{},"则":{"docs":{},"使":{"docs":{},"用":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"操":{"docs":{},"作":{"docs":{},"比":{"docs":{},"较":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"的":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"导":{"docs":{},"致":{"docs":{},"程":{"docs":{},"序":{"docs":{},"不":{"docs":{},"能":{"docs":{},"工":{"docs":{},"作":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}},"高":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"则":{"docs":{},"可":{"docs":{},"以":{"docs":{},"高":{"docs":{},"效":{"docs":{},"率":{"docs":{},"地":{"docs":{},"利":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"因":{"docs":{},"程":{"docs":{},"序":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"导":{"docs":{},"致":{"docs":{},"的":{"docs":{},"不":{"docs":{},"断":{"docs":{},"创":{"docs":{},"建":{"docs":{},"对":{"docs":{},"象":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}},"关":{"docs":{},"闭":{"docs":{},"连":{"docs":{},"接":{"docs":{},"时":{"docs":{},"，":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"收":{"docs":{},"到":{"docs":{},"对":{"docs":{},"方":{"docs":{},"的":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}},"覆":{"docs":{},"盖":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"关":{"docs":{},"系":{"docs":{},"中":{"docs":{},"，":{"docs":{},"调":{"docs":{},"用":{"docs":{},"方":{"docs":{},"法":{"docs":{},"体":{"docs":{},"是":{"docs":{},"根":{"docs":{},"据":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"（":{"docs":{},"对":{"docs":{},"象":{"docs":{},"对":{"docs":{},"应":{"docs":{},"存":{"docs":{},"储":{"docs":{},"空":{"docs":{},"间":{"docs":{},"类":{"docs":{},"型":{"docs":{},"）":{"docs":{},"来":{"docs":{},"决":{"docs":{},"定":{"docs":{},"；":{"docs":{},"而":{"docs":{},"重":{"docs":{},"载":{"docs":{},"关":{"docs":{},"系":{"docs":{},"是":{"docs":{},"根":{"docs":{},"据":{"docs":{},"调":{"docs":{},"用":{"docs":{},"时":{"docs":{},"的":{"docs":{},"实":{"docs":{},"参":{"docs":{},"表":{"docs":{},"与":{"docs":{},"形":{"docs":{},"参":{"docs":{},"表":{"docs":{},"来":{"docs":{},"选":{"docs":{},"择":{"docs":{},"方":{"docs":{},"法":{"docs":{},"体":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"能":{"docs":{},"由":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"只":{"docs":{},"能":{"docs":{},"由":{"docs":{},"一":{"docs":{},"对":{"docs":{},"方":{"docs":{},"法":{"docs":{},"产":{"docs":{},"生":{"docs":{},"关":{"docs":{},"系":{"docs":{},"；":{"docs":{},"重":{"docs":{},"载":{"docs":{},"是":{"docs":{},"多":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"子":{"docs":{},"类":{"docs":{},"和":{"docs":{},"父":{"docs":{},"类":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"是":{"docs":{},"垂":{"docs":{},"直":{"docs":{},"关":{"docs":{},"系":{"docs":{},"；":{"docs":{},"重":{"docs":{},"载":{"docs":{},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"中":{"docs":{},"方":{"docs":{},"法":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"是":{"docs":{},"水":{"docs":{},"平":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"指":{"docs":{},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"函":{"docs":{},"数":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"基":{"docs":{},"类":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"并":{"docs":{},"对":{"docs":{},"其":{"docs":{},"重":{"docs":{},"写":{"docs":{},"，":{"docs":{},"以":{"docs":{},"达":{"docs":{},"到":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"求":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"docs":{},"相":{"docs":{},"同":{"docs":{},"；":{"docs":{},"重":{"docs":{},"载":{"docs":{},"要":{"docs":{},"求":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"docs":{},"不":{"docs":{},"同":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}},"索":{"docs":{},"引":{"docs":{},"：":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"所":{"docs":{},"有":{"docs":{},"要":{"docs":{},"查":{"docs":{},"询":{"docs":{},"的":{"docs":{},"字":{"docs":{},"段":{"docs":{},"的":{"docs":{},"值":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}},"请":{"docs":{},"你":{"docs":{},"解":{"docs":{},"释":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"重":{"docs":{},"写":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"还":{"docs":{},"要":{"docs":{},"重":{"docs":{},"写":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"？":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.010810810810810811}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"注":{"docs":{},"意":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}},"这":{"docs":{},"篇":{"docs":{},"文":{"docs":{},"章":{"docs":{},"对":{"docs":{},"于":{"docs":{},"基":{"docs":{},"本":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"和":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"存":{"docs":{},"储":{"docs":{},"讲":{"docs":{},"述":{"docs":{},"比":{"docs":{},"较":{"docs":{},"生":{"docs":{},"动":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"默":{"docs":{},"认":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}},"类":{"docs":{},"，":{"docs":{},"不":{"docs":{},"过":{"docs":{},"它":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"是":{"docs":{},"由":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}}}}},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"被":{"docs":{},"结":{"docs":{},"构":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"结":{"docs":{},"构":{"docs":{},"修":{"docs":{},"改":{"docs":{},"是":{"docs":{},"那":{"docs":{},"些":{"docs":{},"改":{"docs":{},"变":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"数":{"docs":{},"量":{"docs":{},"或":{"docs":{},"者":{"docs":{},"修":{"docs":{},"改":{"docs":{},"其":{"docs":{},"内":{"docs":{},"部":{"docs":{},"结":{"docs":{},"构":{"docs":{},"（":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"重":{"docs":{},"新":{"docs":{},"散":{"docs":{},"列":{"docs":{},"）":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"弱":{"docs":{},"键":{"docs":{},"的":{"docs":{},"原":{"docs":{},"理":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"大":{"docs":{},"致":{"docs":{},"上":{"docs":{},"就":{"docs":{},"是":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}},"设":{"docs":{},"计":{"docs":{},"确":{"docs":{},"实":{"docs":{},"非":{"docs":{},"常":{"docs":{},"的":{"docs":{},"巧":{"docs":{},"妙":{"docs":{},"，":{"docs":{},"既":{"docs":{},"省":{"docs":{},"去":{"docs":{},"了":{"docs":{},"重":{"docs":{},"新":{"docs":{},"计":{"docs":{},"算":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"参":{"docs":{},"数":{"docs":{},"来":{"docs":{},"指":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"使":{"docs":{},"重":{"docs":{},"调":{"docs":{},"区":{"docs":{},"域":{"docs":{},"大":{"docs":{},"小":{"docs":{},"变":{"docs":{},"得":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"，":{"docs":{},"按":{"docs":{},"需":{"docs":{},"把":{"docs":{},"它":{"docs":{},"们":{"docs":{},"调":{"docs":{},"大":{"docs":{},"或":{"docs":{},"调":{"docs":{},"小":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"缀":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"后":{"docs":{},"续":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}},"命":{"docs":{},"令":{"docs":{},"意":{"docs":{},"思":{"docs":{},"就":{"docs":{},"是":{"docs":{},"每":{"docs":{},"隔":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"是":{"docs":{},"理":{"docs":{},"所":{"docs":{},"当":{"docs":{},"然":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"学":{"docs":{},"习":{"docs":{},"计":{"docs":{},"算":{"docs":{},"机":{"docs":{},"网":{"docs":{},"络":{"docs":{},"知":{"docs":{},"识":{"docs":{},"宏":{"docs":{},"观":{"docs":{},"层":{"docs":{},"面":{"docs":{},"必":{"docs":{},"须":{"docs":{},"要":{"docs":{},"了":{"docs":{},"解":{"docs":{},"的":{"docs":{},"核":{"docs":{},"心":{"docs":{},"点":{"docs":{},"。":{"docs":{},"知":{"docs":{},"道":{"docs":{},"了":{"docs":{},"这":{"docs":{},"些":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"网":{"docs":{},"络":{"docs":{},"的":{"docs":{},"体":{"docs":{},"系":{"docs":{},"结":{"docs":{},"构":{"docs":{},"就":{"docs":{},"基":{"docs":{},"本":{"docs":{},"上":{"docs":{},"了":{"docs":{},"解":{"docs":{},"了":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"里":{"docs":{},"用":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}},"的":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"包":{"docs":{},"括":{"docs":{},"类":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"弱":{"docs":{},"键":{"docs":{},"如":{"docs":{},"何":{"docs":{},"被":{"docs":{},"自":{"docs":{},"动":{"docs":{},"从":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}},"两":{"docs":{},"点":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"内":{"docs":{},"存":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"效":{"docs":{},"果":{"docs":{},"，":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"服":{"docs":{},"务":{"docs":{},"端":{"docs":{},"线":{"docs":{},"程":{"docs":{},"迅":{"docs":{},"速":{"docs":{},"地":{"docs":{},"返":{"docs":{},"回":{"docs":{},"去":{"docs":{},"监":{"docs":{},"听":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"能":{"docs":{},"够":{"docs":{},"发":{"docs":{},"送":{"docs":{},"请":{"docs":{},"求":{"docs":{},"给":{"docs":{},"服":{"docs":{},"务":{"docs":{},"端":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"服":{"docs":{},"务":{"docs":{},"也":{"docs":{},"变":{"docs":{},"得":{"docs":{},"响":{"docs":{},"应":{"docs":{},"更":{"docs":{},"快":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"特":{"docs":{},"点":{"docs":{},"是":{"docs":{},"：":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}},"机":{"docs":{},"制":{"docs":{},"的":{"docs":{},"重":{"docs":{},"点":{"docs":{},"是":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}},"样":{"docs":{},"在":{"docs":{},"获":{"docs":{},"取":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"值":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"才":{"docs":{},"能":{"docs":{},"直":{"docs":{},"接":{"docs":{},"读":{"docs":{},"取":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}},"可":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"的":{"docs":{},"往":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"添":{"docs":{},"加":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}},"三":{"docs":{},"种":{"docs":{},"锁":{"docs":{},"是":{"docs":{},"指":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"是":{"docs":{},"针":{"docs":{},"对":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"。":{"docs":{},"在":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"对":{"docs":{},"象":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"在":{"docs":{},"对":{"docs":{},"象":{"docs":{},"头":{"docs":{},"中":{"docs":{},"的":{"docs":{},"字":{"docs":{},"段":{"docs":{},"来":{"docs":{},"表":{"docs":{},"明":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"句":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"会":{"docs":{},"提":{"docs":{},"示":{"docs":{},"“":{"docs":{},"非":{"docs":{},"法":{"docs":{},"向":{"docs":{},"前":{"docs":{},"引":{"docs":{},"用":{"docs":{},"”":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}},"四":{"docs":{},"条":{"docs":{},"字":{"docs":{},"节":{"docs":{},"码":{"docs":{},"指":{"docs":{},"令":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"类":{"docs":{},"没":{"docs":{},"有":{"docs":{},"进":{"docs":{},"行":{"docs":{},"过":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"则":{"docs":{},"必":{"docs":{},"须":{"docs":{},"先":{"docs":{},"触":{"docs":{},"发":{"docs":{},"其":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"。":{"docs":{},"最":{"docs":{},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{},"生":{"docs":{},"成":{"docs":{},"这":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"张":{"docs":{},"图":{"docs":{},"片":{"docs":{},"相":{"docs":{},"对":{"docs":{},"于":{"docs":{},"上":{"docs":{},"一":{"docs":{},"张":{"docs":{},"图":{"docs":{},"片":{"docs":{},"，":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"偏":{"docs":{},"移":{"docs":{},"了":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"载":{"docs":{},"和":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"是":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"多":{"docs":{},"态":{"docs":{},"性":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"docs":{},"表":{"docs":{},"现":{"docs":{},"方":{"docs":{},"式":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.010810810810810811}}}}}}},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"主":{"docs":{},"要":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"几":{"docs":{},"个":{"docs":{},"方":{"docs":{},"面":{"docs":{},"：":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}},"重":{"docs":{},"写":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}},"是":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"中":{"docs":{},"多":{"docs":{},"态":{"docs":{},"性":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"表":{"docs":{},"现":{"docs":{},"，":{"docs":{},"是":{"docs":{},"指":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"多":{"docs":{},"个":{"docs":{},"同":{"docs":{},"名":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"或":{"docs":{},"有":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"个":{"docs":{},"数":{"docs":{},"或":{"docs":{},"有":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"写":{"docs":{},"了":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"要":{"docs":{},"属":{"docs":{},"性":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"方":{"docs":{},"法":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"是":{"docs":{},"指":{"docs":{},"当":{"docs":{},"锁":{"docs":{},"为":{"docs":{},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"是":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"，":{"docs":{},"但":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"不":{"docs":{},"会":{"docs":{},"一":{"docs":{},"直":{"docs":{},"持":{"docs":{},"续":{"docs":{},"下":{"docs":{},"去":{"docs":{},"，":{"docs":{},"当":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"一":{"docs":{},"定":{"docs":{},"次":{"docs":{},"数":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"进":{"docs":{},"入":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"该":{"docs":{},"锁":{"docs":{},"膨":{"docs":{},"胀":{"docs":{},"为":{"docs":{},"重":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"重":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"会":{"docs":{},"让":{"docs":{},"其":{"docs":{},"他":{"docs":{},"申":{"docs":{},"请":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"进":{"docs":{},"入":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"性":{"docs":{},"能":{"docs":{},"降":{"docs":{},"低":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"新":{"docs":{},"标":{"docs":{},"记":{"docs":{},"：":{"docs":{},"为":{"docs":{},"了":{"docs":{},"修":{"docs":{},"正":{"docs":{},"并":{"docs":{},"发":{"docs":{},"标":{"docs":{},"记":{"docs":{},"期":{"docs":{},"间":{"docs":{},"因":{"docs":{},"用":{"docs":{},"户":{"docs":{},"程":{"docs":{},"序":{"docs":{},"继":{"docs":{},"续":{"docs":{},"运":{"docs":{},"作":{"docs":{},"而":{"docs":{},"导":{"docs":{},"致":{"docs":{},"标":{"docs":{},"记":{"docs":{},"产":{"docs":{},"生":{"docs":{},"变":{"docs":{},"动":{"docs":{},"的":{"docs":{},"那":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"标":{"docs":{},"记":{"docs":{},"记":{"docs":{},"录":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"点":{"docs":{},"关":{"docs":{},"注":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"传":{"docs":{},"机":{"docs":{},"制":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}},"主":{"docs":{},"要":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"：":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}},"面":{"docs":{},"向":{"docs":{},"对":{"docs":{},"象":{"docs":{},"和":{"docs":{},"面":{"docs":{},"向":{"docs":{},"过":{"docs":{},"程":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}},"技":{"docs":{},"术":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.010810810810810811}}}},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"特":{"docs":{},"征":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.010810810810810811}}}}}}}}},"服":{"docs":{},"务":{"docs":{},"端":{"docs":{},"应":{"docs":{},"用":{"docs":{},"，":{"docs":{},"将":{"docs":{},"来":{"docs":{},"替":{"docs":{},"换":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"连":{"docs":{},"接":{"docs":{},"是":{"docs":{},"指":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},"的":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}},"试":{"docs":{},"问":{"docs":{},"题":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"/":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"1":{"docs":{},"）":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"值":{"docs":{},"传":{"docs":{},"递":{"docs":{},":":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}},"加":{"docs":{},"锁":{"docs":{},"顺":{"docs":{},"序":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}},"c":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"g":{"1":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"docs":{}},"堆":{"docs":{},"空":{"docs":{},"间":{"docs":{},"被":{"docs":{},"分":{"docs":{},"割":{"docs":{},"为":{"docs":{},"三":{"docs":{},"块":{"docs":{},"空":{"docs":{},"间":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"执":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"扩":{"docs":{},"大":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"空":{"docs":{},"间":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"找":{"docs":{},"出":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"检":{"docs":{},"查":{"docs":{},"程":{"docs":{},"序":{"docs":{},"，":{"docs":{},"看":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"或":{"docs":{},"不":{"docs":{},"必":{"docs":{},"要":{"docs":{},"地":{"docs":{},"重":{"docs":{},"复":{"docs":{},"创":{"docs":{},"建":{"docs":{},"大":{"docs":{},"量":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"有":{"docs":{},"则":{"docs":{},"改":{"docs":{},"之":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"类":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}},"三":{"docs":{},"次":{"docs":{},"握":{"docs":{},"手":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"用":{"docs":{},"？":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}},"四":{"docs":{},"次":{"docs":{},"挥":{"docs":{},"手":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"用":{"docs":{},"？":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}},"超":{"docs":{},"时":{"docs":{},"重":{"docs":{},"传":{"docs":{},"机":{"docs":{},"制":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}},"2":{"docs":{},"）":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"是":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"类":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"之":{"docs":{},"一":{"docs":{},"。":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"类":{"docs":{},"都":{"docs":{},"继":{"docs":{},"承":{"docs":{},"自":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"类":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"都":{"docs":{},"具":{"docs":{},"有":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"类":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"“":{"docs":{},"=":{"docs":{},"=":{"docs":{},"”":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"比":{"docs":{},"较":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"在":{"docs":{},"没":{"docs":{},"有":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},"与":{"docs":{},"“":{"docs":{},"=":{"docs":{},"=":{"docs":{},"”":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"比":{"docs":{},"较":{"docs":{},"的":{"docs":{},"是":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"传":{"docs":{},"递":{"docs":{},"：":{"docs":{},"在":{"docs":{},"方":{"docs":{},"法":{"docs":{},"调":{"docs":{},"用":{"docs":{},"中":{"docs":{},"，":{"docs":{},"传":{"docs":{},"递":{"docs":{},"的":{"docs":{},"是":{"docs":{},"对":{"docs":{},"象":{"docs":{},"（":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"作":{"docs":{},"是":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{},"）":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"形":{"docs":{},"参":{"docs":{},"与":{"docs":{},"实":{"docs":{},"参":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"所":{"docs":{},"指":{"docs":{},"向":{"docs":{},"同":{"docs":{},"一":{"docs":{},"块":{"docs":{},"存":{"docs":{},"储":{"docs":{},"单":{"docs":{},"元":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"对":{"docs":{},"形":{"docs":{},"参":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"docs":{},"就":{"docs":{},"会":{"docs":{},"影":{"docs":{},"响":{"docs":{},"实":{"docs":{},"参":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"加":{"docs":{},"锁":{"docs":{},"时":{"docs":{},"限":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}},"c":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"收":{"docs":{},"集":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"并":{"docs":{},"发":{"docs":{},"标":{"docs":{},"记":{"docs":{},"阶":{"docs":{},"段":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"j":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"使":{"docs":{},"用":{"docs":{},"内":{"docs":{},"存":{"docs":{},"分":{"docs":{},"析":{"docs":{},"工":{"docs":{},"具":{"docs":{},"（":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"m":{"docs":{},"、":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"、":{"docs":{},"j":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"扩":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"内":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"找":{"docs":{},"出":{"docs":{},"该":{"docs":{},"进":{"docs":{},"程":{"docs":{},"内":{"docs":{},"最":{"docs":{},"耗":{"docs":{},"费":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"清":{"docs":{},"理":{"docs":{},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"开":{"docs":{},"发":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"对":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}},"什":{"docs":{},"么":{"docs":{},"是":{"docs":{},"三":{"docs":{},"次":{"docs":{},"握":{"docs":{},"手":{"docs":{},"？":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}},"四":{"docs":{},"次":{"docs":{},"挥":{"docs":{},"手":{"docs":{},"？":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}},"快":{"docs":{},"速":{"docs":{},"重":{"docs":{},"传":{"docs":{},"机":{"docs":{},"制":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}},"3":{"docs":{},"）":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"从":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"类":{"docs":{},"中":{"docs":{},"继":{"docs":{},"承":{"docs":{},"过":{"docs":{},"来":{"docs":{},"的":{"docs":{},"，":{"docs":{},"它":{"docs":{},"也":{"docs":{},"用":{"docs":{},"来":{"docs":{},"鉴":{"docs":{},"定":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"返":{"docs":{},"回":{"docs":{},"对":{"docs":{},"象":{"docs":{},"在":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"地":{"docs":{},"址":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"值":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"重":{"docs":{},"写":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"任":{"docs":{},"何":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"是":{"docs":{},"不":{"docs":{},"想":{"docs":{},"等":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"死":{"docs":{},"锁":{"docs":{},"检":{"docs":{},"测":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"收":{"docs":{},"集":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"轻":{"docs":{},"代":{"docs":{},"收":{"docs":{},"集":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"重":{"docs":{},"新":{"docs":{},"标":{"docs":{},"记":{"docs":{},"阶":{"docs":{},"段":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"定":{"docs":{},"位":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"根":{"docs":{},"据":{"docs":{},"分":{"docs":{},"析":{"docs":{},"图":{"docs":{},"，":{"docs":{},"重":{"docs":{},"点":{"docs":{},"是":{"docs":{},"确":{"docs":{},"认":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"，":{"docs":{},"分":{"docs":{},"清":{"docs":{},"究":{"docs":{},"竟":{"docs":{},"是":{"docs":{},"是":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"（":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"建":{"docs":{},"立":{"docs":{},"连":{"docs":{},"接":{"docs":{},"是":{"docs":{},"三":{"docs":{},"次":{"docs":{},"握":{"docs":{},"手":{"docs":{},"，":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"连":{"docs":{},"接":{"docs":{},"确":{"docs":{},"是":{"docs":{},"四":{"docs":{},"次":{"docs":{},"挥":{"docs":{},"手":{"docs":{},"呢":{"docs":{},"？":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"三":{"docs":{},"次":{"docs":{},"握":{"docs":{},"手":{"docs":{},"？":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}},"4":{"docs":{},"）":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"复":{"docs":{},"制":{"docs":{},"/":{"docs":{},"清":{"docs":{},"理":{"docs":{},"阶":{"docs":{},"段":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"回":{"docs":{},"收":{"docs":{},"之":{"docs":{},"后":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}},"5":{"docs":{},"）":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"复":{"docs":{},"制":{"docs":{},"/":{"docs":{},"清":{"docs":{},"理":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"之":{"docs":{},"后":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}},"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"先":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"）":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}},"注":{"docs":{},"意":{"docs":{},"：":{"docs":{},"对":{"docs":{},"于":{"docs":{},"独":{"docs":{},"占":{"docs":{},"模":{"docs":{},"式":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"信":{"docs":{},"号":{"docs":{},"，":{"docs":{},"释":{"docs":{},"放":{"docs":{},"就":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"调":{"docs":{},"用":{"docs":{},"头":{"docs":{},"的":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"）":{"docs":{},"对":{"docs":{},"象":{"docs":{},"优":{"docs":{},"先":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"强":{"docs":{},"引":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"调":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"加":{"docs":{},"载":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}},"工":{"docs":{},"作":{"docs":{},"过":{"docs":{},"程":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}},"三":{"docs":{},"）":{"docs":{},"弱":{"docs":{},"引":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"空":{"docs":{},"间":{"docs":{},"分":{"docs":{},"配":{"docs":{},"担":{"docs":{},"保":{"docs":{},"失":{"docs":{},"败":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"长":{"docs":{},"期":{"docs":{},"存":{"docs":{},"活":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"进":{"docs":{},"入":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}},"准":{"docs":{},"备":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}},"实":{"docs":{},"现":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"二":{"docs":{},"）":{"docs":{},"大":{"docs":{},"对":{"docs":{},"象":{"docs":{},"直":{"docs":{},"接":{"docs":{},"进":{"docs":{},"入":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"空":{"docs":{},"间":{"docs":{},"不":{"docs":{},"足":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"软":{"docs":{},"引":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"好":{"docs":{},"处":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"验":{"docs":{},"证":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}}}},"五":{"docs":{},"）":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"空":{"docs":{},"间":{"docs":{},"分":{"docs":{},"配":{"docs":{},"担":{"docs":{},"保":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}}}}},"四":{"docs":{},"）":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"动":{"docs":{},"态":{"docs":{},"对":{"docs":{},"象":{"docs":{},"年":{"docs":{},"龄":{"docs":{},"判":{"docs":{},"定":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"虚":{"docs":{},"引":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"解":{"docs":{},"析":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}}}}},"，":{"docs":{},"用":{"docs":{},"指":{"docs":{},"针":{"docs":{},"或":{"docs":{},"者":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"。":{"docs":{},"g":{"docs":{},"o":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"不":{"docs":{},"能":{"docs":{},"运":{"docs":{},"算":{"docs":{},"。":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}}}},"于":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"设":{"docs":{},"置":{"docs":{},"执":{"docs":{},"行":{"docs":{},"多":{"docs":{},"少":{"docs":{},"次":{"docs":{},"不":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"类":{"docs":{},"似":{"docs":{},"动":{"docs":{},"态":{"docs":{},"数":{"docs":{},"组":{"docs":{"javacore/basics.html":{"ref":"javacore/basics.html","tf":0.005405405405405406}}}}}}}},"能":{"docs":{},"被":{"docs":{},"克":{"docs":{},"隆":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}},"因":{"docs":{},"为":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}},"写":{"docs":{},"写":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"是":{"docs":{},"互":{"docs":{},"斥":{"docs":{},"的":{"docs":{},"。":{"docs":{},"独":{"docs":{},"享":{"docs":{},"锁":{"docs":{},"与":{"docs":{},"共":{"docs":{},"享":{"docs":{},"锁":{"docs":{},"也":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}},"而":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}},"那":{"docs":{},"么":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"这":{"docs":{},"个":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}},"此":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"即":{"docs":{},"内":{"docs":{},"存":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"，":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}},"但":{"docs":{},"接":{"docs":{},"收":{"docs":{},"方":{"docs":{},"根":{"docs":{},"据":{"docs":{},"最":{"docs":{},"近":{"docs":{},"一":{"docs":{},"次":{"docs":{},"关":{"docs":{},"于":{"docs":{},"发":{"docs":{},"送":{"docs":{},"方":{"docs":{},"一":{"docs":{},"次":{"docs":{},"要":{"docs":{},"发":{"docs":{},"送":{"docs":{},"多":{"docs":{},"少":{"docs":{},"字":{"docs":{},"节":{"docs":{},"确":{"docs":{},"认":{"docs":{},"自":{"docs":{},"己":{"docs":{},"有":{"docs":{},"足":{"docs":{},"够":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{},"发":{"docs":{},"送":{"docs":{},"方":{"docs":{},"会":{"docs":{},"立":{"docs":{},"即":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"发":{"docs":{},"送":{"docs":{},"。":{"docs":{},"上":{"docs":{},"图":{"docs":{},"中":{"docs":{},"的":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"读":{"docs":{},"取":{"docs":{},"操":{"docs":{},"作":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"其":{"docs":{},"他":{"docs":{},"用":{"docs":{},"户":{"docs":{},"可":{"docs":{},"以":{"docs":{},"并":{"docs":{},"发":{"docs":{},"读":{"docs":{},"取":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"但":{"docs":{},"任":{"docs":{},"何":{"docs":{},"事":{"docs":{},"务":{"docs":{},"都":{"docs":{},"不":{"docs":{},"能":{"docs":{},"对":{"docs":{},"数":{"docs":{},"据":{"docs":{},"进":{"docs":{},"行":{"docs":{},"修":{"docs":{},"改":{"docs":{},"（":{"docs":{},"获":{"docs":{},"取":{"docs":{},"数":{"docs":{},"据":{"docs":{},"上":{"docs":{},"的":{"docs":{},"排":{"docs":{},"他":{"docs":{},"锁":{"docs":{},"）":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"已":{"docs":{},"释":{"docs":{},"放":{"docs":{},"所":{"docs":{},"有":{"docs":{},"共":{"docs":{},"享":{"docs":{},"锁":{"docs":{},"。":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.04395604395604396},"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.035580524344569285},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.00631578947368421},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.011904761904761904},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.057803468208092484},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.016100178890876567},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.008379888268156424},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.036105032822757115},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.027298850574712645},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.05245901639344262},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.03857142857142857},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.042801556420233464},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.030120481927710843},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.025848142164781908},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.01764705882352941},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.02789400278940028},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.01964735516372796},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.08450704225352113},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0710506424792139},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.03842716711349419},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.056179775280898875}},"=":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.015562472209871054},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.012021857923497269},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.005714285714285714},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.0041841004184100415},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}},"@":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.007111597374179431},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.005747126436781609},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.004468275245755138}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.004310344827586207}}}}}}}}}}}},"a":{"docs":{},")":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}},"r":{"docs":{},"r":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}},"a":{"docs":{},"y":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}},"s":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.04681647940074907},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099},"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"动":{"docs":{},"态":{"docs":{},"数":{"docs":{},"组":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"支":{"docs":{},"持":{"docs":{},"随":{"docs":{},"机":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"原":{"docs":{},"理":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"定":{"docs":{},"义":{"docs":{},"：":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"动":{"docs":{},"态":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{},"与":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"相":{"docs":{},"比":{"docs":{},"，":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"可":{"docs":{},"以":{"docs":{},"动":{"docs":{},"态":{"docs":{},"增":{"docs":{},"长":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"点":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"、":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"、":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},",":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}},"s":{"docs":{},",":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.02619047619047619},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"e":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"指":{"docs":{},"定":{"docs":{},"以":{"docs":{},"下":{"docs":{},"三":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"：":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"静":{"docs":{},"态":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}},"：":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"基":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"结":{"docs":{},"构":{"docs":{},"的":{"docs":{},"有":{"docs":{},"界":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"此":{"docs":{},"队":{"docs":{},"列":{"docs":{},"按":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"先":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"此":{"docs":{},"队":{"docs":{},"列":{"docs":{},"创":{"docs":{},"建":{"docs":{},"时":{"docs":{},"必":{"docs":{},"须":{"docs":{},"指":{"docs":{},"定":{"docs":{},"大":{"docs":{},"小":{"docs":{},"；":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}},"g":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"s":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.007658643326039387},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.005836575875486381},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.006024096385542169},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.006462035541195477},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}},"[":{"docs":{},"]":{"docs":{},")":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.01056338028169014},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.005291005291005291}}}}}},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.005714285714285714}},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},",":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}},"[":{"docs":{},"]":{"docs":{},")":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},",":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.005836575875486381}}}}}}},"l":{"docs":{},"a":{"docs":{},"z":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.005836575875486381}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}},"t":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"r":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}},",":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925}}}}}}}}}}}}}},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.021052631578947368}},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"有":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"，":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.023809523809523808}},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"。":{"docs":{},"它":{"docs":{},"和":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"，":{"docs":{},"且":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"但":{"docs":{},"它":{"docs":{},"继":{"docs":{},"承":{"docs":{},"于":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"没":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"e":{"docs":{},"：":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.004310344827586207},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{},"因":{"docs":{},"为":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"操":{"docs":{},"作":{"docs":{},"值":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"检":{"docs":{},"查":{"docs":{},"下":{"docs":{},"值":{"docs":{},"有":{"docs":{},"没":{"docs":{},"有":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"则":{"docs":{},"更":{"docs":{},"新":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"原":{"docs":{},"来":{"docs":{},"是":{"docs":{},"a":{"docs":{},"，":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{},"b":{"docs":{},"，":{"docs":{},"又":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{},"a":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"使":{"docs":{},"用":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"进":{"docs":{},"行":{"docs":{},"检":{"docs":{},"查":{"docs":{},"时":{"docs":{},"会":{"docs":{},"发":{"docs":{},"现":{"docs":{},"它":{"docs":{},"的":{"docs":{},"值":{"docs":{},"没":{"docs":{},"有":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"却":{"docs":{},"变":{"docs":{},"化":{"docs":{},"了":{"docs":{},"。":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"思":{"docs":{},"路":{"docs":{},"就":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"。":{"docs":{},"在":{"docs":{},"变":{"docs":{},"量":{"docs":{},"前":{"docs":{},"面":{"docs":{},"追":{"docs":{},"加":{"docs":{},"上":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"变":{"docs":{},"量":{"docs":{},"更":{"docs":{},"新":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"把":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"加":{"docs":{},"一":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"a":{"docs":{},"－":{"docs":{},"b":{"docs":{},"－":{"docs":{},"a":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"从":{"docs":{},"内":{"docs":{},"存":{"docs":{},"位":{"docs":{},"置":{"docs":{},"v":{"docs":{},"中":{"docs":{},"取":{"docs":{},"出":{"docs":{},"a":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"也":{"docs":{},"从":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"取":{"docs":{},"出":{"docs":{},"a":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"进":{"docs":{},"行":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"操":{"docs":{},"作":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{},"b":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"又":{"docs":{},"将":{"docs":{},"v":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"变":{"docs":{},"成":{"docs":{},"a":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"线":{"docs":{},"程":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"进":{"docs":{},"行":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"操":{"docs":{},"作":{"docs":{},"发":{"docs":{},"现":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"是":{"docs":{},"a":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"操":{"docs":{},"作":{"docs":{},"成":{"docs":{},"功":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"无":{"docs":{},"法":{"docs":{},"处":{"docs":{},"理":{"docs":{},"新":{"docs":{},"任":{"docs":{},"务":{"docs":{},"时":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{},"以":{"docs":{},"下":{"docs":{},"是":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"直":{"docs":{},"接":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"d":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}},"(":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"e":{"docs":{},")":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"临":{"docs":{},"界":{"docs":{},"区":{"docs":{},",":{"docs":{},"它":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"竞":{"docs":{},"态":{"docs":{},"条":{"docs":{},"件":{"docs":{},"。":{"docs":{},"在":{"docs":{},"临":{"docs":{},"界":{"docs":{},"区":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"适":{"docs":{},"当":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"避":{"docs":{},"免":{"docs":{},"竞":{"docs":{},"态":{"docs":{},"条":{"docs":{},"件":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"无":{"docs":{},"法":{"docs":{},"知":{"docs":{},"道":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"何":{"docs":{},"时":{"docs":{},"会":{"docs":{},"在":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"切":{"docs":{},"换":{"docs":{},"。":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}},"、":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"、":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"、":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"、":{"docs":{},"s":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},"l":{"docs":{},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"docs":{}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"和":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}},"，":{"docs":{},"再":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}},"i":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}},")":{"docs":{},";":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"s":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.004761904761904762}}}},"e":{"docs":{},"t":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"（":{"docs":{},"s":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\\":{"docs":{},"$":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"）":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"是":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"。":{"docs":{},"其":{"docs":{},"它":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"q":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.007142857142857143}},"s":{"docs":{},"，":{"docs":{},"非":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"和":{"docs":{},"原":{"docs":{},"子":{"docs":{},"变":{"docs":{},"量":{"docs":{},"类":{"docs":{},"（":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"而":{"docs":{},"是":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"要":{"docs":{},"这":{"docs":{},"样":{"docs":{},"呢":{"docs":{},"?":{"docs":{},"b":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},":":{"docs":{},"锁":{"docs":{},"面":{"docs":{},"向":{"docs":{},"的":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"用":{"docs":{},"户":{"docs":{},"，":{"docs":{},"而":{"docs":{},"同":{"docs":{},"步":{"docs":{},"器":{"docs":{},"面":{"docs":{},"向":{"docs":{},"的":{"docs":{},"则":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"控":{"docs":{},"制":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"在":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"中":{"docs":{},"聚":{"docs":{},"合":{"docs":{},"同":{"docs":{},"步":{"docs":{},"器":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"继":{"docs":{},"承":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"源":{"docs":{},"码":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"要":{"docs":{},"点":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"）":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}},"e":{"docs":{},"r":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}},"docs":{}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.005836575875486381}},"(":{"1":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}},"docs":{}},"docs":{}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.005836575875486381}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},",":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002857142857142857},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}},")":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0035714285714285713}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"由":{"docs":{},"于":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.01440922190201729},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.01440922190201729},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.01440922190201729}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}},"，":{"docs":{},"发":{"docs":{},"送":{"docs":{},"方":{"docs":{},"就":{"docs":{},"认":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}},"等":{"docs":{},"待":{"docs":{},"一":{"docs":{},"定":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"超":{"docs":{},"时":{"docs":{},"之":{"docs":{},"后":{"docs":{},"就":{"docs":{},"认":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"包":{"docs":{},"丢":{"docs":{},"失":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"重":{"docs":{},"新":{"docs":{},"发":{"docs":{},"送":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"等":{"docs":{},"待":{"docs":{},"时":{"docs":{},"间":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}},"）":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},":":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.008379888268156424}}},"，":{"docs":{},"但":{"docs":{},"实":{"docs":{},"际":{"docs":{},"中":{"docs":{},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}},"要":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"新":{"docs":{},"值":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}},"那":{"docs":{},"么":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}},"之":{"docs":{},"前":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}},"就":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{},"按":{"docs":{},"照":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"写":{"docs":{},"法":{"docs":{},"，":{"docs":{},"a":{"docs":{},"!":{"docs":{},"=":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"办":{"docs":{},"，":{"docs":{},"没":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}},"，":{"docs":{},"这":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"非":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}},"－":{"docs":{},"b":{"docs":{},"－":{"docs":{},"a":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}},"g":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.008802816901408451},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.01519213583556747}},"e":{"docs":{},")":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.00528169014084507}}}},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.007782101167315175},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}}},",":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}},":":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.006255585344057194}}},"=":{"3":{"0":{"docs":{},",":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}},"docs":{}},"docs":{},"\"":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.006024096385542169}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.008032128514056224}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"l":{"docs":{},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"时":{"docs":{},"，":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"通":{"docs":{},"过":{"docs":{},"原":{"docs":{},"子":{"docs":{},"方":{"docs":{},"式":{"docs":{},"用":{"docs":{},"新":{"docs":{},"值":{"docs":{},"b":{"docs":{},"来":{"docs":{},"更":{"docs":{},"新":{"docs":{},"v":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"不":{"docs":{},"会":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"何":{"docs":{},"操":{"docs":{},"作":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.004446420631391729},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"e":{"docs":{},"w":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099},"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.00631578947368421},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.007142857142857143},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0026678523788350376},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.02461706783369803},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.013114754098360656},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.010714285714285714},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.01556420233463035},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.020080321285140562},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.010084033613445379},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.009762900976290097},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.003022670025188917},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.02992957746478873},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.04157218442932729},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.01161751563896336},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.033707865168539325}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},"a":{"docs":{},"c":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"]":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}},"[":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"j":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"]":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"h":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}},"z":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"t":{"docs":{},"r":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}},"、":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"、":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"、":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"x":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},",":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},")":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"将":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"）":{"docs":{},"可":{"docs":{},"以":{"docs":{},"选":{"docs":{},"择":{"docs":{},"把":{"docs":{},"程":{"docs":{},"序":{"docs":{},"安":{"docs":{},"装":{"docs":{},"到":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"中":{"docs":{},"来":{"docs":{},"完":{"docs":{},"成":{"docs":{},"程":{"docs":{},"序":{"docs":{},"代":{"docs":{},"码":{"docs":{},"在":{"docs":{},"集":{"docs":{},"群":{"docs":{},"间":{"docs":{},"的":{"docs":{},"分":{"docs":{},"发":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.011235955056179775},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.004761904761904762},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.004446420631391729},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.02142857142857143},"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.03286384976525822}},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},".":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143}}}}}}}}}}}}},"v":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002857142857142857}}}},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143}},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},",":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0022232103156958646}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"]":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}}}}}},")":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.005}},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.005}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.007142857142857143}}},"y":{"docs":{},";":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.007142857142857143}},"l":{"docs":{},";":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0056134723336006415}},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}},"和":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825}}},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"需":{"docs":{},"要":{"docs":{},"调":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"会":{"docs":{},"释":{"docs":{},"放":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"以":{"docs":{},"便":{"docs":{},"其":{"docs":{},"他":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"这":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"线":{"docs":{},"程":{"docs":{},"持":{"docs":{},"有":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"只":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"同":{"docs":{},"步":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"他":{"docs":{},"们":{"docs":{},"只":{"docs":{},"能":{"docs":{},"在":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"者":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"中":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.00400962309542903}},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"者":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"中":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"？":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}},"被":{"docs":{},"定":{"docs":{},"义":{"docs":{},"在":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"i":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}},"w":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},";":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.014285714285714285},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.006669630947087594},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002857142857142857},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.007114273010226767},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.005},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0033613445378151263},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.01056338028169014},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0071492403932082215}}},"）":{"docs":{},"，":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.014228546020453535},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.00546448087431694},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.005578800557880056},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0031124944419742106},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},")":{"docs":{},")":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"即":{"docs":{},"与":{"docs":{},"队":{"docs":{},"列":{"docs":{},"断":{"docs":{},"开":{"docs":{},"，":{"docs":{},"无":{"docs":{},"任":{"docs":{},"何":{"docs":{},"引":{"docs":{},"用":{"docs":{},"方":{"docs":{},"便":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}},"并":{"docs":{},"且":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"说":{"docs":{},"明":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"加":{"docs":{},"入":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"）":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"作":{"docs":{},"用":{"docs":{},"是":{"docs":{},"确":{"docs":{},"定":{"docs":{},"这":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"能":{"docs":{},"被":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"接":{"docs":{},"收":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"[":{"docs":{},"]":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.00631578947368421},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.014736842105263158}},",":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.007155635062611807},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.015748031496062992},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0025188916876574307}}}}},"m":{"docs":{},"e":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.014084507042253521},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.004468275245755138}},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.0041841004184100415}}},",":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.007782101167315175},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}}},"s":{"docs":{},"[":{"docs":{},"]":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}},":":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.005361930294906166}}}}},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}}}}}}}}}}}}},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}},"时":{"docs":{},"，":{"docs":{},"则":{"docs":{},"表":{"docs":{},"示":{"docs":{},"有":{"docs":{},"n":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}},"i":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"o":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"d":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}},"=":{"0":{"docs":{},"x":{"2":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"3":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"4":{"5":{"docs":{},"c":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"5":{"4":{"docs":{},"e":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"6":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"7":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"docs":{}}}},"p":{"docs":{},"m":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.03755868544600939}},"）":{"docs":{},"，":{"docs":{},"而":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"或":{"docs":{},"报":{"docs":{},"错":{"docs":{},"，":{"docs":{},"则":{"docs":{},"你":{"docs":{},"需":{"docs":{},"要":{"docs":{},"去":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}},"{":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"}":{"docs":{},";":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}},"docs":{}}},"docs":{}}},"3":{"docs":{},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},"9":{"8":{"docs":{},".":{"3":{"docs":{},"f":{"docs":{},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}},"docs":{}}},"docs":{}},"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.018726591760299626},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.008421052631578947},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.02845709204090707},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.008379888268156424},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.06072210065645514},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.04310344827586207},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.05136612021857923},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.041428571428571426},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.04669260700389105},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.050200803212851405},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0420032310177706},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0067226890756302525},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.03905160390516039},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.003022670025188917},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.03697183098591549},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.04610733182161754},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.041108132260947276},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.02247191011235955}},"}":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.016842105263157894},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.01904761904761905},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.02208835341365462},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}},"\"":{"docs":{},"衬":{"docs":{},"衣":{"docs":{},"\"":{"docs":{},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"}":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099},"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.020599250936329586},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.010526315789473684},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.024455313472654512},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.0111731843575419},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.05415754923413567},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.03017241379310345},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.046994535519125684},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.03785714285714286},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.042801556420233464},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.040160642570281124},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.03877221324717286},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0067226890756302525},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.03905160390516039},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0025188916876574307},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.03697183098591549},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.04081632653061224},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.041108132260947276},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.02247191011235955}},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.006024096385542169}}},")":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607}}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}}}}}}}}}}}}},"一":{"docs":{},"、":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"容":{"docs":{},"器":{"docs":{},"概":{"docs":{},"述":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}},"概":{"docs":{},"览":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}},"个":{"docs":{},"原":{"docs":{},"来":{"docs":{},"长":{"docs":{},"度":{"docs":{},"两":{"docs":{},"倍":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"有":{"4":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"标":{"docs":{},"记":{"docs":{},"为":{"docs":{},"s":{"1":{"docs":{},"，":{"docs":{},"s":{"2":{"docs":{},"，":{"docs":{},"s":{"3":{"docs":{},"，":{"docs":{},"s":{"4":{"docs":{},"，":{"docs":{},"现":{"docs":{},"在":{"docs":{},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"获":{"docs":{},"取":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"子":{"docs":{},"线":{"docs":{},"程":{"docs":{},"依":{"docs":{},"然":{"docs":{},"是":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}},"本":{"docs":{},"地":{"docs":{},"变":{"docs":{},"量":{"docs":{},"也":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"本":{"docs":{},"地":{"docs":{},"引":{"docs":{},"用":{"docs":{},"会":{"docs":{},"被":{"docs":{},"存":{"docs":{},"储":{"docs":{},"到":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"对":{"docs":{},"象":{"docs":{},"本":{"docs":{},"身":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"堆":{"docs":{},"区":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"指":{"docs":{},"向":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"在":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"引":{"docs":{},"用":{"docs":{},"（":{"docs":{},"这":{"docs":{},"个":{"docs":{},"本":{"docs":{},"地":{"docs":{},"变":{"docs":{},"量":{"docs":{},"）":{"docs":{},"存":{"docs":{},"放":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"栈":{"docs":{},"上":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"对":{"docs":{},"象":{"docs":{},"本":{"docs":{},"身":{"docs":{},"存":{"docs":{},"放":{"docs":{},"在":{"docs":{},"堆":{"docs":{},"上":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"原":{"docs":{},"始":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"它":{"docs":{},"会":{"docs":{},"被":{"docs":{},"完":{"docs":{},"全":{"docs":{},"存":{"docs":{},"储":{"docs":{},"到":{"docs":{},"栈":{"docs":{},"区":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"原":{"docs":{},"始":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"在":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"它":{"docs":{},"总":{"docs":{},"是":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"栈":{"docs":{},"上":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"程":{"docs":{},"序":{"docs":{},"至":{"docs":{},"少":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"进":{"docs":{},"程":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"进":{"docs":{},"程":{"docs":{},"至":{"docs":{},"少":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"管":{"docs":{},"理":{"docs":{},"了":{"docs":{},"一":{"docs":{},"组":{"docs":{},"工":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"它":{"docs":{},"还":{"docs":{},"包":{"docs":{},"括":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"用":{"docs":{},"于":{"docs":{},"放":{"docs":{},"置":{"docs":{},"等":{"docs":{},"待":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"失":{"docs":{},"败":{"docs":{},"或":{"docs":{},"者":{"docs":{},"挂":{"docs":{},"起":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"影":{"docs":{},"响":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"失":{"docs":{},"败":{"docs":{},"或":{"docs":{},"挂":{"docs":{},"起":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"方":{"docs":{},"案":{"docs":{},"是":{"docs":{},"给":{"docs":{},"这":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"设":{"docs":{},"置":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"，":{"docs":{},"让":{"docs":{},"一":{"docs":{},"个":{"docs":{},"（":{"docs":{},"或":{"docs":{},"几":{"docs":{},"个":{"docs":{},"）":{"docs":{},"线":{"docs":{},"程":{"docs":{},"回":{"docs":{},"退":{"docs":{},"，":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"就":{"docs":{},"像":{"docs":{},"没":{"docs":{},"发":{"docs":{},"生":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"一":{"docs":{},"样":{"docs":{},"继":{"docs":{},"续":{"docs":{},"保":{"docs":{},"持":{"docs":{},"着":{"docs":{},"它":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"赋":{"docs":{},"予":{"docs":{},"这":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"是":{"docs":{},"固":{"docs":{},"定":{"docs":{},"不":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"同":{"docs":{},"一":{"docs":{},"批":{"docs":{},"线":{"docs":{},"程":{"docs":{},"总":{"docs":{},"是":{"docs":{},"会":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"更":{"docs":{},"高":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"。":{"docs":{},"为":{"docs":{},"避":{"docs":{},"免":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"发":{"docs":{},"生":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"设":{"docs":{},"置":{"docs":{},"随":{"docs":{},"机":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"可":{"docs":{},"能":{"docs":{},"包":{"docs":{},"含":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"能":{"docs":{},"包":{"docs":{},"含":{"docs":{},"本":{"docs":{},"地":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"本":{"docs":{},"地":{"docs":{},"变":{"docs":{},"量":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"存":{"docs":{},"放":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"栈":{"docs":{},"上":{"docs":{},"，":{"docs":{},"即":{"docs":{},"使":{"docs":{},"这":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"所":{"docs":{},"属":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"存":{"docs":{},"放":{"docs":{},"在":{"docs":{},"堆":{"docs":{},"上":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"可":{"docs":{},"能":{"docs":{},"随":{"docs":{},"着":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"自":{"docs":{},"身":{"docs":{},"存":{"docs":{},"放":{"docs":{},"在":{"docs":{},"堆":{"docs":{},"上":{"docs":{},"。":{"docs":{},"不":{"docs":{},"管":{"docs":{},"这":{"docs":{},"个":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"是":{"docs":{},"原":{"docs":{},"始":{"docs":{},"类":{"docs":{},"型":{"docs":{},"还":{"docs":{},"是":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"现":{"docs":{},"代":{"docs":{},"计":{"docs":{},"算":{"docs":{},"机":{"docs":{},"通":{"docs":{},"常":{"docs":{},"由":{"docs":{},"两":{"docs":{},"个":{"docs":{},"或":{"docs":{},"者":{"docs":{},"多":{"docs":{},"个":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"机":{"docs":{},"还":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"主":{"docs":{},"存":{"docs":{},"。":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}},"新":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"来":{"docs":{},"创":{"docs":{},"建":{"docs":{},"强":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"首":{"docs":{},"先":{"docs":{},"将":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"请":{"docs":{},"求":{"docs":{},"传":{"docs":{},"送":{"docs":{},"到":{"docs":{},"父":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"当":{"docs":{},"父":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"无":{"docs":{},"法":{"docs":{},"完":{"docs":{},"成":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"请":{"docs":{},"求":{"docs":{},"时":{"docs":{},"才":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"加":{"docs":{},"载":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"样":{"docs":{},"的":{"docs":{},"快":{"docs":{},"速":{"docs":{},"查":{"docs":{},"找":{"docs":{},"特":{"docs":{},"性":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"，":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}},"次":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"后":{"docs":{},"是":{"docs":{},"容":{"docs":{},"量":{"docs":{},"为":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"能":{"docs":{},"够":{"docs":{},"在":{"docs":{},"同":{"docs":{},"步":{"docs":{},"于":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}},"i":{"docs":{},"/":{"docs":{},"o":{"docs":{},"读":{"docs":{},"入":{"docs":{},"一":{"docs":{},"块":{"docs":{},"，":{"docs":{},"一":{"docs":{},"块":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"就":{"docs":{},"是":{"docs":{},"b":{"docs":{},"+":{"docs":{},"树":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"读":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"完":{"docs":{},"整":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"树":{"docs":{},"高":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"旦":{"docs":{},"一":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"（":{"docs":{},"类":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"、":{"docs":{},"类":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"）":{"docs":{},"被":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}},"般":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"比":{"docs":{},"锁":{"docs":{},"性":{"docs":{},"能":{"docs":{},"更":{"docs":{},"高":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}},"包":{"docs":{},"含":{"docs":{},"以":{"docs":{},"下":{"docs":{},"内":{"docs":{},"容":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"将":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"设":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"都":{"docs":{},"会":{"docs":{},"分":{"docs":{},"开":{"docs":{},"发":{"docs":{},"送":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"导":{"docs":{},"致":{"docs":{},"多":{"docs":{},"了":{"docs":{},"一":{"docs":{},"次":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}},"份":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"新":{"docs":{},"副":{"docs":{},"本":{"docs":{},"上":{"docs":{},"执":{"docs":{},"行":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"再":{"docs":{},"切":{"docs":{},"换":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"当":{"docs":{},"然":{"docs":{},"此":{"docs":{},"过":{"docs":{},"程":{"docs":{},"是":{"docs":{},"要":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"定":{"docs":{},"得":{"docs":{},"了":{"docs":{},"解":{"docs":{},"针":{"docs":{},"对":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"画":{"docs":{},"个":{"docs":{},"图":{"docs":{},"，":{"docs":{},"说":{"docs":{},"下":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"等":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-interview.html":{"ref":"javacore/jvm/jvm-interview.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"致":{"docs":{},"性":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}},"三":{"docs":{},"、":{"docs":{},"容":{"docs":{},"器":{"docs":{},"中":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"模":{"docs":{},"式":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}},"次":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}},"握":{"docs":{},"手":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}},"完":{"docs":{},"成":{"docs":{},"，":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"与":{"docs":{},"服":{"docs":{},"务":{"docs":{},"端":{"docs":{},"已":{"docs":{},"建":{"docs":{},"立":{"docs":{},"双":{"docs":{},"向":{"docs":{},"连":{"docs":{},"接":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}},"负":{"docs":{},"责":{"docs":{},"建":{"docs":{},"立":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}},"种":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"方":{"docs":{},"式":{"docs":{},"对":{"docs":{},"比":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"两":{"docs":{},"种":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"分":{"docs":{},"别":{"docs":{},"加":{"docs":{},"了":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"参":{"docs":{},"数":{"docs":{},"来":{"docs":{},"指":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"出":{"docs":{},"现":{"docs":{},"循":{"docs":{},"环":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"引":{"docs":{},"用":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"永":{"docs":{},"远":{"docs":{},"不":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"相":{"docs":{},"等":{"docs":{},"：":{"docs":{},"类":{"docs":{},"本":{"docs":{},"身":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"使":{"docs":{},"用":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"进":{"docs":{},"行":{"docs":{},"加":{"docs":{},"载":{"docs":{},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"都":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"独":{"docs":{},"立":{"docs":{},"的":{"docs":{},"类":{"docs":{},"名":{"docs":{},"称":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"之":{"docs":{},"后":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}},"，":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"因":{"docs":{},"为":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"取":{"docs":{},"消":{"docs":{},"了":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"，":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}},"输":{"docs":{},"入":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"/":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"重":{"docs":{},"新":{"docs":{},"输":{"docs":{},"入":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"/":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{},"a":{"docs":{},"+":{"docs":{},"+":{"docs":{},"就":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"我":{"docs":{},"们":{"docs":{},"还":{"docs":{},"是":{"docs":{},"想":{"docs":{},"执":{"docs":{},"行":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}},"散":{"docs":{},"列":{"docs":{},"的":{"docs":{},"很":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}},"能":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"的":{"docs":{},"分":{"docs":{},"布":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}},"前":{"docs":{},"已":{"docs":{},"经":{"docs":{},"提":{"docs":{},"过":{"docs":{},"，":{"docs":{},"在":{"docs":{},"获":{"docs":{},"取":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"实":{"docs":{},"现":{"docs":{},"中":{"docs":{},"是":{"docs":{},"用":{"docs":{},"链":{"docs":{},"表":{"docs":{},"解":{"docs":{},"决":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"，":{"docs":{},"在":{"docs":{},"产":{"docs":{},"生":{"docs":{},"碰":{"docs":{},"撞":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"进":{"docs":{},"行":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"同":{"docs":{},"步":{"docs":{},"技":{"docs":{},"术":{"docs":{},"来":{"docs":{},"做":{"docs":{},"到":{"docs":{},"这":{"docs":{},"一":{"docs":{},"点":{"docs":{},"。":{"docs":{},"到":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"置":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.007246376811594203}}},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}},"那":{"docs":{},"么":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"先":{"docs":{},"检":{"docs":{},"查":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"最":{"docs":{},"大":{"docs":{},"可":{"docs":{},"用":{"docs":{},"的":{"docs":{},"连":{"docs":{},"续":{"docs":{},"空":{"docs":{},"间":{"docs":{},"是":{"docs":{},"否":{"docs":{},"大":{"docs":{},"于":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"所":{"docs":{},"有":{"docs":{},"对":{"docs":{},"象":{"docs":{},"总":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"条":{"docs":{},"件":{"docs":{},"成":{"docs":{},"立":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"间":{"docs":{},"）":{"docs":{},"上":{"docs":{},"来":{"docs":{},"看":{"docs":{},"是":{"docs":{},"基":{"docs":{},"于":{"docs":{},"“":{"docs":{},"复":{"docs":{},"制":{"docs":{},"”":{"docs":{},"算":{"docs":{},"法":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"运":{"docs":{},"行":{"docs":{},"期":{"docs":{},"间":{"docs":{},"不":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"内":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"碎":{"docs":{},"片":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}},"以":{"docs":{},"下":{"docs":{},"方":{"docs":{},"式":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}},"设":{"docs":{},"置":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"固":{"docs":{},"定":{"docs":{},"时":{"docs":{},"间":{"docs":{},"来":{"docs":{},"打":{"docs":{},"印":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}},"等":{"docs":{},"待":{"docs":{},"积":{"docs":{},"累":{"docs":{},"有":{"docs":{},"足":{"docs":{},"够":{"docs":{},"多":{"docs":{},"的":{"docs":{},"字":{"docs":{},"节":{"docs":{},"后":{"docs":{},"再":{"docs":{},"构":{"docs":{},"成":{"docs":{},"报":{"docs":{},"文":{"docs":{},"段":{"docs":{},"发":{"docs":{},"送":{"docs":{},"出":{"docs":{},"去":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"，":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"传":{"docs":{},"递":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}},"能":{"docs":{},"被":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"根":{"docs":{},"本":{"docs":{},"就":{"docs":{},"没":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"可":{"docs":{},"以":{"docs":{},"拿":{"docs":{},"来":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"，":{"docs":{},"它":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"也":{"docs":{},"是":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"是":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"步":{"docs":{},"容":{"docs":{},"器":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"也":{"docs":{},"用":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},")":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"也":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}},"关":{"docs":{},"注":{"docs":{},"最":{"docs":{},"短":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"器":{"docs":{},"。":{"docs":{},"g":{"1":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"docs":{}}}}}}}}}}}}}}}}}},"做":{"docs":{},"了":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"事":{"docs":{},"情":{"docs":{},"。":{"docs":{},"现":{"docs":{},"在":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"往":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}},"同":{"docs":{},"样":{"docs":{},"适":{"docs":{},"合":{"docs":{},"大":{"docs":{},"尺":{"docs":{},"寸":{"docs":{},"堆":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"，":{"docs":{},"官":{"docs":{},"方":{"docs":{},"推":{"docs":{},"荐":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"、":{"docs":{},"容":{"docs":{},"器":{"docs":{},"中":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"模":{"docs":{},"式":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}},"框":{"docs":{},"架":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}},"和":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099},"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.009363295880149813},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.004446420631391729},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.022453889334402566},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.0111731843575419},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0032822757111597373},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.005714285714285714},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.015748031496062992},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.005042016806722689},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.003526448362720403},"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.11428571428571428},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.021164021164021163},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.002680965147453083},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916},"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"但":{"docs":{},"它":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"同":{"docs":{},"一":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"同":{"docs":{},"时":{"docs":{},"写":{"docs":{},"入":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"并":{"docs":{},"且":{"docs":{},"不":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"数":{"docs":{},"据":{"docs":{},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"。":{"docs":{},"它":{"docs":{},"是":{"docs":{},"遗":{"docs":{},"留":{"docs":{},"类":{"docs":{},"，":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"去":{"docs":{},"使":{"docs":{},"用":{"docs":{},"它":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"现":{"docs":{},"在":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"来":{"docs":{},"支":{"docs":{},"持":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"效":{"docs":{},"率":{"docs":{},"会":{"docs":{},"更":{"docs":{},"高":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"引":{"docs":{},"入":{"docs":{},"了":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"低":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"高":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}},"值":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}},"硬":{"docs":{},"件":{"docs":{},"内":{"docs":{},"存":{"docs":{},"架":{"docs":{},"构":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"桥":{"docs":{},"接":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.007246376811594203}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"过":{"docs":{},"的":{"docs":{},"那":{"docs":{},"一":{"docs":{},"块":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"第":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}},"存":{"docs":{},"储":{"docs":{},"着":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"，":{"docs":{},"而":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"（":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"）":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"表":{"docs":{},"。":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}},"，":{"docs":{},"而":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}},"和":{"docs":{},"获":{"docs":{},"取":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"存":{"docs":{},"储":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}},"结":{"docs":{},"构":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"在":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"其":{"docs":{},"解":{"docs":{},"决":{"docs":{},"思":{"docs":{},"路":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"；":{"2":{"docs":{},".":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"放":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"堆":{"docs":{},"上":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"所":{"docs":{},"有":{"docs":{},"持":{"docs":{},"有":{"docs":{},"对":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"访":{"docs":{},"问":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"访":{"docs":{},"问":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"同":{"docs":{},"时":{"docs":{},"调":{"docs":{},"用":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"的":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"将":{"docs":{},"会":{"docs":{},"都":{"docs":{},"访":{"docs":{},"问":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"这":{"docs":{},"个":{"docs":{},"本":{"docs":{},"地":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"私":{"docs":{},"有":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"容":{"docs":{},"器":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099},"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"主":{"docs":{},"要":{"docs":{},"包":{"docs":{},"括":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}},"概":{"docs":{},"述":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":10}}}},"里":{"docs":{},"有":{"docs":{},"多":{"docs":{},"把":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"把":{"docs":{},"锁":{"docs":{},"用":{"docs":{},"于":{"docs":{},"锁":{"docs":{},"容":{"docs":{},"器":{"docs":{},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"当":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"容":{"docs":{},"器":{"docs":{},"里":{"docs":{},"不":{"docs":{},"同":{"docs":{},"数":{"docs":{},"据":{"docs":{},"段":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"时":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"就":{"docs":{},"不":{"docs":{},"会":{"docs":{},"存":{"docs":{},"在":{"docs":{},"锁":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"提":{"docs":{},"高":{"docs":{},"并":{"docs":{},"发":{"docs":{},"访":{"docs":{},"问":{"docs":{},"效":{"docs":{},"率":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"量":{"docs":{},"是":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"中":{"docs":{},"桶":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"容":{"docs":{},"量":{"docs":{},"就":{"docs":{},"是":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"创":{"docs":{},"建":{"docs":{},"时":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"应":{"docs":{},"该":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}}}}}}}}},"被":{"docs":{},"增":{"docs":{},"加":{"docs":{},"两":{"docs":{},"次":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"原":{"docs":{},"值":{"docs":{},"+":{"2":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}},"docs":{}}}}}}}}}}}}},"用":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"对":{"docs":{},"象":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"不":{"docs":{},"管":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"包":{"docs":{},"括":{"docs":{},"原":{"docs":{},"始":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"封":{"docs":{},"装":{"docs":{},"类":{"docs":{},"（":{"docs":{},"如":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"转":{"docs":{},"储":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"找":{"docs":{},"出":{"docs":{},"那":{"docs":{},"些":{"docs":{},"状":{"docs":{},"态":{"docs":{},"为":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}},"堆":{"docs":{},"栈":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"（":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}},"都":{"docs":{},"是":{"docs":{},"由":{"docs":{},"以":{"docs":{},"上":{"docs":{},"三":{"docs":{},"种":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"相":{"docs":{},"互":{"docs":{},"配":{"docs":{},"合":{"docs":{},"进":{"docs":{},"行":{"docs":{},"加":{"docs":{},"载":{"docs":{},"的":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"，":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"加":{"docs":{},"入":{"docs":{},"自":{"docs":{},"己":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"场":{"docs":{},"景":{"docs":{},"：":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}},"，":{"docs":{},"即":{"docs":{},"由":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}},"的":{"docs":{},"远":{"docs":{},"程":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"层":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"（":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}},"无":{"docs":{},"条":{"docs":{},"件":{"docs":{},"传":{"docs":{},"播":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"接":{"docs":{},"口":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.00631578947368421},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.009523809523809525},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825},"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.02857142857142857},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}},"的":{"docs":{},"聚":{"docs":{},"合":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}}},"骨":{"docs":{},"干":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"以":{"docs":{},"最":{"docs":{},"大":{"docs":{},"限":{"docs":{},"度":{"docs":{},"地":{"docs":{},"减":{"docs":{},"少":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"存":{"docs":{},"储":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"接":{"docs":{},"收":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"用":{"docs":{},"于":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"。":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"例":{"docs":{},"子":{"docs":{},"展":{"docs":{},"现":{"docs":{},"了":{"docs":{},"如":{"docs":{},"何":{"docs":{},"创":{"docs":{},"建":{"docs":{},"和":{"docs":{},"使":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"阅":{"docs":{},"读":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"，":{"docs":{},"并":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"重":{"docs":{},"写":{"docs":{},"该":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}},"一":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"并":{"docs":{},"保":{"docs":{},"持":{"docs":{},"原":{"docs":{},"来":{"docs":{},"基":{"docs":{},"础":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"是":{"docs":{},"，":{"docs":{},"它":{"docs":{},"就":{"docs":{},"变":{"docs":{},"得":{"docs":{},"非":{"docs":{},"常":{"docs":{},"有":{"docs":{},"用":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"继":{"docs":{},"承":{"docs":{},"于":{"docs":{},"它":{"docs":{},"并":{"docs":{},"重":{"docs":{},"写":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"阅":{"docs":{},"读":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"没":{"docs":{},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"；":{"docs":{},"而":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}},"实":{"docs":{},"现":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"类":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"必":{"docs":{},"须":{"docs":{},"要":{"docs":{},"提":{"docs":{},"供":{"docs":{},"一":{"docs":{},"个":{"docs":{},"无":{"docs":{},"参":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"且":{"docs":{},"它":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"权":{"docs":{},"限":{"docs":{},"为":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}},"替":{"docs":{},"代":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}},"默":{"docs":{},"认":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"机":{"docs":{},"制":{"docs":{},"就":{"docs":{},"会":{"docs":{},"失":{"docs":{},"效":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},"：":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.00631578947368421},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.004761904761904762}}}}}}},"，":{"docs":{},"即":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"随":{"docs":{},"机":{"docs":{},"访":{"docs":{},"问":{"docs":{},"功":{"docs":{},"能":{"docs":{},"。":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}},"能":{"docs":{},"将":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"覆":{"docs":{},"盖":{"docs":{},"了":{"docs":{},"函":{"docs":{},"数":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925}}}}}}}},"因":{"docs":{},"此":{"docs":{},"支":{"docs":{},"持":{"docs":{},"随":{"docs":{},"机":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}},"能":{"docs":{},"对":{"docs":{},"它":{"docs":{},"进":{"docs":{},"行":{"docs":{},"队":{"docs":{},"列":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925}}}}}}}}}}}},"这":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925}}}}}},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"将":{"docs":{},"其":{"docs":{},"当":{"docs":{},"做":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}},"它":{"docs":{},"和":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}},"所":{"docs":{},"以":{"docs":{},"它":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"读":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}},"否":{"docs":{},"则":{"docs":{},"将":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}},"并":{"docs":{},"添":{"docs":{},"加":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}},"而":{"docs":{},"没":{"docs":{},"有":{"docs":{},"其":{"docs":{},"它":{"docs":{},"任":{"docs":{},"何":{"docs":{},"处":{"docs":{},"理":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"会":{"docs":{},"使":{"docs":{},"用":{"docs":{},"默":{"docs":{},"认":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"机":{"docs":{},"制":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"骨":{"docs":{},"干":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.008421052631578947}}}}}}}},"不":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"静":{"docs":{},"态":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"，":{"docs":{},"但":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"有":{"docs":{},"类":{"docs":{},"变":{"docs":{},"量":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"的":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"接":{"docs":{},"口":{"docs":{},"与":{"docs":{},"类":{"docs":{},"一":{"docs":{},"样":{"docs":{},"都":{"docs":{},"会":{"docs":{},"生":{"docs":{},"成":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"需":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}},"新":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}}}}}}},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"该":{"docs":{},"实":{"docs":{},"现":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"所":{"docs":{},"有":{"docs":{},"可":{"docs":{},"选":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}},"；":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}},"优":{"docs":{},"于":{"docs":{},"继":{"docs":{},"承":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"使":{"docs":{},"用":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"去":{"docs":{},"定":{"docs":{},"义":{"docs":{},"它":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}},"在":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}},"很":{"docs":{},"相":{"docs":{},"似":{"docs":{},"，":{"docs":{},"但":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"或":{"docs":{},"者":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}},"比":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"更":{"docs":{},"具":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"性":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"他":{"docs":{},"们":{"docs":{},"允":{"docs":{},"许":{"docs":{},"更":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"具":{"docs":{},"有":{"docs":{},"完":{"docs":{},"全":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"性":{"docs":{},"质":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"可":{"docs":{},"以":{"docs":{},"支":{"docs":{},"持":{"docs":{},"多":{"docs":{},"个":{"docs":{},"相":{"docs":{},"关":{"docs":{},"类":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"策":{"docs":{},"略":{"docs":{},"。":{"docs":{},"如":{"docs":{},"记":{"docs":{},"录":{"docs":{},"日":{"docs":{},"志":{"docs":{},"或":{"docs":{},"持":{"docs":{},"久":{"docs":{},"化":{"docs":{},"不":{"docs":{},"能":{"docs":{},"处":{"docs":{},"理":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"数":{"docs":{},"据":{"docs":{},"只":{"docs":{},"建":{"docs":{},"立":{"docs":{},"一":{"docs":{},"个":{"docs":{},"连":{"docs":{},"接":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"：":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"基":{"docs":{},"于":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}},"可":{"docs":{},"以":{"docs":{},"控":{"docs":{},"制":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"和":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"细":{"docs":{},"节":{"docs":{},"。":{"docs":{},"它":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"替":{"docs":{},"代":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"收":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},"小":{"docs":{},"数":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}},"整":{"docs":{},"数":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"内":{"docs":{},"容":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}},"方":{"docs":{},"法":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143},"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},"来":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.01098901098901099}}}}}},"保":{"docs":{},"证":{"docs":{},"容":{"docs":{},"量":{"docs":{},"足":{"docs":{},"够":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"够":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}},"构":{"docs":{},"造":{"docs":{},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"启":{"docs":{},"动":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}},"获":{"docs":{},"得":{"docs":{},"子":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"束":{"docs":{},"后":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}},"取":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"，":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}},"中":{"docs":{},"断":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"无":{"docs":{},"法":{"docs":{},"响":{"docs":{},"应":{"docs":{},"中":{"docs":{},"断":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"可":{"docs":{},"能":{"docs":{},"永":{"docs":{},"远":{"docs":{},"无":{"docs":{},"法":{"docs":{},"终":{"docs":{},"止":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"它":{"docs":{},"们":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"定":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"，":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"关":{"docs":{},"闭":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"原":{"docs":{},"理":{"docs":{},"是":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"逐":{"docs":{},"个":{"docs":{},"调":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"提":{"docs":{},"交":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"它":{"docs":{},"会":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}},"把":{"docs":{},"这":{"docs":{},"些":{"docs":{},"字":{"docs":{},"节":{"docs":{},"代":{"docs":{},"码":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"，":{"docs":{},"新":{"docs":{},"容":{"docs":{},"量":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}},"确":{"docs":{},"定":{"docs":{},"了":{"docs":{},"其":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"和":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"机":{"docs":{},"制":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}}},"不":{"docs":{},"会":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}},"释":{"docs":{},"放":{"docs":{},"“":{"docs":{},"锁":{"docs":{},"标":{"docs":{},"志":{"docs":{},"”":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}},"能":{"docs":{},"中":{"docs":{},"断":{"docs":{},"正":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"中":{"docs":{},"断":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"当":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"执":{"docs":{},"行":{"docs":{},"父":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}},"在":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"空":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"同":{"docs":{},"时":{"docs":{},"会":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"帧":{"docs":{},"用":{"docs":{},"于":{"docs":{},"存":{"docs":{},"储":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"表":{"docs":{},"、":{"docs":{},"操":{"docs":{},"作":{"docs":{},"数":{"docs":{},"栈":{"docs":{},"、":{"docs":{},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{},"引":{"docs":{},"用":{"docs":{},"等":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"从":{"docs":{},"调":{"docs":{},"用":{"docs":{},"直":{"docs":{},"至":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"成":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"就":{"docs":{},"对":{"docs":{},"应":{"docs":{},"着":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"帧":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"环":{"docs":{},"境":{"docs":{},"下":{"docs":{},"被":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"和":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"同":{"docs":{},"时":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"，":{"docs":{},"只":{"docs":{},"会":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"语":{"docs":{},"义":{"docs":{},"是":{"docs":{},"只":{"docs":{},"读":{"docs":{},"取":{"docs":{},"不":{"docs":{},"移":{"docs":{},"除":{"docs":{},"，":{"docs":{},"显":{"docs":{},"然":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"语":{"docs":{},"义":{"docs":{},"是":{"docs":{},"不":{"docs":{},"符":{"docs":{},"合":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}}},"例":{"docs":{},"本":{"docs":{},"身":{"docs":{},"。":{"docs":{},"在":{"docs":{},"同":{"docs":{},"步":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"中":{"docs":{},"用":{"docs":{},"括":{"docs":{},"号":{"docs":{},"括":{"docs":{},"起":{"docs":{},"来":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"上":{"docs":{},"述":{"docs":{},"代":{"docs":{},"码":{"docs":{},"使":{"docs":{},"用":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"对":{"docs":{},"象":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"同":{"docs":{},"步":{"docs":{},"实":{"docs":{},"例":{"docs":{},"方":{"docs":{},"法":{"docs":{},"使":{"docs":{},"用":{"docs":{},"调":{"docs":{},"用":{"docs":{},"方":{"docs":{},"法":{"docs":{},"本":{"docs":{},"身":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"作":{"docs":{},"为":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"区":{"docs":{},"别":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"方":{"docs":{},"法":{"docs":{},"体":{"docs":{},"同":{"docs":{},"样":{"docs":{},"是":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"体":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}},"就":{"docs":{},"代":{"docs":{},"表":{"docs":{},"了":{"docs":{},"线":{"docs":{},"程":{"docs":{},"要":{"docs":{},"完":{"docs":{},"成":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"把":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"必":{"docs":{},"须":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"接":{"docs":{},"着":{"docs":{},"它":{"docs":{},"就":{"docs":{},"会":{"docs":{},"释":{"docs":{},"放":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"锁":{"docs":{},"并":{"docs":{},"进":{"docs":{},"入":{"docs":{},"等":{"docs":{},"待":{"docs":{},"状":{"docs":{},"态":{"docs":{},"直":{"docs":{},"到":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"处":{"docs":{},"于":{"docs":{},"此":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"此":{"docs":{},"状":{"docs":{},"态":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"已":{"docs":{},"经":{"docs":{},"准":{"docs":{},"备":{"docs":{},"好":{"docs":{},"了":{"docs":{},"，":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"被":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"度":{"docs":{},"器":{"docs":{},"分":{"docs":{},"配":{"docs":{},"了":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"束":{"docs":{},"后":{"docs":{},"才":{"docs":{},"能":{"docs":{},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"会":{"docs":{},"一":{"docs":{},"直":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"直":{"docs":{},"到":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"为":{"docs":{},"零":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"等":{"docs":{},"待":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"断":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"等":{"docs":{},"待":{"docs":{},"超":{"docs":{},"时":{"docs":{},"。":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"被":{"docs":{},"挂":{"docs":{},"起":{"docs":{},"，":{"docs":{},"它":{"docs":{},"会":{"docs":{},"等":{"docs":{},"待":{"docs":{},"直":{"docs":{},"到":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"一":{"docs":{},"般":{"docs":{},"称":{"docs":{},"为":{"docs":{},"系":{"docs":{},"统":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"。":{"docs":{},"它":{"docs":{},"负":{"docs":{},"责":{"docs":{},"加":{"docs":{},"载":{"docs":{},"用":{"docs":{},"户":{"docs":{},"类":{"docs":{},"路":{"docs":{},"径":{"docs":{},"（":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"）":{"docs":{},"上":{"docs":{},"所":{"docs":{},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{},"类":{"docs":{},"库":{"docs":{},"，":{"docs":{},"开":{"docs":{},"发":{"docs":{},"者":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"过":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"这":{"docs":{},"个":{"docs":{},"就":{"docs":{},"是":{"docs":{},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}},"作":{"docs":{},"用":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"插":{"docs":{},"入":{"docs":{},"等":{"docs":{},"待":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"队":{"docs":{},"尾":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}},"尝":{"docs":{},"试":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"锁":{"docs":{},"已":{"docs":{},"被":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"取":{"docs":{},"，":{"docs":{},"则":{"docs":{},"进":{"docs":{},"行":{"docs":{},"等":{"docs":{},"待":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"通":{"docs":{},"过":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"（":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"）":{"docs":{},"，":{"docs":{},"不":{"docs":{},"断":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"为":{"docs":{},"等":{"docs":{},"待":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"取":{"docs":{},"独":{"docs":{},"占":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}},"利":{"docs":{},"用":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"名":{"docs":{},"称":{"docs":{},"和":{"docs":{},"描":{"docs":{},"述":{"docs":{},"符":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}},"类":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}},"那":{"docs":{},"个":{"docs":{},"类":{"docs":{},"）":{"docs":{},"，":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"会":{"docs":{},"先":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"这":{"docs":{},"个":{"docs":{},"主":{"docs":{},"类":{"docs":{},"；":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"只":{"docs":{},"输":{"docs":{},"出":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"对":{"docs":{},"象":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"（":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.0041841004184100415},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"需":{"docs":{},"要":{"docs":{},"调":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}},"但":{"docs":{},"接":{"docs":{},"口":{"docs":{},"与":{"docs":{},"类":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"执":{"docs":{},"行":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}},"只":{"docs":{},"有":{"docs":{},"当":{"docs":{},"父":{"docs":{},"接":{"docs":{},"口":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"使":{"docs":{},"用":{"docs":{},"时":{"docs":{},"，":{"docs":{},"父":{"docs":{},"接":{"docs":{},"口":{"docs":{},"才":{"docs":{},"会":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"。":{"docs":{},"另":{"docs":{},"外":{"docs":{},"，":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{},"在":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"时":{"docs":{},"也":{"docs":{},"一":{"docs":{},"样":{"docs":{},"不":{"docs":{},"会":{"docs":{},"执":{"docs":{},"行":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"和":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"回":{"docs":{},"调":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"致":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"为":{"docs":{},"：":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"在":{"docs":{},"节":{"docs":{},"点":{"docs":{},"多":{"docs":{},"于":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"际":{"docs":{},"上":{"docs":{},"是":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}},"时":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"目":{"docs":{},"前":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"它":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"会":{"docs":{},"释":{"docs":{},"放":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"以":{"docs":{},"便":{"docs":{},"其":{"docs":{},"他":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"的":{"docs":{},"是":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}},"么":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686}}}},"会":{"docs":{},"使":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"转":{"docs":{},"入":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"启":{"docs":{},"动":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"返":{"docs":{},"回":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}},"阻":{"docs":{},"塞":{"docs":{},"住":{"docs":{},"直":{"docs":{},"到":{"docs":{},"任":{"docs":{},"务":{"docs":{},"完":{"docs":{},"成":{"docs":{},"。":{"docs":{},"而":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"于":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"通":{"docs":{},"信":{"docs":{},"关":{"docs":{},"于":{"docs":{},"资":{"docs":{},"源":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}},"让":{"docs":{},"当":{"docs":{},"前":{"docs":{},"正":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"，":{"docs":{},"但":{"docs":{},"它":{"docs":{},"不":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"它":{"docs":{},"只":{"docs":{},"是":{"docs":{},"将":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"从":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}},"释":{"docs":{},"放":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}},"实":{"docs":{},"现":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"；":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}},"将":{"docs":{},"作":{"docs":{},"为":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"体":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}},"处":{"docs":{},"理":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"暂":{"docs":{},"时":{"docs":{},"让":{"docs":{},"给":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}},"或":{"docs":{},"者":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"访":{"docs":{},"问":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"束":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"因":{"docs":{},"异":{"docs":{},"常":{"docs":{},"退":{"docs":{},"出":{"docs":{},"了":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"体":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"（":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"）":{"docs":{},"的":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178}}}}}}}}}}}},"的":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}},"类":{"docs":{},"似":{"docs":{},"的":{"docs":{},"，":{"docs":{},"区":{"docs":{},"别":{"docs":{},"仅":{"docs":{},"在":{"docs":{},"于":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"在":{"docs":{},"获":{"docs":{},"取":{"docs":{},"不":{"docs":{},"到":{"docs":{},"锁":{"docs":{},"时":{"docs":{},"会":{"docs":{},"等":{"docs":{},"待":{"docs":{},"一":{"docs":{},"定":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"在":{"docs":{},"时":{"docs":{},"间":{"docs":{},"期":{"docs":{},"限":{"docs":{},"之":{"docs":{},"内":{"docs":{},"如":{"docs":{},"果":{"docs":{},"还":{"docs":{},"获":{"docs":{},"取":{"docs":{},"不":{"docs":{},"到":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}},"暂":{"docs":{},"停":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"与":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"比":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"更":{"docs":{},"高":{"docs":{},"的":{"docs":{},"处":{"docs":{},"于":{"docs":{},"就":{"docs":{},"绪":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"才":{"docs":{},"会":{"docs":{},"获":{"docs":{},"得":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"机":{"docs":{},"会":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"区":{"docs":{},"别":{"docs":{},"？":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}},"缺":{"docs":{},"陷":{"docs":{},"，":{"docs":{},"已":{"docs":{},"废":{"docs":{},"弃":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}},"称":{"docs":{},"为":{"docs":{},"执":{"docs":{},"行":{"docs":{},"体":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"让":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"等":{"docs":{},"待":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}},"线":{"docs":{},"程":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"一":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"强":{"docs":{},"制":{"docs":{},"运":{"docs":{},"行":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"强":{"docs":{},"制":{"docs":{},"运":{"docs":{},"行":{"docs":{},"期":{"docs":{},"间":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"无":{"docs":{},"法":{"docs":{},"运":{"docs":{},"行":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"等":{"docs":{},"待":{"docs":{},"此":{"docs":{},"线":{"docs":{},"程":{"docs":{},"完":{"docs":{},"成":{"docs":{},"之":{"docs":{},"后":{"docs":{},"才":{"docs":{},"可":{"docs":{},"以":{"docs":{},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"负":{"docs":{},"责":{"docs":{},"启":{"docs":{},"动":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"指":{"docs":{},"定":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"当":{"docs":{},"前":{"docs":{},"正":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"内":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"进":{"docs":{},"入":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}},"则":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"结":{"docs":{},"束":{"docs":{},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{},"。":{"docs":{},"死":{"docs":{},"亡":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"可":{"docs":{},"再":{"docs":{},"次":{"docs":{},"复":{"docs":{},"生":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}},"它":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"就":{"docs":{},"会":{"docs":{},"和":{"docs":{},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"一":{"docs":{},"样":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}},"就":{"docs":{},"会":{"docs":{},"对":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"来":{"docs":{},"彻":{"docs":{},"底":{"docs":{},"避":{"docs":{},"免":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"露":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}},"该":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686}},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"会":{"docs":{},"执":{"docs":{},"行":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"如":{"docs":{},"上":{"docs":{},"节":{"docs":{},"所":{"docs":{},"述":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"会":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"掉":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"般":{"docs":{},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"在":{"docs":{},"使":{"docs":{},"用":{"docs":{},"时":{"docs":{},"进":{"docs":{},"行":{"docs":{},"重":{"docs":{},"写":{"docs":{},"的":{"docs":{},"，":{"docs":{},"它":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"加":{"docs":{},"载":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"会":{"docs":{},"详":{"docs":{},"细":{"docs":{},"说":{"docs":{},"明":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"即":{"docs":{},"进":{"docs":{},"行":{"docs":{},"了":{"docs":{},"同":{"docs":{},"步":{"docs":{},"措":{"docs":{},"施":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"在":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"让":{"docs":{},"对":{"docs":{},"象":{"docs":{},"重":{"docs":{},"新":{"docs":{},"被":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"实":{"docs":{},"现":{"docs":{},"自":{"docs":{},"救":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"它":{"docs":{},"们":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"毫":{"docs":{},"无":{"docs":{},"疑":{"docs":{},"问":{"docs":{},"，":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"反":{"docs":{},"射":{"docs":{},"。":{"docs":{},"详":{"docs":{},"情":{"docs":{},"可":{"docs":{},"见":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"等":{"docs":{},"待":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"活":{"docs":{},"动":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"都":{"docs":{},"是":{"docs":{},"基":{"docs":{},"于":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}},"以":{"docs":{},"及":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}},"中":{"docs":{},"断":{"docs":{},"其":{"docs":{},"运":{"docs":{},"行":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}},"的":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"本":{"docs":{},"身":{"docs":{},"在":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"文":{"docs":{},"章":{"docs":{},"中":{"docs":{},"讲":{"docs":{},"过":{"docs":{},"单":{"docs":{},"独":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"是":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"会":{"docs":{},"再":{"docs":{},"一":{"docs":{},"次":{"docs":{},"执":{"docs":{},"行":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"有":{"docs":{},"耗":{"docs":{},"时":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"能":{"docs":{},"造":{"docs":{},"成":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"此":{"docs":{},"种":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"很":{"docs":{},"隐":{"docs":{},"蔽":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"先":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}},"判":{"docs":{},"断":{"docs":{},"线":{"docs":{},"程":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}}}},"即":{"docs":{},"可":{"docs":{},"实":{"docs":{},"现":{"docs":{},"休":{"docs":{},"眠":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}},"获":{"docs":{},"取":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"某":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"能":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"进":{"docs":{},"行":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"响":{"docs":{},"应":{"docs":{},"中":{"docs":{},"断":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"置":{"docs":{},"线":{"docs":{},"程":{"docs":{},"为":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"；":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}}}},"为":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}},"作":{"docs":{},"用":{"docs":{},"是":{"docs":{},"首":{"docs":{},"先":{"docs":{},"检":{"docs":{},"查":{"docs":{},"当":{"docs":{},"前":{"docs":{},"引":{"docs":{},"用":{"docs":{},"是":{"docs":{},"否":{"docs":{},"等":{"docs":{},"于":{"docs":{},"预":{"docs":{},"期":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"当":{"docs":{},"前":{"docs":{},"标":{"docs":{},"志":{"docs":{},"是":{"docs":{},"否":{"docs":{},"等":{"docs":{},"于":{"docs":{},"预":{"docs":{},"期":{"docs":{},"标":{"docs":{},"志":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"全":{"docs":{},"部":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"则":{"docs":{},"以":{"docs":{},"原":{"docs":{},"子":{"docs":{},"方":{"docs":{},"式":{"docs":{},"将":{"docs":{},"该":{"docs":{},"引":{"docs":{},"用":{"docs":{},"和":{"docs":{},"该":{"docs":{},"标":{"docs":{},"志":{"docs":{},"的":{"docs":{},"值":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"更":{"docs":{},"新":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"唤":{"docs":{},"醒":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"内":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}},"访":{"docs":{},"问":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"标":{"docs":{},"志":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"与":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}},"以":{"docs":{},"独":{"docs":{},"占":{"docs":{},"模":{"docs":{},"式":{"docs":{},"发":{"docs":{},"布":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}},"修":{"docs":{},"改":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"和":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"比":{"docs":{},"较":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"，":{"docs":{},"当":{"docs":{},"通":{"docs":{},"过":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"去":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"线":{"docs":{},"程":{"docs":{},"正":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"则":{"docs":{},"这":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"能":{"docs":{},"够":{"docs":{},"响":{"docs":{},"应":{"docs":{},"中":{"docs":{},"断":{"docs":{},"，":{"docs":{},"即":{"docs":{},"中":{"docs":{},"断":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"等":{"docs":{},"待":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"也":{"docs":{},"就":{"docs":{},"使":{"docs":{},"说":{"docs":{},"，":{"docs":{},"当":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"同":{"docs":{},"时":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"添":{"docs":{},"加":{"docs":{},"新":{"docs":{},"的":{"docs":{},"等":{"docs":{},"待":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"*":{"docs":{},"/":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"能":{"docs":{},"够":{"docs":{},"中":{"docs":{},"断":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"逻":{"docs":{},"辑":{"docs":{},"几":{"docs":{},"乎":{"docs":{},"一":{"docs":{},"致":{"docs":{},"，":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"是":{"docs":{},"当":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}},"递":{"docs":{},"减":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"事":{"docs":{},"件":{"docs":{},"已":{"docs":{},"经":{"docs":{},"发":{"docs":{},"生":{"docs":{},"。":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}},"则":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"一":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"后":{"docs":{},"立":{"docs":{},"即":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"任":{"docs":{},"务":{"docs":{},"没":{"docs":{},"有":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"会":{"docs":{},"返":{"docs":{},"回":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}},"没":{"docs":{},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"无":{"docs":{},"法":{"docs":{},"判":{"docs":{},"断":{"docs":{},"任":{"docs":{},"务":{"docs":{},"是":{"docs":{},"否":{"docs":{},"被":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"执":{"docs":{},"行":{"docs":{},"成":{"docs":{},"功":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}},"区":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.015748031496062992}},"中":{"docs":{},"的":{"docs":{},"常":{"docs":{},"量":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"类":{"docs":{},"静":{"docs":{},"态":{"docs":{},"属":{"docs":{},"性":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}},"的":{"docs":{},"回":{"docs":{},"收":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}}},"和":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{},"溢":{"docs":{},"出":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"、":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}},"先":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"父":{"docs":{},"类":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"要":{"docs":{},"优":{"docs":{},"于":{"docs":{},"子":{"docs":{},"类":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"以":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"具":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"特":{"docs":{},"点":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}},"完":{"docs":{},"毕":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}},"对":{"docs":{},"于":{"docs":{},"类":{"docs":{},"或":{"docs":{},"接":{"docs":{},"口":{"docs":{},"不":{"docs":{},"是":{"docs":{},"必":{"docs":{},"须":{"docs":{},"的":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"中":{"docs":{},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"静":{"docs":{},"态":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"，":{"docs":{},"也":{"docs":{},"没":{"docs":{},"有":{"docs":{},"对":{"docs":{},"类":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"为":{"docs":{},"该":{"docs":{},"类":{"docs":{},"生":{"docs":{},"成":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"束":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"执":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}},"集":{"docs":{},"合":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}},"运":{"docs":{},"行":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"父":{"docs":{},"类":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}},"过":{"docs":{},"程":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"文":{"docs":{},"件":{"docs":{},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}},"显":{"docs":{},"示":{"docs":{},"地":{"docs":{},"将":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}},"未":{"docs":{},"作":{"docs":{},"任":{"docs":{},"何":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"该":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"行":{"docs":{},"为":{"docs":{},"将":{"docs":{},"不":{"docs":{},"会":{"docs":{},"保":{"docs":{},"存":{"docs":{},"/":{"docs":{},"读":{"docs":{},"取":{"docs":{},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"段":{"docs":{},"。":{"docs":{},"这":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"输":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"段":{"docs":{},"的":{"docs":{},"值":{"docs":{},"均":{"docs":{},"为":{"docs":{},"空":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"于":{"docs":{},"实":{"docs":{},"现":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}},"略":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}},"式":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"线":{"docs":{},"程":{"docs":{},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}},"达":{"docs":{},"到":{"docs":{},"超":{"docs":{},"时":{"docs":{},"等":{"docs":{},"待":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"效":{"docs":{},"果":{"docs":{},"，":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"会":{"docs":{},"在":{"docs":{},"三":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"才":{"docs":{},"会":{"docs":{},"返":{"docs":{},"回":{"docs":{},"：":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"时":{"docs":{},"并":{"docs":{},"行":{"docs":{},"地":{"docs":{},"进":{"docs":{},"行":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"。":{"docs":{},"并":{"docs":{},"行":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"采":{"docs":{},"用":{"docs":{},"复":{"docs":{},"制":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"采":{"docs":{},"用":{"docs":{},"标":{"docs":{},"记":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"经":{"docs":{},"过":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"声":{"docs":{},"明":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}},"面":{"docs":{},"的":{"docs":{},"改":{"docs":{},"进":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"模":{"docs":{},"式":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.02197802197802198}}}}},"：":{"docs":{},"反":{"docs":{},"复":{"docs":{},"访":{"docs":{},"问":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"全":{"docs":{},"部":{"docs":{},"元":{"docs":{},"素":{"docs":{},"；":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}},"适":{"docs":{},"配":{"docs":{},"器":{"docs":{},"模":{"docs":{},"式":{"docs":{"javacore/container/container.html":{"ref":"javacore/container/container.html","tf":0.02197802197802198}}}}}},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"于":{"docs":{},"对":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"要":{"docs":{},"求":{"docs":{},"有":{"docs":{},"良":{"docs":{},"好":{"docs":{},"的":{"docs":{},"可":{"docs":{},"读":{"docs":{},"性":{"docs":{},"（":{"docs":{},"转":{"docs":{},"为":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}},"开":{"docs":{},"发":{"docs":{},"体":{"docs":{},"验":{"docs":{},"敏":{"docs":{},"感":{"docs":{},"，":{"docs":{},"性":{"docs":{},"能":{"docs":{},"有":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"内":{"docs":{},"外":{"docs":{},"部":{"docs":{},"系":{"docs":{},"统":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}},"性":{"docs":{},"能":{"docs":{},"敏":{"docs":{},"感":{"docs":{},"，":{"docs":{},"对":{"docs":{},"开":{"docs":{},"发":{"docs":{},"体":{"docs":{},"验":{"docs":{},"要":{"docs":{},"求":{"docs":{},"不":{"docs":{},"高":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"系":{"docs":{},"统":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}},"合":{"docs":{},"经":{"docs":{},"常":{"docs":{},"产":{"docs":{},"生":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}},"(":{"0":{"docs":{},")":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}}},".":{"0":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}}},"1":{"docs":{},".":{"2":{"5":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"7":{"3":{"5":{"1":{"9":{"1":{"3":{"4":{"5":{"2":{"1":{"4":{"8":{"4":{"3":{"8":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"2":{"0":{"docs":{},".":{"0":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}}},"docs":{}},"3":{"docs":{},".":{"2":{"6":{"6":{"5":{"6":{"3":{"4":{"1":{"5":{"5":{"2":{"7":{"3":{"4":{"3":{"8":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"7":{"4":{"8":{"6":{"5":{"7":{"2":{"2":{"6":{"5":{"6":{"2":{"5":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"4":{"6":{"docs":{},".":{"1":{"1":{"4":{"5":{"7":{"8":{"2":{"4":{"7":{"0":{"7":{"0":{"3":{"1":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"5":{"3":{"docs":{},".":{"3":{"7":{"5":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"docs":{}},"docs":{}}},"7":{"docs":{},".":{"4":{"5":{"2":{"3":{"0":{"8":{"6":{"5":{"4":{"7":{"8":{"5":{"1":{"5":{"6":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"9":{"docs":{},".":{"1":{"8":{"7":{"5":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},".":{"1":{"2":{"6":{"3":{"4":{"2":{"7":{"7":{"3":{"4":{"3":{"7":{"5":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"7":{"5":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"docs":{}},"docs":{}},"6":{"0":{"8":{"4":{"3":{"6":{"5":{"8":{"4":{"4":{"7":{"2":{"6":{"5":{"6":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"7":{"docs":{},".":{"2":{"6":{"0":{"4":{"2":{"1":{"7":{"5":{"2":{"9":{"2":{"9":{"6":{"8":{"7":{"5":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"8":{"0":{"docs":{},".":{"0":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}}},"4":{"docs":{},".":{"0":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}}},"docs":{},".":{"8":{"7":{"5":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},"e":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},")":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"k":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0026678523788350376},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.004923413566739606},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.005747126436781609},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.005836575875486381},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.00528169014084507},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}},")":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.004923413566739606},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.010040160642570281},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}},"g":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}},"o":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0045351473922902496}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},"]":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"和":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"在":{"docs":{},"同":{"docs":{},"一":{"docs":{},"时":{"docs":{},"间":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}}}}}}}}}}}}},"n":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},"a":{"docs":{},"c":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"[":{"docs":{},"]":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},")":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},"a":{"docs":{},"c":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.005366726296958855}},"[":{"docs":{},"]":{"docs":{},")":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}},"n":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"!":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"y":{"docs":{},"i":{"docs":{},"f":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"h":{"docs":{},",":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"e":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0022232103156958646},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"k":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"k":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},"f":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0030234315948601664}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}},"f":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"h":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}},"+":{"docs":{},"+":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},";":{"docs":{},";":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0035714285714285713}}}}},"a":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0025188916876574307}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},",":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},",":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{},"/":{"docs":{},"/":{"docs":{},"注":{"docs":{},"意":{"docs":{},"传":{"docs":{},"进":{"docs":{},"去":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}}}}}}}}},"c":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},"m":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"t":{"docs":{},",":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}},"p":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},")":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}}}}},"f":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},")":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}},")":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"h":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002857142857142857}}}}}}}}},"h":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143}},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0031124944419742106},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{},"e":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0026678523788350376},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}}}}}}}}},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"r":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"+":{"docs":{},"+":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}},"u":{"docs":{},"n":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}},"s":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"e":{"docs":{},"g":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},")":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},")":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},",":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"^":{"docs":{},"\\":{"docs":{},"\\":{"docs":{},"d":{"docs":{},"{":{"4":{"docs":{},"}":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}},"docs":{}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"a":{"docs":{},"b":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},",":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}},")":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},")":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"时":{"docs":{},"进":{"docs":{},"行":{"docs":{},"移":{"docs":{},"位":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},")":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.022315202231520222}},"）":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"显":{"docs":{},"式":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"父":{"docs":{},"类":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"。":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"保":{"docs":{},"证":{"docs":{},"在":{"docs":{},"子":{"docs":{},"类":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}}}},"w":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0035714285714285713}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}},"v":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}},"运":{"docs":{},"行":{"docs":{},"用":{"docs":{},"户":{"docs":{},"代":{"docs":{},"码":{"docs":{},"时":{"docs":{},"间":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}},"此":{"docs":{},"时":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"的":{"docs":{},"根":{"docs":{},"目":{"docs":{},"录":{"docs":{},"下":{"docs":{},"的":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"文":{"docs":{},"件":{"docs":{},"夹":{"docs":{},"中":{"docs":{},"已":{"docs":{},"经":{"docs":{},"有":{"docs":{},"了":{"docs":{},"该":{"docs":{},"插":{"docs":{},"件":{"docs":{},"了":{"docs":{},")":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"+":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.00749063670411985},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.005366726296958855},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.013676148796498906},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.00546448087431694},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.08754863813229571},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.02208835341365462},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.012924071082390954},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.011764705882352941},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.0041841004184100415},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.003022670025188917},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.028169014084507043},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.012849584278155708},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.01161751563896336}},"+":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}}}}},"n":{"docs":{},";":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}},"=":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},".":{"7":{"5":{"docs":{},"f":{"docs":{},",":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}}},"docs":{}},"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.009389671361502348}},".":{"docs":{},".":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}},"/":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}},"j":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"/":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0025210084033613447},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"/":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.020599250936329586},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.008421052631578947},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.030952380952380953},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.028012449977767896},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.026805251641137857},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.018579234972677595},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.020714285714285713},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.02610441767068273},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.008077544426494346},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.01394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.061619718309859156},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.055933484504913075},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.045576407506702415}},"之":{"docs":{},"所":{"docs":{},"以":{"docs":{},"用":{"3":{"2":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"里":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"输":{"docs":{},"出":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"数":{"docs":{},"是":{"3":{"2":{"docs":{},"位":{"docs":{},"的":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"保":{"docs":{},"证":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}},"加":{"docs":{},"锁":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"将":{"docs":{},"除":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"之":{"docs":{},"外":{"docs":{},"的":{"docs":{},"其":{"docs":{},"他":{"docs":{},"元":{"docs":{},"素":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"到":{"docs":{},"新":{"docs":{},"副":{"docs":{},"本":{"docs":{},"中":{"docs":{},"，":{"docs":{},"并":{"docs":{},"切":{"docs":{},"换":{"docs":{},"引":{"docs":{},"用":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"新":{"docs":{},"副":{"docs":{},"本":{"docs":{},"上":{"docs":{},"执":{"docs":{},"行":{"docs":{},"添":{"docs":{},"加":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"是":{"docs":{},"列":{"docs":{},"表":{"docs":{},"末":{"docs":{},"端":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"前":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"原":{"docs":{},"容":{"docs":{},"器":{"docs":{},"引":{"docs":{},"用":{"docs":{},"指":{"docs":{},"向":{"docs":{},"新":{"docs":{},"副":{"docs":{},"本":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"中":{"docs":{},"的":{"docs":{},"子":{"docs":{},"文":{"docs":{},"件":{"docs":{},"全":{"docs":{},"部":{"docs":{},"移":{"docs":{},"到":{"docs":{},"外":{"docs":{},"层":{"docs":{},"，":{"docs":{},"并":{"docs":{},"删":{"docs":{},"除":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}}}},"拷":{"docs":{},"贝":{"docs":{},"原":{"docs":{},"容":{"docs":{},"器":{"docs":{},"，":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"原":{"docs":{},"容":{"docs":{},"器":{"docs":{},"长":{"docs":{},"度":{"docs":{},"加":{"docs":{},"一":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}},"解":{"docs":{},"锁":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}}},"获":{"docs":{},"取":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}},"释":{"docs":{},"放":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}},"注":{"docs":{},"意":{"docs":{},"传":{"docs":{},"进":{"docs":{},"去":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}},"清":{"docs":{},"空":{"docs":{},"一":{"docs":{},"下":{"docs":{},"分":{"docs":{},"支":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"分":{"docs":{},"支":{"docs":{},"下":{"docs":{},"的":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"静":{"docs":{},"态":{"docs":{},"页":{"docs":{},"面":{"docs":{},"文":{"docs":{},"件":{"docs":{},"内":{"docs":{},"容":{"docs":{},"全":{"docs":{},"部":{"docs":{},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{},"g":{"docs":{},"h":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"g":{"docs":{},"h":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}},"*":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.033707865168539325}},"*":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.008571428571428572},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.003779289493575208},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"/":{"docs":{},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}},">":{"0":{"docs":{},"k":{"docs":{},"(":{"2":{"7":{"4":{"9":{"4":{"4":{"docs":{},"k":{"docs":{},")":{"docs":{},"]":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"1":{"0":{"7":{"3":{"8":{"docs":{},"k":{"docs":{},"(":{"2":{"7":{"4":{"9":{"4":{"4":{"docs":{},"k":{"docs":{},")":{"docs":{},"]":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"4":{"0":{"3":{"7":{"9":{"docs":{},"k":{"docs":{},"(":{"3":{"0":{"2":{"5":{"9":{"2":{"docs":{},"k":{"docs":{},")":{"docs":{},"]":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"7":{"7":{"5":{"3":{"6":{"docs":{},"k":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"7":{"1":{"8":{"6":{"docs":{},"k":{"docs":{},"(":{"4":{"5":{"0":{"0":{"4":{"8":{"docs":{},"k":{"docs":{},")":{"docs":{},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"5":{"3":{"7":{"6":{"docs":{},"k":{"docs":{},"(":{"1":{"7":{"1":{"0":{"0":{"8":{"docs":{},"k":{"docs":{},")":{"docs":{},"]":{"docs":{},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0022232103156958646},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002735229759299781},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.004285714285714286},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.008032128514056224},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.011308562197092083}},">":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925}},">":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}},"=":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}},"e":{"docs":{},",":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"p":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804}}}}}},"g":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},";":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}},"m":{"docs":{},"o":{"0":{"1":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"docs":{}},"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.009389671361502348}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}},"g":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"o":{"docs":{},"r":{"docs":{},"\"":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"y":{"docs":{},")":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.00654911838790932}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},":":{"docs":{},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},",":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"=":{"docs":{},"b":{"docs":{},",":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"=":{"docs":{},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"）":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"用":{"docs":{},"来":{"docs":{},"检":{"docs":{},"查":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"来":{"docs":{},"消":{"docs":{},"除":{"docs":{},"导":{"docs":{},"致":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}},"，":{"docs":{},"j":{"docs":{},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"e":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},":":{"docs":{},"\\":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"\\":{"docs":{},"z":{"docs":{},"p":{"docs":{},"\\":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"\\":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"\\":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"s":{"docs":{},"\\":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"\\":{"docs":{},"分":{"docs":{},"布":{"docs":{},"式":{"docs":{},"锁":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"：":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"队":{"docs":{},"列":{"docs":{},"里":{"docs":{},"最":{"docs":{},"近":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"并":{"docs":{},"执":{"docs":{},"行":{"docs":{},"当":{"docs":{},"前":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"：":{"docs":{},"不":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"掉":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}},"o":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"i":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}}}}}},"2":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}}}}}},"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"s":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},",":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"!":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}},"a":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.003022670025188917}}}}}},"t":{"docs":{},"a":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"建":{"docs":{},"立":{"docs":{},"链":{"docs":{},"接":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.02247191011235955}},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"：":{"docs":{},"数":{"docs":{},"据":{"docs":{},"包":{"docs":{},"类":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"：":{"docs":{},"通":{"docs":{},"信":{"docs":{},"类":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0030234315948601664}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}},"e":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.00528169014084507}}}},"y":{"docs":{},"s":{"docs":{},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"d":{"docs":{},"b":{"docs":{},"_":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"j":{"docs":{},"m":{"docs":{},"x":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"=":{"1":{"8":{"8":{"8":{"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"a":{"docs":{},"w":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"e":{"docs":{},"=":{"1":{"2":{"7":{"docs":{},".":{"0":{"docs":{},".":{"0":{"docs":{},".":{"1":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},".":{"docs":{},"d":{"docs":{},"g":{"docs":{},"c":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"c":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"=":{"6":{"0":{"0":{"0":{"0":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"c":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"=":{"6":{"0":{"0":{"0":{"0":{"0":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}},"）":{"docs":{},"：":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}},"n":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.008645533141210375},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.008645533141210375},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.008645533141210375}}}},"e":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.00749063670411985},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.00546448087431694}},")":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.005470459518599562},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.010040160642570281},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.006462035541195477},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0045351473922902496}},"{":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.005780346820809248},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0056179775280898875},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0056179775280898875}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}},",":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},"[":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}},"s":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.029473684210526315}},">":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}},"e":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"、":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.002680965147453083}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.005780346820809248},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"y":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},")":{"docs":{},"；":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"。":{"docs":{},"请":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"[":{"docs":{},"]":{"docs":{},"数":{"docs":{},"组":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"q":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143}},"(":{"docs":{},")":{"docs":{},"完":{"docs":{},"成":{"docs":{},"对":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"工":{"docs":{},"作":{"docs":{},"以":{"docs":{},"及":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}},",":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.005366726296958855},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.004310344827586207}}},")":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}},"，":{"docs":{},"替":{"docs":{},"换":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0056179775280898875},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.016842105263157894},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.01904761904761905},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0022232103156958646},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.02857142857142857},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.009830205540661306}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"0":{"1":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}},"2":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}},"docs":{}},"docs":{}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\\":{"docs":{},"$":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"。":{"docs":{},"它":{"docs":{},"负":{"docs":{},"责":{"docs":{},"将":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}},"p":{"docs":{},"l":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.006046863189720333},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"{":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}}}}}},"e":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"s":{"docs":{},".":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"e":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"u":{"docs":{},"t":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.008821170809943865},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.012924071082390954}},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"1":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}},"docs":{}},"docs":{}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}},"5":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}},"docs":{},")":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"5":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.007782101167315175},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.012924071082390954}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"3":{"0":{"docs":{},",":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}},"docs":{}},"6":{"0":{"docs":{},",":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}}}}}}}}}}}}}},"：":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"比":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}},"，":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"，":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"其":{"docs":{},"方":{"docs":{},"法":{"docs":{},"签":{"docs":{},"名":{"docs":{},"为":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}},"即":{"docs":{},"只":{"docs":{},"创":{"docs":{},"建":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"者":{"docs":{},"线":{"docs":{},"程":{"docs":{},"来":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"它":{"docs":{},"只":{"docs":{},"会":{"docs":{},"用":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"来":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"保":{"docs":{},"证":{"docs":{},"所":{"docs":{},"有":{"docs":{},"任":{"docs":{},"务":{"docs":{},"按":{"docs":{},"照":{"docs":{},"指":{"docs":{},"定":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"f":{"docs":{},"o":{"docs":{},",":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"其":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"接":{"docs":{},"收":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}},"方":{"docs":{},"法":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"它":{"docs":{},"能":{"docs":{},"够":{"docs":{},"返":{"docs":{},"回":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"去":{"docs":{},"看":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"只":{"docs":{},"不":{"docs":{},"过":{"docs":{},"它":{"docs":{},"利":{"docs":{},"用":{"docs":{},"了":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"u":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"e":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.00437636761487965},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.010040160642570281},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0045351473922902496}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"方":{"docs":{},"法":{"docs":{},"确":{"docs":{},"定":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"发":{"docs":{},"生":{"docs":{},"碰":{"docs":{},"撞":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}}}}}}},"k":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.012605042016806723},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.003022670025188917}},";":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"、":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"、":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"空":{"docs":{},"间":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"表":{"docs":{},"述":{"docs":{},"形":{"docs":{},"式":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}},"c":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"f":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"u":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"o":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"b":{"docs":{},"j":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0058823529411764705},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.004201680672268907},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.009762900976290097},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},"[":{"docs":{},"]":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0056179775280898875},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.004761904761904762},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.00546448087431694},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0033613445378151263}}}}},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"，":{"docs":{},"我":{"docs":{},"找":{"docs":{},"了":{"docs":{},"下":{"docs":{},"我":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"定":{"docs":{},"位":{"docs":{},"到":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}},"a":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},";":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"b":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},";":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0030234315948601664},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.002680965147453083}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},")":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0030234315948601664},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.004468275245755138}},"(":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}},",":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.005366726296958855}}},"[":{"docs":{},"]":{"docs":{},")":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"l":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.014285714285714285},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},"a":{"docs":{},"c":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0056179775280898875}}}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"]":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164}},"u":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"e":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"h":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},".":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}},"a":{"docs":{},"c":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"g":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},".":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"3":{"2":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"8":{"6":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"$":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"6":{"1":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}},"u":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0056179775280898875},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.005291005291005291},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0030234315948601664},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"\"":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.004468275245755138}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.031496062992125984},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}}}}}}}}},"u":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"u":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"(":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},")":{"docs":{},"分":{"docs":{},"析":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"i":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"1":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"2":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0045351473922902496},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}},"（":{"docs":{},"输":{"docs":{},"出":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}},":":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.006255585344057194}}}}}},")":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.006255585344057194}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"）":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}},"(":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}},",":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"(":{"1":{"docs":{},")":{"docs":{},"+":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"了":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"在":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"当":{"docs":{},"碰":{"docs":{},"撞":{"docs":{},"很":{"docs":{},"厉":{"docs":{},"害":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}},"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"改":{"docs":{},"进":{"docs":{},"性":{"docs":{},"能":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}},"n":{"docs":{},")":{"docs":{},"；":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"个":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}},"k":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"n":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"l":{"docs":{},"y":{"docs":{},"i":{"docs":{},"f":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},")":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}},"d":{"docs":{},"p":{"docs":{},"s":{"docs":{},"、":{"docs":{},"h":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}},"s":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},"g":{"docs":{},"i":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"i":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},"c":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.003022670025188917}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"docs":{}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}},"s":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"仅":{"docs":{},"列":{"docs":{},"举":{"docs":{},"常":{"docs":{},"用":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},"i":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}}}}}}}}}}}},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}},"o":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}},",":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.01056338028169014}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},",":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"0":{"1":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}},"2":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"1":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},";":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.007246376811594203}}}}},"e":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"a":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}},"(":{"docs":{},")":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.002680965147453083}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.005361930294906166}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.007142857142857143}},")":{"docs":{},"都":{"docs":{},"是":{"docs":{},"基":{"docs":{},"于":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.002680965147453083}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0030234315948601664}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}},"（":{"docs":{},"输":{"docs":{},"入":{"docs":{},"）":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}},"。":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"在":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"和":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"会":{"docs":{},"被":{"docs":{},"自":{"docs":{},"动":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"以":{"docs":{},"便":{"docs":{},"执":{"docs":{},"行":{"docs":{},"一":{"docs":{},"些":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"当":{"docs":{},"使":{"docs":{},"用":{"docs":{},"该":{"docs":{},"接":{"docs":{},"口":{"docs":{},"时":{"docs":{},"，":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"细":{"docs":{},"节":{"docs":{},"需":{"docs":{},"要":{"docs":{},"由":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"去":{"docs":{},"完":{"docs":{},"成":{"docs":{},"。":{"docs":{},"如":{"docs":{},"上":{"docs":{},"所":{"docs":{},"示":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}},"i":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}},"y":{"docs":{},"，":{"docs":{},"还":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"将":{"docs":{},"这":{"docs":{},"部":{"docs":{},"分":{"docs":{},"数":{"docs":{},"据":{"docs":{},"发":{"docs":{},"出":{"docs":{},"。":{"docs":{},"上":{"docs":{},"图":{"docs":{},"中":{"docs":{},"的":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}},"l":{"docs":{},"=":{"0":{"docs":{},".":{"0":{"7":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"6":{"8":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"docs":{}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.009523809523809525},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.004371584699453552},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.005714285714285714}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},";":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.004761904761904762},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}},"，":{"docs":{},"并":{"docs":{},"发":{"docs":{},"度":{"docs":{},"与":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"+":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"+":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}},")":{"docs":{},"。":{"docs":{},"当":{"docs":{},"需":{"docs":{},"要":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"、":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"、":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"而":{"docs":{},"言":{"docs":{},",":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"，":{"docs":{},"其":{"docs":{},"是":{"docs":{},"独":{"docs":{},"享":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"定":{"docs":{},"该":{"docs":{},"锁":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"是":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"优":{"docs":{},"点":{"docs":{},"在":{"docs":{},"于":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"比":{"docs":{},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"大":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002857142857142857}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"源":{"docs":{},"码":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"示":{"docs":{},"例":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"要":{"docs":{},"点":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},")":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"用":{"docs":{},"来":{"docs":{},"移":{"docs":{},"除":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"副":{"docs":{},"本":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}},"等":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"减":{"docs":{},"少":{"docs":{},"并":{"docs":{},"发":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"，":{"docs":{},"对":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.005042016806722689}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.00749063670411985},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.010226767452200978},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0032822757111597373},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.008620689655172414},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.006557377049180328},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.008571428571428572},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.005836575875486381},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.008368200836820083},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.003779289493575208},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.002680965147453083}},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}}}},"r":{"docs":{},"i":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918}},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.009727626459143969}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"e":{"docs":{},"(":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}},"s":{"docs":{},":":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}},"）":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0025210084033613447}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}}}}}}}}}}}}},"）":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}},"_":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},",":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},",":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0022232103156958646}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0031124944419742106},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"在":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"，":{"docs":{},"然":{"docs":{},"而":{"docs":{},"又":{"docs":{},"因":{"docs":{},"为":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}},"而":{"docs":{},"引":{"docs":{},"起":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},".":{"docs":{},"（":{"docs":{},"条":{"docs":{},"件":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"）":{"docs":{},"。":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"的":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"形":{"docs":{},"成":{"docs":{},"环":{"docs":{},"形":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},".":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"s":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"y":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}}}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.0111731843575419}}}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"(":{"docs":{},")":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}},")":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.005042016806722689}},"s":{"docs":{},")":{"docs":{},"*":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"区":{"docs":{},"域":{"docs":{},"被":{"docs":{},"设":{"docs":{},"计":{"docs":{},"成":{"docs":{},"保":{"docs":{},"持":{"docs":{},"标":{"docs":{},"准":{"docs":{},"区":{"docs":{},"域":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"通":{"docs":{},"过":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"是":{"docs":{},"用":{"docs":{},"户":{"docs":{},"可":{"docs":{},"控":{"docs":{},"制":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"用":{"docs":{},"户":{"docs":{},"线":{"docs":{},"程":{"docs":{},"将":{"docs":{},"大":{"docs":{},"幅":{"docs":{},"度":{"docs":{},"提":{"docs":{},"高":{"docs":{},"收":{"docs":{},"集":{"docs":{},"效":{"docs":{},"率":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0033613445378151263},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.00906801007556675}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},")":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}},";":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}}}},"@":{"docs":{},"u":{"docs":{},"b":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},":":{"docs":{},"/":{"docs":{},"#":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}},"w":{"docs":{},"s":{"docs":{},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"行":{"docs":{},"数":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.012028869286287089},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.015317286652078774},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.005747126436781609},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"就":{"docs":{},"会":{"docs":{},"和":{"docs":{},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"一":{"docs":{},"样":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.007217321571772253},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.010393873085339168},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.005747126436781609},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.008032128514056224},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}},"e":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"根":{"docs":{},"据":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"度":{"docs":{},"，":{"docs":{},"它":{"docs":{},"将":{"docs":{},"得":{"docs":{},"到":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.006462035541195477}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.005578800557880056}},"，":{"docs":{},"名":{"docs":{},"字":{"docs":{},"不":{"docs":{},"符":{"docs":{},"合":{"docs":{},"的":{"docs":{},"类":{"docs":{},"库":{"docs":{},"即":{"docs":{},"使":{"docs":{},"放":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}},"o":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.008645533141210375},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.008645533141210375},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.008645533141210375}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"w":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},"l":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.009389671361502348}},"i":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"(":{"docs":{},"远":{"docs":{},"程":{"docs":{},"方":{"docs":{},"法":{"docs":{},"调":{"docs":{},"用":{"docs":{},")":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}},"d":{"docs":{},"f":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.007042253521126761}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}},"docs":{}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"1":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804}}}}},"docs":{}},"docs":{}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.00528169014084507}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.00528169014084507}}}}}}}}}}}}}}}}}}},"f":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.009389671361502348}}}},"u":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"s":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0026678523788350376},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0055415617128463475}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}},"r":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"=":{"0":{"docs":{},".":{"1":{"7":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"1":{"docs":{},".":{"7":{"5":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}},"docs":{}}},"docs":{}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},")":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.004761904761904762},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}},",":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}},"：":{"docs":{},"参":{"docs":{},"数":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"g":{"docs":{},"o":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},".":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},"(":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"。":{"docs":{},"）":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"e":{"docs":{},")":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},";":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.005366726296958855},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}},"类":{"docs":{},"似":{"docs":{},"：":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"悲":{"docs":{},"观":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"获":{"docs":{},"取":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"的":{"docs":{},"行":{"docs":{},"锁":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.007782101167315175}}}}},"d":{"docs":{},"p":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}}},"r":{"docs":{},"l":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.056179775280898875}},"：":{"docs":{},"统":{"docs":{},"一":{"docs":{},"资":{"docs":{},"源":{"docs":{},"定":{"docs":{},"位":{"docs":{},"符":{"docs":{},"；":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}}}},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"i":{"docs":{},"d":{"docs":{},"u":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}},"w":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"i":{"docs":{},"n":{"docs":{},":":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},"，":{"docs":{},"又":{"docs":{},"叫":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"段":{"docs":{},"是":{"docs":{},"接":{"docs":{},"收":{"docs":{},"端":{"docs":{},"告":{"docs":{},"诉":{"docs":{},"发":{"docs":{},"送":{"docs":{},"端":{"docs":{},"自":{"docs":{},"己":{"docs":{},"还":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"可":{"docs":{},"以":{"docs":{},"接":{"docs":{},"收":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"于":{"docs":{},"是":{"docs":{},"发":{"docs":{},"送":{"docs":{},"端":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"根":{"docs":{},"据":{"docs":{},"这":{"docs":{},"个":{"docs":{},"接":{"docs":{},"收":{"docs":{},"端":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"能":{"docs":{},"力":{"docs":{},"来":{"docs":{},"发":{"docs":{},"送":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"接":{"docs":{},"收":{"docs":{},"端":{"docs":{},"处":{"docs":{},"理":{"docs":{},"不":{"docs":{},"过":{"docs":{},"来":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"e":{"docs":{},",":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}},"：":{"docs":{},"任":{"docs":{},"务":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{},"用":{"docs":{},"于":{"docs":{},"保":{"docs":{},"存":{"docs":{},"等":{"docs":{},"待":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"它":{"docs":{},"用":{"docs":{},"来":{"docs":{},"存":{"docs":{},"放":{"docs":{},"等":{"docs":{},"待":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.008379888268156424}},"（":{"docs":{},"在":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"上":{"docs":{},"调":{"docs":{},"用":{"docs":{},"）":{"docs":{},"也":{"docs":{},"是":{"docs":{},"“":{"docs":{},"活":{"docs":{},"动":{"docs":{},"的":{"docs":{},"”":{"docs":{},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"会":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"将":{"docs":{},"该":{"docs":{},"资":{"docs":{},"源":{"docs":{},"交":{"docs":{},"给":{"docs":{},"其":{"docs":{},"他":{"docs":{},"工":{"docs":{},"作":{"docs":{},"者":{"docs":{},"并":{"docs":{},"等":{"docs":{},"待":{"docs":{},"为":{"docs":{},"它":{"docs":{},"完":{"docs":{},"成":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"最":{"docs":{},"初":{"docs":{},"我":{"docs":{},"们":{"docs":{},"让":{"docs":{},"两":{"docs":{},"名":{"docs":{},"工":{"docs":{},"作":{"docs":{},"人":{"docs":{},"员":{"docs":{},"都":{"docs":{},"活":{"docs":{},"跃":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"他":{"docs":{},"们":{"docs":{},"将":{"docs":{},"会":{"docs":{},"面":{"docs":{},"临":{"docs":{},"活":{"docs":{},"锁":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"防":{"docs":{},"止":{"docs":{},"在":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"添":{"docs":{},"加":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178}},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"线":{"docs":{},"程":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"将":{"docs":{},"对":{"docs":{},"象":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}},"l":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0033613445378151263}},"暂":{"docs":{},"停":{"docs":{},"。":{"docs":{},"为":{"docs":{},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"计":{"docs":{},"算":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"和":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"。":{"docs":{},"保":{"docs":{},"留":{"docs":{},"审":{"docs":{},"计":{"docs":{},"信":{"docs":{},"息":{"docs":{},"有":{"docs":{},"助":{"docs":{},"于":{"docs":{},"计":{"docs":{},"算":{"docs":{},"大":{"docs":{},"小":{"docs":{},"。":{"docs":{},"类":{"docs":{},"似":{"docs":{},"目":{"docs":{},"标":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"事":{"docs":{},"情":{"docs":{},"会":{"docs":{},"被":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"在":{"docs":{},"内":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"!":{"docs":{},"!":{"docs":{},"!":{"docs":{},"\"":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},"\\":{"docs":{},"r":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}},"\\":{"docs":{},"r":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0056179775280898875}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.004468275245755138}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"r":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}},"。":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}},"（":{"docs":{},"输":{"docs":{},"出":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.005780346820809248},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"，":{"docs":{},"将":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"不":{"docs":{},"常":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"容":{"docs":{},"易":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0025210084033613447}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"。":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"主":{"docs":{},"要":{"docs":{},"用":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}},"b":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.004030226700251889}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},",":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.00400962309542903},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825}}},"、":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}},"和":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}},")":{"docs":{},"也":{"docs":{},"处":{"docs":{},"于":{"docs":{},"永":{"docs":{},"久":{"docs":{},"等":{"docs":{},"待":{"docs":{},"完":{"docs":{},"成":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"总":{"docs":{},"是":{"docs":{},"被":{"docs":{},"持":{"docs":{},"续":{"docs":{},"地":{"docs":{},"获":{"docs":{},"得":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"必":{"docs":{},"须":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"接":{"docs":{},"着":{"docs":{},"它":{"docs":{},"就":{"docs":{},"会":{"docs":{},"释":{"docs":{},"放":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"锁":{"docs":{},"并":{"docs":{},"进":{"docs":{},"入":{"docs":{},"等":{"docs":{},"待":{"docs":{},"状":{"docs":{},"态":{"docs":{},"直":{"docs":{},"到":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"的":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},"等":{"docs":{},"方":{"docs":{},"法":{"docs":{},"用":{"docs":{},"于":{"docs":{},"等":{"docs":{},"待":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"或":{"docs":{},"者":{"docs":{},"通":{"docs":{},"知":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"可":{"docs":{},"用":{"docs":{},"。":{"docs":{},"在":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"）":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"/":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"/":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"a":{"docs":{},"l":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}},"、":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"、":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"a":{"docs":{},"l":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"s":{"docs":{},";":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}}}}}},"!":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},")":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}},"s":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143}},",":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}},"f":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"主":{"docs":{},"要":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}},"的":{"docs":{},"类":{"docs":{},"有":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"不":{"docs":{},"足":{"docs":{},"是":{"docs":{},"只":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"一":{"docs":{},"半":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"是":{"docs":{},"对":{"docs":{},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{},"的":{"docs":{},"回":{"docs":{},"收":{"docs":{},"和":{"docs":{},"对":{"docs":{},"类":{"docs":{},"的":{"docs":{},"卸":{"docs":{},"载":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}},"针":{"docs":{},"对":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"进":{"docs":{},"行":{"docs":{},"内":{"docs":{},"存":{"docs":{},"回":{"docs":{},"收":{"docs":{},"比":{"docs":{},"较":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"，":{"docs":{},"耗":{"docs":{},"时":{"docs":{},"短":{"docs":{},"；":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}},"协":{"docs":{},"议":{"docs":{},"：":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"、":{"docs":{},"d":{"docs":{},"n":{"docs":{},"s":{"docs":{},"、":{"docs":{},"s":{"docs":{},"m":{"docs":{},"t":{"docs":{},"p":{"docs":{},"、":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"、":{"docs":{},"f":{"docs":{},"t":{"docs":{},"p":{"docs":{},"、":{"docs":{},"s":{"docs":{},"n":{"docs":{},"m":{"docs":{},"p":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}},"p":{"docs":{},"p":{"docs":{},"p":{"docs":{},"、":{"docs":{},"c":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"/":{"docs":{},"c":{"docs":{},"d":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"、":{"docs":{},"u":{"docs":{},"d":{"docs":{},"p":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}},"动":{"docs":{},"引":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}},"从":{"docs":{},"复":{"docs":{},"制":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.011494252873563218}}}},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"负":{"docs":{},"责":{"docs":{},"各":{"docs":{},"自":{"docs":{},"的":{"docs":{},"读":{"docs":{},"和":{"docs":{},"写":{"docs":{},"，":{"docs":{},"极":{"docs":{},"大":{"docs":{},"程":{"docs":{},"度":{"docs":{},"缓":{"docs":{},"解":{"docs":{},"了":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"争":{"docs":{},"用":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}},"索":{"docs":{},"引":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}},"键":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}},"是":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"，":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"表":{"docs":{},"只":{"docs":{},"能":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"主":{"docs":{},"键":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"，":{"docs":{},"复":{"docs":{},"制":{"docs":{},"的":{"docs":{},"代":{"docs":{},"价":{"docs":{},"很":{"docs":{},"高":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}},"，":{"docs":{},"并":{"docs":{},"进":{"docs":{},"一":{"docs":{},"步":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"进":{"docs":{},"一":{"docs":{},"步":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"：":{"docs":{},"(":{"docs":{},"h":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"异":{"docs":{},"或":{"docs":{},"低":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"字":{"docs":{},"节":{"docs":{},"为":{"docs":{},"基":{"docs":{},"础":{"docs":{},"单":{"docs":{},"位":{"docs":{},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"流":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}},"倍":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925}}},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"而":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}},")":{"docs":{},"。":{"docs":{},"获":{"docs":{},"取":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"要":{"docs":{},"么":{"docs":{},"是":{"docs":{},"在":{"docs":{},"原":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"要":{"docs":{},"么":{"docs":{},"是":{"docs":{},"在":{"docs":{},"原":{"docs":{},"位":{"docs":{},"置":{"docs":{},"再":{"docs":{},"移":{"docs":{},"动":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"重":{"docs":{},"新":{"docs":{},"计":{"docs":{},"算":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"那":{"docs":{},"么":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"内":{"docs":{},"存":{"docs":{},"占":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"：":{"docs":{},"在":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"复":{"docs":{},"制":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"内":{"docs":{},"存":{"docs":{},"占":{"docs":{},"用":{"docs":{},"为":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"两":{"docs":{},"倍":{"docs":{},"左":{"docs":{},"右":{"docs":{},"；":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"型":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.00400962309542903},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":5.010869565217392}},"即":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}},"与":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"内":{"docs":{},"存":{"docs":{},"架":{"docs":{},"构":{"docs":{},"之":{"docs":{},"间":{"docs":{},"存":{"docs":{},"在":{"docs":{},"差":{"docs":{},"异":{"docs":{},"。":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"内":{"docs":{},"存":{"docs":{},"架":{"docs":{},"构":{"docs":{},"没":{"docs":{},"有":{"docs":{},"区":{"docs":{},"分":{"docs":{},"线":{"docs":{},"程":{"docs":{},"栈":{"docs":{},"和":{"docs":{},"堆":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"栈":{"docs":{},"和":{"docs":{},"堆":{"docs":{},"都":{"docs":{},"分":{"docs":{},"布":{"docs":{},"在":{"docs":{},"主":{"docs":{},"内":{"docs":{},"中":{"docs":{},"。":{"docs":{},"部":{"docs":{},"分":{"docs":{},"线":{"docs":{},"程":{"docs":{},"栈":{"docs":{},"和":{"docs":{},"堆":{"docs":{},"可":{"docs":{},"能":{"docs":{},"有":{"docs":{},"时":{"docs":{},"候":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}},"如":{"docs":{},"何":{"docs":{},"与":{"docs":{},"它":{"docs":{},"协":{"docs":{},"同":{"docs":{},"工":{"docs":{},"作":{"docs":{},"也":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"。":{"docs":{},"这":{"docs":{},"部":{"docs":{},"分":{"docs":{},"描":{"docs":{},"述":{"docs":{},"了":{"docs":{},"通":{"docs":{},"用":{"docs":{},"的":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"内":{"docs":{},"存":{"docs":{},"架":{"docs":{},"构":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"将":{"docs":{},"会":{"docs":{},"描":{"docs":{},"述":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"内":{"docs":{},"存":{"docs":{},"交":{"docs":{},"互":{"docs":{},"不":{"docs":{},"是":{"docs":{},"那":{"docs":{},"么":{"docs":{},"重":{"docs":{},"要":{"docs":{},"。":{"docs":{},"只":{"docs":{},"要":{"docs":{},"知":{"docs":{},"道":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"限":{"docs":{},"制":{"docs":{},"执":{"docs":{},"行":{"docs":{},"引":{"docs":{},"擎":{"docs":{},"使":{"docs":{},"用":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"的":{"docs":{},"特":{"docs":{},"定":{"docs":{},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"或":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"来":{"docs":{},"和":{"docs":{},"主":{"docs":{},"存":{"docs":{},"进":{"docs":{},"行":{"docs":{},"交":{"docs":{},"互":{"docs":{},"，":{"docs":{},"也":{"docs":{},"没":{"docs":{},"有":{"docs":{},"限":{"docs":{},"制":{"docs":{},"即":{"docs":{},"使":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"进":{"docs":{},"行":{"docs":{},"调":{"docs":{},"整":{"docs":{},"代":{"docs":{},"码":{"docs":{},"执":{"docs":{},"行":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"这":{"docs":{},"类":{"docs":{},"优":{"docs":{},"化":{"docs":{},"措":{"docs":{},"施":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"把":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}},"有":{"docs":{},"一":{"docs":{},"些":{"docs":{},"不":{"docs":{},"同":{"docs":{},"。":{"docs":{},"理":{"docs":{},"解":{"docs":{},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{},"架":{"docs":{},"构":{"docs":{},"以":{"docs":{},"及":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}},"结":{"docs":{},"构":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.007246376811594203}}}},"（":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"与":{"docs":{},"它":{"docs":{},"“":{"docs":{},"联":{"docs":{},"手":{"docs":{},"”":{"docs":{},"工":{"docs":{},"作":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}},"问":{"docs":{},"题":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}},"分":{"docs":{},"配":{"docs":{},"与":{"docs":{},"回":{"docs":{},"收":{"docs":{},"策":{"docs":{},"略":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}}}}},"策":{"docs":{},"略":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}}}},"中":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"和":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"文":{"docs":{},"件":{"docs":{},"。":{"docs":{},"该":{"docs":{},"文":{"docs":{},"件":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"执":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"泄":{"docs":{},"漏":{"docs":{},"常":{"docs":{},"见":{"docs":{},"几":{"docs":{},"个":{"docs":{},"情":{"docs":{},"况":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"并":{"docs":{},"非":{"docs":{},"指":{"docs":{},"内":{"docs":{},"存":{"docs":{},"在":{"docs":{},"物":{"docs":{},"理":{"docs":{},"上":{"docs":{},"的":{"docs":{},"消":{"docs":{},"失":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"分":{"docs":{},"配":{"docs":{},"某":{"docs":{},"段":{"docs":{},"内":{"docs":{},"存":{"docs":{},"后":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"设":{"docs":{},"计":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"失":{"docs":{},"去":{"docs":{},"了":{"docs":{},"对":{"docs":{},"该":{"docs":{},"段":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"控":{"docs":{},"制":{"docs":{},"，":{"docs":{},"因":{"docs":{},"而":{"docs":{},"造":{"docs":{},"成":{"docs":{},"了":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"指":{"docs":{},"由":{"docs":{},"于":{"docs":{},"疏":{"docs":{},"忽":{"docs":{},"或":{"docs":{},"错":{"docs":{},"误":{"docs":{},"造":{"docs":{},"成":{"docs":{},"程":{"docs":{},"序":{"docs":{},"未":{"docs":{},"能":{"docs":{},"释":{"docs":{},"放":{"docs":{},"已":{"docs":{},"经":{"docs":{},"不":{"docs":{},"再":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"随":{"docs":{},"着":{"docs":{},"被":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"越":{"docs":{},"多":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"露":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"溢":{"docs":{},"出":{"docs":{},"时":{"docs":{},"输":{"docs":{},"出":{"docs":{},"堆":{"docs":{},"快":{"docs":{},"照":{"docs":{},"文":{"docs":{},"件":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"给":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"规":{"docs":{},"范":{"docs":{},"中":{"docs":{},"的":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"地":{"docs":{},"址":{"docs":{},"定":{"docs":{},"位":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"越":{"docs":{},"多":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"你":{"docs":{},"能":{"docs":{},"用":{"docs":{},"来":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"系":{"docs":{},"统":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"就":{"docs":{},"会":{"docs":{},"越":{"docs":{},"少":{"docs":{},"，":{"docs":{},"越":{"docs":{},"容":{"docs":{},"易":{"docs":{},"发":{"docs":{},"生":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"配":{"docs":{},"置":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}},"部":{"docs":{},"维":{"docs":{},"护":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"维":{"docs":{},"护":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"或":{"docs":{},"者":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"原":{"docs":{},"理":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.007246376811594203}}}},"的":{"docs":{},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"中":{"docs":{},"。":{"docs":{},"如":{"docs":{},"下":{"docs":{},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}},"类":{"docs":{},"和":{"docs":{},"外":{"docs":{},"部":{"docs":{},"模":{"docs":{},"块":{"docs":{},"等":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"。":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}},"置":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"微":{"docs":{},"型":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"复":{"docs":{},"制":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"上":{"docs":{},"进":{"docs":{},"行":{"docs":{},"，":{"docs":{},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"还":{"docs":{},"是":{"docs":{},"在":{"docs":{},"原":{"docs":{},"始":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"，":{"docs":{},"读":{"docs":{},"写":{"docs":{},"分":{"docs":{},"离":{"docs":{},"，":{"docs":{},"互":{"docs":{},"不":{"docs":{},"影":{"docs":{},"响":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"束":{"docs":{},"之":{"docs":{},"后":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"原":{"docs":{},"始":{"docs":{},"数":{"docs":{},"组":{"docs":{},"指":{"docs":{},"向":{"docs":{},"新":{"docs":{},"的":{"docs":{},"复":{"docs":{},"制":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"防":{"docs":{},"止":{"docs":{},"并":{"docs":{},"发":{"docs":{},"写":{"docs":{},"入":{"docs":{},"时":{"docs":{},"导":{"docs":{},"致":{"docs":{},"写":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"丢":{"docs":{},"失":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"将":{"docs":{},"能":{"docs":{},"够":{"docs":{},"看":{"docs":{},"到":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"（":{"6":{"docs":{},",":{"7":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}},"入":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"docs":{},"操":{"docs":{},"作":{"docs":{},"会":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"先":{"docs":{},"前":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"语":{"docs":{},"义":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}},"时":{"docs":{},"复":{"docs":{},"制":{"docs":{},"集":{"docs":{},"合":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"不":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}},"”":{"docs":{},"线":{"docs":{},"程":{"docs":{},"、":{"docs":{},"“":{"docs":{},"写":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"之":{"docs":{},"间":{"docs":{},"存":{"docs":{},"在":{"docs":{},"互":{"docs":{},"斥":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{},"双":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"析":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"死":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"查":{"docs":{},"看":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}},"配":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"给":{"docs":{},"堆":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"已":{"docs":{},"经":{"docs":{},"用":{"docs":{},"满":{"docs":{},"了":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}},"段":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"其":{"docs":{},"实":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"其":{"docs":{},"并":{"docs":{},"发":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"就":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"高":{"docs":{},"效":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"以":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"来":{"docs":{},"说":{"docs":{},"一":{"docs":{},"下":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"含":{"docs":{},"义":{"docs":{},"以":{"docs":{},"及":{"docs":{},"设":{"docs":{},"计":{"docs":{},"思":{"docs":{},"想":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"的":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"称":{"docs":{},"为":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"钟":{"docs":{},"）":{"docs":{},"，":{"docs":{},"则":{"docs":{},"该":{"docs":{},"工":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"将":{"docs":{},"自":{"docs":{},"动":{"docs":{},"终":{"docs":{},"止":{"docs":{},"。":{"docs":{},"终":{"docs":{},"止":{"docs":{},"后":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"又":{"docs":{},"提":{"docs":{},"交":{"docs":{},"了":{"docs":{},"新":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"则":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"重":{"docs":{},"新":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"工":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"和":{"docs":{},"分":{"docs":{},"区":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}}},"收":{"docs":{},"集":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}}},"层":{"docs":{},"；":{"docs":{},"五":{"docs":{},"层":{"docs":{},"协":{"docs":{},"议":{"docs":{},"分":{"docs":{},"层":{"docs":{},"；":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"/":{"docs":{},"i":{"docs":{},"p":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}},"布":{"docs":{},"式":{"docs":{},"技":{"docs":{},"术":{"docs":{"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":10}}}}}},"组":{"docs":{},"和":{"docs":{},"排":{"docs":{},"序":{"docs":{},"时":{"docs":{},"，":{"docs":{},"加":{"docs":{},"快":{"docs":{},"速":{"docs":{},"度":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}},"支":{"docs":{},"，":{"docs":{},"将":{"docs":{},"本":{"docs":{},"地":{"docs":{},"编":{"docs":{},"译":{"docs":{},"好":{"docs":{},"的":{"docs":{},"电":{"docs":{},"子":{"docs":{},"书":{"docs":{},"文":{"docs":{},"件":{"docs":{},"（":{"docs":{},"项":{"docs":{},"目":{"docs":{},"根":{"docs":{},"目":{"docs":{},"录":{"docs":{},"下":{"docs":{},"的":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}},"则":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"是":{"docs":{},"动":{"docs":{},"态":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"实":{"docs":{},"际":{"docs":{},"大":{"docs":{},"小":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}},"锁":{"docs":{},"定":{"docs":{},"当":{"docs":{},"前":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"访":{"docs":{},"问":{"docs":{},"该":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"住":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}},"过":{"docs":{},"期":{"docs":{},"，":{"docs":{},"程":{"docs":{},"序":{"docs":{},"内":{"docs":{},"部":{"docs":{},"称":{"docs":{},"为":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}},"用":{"docs":{},"于":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"插":{"docs":{},"入":{"docs":{},"、":{"docs":{},"删":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"保":{"docs":{},"证":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"在":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"能":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"删":{"docs":{},"除":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"在":{"docs":{},"变":{"docs":{},"量":{"docs":{},"、":{"docs":{},"方":{"docs":{},"法":{"docs":{},"、":{"docs":{},"和":{"docs":{},"类":{"docs":{},"级":{"docs":{},"别":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}},"保":{"docs":{},"证":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"和":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}},"相":{"docs":{},"对":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"，":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"条":{"docs":{},"件":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}},"包":{"docs":{},"含":{"docs":{},"两":{"docs":{},"个":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"：":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"：":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}},"中":{"docs":{},"引":{"docs":{},"入":{"docs":{},"了":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"类":{"docs":{},"都":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"模":{"docs":{},"式":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"）":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}},"高":{"docs":{},"层":{"docs":{},"类":{"docs":{},"又":{"docs":{},"是":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"这":{"docs":{},"些":{"docs":{},"基":{"docs":{},"础":{"docs":{},"类":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"。":{"docs":{},"从":{"docs":{},"整":{"docs":{},"体":{"docs":{},"来":{"docs":{},"看":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"关":{"docs":{},"锁":{"docs":{},"(":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"有":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}},"唯":{"docs":{},"一":{"docs":{},"对":{"docs":{},"文":{"docs":{},"件":{"docs":{},"本":{"docs":{},"身":{"docs":{},"进":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"类":{"docs":{},"。":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"对":{"docs":{},"文":{"docs":{},"件":{"docs":{},"、":{"docs":{},"目":{"docs":{},"录":{"docs":{},"进":{"docs":{},"行":{"docs":{},"增":{"docs":{},"删":{"docs":{},"查":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}},"得":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"基":{"docs":{},"石":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"我":{"docs":{},"们":{"docs":{},"仔":{"docs":{},"细":{"docs":{},"分":{"docs":{},"析":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}},"示":{"docs":{},"意":{"docs":{},"图":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}},"源":{"docs":{},"代":{"docs":{},"码":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"会":{"docs":{},"发":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"通":{"docs":{},"用":{"docs":{},"化":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"模":{"docs":{},"式":{"docs":{},"：":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"对":{"docs":{},"类":{"docs":{},"进":{"docs":{},"行":{"docs":{},"反":{"docs":{},"射":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"类":{"docs":{},"没":{"docs":{},"有":{"docs":{},"进":{"docs":{},"行":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"则":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"触":{"docs":{},"发":{"docs":{},"其":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"里":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}},"（":{"docs":{},"即":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}},"读":{"docs":{},"取":{"docs":{},"，":{"docs":{},"这":{"docs":{},"很":{"docs":{},"常":{"docs":{},"见":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"成":{"docs":{},"为":{"docs":{},"日":{"docs":{},"后":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}},"，":{"docs":{},"向":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"发":{"docs":{},"送":{"docs":{},"一":{"docs":{},"个":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}},"并":{"docs":{},"将":{"docs":{},"确":{"docs":{},"认":{"docs":{},"序":{"docs":{},"号":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"收":{"docs":{},"到":{"docs":{},"序":{"docs":{},"号":{"docs":{},"加":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}},"用":{"docs":{},"来":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"到":{"docs":{},"服":{"docs":{},"务":{"docs":{},"端":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"传":{"docs":{},"送":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}},"确":{"docs":{},"认":{"docs":{},"序":{"docs":{},"号":{"docs":{},"为":{"docs":{},"收":{"docs":{},"到":{"docs":{},"的":{"docs":{},"序":{"docs":{},"号":{"docs":{},"加":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}},"双":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"双":{"docs":{},"端":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}},"连":{"docs":{},"接":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}},"亲":{"docs":{},"委":{"docs":{},"派":{"docs":{},"模":{"docs":{},"型":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}}}}}},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}},"；":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"把":{"docs":{},"数":{"docs":{},"据":{"docs":{},"放":{"docs":{},"在":{"docs":{},"对":{"docs":{},"应":{"docs":{},"下":{"docs":{},"标":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"上":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"会":{"docs":{},"把":{"docs":{},"到":{"docs":{},"达":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"放":{"docs":{},"到":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"当":{"docs":{},"中":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}},"来":{"docs":{},"一":{"docs":{},"次":{"docs":{},"带":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"的":{"docs":{},"（":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"默":{"docs":{},"认":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"机":{"docs":{},"制":{"docs":{},"就":{"docs":{},"会":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"该":{"docs":{},"字":{"docs":{},"段":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"进":{"docs":{},"行":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}},"默":{"docs":{},"认":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"继":{"docs":{},"节":{"docs":{},"点":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"空":{"docs":{},"间":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"不":{"docs":{},"足":{"docs":{},"，":{"docs":{},"则":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"进":{"docs":{},"入":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"定":{"docs":{},"义":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.008379888268156424},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}},"：":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}},"，":{"docs":{},"该":{"docs":{},"值":{"docs":{},"为":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"了":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"全":{"docs":{},"部":{"docs":{},"由":{"docs":{},"大":{"docs":{},"写":{"docs":{},"字":{"docs":{},"母":{"docs":{},"组":{"docs":{},"成":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}},"压":{"docs":{},"缩":{"docs":{},"文":{"docs":{},"件":{"docs":{},"名":{"docs":{},"称":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}}}}}},"要":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},"夹":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}},"保":{"docs":{},"存":{"docs":{},"路":{"docs":{},"径":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107}}}}}}},"位":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"y":{"docs":{},"：":{"docs":{},"(":{"docs":{},"(":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"：":{"docs":{},"(":{"docs":{},"(":{"docs":{},"(":{"docs":{},"h":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}},"步":{"docs":{},"骤":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"时":{"docs":{},"等":{"docs":{},"待":{"docs":{},"（":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.00749063670411985},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0032822757111597373},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}},"了":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.009363295880149813},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.02526315789473684},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.016666666666666666},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"双":{"docs":{},"亲":{"docs":{},"委":{"docs":{},"派":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"一":{"docs":{},"般":{"docs":{},"不":{"docs":{},"去":{"docs":{},"重":{"docs":{},"写":{"docs":{},"它":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"重":{"docs":{},"写":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.008421052631578947},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}},"一":{"docs":{},"个":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"并":{"docs":{},"发":{"docs":{},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"原":{"docs":{},"理":{"docs":{},"就":{"docs":{},"是":{"docs":{},"，":{"docs":{},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"和":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"最":{"docs":{},"主":{"docs":{},"要":{"docs":{},"的":{"docs":{},"差":{"docs":{},"别":{"docs":{},"是":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"最":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"一":{"docs":{},"点":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"比":{"docs":{},"较":{"docs":{},"和":{"docs":{},"交":{"docs":{},"换":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"就":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"歧":{"docs":{},"义":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"原":{"docs":{},"理":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"并":{"docs":{},"以":{"docs":{},"此":{"docs":{},"实":{"docs":{},"例":{"docs":{},"作":{"docs":{},"为":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}},"依":{"docs":{},"此":{"docs":{},"实":{"docs":{},"例":{"docs":{},"作":{"docs":{},"为":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"加":{"docs":{},"载":{"docs":{},"动":{"docs":{},"作":{"docs":{},"。":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"是":{"docs":{},"：":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"超":{"docs":{},"时":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"效":{"docs":{},"果":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"，":{"docs":{},"对":{"docs":{},"待":{"docs":{},"这":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"需":{"docs":{},"要":{"docs":{},"特":{"docs":{},"别":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}},"：":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"和":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"算":{"docs":{},"法":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}},"体":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}}}},"例":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}},"）":{"docs":{},"，":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"了":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}},"中":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"足":{"docs":{},"够":{"docs":{},"大":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"创":{"docs":{},"建":{"docs":{},"映":{"docs":{},"射":{"docs":{},"将":{"docs":{},"允":{"docs":{},"许":{"docs":{},"映":{"docs":{},"射":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"效":{"docs":{},"率":{"docs":{},"高":{"docs":{},"于":{"docs":{},"根":{"docs":{},"据":{"docs":{},"需":{"docs":{},"要":{"docs":{},"执":{"docs":{},"行":{"docs":{},"自":{"docs":{},"动":{"docs":{},"重":{"docs":{},"新":{"docs":{},"散":{"docs":{},"列":{"docs":{},"以":{"docs":{},"增":{"docs":{},"长":{"docs":{},"表":{"docs":{},"。":{"docs":{},"请":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"多":{"docs":{},"个":{"docs":{},"具":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"化":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"子":{"docs":{},"类":{"docs":{},"对":{"docs":{},"象":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"对":{"docs":{},"象":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686}}}}}}}}}},"对":{"docs":{},"象":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686}}}},"线":{"docs":{},"程":{"docs":{},"对":{"docs":{},"象":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686}}}}}},"时":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"原":{"docs":{},"文":{"docs":{},"件":{"docs":{},"内":{"docs":{},"容":{"docs":{},"方":{"docs":{},"式":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"添":{"docs":{},"加":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"变":{"docs":{},"为":{"docs":{},"对":{"docs":{},"原":{"docs":{},"文":{"docs":{},"件":{"docs":{},"追":{"docs":{},"加":{"docs":{},"内":{"docs":{},"容":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"。":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"输":{"docs":{},"出":{"docs":{},"流":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}}},"，":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"都":{"docs":{},"会":{"docs":{},"输":{"docs":{},"出":{"docs":{},"到":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"同":{"docs":{},"步":{"docs":{},"是":{"docs":{},"同":{"docs":{},"步":{"docs":{},"在":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"其":{"docs":{},"方":{"docs":{},"法":{"docs":{},"同":{"docs":{},"步":{"docs":{},"都":{"docs":{},"同":{"docs":{},"步":{"docs":{},"在":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"，":{"docs":{},"即":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"所":{"docs":{},"属":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"能":{"docs":{},"够":{"docs":{},"在":{"docs":{},"实":{"docs":{},"例":{"docs":{},"方":{"docs":{},"法":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"中":{"docs":{},"运":{"docs":{},"行":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"一":{"docs":{},"次":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"中":{"docs":{},"执":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{},"不":{"docs":{},"会":{"docs":{},"在":{"docs":{},"这":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"分":{"docs":{},"配":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"它":{"docs":{},"将":{"docs":{},"会":{"docs":{},"在":{"docs":{},"对":{"docs":{},"象":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"时":{"docs":{},"随":{"docs":{},"着":{"docs":{},"对":{"docs":{},"象":{"docs":{},"一":{"docs":{},"起":{"docs":{},"分":{"docs":{},"配":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"解":{"docs":{},"析":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}},"际":{"docs":{},"上":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"即":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"，":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}},"这":{"docs":{},"些":{"docs":{},"区":{"docs":{},"域":{"docs":{},"被":{"docs":{},"映":{"docs":{},"射":{"docs":{},"成":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"和":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}},"战":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"：":{"docs":{},"找":{"docs":{},"出":{"docs":{},"某":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"行":{"docs":{},"流":{"docs":{},"量":{"docs":{},"控":{"docs":{},"制":{"docs":{},"和":{"docs":{},"拥":{"docs":{},"塞":{"docs":{},"控":{"docs":{},"制":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"确":{"docs":{},"保":{"docs":{},"措":{"docs":{},"施":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"通":{"docs":{},"常":{"docs":{},"导":{"docs":{},"致":{"docs":{},"传":{"docs":{},"输":{"docs":{},"效":{"docs":{},"率":{"docs":{},"比":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"象":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"时":{"docs":{},"就":{"docs":{},"指":{"docs":{},"定":{"docs":{},"大":{"docs":{},"概":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"减":{"docs":{},"少":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"写":{"docs":{},"入":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"系":{"docs":{},"统":{"docs":{},"将":{"docs":{},"自":{"docs":{},"行":{"docs":{},"创":{"docs":{},"建":{"docs":{},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}},"为":{"docs":{},"我":{"docs":{},"们":{"docs":{},"解":{"docs":{},"决":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"提":{"docs":{},"交":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}},"作":{"docs":{},"为":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"这":{"docs":{},"块":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"进":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"能":{"docs":{},"在":{"docs":{},"一":{"docs":{},"些":{"docs":{},"场":{"docs":{},"景":{"docs":{},"中":{"docs":{},"显":{"docs":{},"著":{"docs":{},"提":{"docs":{},"高":{"docs":{},"性":{"docs":{},"能":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"避":{"docs":{},"免":{"docs":{},"了":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"封":{"docs":{},"装":{"docs":{},"了":{"docs":{},"该":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"才":{"docs":{},"是":{"docs":{},"真":{"docs":{},"正":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"方":{"docs":{},"法":{"docs":{},"同":{"docs":{},"步":{"docs":{},"和":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"同":{"docs":{},"步":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"方":{"docs":{},"法":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}},"内":{"docs":{},"存":{"docs":{},"分":{"docs":{},"配":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"在":{"docs":{},"堆":{"docs":{},"上":{"docs":{},"分":{"docs":{},"配":{"docs":{},"。":{"docs":{},"主":{"docs":{},"要":{"docs":{},"分":{"docs":{},"配":{"docs":{},"在":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"它":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"知":{"docs":{},"道":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}},"该":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}},"作":{"docs":{},"为":{"docs":{},"方":{"docs":{},"法":{"docs":{},"区":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{},"各":{"docs":{},"种":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"入":{"docs":{},"口":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}},"访":{"docs":{},"问":{"docs":{},"共":{"docs":{},"享":{"docs":{},"公":{"docs":{},"共":{"docs":{},"资":{"docs":{},"源":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"当":{"docs":{},"他":{"docs":{},"们":{"docs":{},"看":{"docs":{},"到":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"存":{"docs":{},"放":{"docs":{},"元":{"docs":{},"素":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}},"死":{"docs":{},"了":{"docs":{},"吗":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}}},"没":{"docs":{},"有":{"docs":{},"在":{"docs":{},"任":{"docs":{},"何":{"docs":{},"地":{"docs":{},"方":{"docs":{},"被":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"无":{"docs":{},"法":{"docs":{},"在":{"docs":{},"任":{"docs":{},"何":{"docs":{},"地":{"docs":{},"方":{"docs":{},"通":{"docs":{},"过":{"docs":{},"反":{"docs":{},"射":{"docs":{},"访":{"docs":{},"问":{"docs":{},"该":{"docs":{},"类":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"时":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"而":{"docs":{},"这":{"docs":{},"个":{"docs":{},"系":{"docs":{},"统":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"用":{"docs":{},"的":{"docs":{},"不":{"docs":{},"是":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"绑":{"docs":{},"定":{"docs":{},"到":{"docs":{},"流":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.006046863189720333}},"。":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}},"与":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}},"中":{"docs":{},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"段":{"docs":{},"都":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"。":{"docs":{},"另":{"docs":{},"一":{"docs":{},"方":{"docs":{},"面":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"细":{"docs":{},"心":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"发":{"docs":{},"现":{"docs":{},"这":{"docs":{},"此":{"docs":{},"次":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"过":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"，":{"docs":{},"在":{"docs":{},"保":{"docs":{},"存":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"把":{"docs":{},"其":{"docs":{},"状":{"docs":{},"态":{"docs":{},"保":{"docs":{},"存":{"docs":{},"为":{"docs":{},"一":{"docs":{},"组":{"docs":{},"字":{"docs":{},"节":{"docs":{},"，":{"docs":{},"在":{"docs":{},"未":{"docs":{},"来":{"docs":{},"，":{"docs":{},"再":{"docs":{},"将":{"docs":{},"这":{"docs":{},"些":{"docs":{},"字":{"docs":{},"节":{"docs":{},"组":{"docs":{},"装":{"docs":{},"成":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"必":{"docs":{},"须":{"docs":{},"注":{"docs":{},"意":{"docs":{},"地":{"docs":{},"是":{"docs":{},"，":{"docs":{},"对":{"docs":{},"象":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"保":{"docs":{},"存":{"docs":{},"的":{"docs":{},"是":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"”":{"docs":{},"状":{"docs":{},"态":{"docs":{},"”":{"docs":{},"，":{"docs":{},"即":{"docs":{},"它":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{},"由":{"docs":{},"此":{"docs":{},"可":{"docs":{},"知":{"docs":{},"，":{"docs":{},"对":{"docs":{},"象":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"不":{"docs":{},"会":{"docs":{},"关":{"docs":{},"注":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"输":{"docs":{},"入":{"docs":{},"流":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}},"出":{"docs":{},"流":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}},"元":{"docs":{},"素":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}},"于":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"一":{"docs":{},"个":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"，":{"docs":{},"先":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"h":{"1":{"docs":{},"，":{"docs":{},"也":{"docs":{},"即":{"docs":{},"h":{"1":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"不":{"docs":{},"管":{"docs":{},"它":{"docs":{},"是":{"docs":{},"原":{"docs":{},"始":{"docs":{},"类":{"docs":{},"型":{"docs":{},"还":{"docs":{},"是":{"docs":{},"包":{"docs":{},"装":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"都":{"docs":{},"会":{"docs":{},"被":{"docs":{},"存":{"docs":{},"储":{"docs":{},"到":{"docs":{},"堆":{"docs":{},"区":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"本":{"docs":{},"地":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"仍":{"docs":{},"需":{"docs":{},"要":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"栈":{"docs":{},"区":{"docs":{},"，":{"docs":{},"即":{"docs":{},"使":{"docs":{},"它":{"docs":{},"们":{"docs":{},"所":{"docs":{},"属":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"在":{"docs":{},"堆":{"docs":{},"区":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"步":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"，":{"docs":{},"锁":{"docs":{},"就":{"docs":{},"是":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"块":{"docs":{},"，":{"docs":{},"锁":{"docs":{},"是":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"和":{"docs":{},"解":{"docs":{},"锁":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"连":{"docs":{},"接":{"docs":{},"中":{"docs":{},"里":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"解":{"docs":{},"锁":{"docs":{},"失":{"docs":{},"败":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"普":{"docs":{},"通":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"锁":{"docs":{},"就":{"docs":{},"是":{"docs":{},"实":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"实":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"锁":{"docs":{},"就":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"类":{"docs":{},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"类":{"docs":{},"的":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}},"硬":{"docs":{},"件":{"docs":{},"资":{"docs":{},"源":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"使":{"docs":{},"用":{"docs":{},"集":{"docs":{},"群":{"docs":{},"并":{"docs":{},"行":{"docs":{},"执":{"docs":{},"行":{"docs":{},"程":{"docs":{},"序":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}},"软":{"docs":{},"件":{"docs":{},"资":{"docs":{},"源":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"使":{"docs":{},"用":{"docs":{},"资":{"docs":{},"源":{"docs":{},"池":{"docs":{},"将":{"docs":{},"资":{"docs":{},"源":{"docs":{},"复":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"同":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"执":{"docs":{},"行":{"docs":{},"每":{"docs":{},"个":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"而":{"docs":{},"无":{"docs":{},"需":{"docs":{},"等":{"docs":{},"待":{"docs":{},"。":{"docs":{},"不":{"docs":{},"管":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"静":{"docs":{},"态":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"只":{"docs":{},"能":{"docs":{},"由":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"同":{"docs":{},"时":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"其":{"docs":{},"并":{"docs":{},"不":{"docs":{},"像":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"特":{"docs":{},"定":{"docs":{},"的":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}},"插":{"docs":{},"入":{"docs":{},"操":{"docs":{},"作":{"docs":{},"、":{"docs":{},"移":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{},"、":{"docs":{},"获":{"docs":{},"取":{"docs":{},"元":{"docs":{},"素":{"docs":{},"操":{"docs":{},"作":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"四":{"docs":{},"种":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"用":{"docs":{},"于":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"：":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"应":{"docs":{},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"对":{"docs":{},"象":{"docs":{},"即":{"docs":{},"使":{"docs":{},"不":{"docs":{},"再":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"但":{"docs":{},"由":{"docs":{},"于":{"docs":{},"被":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"不":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"值":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}},"这":{"docs":{},"块":{"docs":{},"区":{"docs":{},"域":{"docs":{},"进":{"docs":{},"行":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"的":{"docs":{},"主":{"docs":{},"要":{"docs":{},"目":{"docs":{},"标":{"docs":{},"是":{"docs":{},"对":{"docs":{},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{},"的":{"docs":{},"回":{"docs":{},"收":{"docs":{},"和":{"docs":{},"对":{"docs":{},"类":{"docs":{},"的":{"docs":{},"卸":{"docs":{},"载":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"一":{"docs":{},"般":{"docs":{},"比":{"docs":{},"较":{"docs":{},"难":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"节":{"docs":{},"码":{"docs":{},"描":{"docs":{},"述":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"进":{"docs":{},"行":{"docs":{},"语":{"docs":{},"义":{"docs":{},"分":{"docs":{},"析":{"docs":{},"，":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"其":{"docs":{},"描":{"docs":{},"述":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"符":{"docs":{},"合":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"述":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}},"小":{"docs":{},"结":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}},"时":{"docs":{},"后":{"docs":{},"再":{"docs":{},"进":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"分":{"docs":{},"析":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"足":{"docs":{},"够":{"docs":{},"幸":{"docs":{},"运":{"docs":{},"，":{"docs":{},"你":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"找":{"docs":{},"到":{"docs":{},"系":{"docs":{},"统":{"docs":{},"的":{"docs":{},"最":{"docs":{},"佳":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"拓":{"docs":{},"展":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}},"常":{"docs":{},"见":{"docs":{},"子":{"docs":{},"类":{"docs":{},"：":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"容":{"docs":{},"器":{"docs":{},"有":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}},"复":{"docs":{},"合":{"docs":{},"操":{"docs":{},"作":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}},"量":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"会":{"docs":{},"存":{"docs":{},"入":{"docs":{},"调":{"docs":{},"用":{"docs":{},"类":{"docs":{},"的":{"docs":{},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{},"中":{"docs":{},"，":{"docs":{},"本":{"docs":{},"质":{"docs":{},"上":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"直":{"docs":{},"接":{"docs":{},"引":{"docs":{},"用":{"docs":{},"到":{"docs":{},"定":{"docs":{},"义":{"docs":{},"常":{"docs":{},"量":{"docs":{},"的":{"docs":{},"类":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"不":{"docs":{},"会":{"docs":{},"触":{"docs":{},"发":{"docs":{},"定":{"docs":{},"义":{"docs":{},"常":{"docs":{},"量":{"docs":{},"的":{"docs":{},"类":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"池":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"主":{"docs":{},"要":{"docs":{},"存":{"docs":{},"放":{"docs":{},"两":{"docs":{},"类":{"docs":{},"常":{"docs":{},"量":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"紧":{"docs":{},"接":{"docs":{},"着":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"节":{"docs":{},"代":{"docs":{},"表":{"docs":{},"访":{"docs":{},"问":{"docs":{},"标":{"docs":{},"志":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"标":{"docs":{},"志":{"docs":{},"用":{"docs":{},"于":{"docs":{},"识":{"docs":{},"别":{"docs":{},"一":{"docs":{},"些":{"docs":{},"类":{"docs":{},"或":{"docs":{},"者":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"包":{"docs":{},"括":{"docs":{},"：":{"docs":{},"这":{"docs":{},"个":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":2.5017605633802815}},"方":{"docs":{},"法":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}},"当":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"作":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}},"然":{"docs":{},"，":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}},"你":{"docs":{},"可":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"任":{"docs":{},"何":{"docs":{},"对":{"docs":{},"象":{"docs":{},"作":{"docs":{},"为":{"docs":{},"键":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"它":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"了":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"和":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"当":{"docs":{},"对":{"docs":{},"象":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"之":{"docs":{},"后":{"docs":{},"将":{"docs":{},"不":{"docs":{},"会":{"docs":{},"再":{"docs":{},"改":{"docs":{},"变":{"docs":{},"了":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"这":{"docs":{},"个":{"docs":{},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"它":{"docs":{},"已":{"docs":{},"经":{"docs":{},"满":{"docs":{},"足":{"docs":{},"了":{"docs":{},"作":{"docs":{},"为":{"docs":{},"键":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"当":{"docs":{},"它":{"docs":{},"创":{"docs":{},"建":{"docs":{},"之":{"docs":{},"后":{"docs":{},"就":{"docs":{},"已":{"docs":{},"经":{"docs":{},"不":{"docs":{},"能":{"docs":{},"改":{"docs":{},"变":{"docs":{},"了":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"根":{"docs":{},"据":{"docs":{},"应":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{},"需":{"docs":{},"要":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}},"发":{"docs":{},"布":{"docs":{},"到":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"，":{"docs":{},"然":{"docs":{},"而":{"docs":{},"这":{"docs":{},"个":{"docs":{},"网":{"docs":{},"站":{"docs":{},"访":{"docs":{},"问":{"docs":{},"有":{"docs":{},"点":{"docs":{},"慢":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"还":{"docs":{},"有":{"docs":{},"更":{"docs":{},"加":{"docs":{},"优":{"docs":{},"秀":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"和":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"工":{"docs":{},"具":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{},"可":{"docs":{},"以":{"docs":{},"自":{"docs":{},"行":{"docs":{},"选":{"docs":{},"择":{"docs":{},"！":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"需":{"docs":{},"要":{"docs":{},"调":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"请":{"docs":{},"求":{"docs":{},"锁":{"docs":{},"失":{"docs":{},"败":{"docs":{},"时":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"图":{"docs":{},"看":{"docs":{},"看":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"发":{"docs":{},"生":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"被":{"docs":{},"创":{"docs":{},"建":{"docs":{},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"首":{"docs":{},"先":{"docs":{},"进":{"docs":{},"入":{"docs":{},"新":{"docs":{},"生":{"docs":{},"代":{"docs":{},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"被":{"docs":{},"转":{"docs":{},"移":{"docs":{},"到":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"中":{"docs":{},"。":{"docs":{},"新":{"docs":{},"生":{"docs":{},"代":{"docs":{},"存":{"docs":{},"放":{"docs":{},"着":{"docs":{},"大":{"docs":{},"量":{"docs":{},"的":{"docs":{},"生":{"docs":{},"命":{"docs":{},"很":{"docs":{},"短":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"新":{"docs":{},"生":{"docs":{},"代":{"docs":{},"在":{"docs":{},"三":{"docs":{},"个":{"docs":{},"区":{"docs":{},"域":{"docs":{},"中":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"的":{"docs":{},"频":{"docs":{},"率":{"docs":{},"最":{"docs":{},"高":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"更":{"docs":{},"高":{"docs":{},"效":{"docs":{},"地":{"docs":{},"进":{"docs":{},"行":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"，":{"docs":{},"把":{"docs":{},"新":{"docs":{},"生":{"docs":{},"代":{"docs":{},"继":{"docs":{},"续":{"docs":{},"划":{"docs":{},"分":{"docs":{},"成":{"docs":{},"以":{"docs":{},"下":{"docs":{},"三":{"docs":{},"个":{"docs":{},"空":{"docs":{},"间":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"执":{"docs":{},"行":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"某":{"docs":{},"弱":{"docs":{},"键":{"docs":{},"不":{"docs":{},"再":{"docs":{},"被":{"docs":{},"其":{"docs":{},"它":{"docs":{},"对":{"docs":{},"象":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"并":{"docs":{},"被":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"在":{"docs":{},"某":{"docs":{},"个":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"执":{"docs":{},"行":{"docs":{},"这":{"docs":{},"句":{"docs":{},"时":{"docs":{},"：":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}},"字":{"docs":{},"段":{"docs":{},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}},"超":{"docs":{},"过":{"docs":{},"限":{"docs":{},"制":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"会":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"往":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"先":{"docs":{},"根":{"docs":{},"据":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"得":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"（":{"docs":{},"即":{"docs":{},"下":{"docs":{},"标":{"docs":{},"）":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"下":{"docs":{},"标":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"直":{"docs":{},"接":{"docs":{},"把":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"作":{"docs":{},"为":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"发":{"docs":{},"生":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"，":{"docs":{},"则":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"在":{"docs":{},"对":{"docs":{},"应":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"有":{"docs":{},"就":{"docs":{},"把":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"替":{"docs":{},"换":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"那":{"docs":{},"么":{"docs":{},"在":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"子":{"docs":{},"上":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"将":{"docs":{},"以":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"存":{"docs":{},"放":{"docs":{},"，":{"docs":{},"新":{"docs":{},"加":{"docs":{},"入":{"docs":{},"的":{"docs":{},"放":{"docs":{},"在":{"docs":{},"链":{"docs":{},"头":{"docs":{},"，":{"docs":{},"最":{"docs":{},"先":{"docs":{},"加":{"docs":{},"入":{"docs":{},"的":{"docs":{},"放":{"docs":{},"在":{"docs":{},"链":{"docs":{},"尾":{"docs":{},"。":{"docs":{},"（":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"1":{"docs":{},".":{"7":{"docs":{},"之":{"docs":{},"所":{"docs":{},"以":{"docs":{},"放":{"docs":{},"在":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"发":{"docs":{},"明":{"docs":{},"者":{"docs":{},"认":{"docs":{},"为":{"docs":{},"后":{"docs":{},"插":{"docs":{},"入":{"docs":{},"的":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"被":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"可":{"docs":{},"能":{"docs":{},"性":{"docs":{},"更":{"docs":{},"大":{"docs":{},"。":{"docs":{},"）":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}},"前":{"docs":{},"变":{"docs":{},"量":{"docs":{},"在":{"docs":{},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"（":{"docs":{},"工":{"docs":{},"作":{"docs":{},"内":{"docs":{},"存":{"docs":{},"）":{"docs":{},"中":{"docs":{},"的":{"docs":{},"值":{"docs":{},"是":{"docs":{},"不":{"docs":{},"确":{"docs":{},"定":{"docs":{},"的":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"主":{"docs":{},"存":{"docs":{},"中":{"docs":{},"读":{"docs":{},"取":{"docs":{},"；":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"并":{"docs":{},"让":{"docs":{},"它":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"对":{"docs":{},"象":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"超":{"docs":{},"时":{"docs":{},"时":{"docs":{},"间":{"docs":{},"内":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{},"；":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"的":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"并":{"docs":{},"且":{"docs":{},"成":{"docs":{},"功":{"docs":{},"获":{"docs":{},"得":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"时":{"docs":{},"，":{"docs":{},"节":{"docs":{},"点":{"docs":{},"出":{"docs":{},"队":{"docs":{},"即":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"得":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"当":{"docs":{},"不":{"docs":{},"满":{"docs":{},"足":{"docs":{},"条":{"docs":{},"件":{"docs":{},"时":{"docs":{},"就":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"能":{"docs":{},"否":{"docs":{},"获":{"docs":{},"取":{"docs":{},"独":{"docs":{},"占":{"docs":{},"式":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"共":{"docs":{},"享":{"docs":{},"资":{"docs":{},"源":{"docs":{},"时":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"通":{"docs":{},"信":{"docs":{},"是":{"docs":{},"协":{"docs":{},"调":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"手":{"docs":{},"段":{"docs":{},"。":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"池":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"，":{"docs":{},"则":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"处":{"docs":{},"于":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}},"和":{"docs":{},"队":{"docs":{},"列":{"docs":{},"都":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"，":{"docs":{},"则":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"处":{"docs":{},"于":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"已":{"docs":{},"满":{"docs":{},"并":{"docs":{},"且":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"目":{"docs":{},"达":{"docs":{},"到":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}},"请":{"docs":{},"求":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"深":{"docs":{},"度":{"docs":{},"超":{"docs":{},"过":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"需":{"docs":{},"要":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"按":{"docs":{},"照":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"就":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"发":{"docs":{},"生":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"一":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"执":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"循":{"docs":{},"环":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}},"象":{"docs":{},"和":{"docs":{},"变":{"docs":{},"量":{"docs":{},"被":{"docs":{},"存":{"docs":{},"放":{"docs":{},"在":{"docs":{},"计":{"docs":{},"算":{"docs":{},"机":{"docs":{},"中":{"docs":{},"各":{"docs":{},"种":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"区":{"docs":{},"域":{"docs":{},"中":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"些":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"主":{"docs":{},"要":{"docs":{},"包":{"docs":{},"括":{"docs":{},"如":{"docs":{},"下":{"docs":{},"两":{"docs":{},"个":{"docs":{},"方":{"docs":{},"面":{"docs":{},"：":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"读":{"docs":{},"，":{"docs":{},"写":{"docs":{},"和":{"docs":{},"检":{"docs":{},"查":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"时":{"docs":{},"出":{"docs":{},"现":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}},"成":{"docs":{},"功":{"docs":{},"释":{"docs":{},"放":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"之":{"docs":{},"后":{"docs":{},"即":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"且":{"docs":{},"成":{"docs":{},"功":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"述":{"docs":{},"参":{"docs":{},"数":{"docs":{},"从":{"docs":{},"小":{"docs":{},"变":{"docs":{},"大":{"docs":{},"时":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"任":{"docs":{},"务":{"docs":{},"到":{"docs":{},"达":{"docs":{},"时":{"docs":{},"，":{"docs":{},"任":{"docs":{},"务":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"等":{"docs":{},"到":{"docs":{},"线":{"docs":{},"程":{"docs":{},"创":{"docs":{},"建":{"docs":{},"就":{"docs":{},"能":{"docs":{},"立":{"docs":{},"即":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"后":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"处":{"docs":{},"于":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"发":{"docs":{},"现":{"docs":{},"其":{"docs":{},"父":{"docs":{},"类":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"进":{"docs":{},"行":{"docs":{},"过":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"则":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"触":{"docs":{},"发":{"docs":{},"其":{"docs":{},"父":{"docs":{},"类":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"父":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"加":{"docs":{},"载":{"docs":{},"失":{"docs":{},"败":{"docs":{},"时":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"启":{"docs":{},"动":{"docs":{},"时":{"docs":{},"，":{"docs":{},"用":{"docs":{},"户":{"docs":{},"需":{"docs":{},"要":{"docs":{},"指":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"要":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"主":{"docs":{},"类":{"docs":{},"（":{"docs":{},"包":{"docs":{},"含":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}},"发":{"docs":{},"起":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"创":{"docs":{},"建":{"docs":{},"时":{"docs":{},"，":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"会":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}},"正":{"docs":{},"常":{"docs":{},"输":{"docs":{},"出":{"docs":{},"请":{"docs":{},"求":{"docs":{},"不":{"docs":{},"被":{"docs":{},"响":{"docs":{},"应":{"docs":{},"时":{"docs":{},"，":{"docs":{},"强":{"docs":{},"制":{"docs":{},"输":{"docs":{},"出":{"docs":{},"线":{"docs":{},"程":{"docs":{},"堆":{"docs":{},"栈":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}},"程":{"docs":{},"序":{"docs":{},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"大":{"docs":{},"量":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"用":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}},"接":{"docs":{},"收":{"docs":{},"方":{"docs":{},"收":{"docs":{},"到":{"docs":{},"乱":{"docs":{},"序":{"docs":{},"片":{"docs":{},"段":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"重":{"docs":{},"复":{"docs":{},"发":{"docs":{},"送":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}},"且":{"docs":{},"仅":{"docs":{},"当":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}},"得":{"docs":{},"到":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}},"压":{"docs":{},"缩":{"docs":{},"实":{"docs":{},"体":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"流":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}},"进":{"docs":{},"程":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"此":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"管":{"docs":{},"道":{"docs":{},"输":{"docs":{},"入":{"docs":{},"流":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},"出":{"docs":{},"流":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}},"把":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"整":{"docs":{},"个":{"docs":{},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{},"新":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"最":{"docs":{},"好":{"docs":{},"在":{"docs":{},"创":{"docs":{},"建":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"个":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"写":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"据":{"docs":{},"刷":{"docs":{},"新":{"docs":{},"到":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}},"内":{"docs":{},"存":{"docs":{},"分":{"docs":{},"成":{"docs":{},"了":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"：":{"docs":{},"线":{"docs":{},"程":{"docs":{},"栈":{"docs":{},"区":{"docs":{},"和":{"docs":{},"堆":{"docs":{},"区":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"和":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"划":{"docs":{},"分":{"docs":{},"成":{"docs":{},"多":{"docs":{},"个":{"docs":{},"大":{"docs":{},"小":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"独":{"docs":{},"立":{"docs":{},"区":{"docs":{},"域":{"docs":{},"（":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"，":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"和":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"不":{"docs":{},"再":{"docs":{},"物":{"docs":{},"理":{"docs":{},"隔":{"docs":{},"离":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"看":{"docs":{},"成":{"docs":{},"是":{"docs":{},"一":{"docs":{},"连":{"docs":{},"串":{"docs":{},"的":{"docs":{},"无":{"docs":{},"结":{"docs":{},"构":{"docs":{},"的":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"。":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}},"支":{"docs":{},"持":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}},"，":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"去":{"docs":{},"传":{"docs":{},"输":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}},"随":{"docs":{},"机":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"访":{"docs":{},"问":{"docs":{},"速":{"docs":{},"度":{"docs":{},"更":{"docs":{},"快":{"docs":{},"；":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}},"替":{"docs":{},"代":{"docs":{},"方":{"docs":{},"案":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}},"有":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}},"其":{"docs":{},"缺":{"docs":{},"陷":{"docs":{},"：":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}},"一":{"docs":{},"系":{"docs":{},"列":{"docs":{},"的":{"docs":{},"导":{"docs":{},"航":{"docs":{},"方":{"docs":{},"法":{"docs":{},"；":{"docs":{},"如":{"docs":{},"\"":{"docs":{},"获":{"docs":{},"取":{"docs":{},"大":{"docs":{},"于":{"docs":{},"/":{"docs":{},"等":{"docs":{},"于":{"docs":{},"某":{"docs":{},"值":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"\"":{"docs":{},"、":{"docs":{},"“":{"docs":{},"获":{"docs":{},"取":{"docs":{},"小":{"docs":{},"于":{"docs":{},"/":{"docs":{},"等":{"docs":{},"于":{"docs":{},"某":{"docs":{},"值":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"”":{"docs":{},"等":{"docs":{},"等":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"\"":{"docs":{},"、":{"docs":{},"“":{"docs":{},"获":{"docs":{},"取":{"docs":{},"小":{"docs":{},"于":{"docs":{},"/":{"docs":{},"等":{"docs":{},"于":{"docs":{},"某":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"”":{"docs":{},"等":{"docs":{},"等":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"需":{"docs":{},"要":{"docs":{},"跨":{"docs":{},"段":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"和":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"可":{"docs":{},"能":{"docs":{},"需":{"docs":{},"要":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"整":{"docs":{},"个":{"docs":{},"表":{"docs":{},"而":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"是":{"docs":{},"某":{"docs":{},"个":{"docs":{},"段":{"docs":{},"，":{"docs":{},"这":{"docs":{},"需":{"docs":{},"要":{"docs":{},"按":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"所":{"docs":{},"有":{"docs":{},"段":{"docs":{},"，":{"docs":{},"操":{"docs":{},"作":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"后":{"docs":{},"，":{"docs":{},"又":{"docs":{},"按":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"释":{"docs":{},"放":{"docs":{},"所":{"docs":{},"有":{"docs":{},"段":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"“":{"docs":{},"按":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"”":{"docs":{},"是":{"docs":{},"很":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"极":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{},"死":{"docs":{},"锁":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"，":{"docs":{},"当":{"docs":{},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"传":{"docs":{},"送":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"块":{"docs":{},"太":{"docs":{},"长":{"docs":{},"，":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}},"三":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"无":{"docs":{},"一":{"docs":{},"例":{"docs":{},"外":{"docs":{},"，":{"docs":{},"都":{"docs":{},"是":{"docs":{},"调":{"docs":{},"用":{"docs":{},"父":{"docs":{},"类":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}}}},"种":{"docs":{},"读":{"docs":{},"取":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"体":{"docs":{},"会":{"docs":{},"其":{"docs":{},"差":{"docs":{},"异":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"重":{"docs":{},"要":{"docs":{},"成":{"docs":{},"员":{"docs":{},"：":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"功":{"docs":{},"能":{"docs":{},"参":{"docs":{},"考":{"docs":{},"下":{"docs":{},"面":{"docs":{},"源":{"docs":{},"码":{"docs":{},"片":{"docs":{},"段":{"docs":{},"中":{"docs":{},"的":{"docs":{},"注":{"docs":{},"释":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}},"什":{"docs":{},"么":{"docs":{},"不":{"docs":{},"同":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}},"作":{"docs":{},"用":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}},"它":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"理":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"，":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"更":{"docs":{},"好":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"如":{"docs":{},"何":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}},"区":{"docs":{},"别":{"docs":{},"？":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}}},"哪":{"docs":{},"些":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"各":{"docs":{},"自":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"用":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}}},"重":{"docs":{},"传":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"原":{"docs":{},"理":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}},"四":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"前":{"docs":{},"三":{"docs":{},"个":{"docs":{},"都":{"docs":{},"是":{"docs":{},"基":{"docs":{},"于":{"docs":{},"第":{"docs":{},"四":{"docs":{},"个":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"第":{"docs":{},"四":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"你":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"同":{"docs":{},"步":{"docs":{},"整":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"。":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"些":{"docs":{},"人":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"问":{"docs":{},"如":{"docs":{},"何":{"docs":{},"设":{"docs":{},"置":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"内":{"docs":{},"存":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}},"来":{"docs":{},"控":{"docs":{},"制":{"docs":{},"只":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"填":{"docs":{},"充":{"docs":{},"那":{"docs":{},"部":{"docs":{},"分":{"docs":{},"内":{"docs":{},"容":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}},"堆":{"docs":{},"内":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"大":{"docs":{},"小":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"大":{"docs":{},"小":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"用":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"集":{"docs":{},"合":{"docs":{},"是":{"docs":{},"空":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}},"减":{"docs":{},"少":{"docs":{},"重":{"docs":{},"复":{"docs":{},"编":{"docs":{},"码":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"为":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}},"线":{"docs":{},"程":{"docs":{},"是":{"docs":{},"否":{"docs":{},"启":{"docs":{},"动":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}},"任":{"docs":{},"务":{"docs":{},"是":{"docs":{},"否":{"docs":{},"执":{"docs":{},"行":{"docs":{},"成":{"docs":{},"功":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"文":{"docs":{},"件":{"docs":{},"夹":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"目":{"docs":{},"录":{"docs":{},"的":{"docs":{},"父":{"docs":{},"路":{"docs":{},"径":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"则":{"docs":{},"无":{"docs":{},"法":{"docs":{},"创":{"docs":{},"建":{"docs":{},"成":{"docs":{},"功":{"docs":{},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"置":{"docs":{},"、":{"docs":{},"获":{"docs":{},"取":{"docs":{},"线":{"docs":{},"程":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"名":{"docs":{},"称":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"服":{"docs":{},"务":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"读":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"或":{"docs":{},"者":{"docs":{},"计":{"docs":{},"算":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}},"完":{"docs":{},"成":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}}}},"操":{"docs":{},"作":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}},"研":{"docs":{},"究":{"docs":{},"在":{"docs":{},"没":{"docs":{},"有":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"做":{"docs":{},"到":{"docs":{},"数":{"docs":{},"据":{"docs":{},"正":{"docs":{},"确":{"docs":{},"性":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}},"屏":{"docs":{},"蔽":{"docs":{},"各":{"docs":{},"种":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"和":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"访":{"docs":{},"问":{"docs":{},"差":{"docs":{},"异":{"docs":{},"，":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"让":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"实":{"docs":{},"现":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"独":{"docs":{},"享":{"docs":{},"或":{"docs":{},"者":{"docs":{},"共":{"docs":{},"享":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"当":{"docs":{},"然":{"docs":{},"是":{"docs":{},"独":{"docs":{},"享":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"缓":{"docs":{},"存":{"docs":{},"功":{"docs":{},"能":{"docs":{},"。":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}},"虚":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"构":{"docs":{},"建":{"docs":{},"。":{"docs":{},"然":{"docs":{},"而":{"docs":{},"这":{"docs":{},"些":{"docs":{},"锁":{"docs":{},"都":{"docs":{},"没":{"docs":{},"有":{"docs":{},"直":{"docs":{},"接":{"docs":{},"来":{"docs":{},"继":{"docs":{},"承":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}},"知":{"docs":{},"道":{"docs":{},"他":{"docs":{},"要":{"docs":{},"放":{"docs":{},"在":{"docs":{},"那":{"docs":{},"一":{"docs":{},"个":{"docs":{},"分":{"docs":{},"段":{"docs":{},"中":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"对":{"docs":{},"这":{"docs":{},"个":{"docs":{},"分":{"docs":{},"段":{"docs":{},"进":{"docs":{},"行":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"当":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"关":{"docs":{},"闭":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"任":{"docs":{},"务":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"，":{"docs":{},"则":{"docs":{},"可":{"docs":{},"以":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"（":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}},"代":{"docs":{},"替":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"改":{"docs":{},"变":{"docs":{},"触":{"docs":{},"发":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"禁":{"docs":{},"止":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"定":{"docs":{},"位":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"的":{"docs":{},"。":{"docs":{},"而":{"docs":{},"如":{"docs":{},"果":{"docs":{},"发":{"docs":{},"生":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"之":{"docs":{},"类":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}},"查":{"docs":{},"看":{"docs":{},"各":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"堆":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"知":{"docs":{},"道":{"docs":{},"没":{"docs":{},"有":{"docs":{},"响":{"docs":{},"应":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"到":{"docs":{},"底":{"docs":{},"在":{"docs":{},"后":{"docs":{},"台":{"docs":{},"做":{"docs":{},"什":{"docs":{},"么":{"docs":{},"事":{"docs":{},"情":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"等":{"docs":{},"待":{"docs":{},"什":{"docs":{},"么":{"docs":{},"资":{"docs":{},"源":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"文":{"docs":{},"件":{"docs":{},"或":{"docs":{},"目":{"docs":{},"录":{"docs":{},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}},"概":{"docs":{},"述":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}}},"念":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},"：":{"docs":{},"读":{"docs":{},"从":{"docs":{},"库":{"docs":{},"，":{"docs":{},"写":{"docs":{},"主":{"docs":{},"库":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}},"每":{"docs":{},"次":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"请":{"docs":{},"求":{"docs":{},"其":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"移":{"docs":{},"走":{"docs":{},"队":{"docs":{},"首":{"docs":{},"元":{"docs":{},"素":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"个":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.007246376811594203},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"小":{"docs":{},"于":{"docs":{},"它":{"docs":{},"；":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"大":{"docs":{},"于":{"docs":{},"它":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"守":{"docs":{},"护":{"docs":{},"着":{"docs":{},"一":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},",":{"docs":{},"当":{"docs":{},"对":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"进":{"docs":{},"行":{"docs":{},"修":{"docs":{},"改":{"docs":{},"时":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"首":{"docs":{},"先":{"docs":{},"获":{"docs":{},"得":{"docs":{},"它":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"得":{"docs":{},"了":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"会":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"和":{"docs":{},"锁":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"中":{"docs":{},"（":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"、":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"运":{"docs":{},"行":{"docs":{},"在":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}},"添":{"docs":{},"加":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}},"操":{"docs":{},"作":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"先":{"docs":{},"将":{"docs":{},"原":{"docs":{},"容":{"docs":{},"器":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}},"此":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}},"版":{"docs":{},"）":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"本":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.009389671361502348}},"号":{"docs":{},"：":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}},"用":{"docs":{},"来":{"docs":{},"记":{"docs":{},"录":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"控":{"docs":{},"制":{"docs":{},"同":{"docs":{},"时":{"docs":{},"访":{"docs":{},"问":{"docs":{},"某":{"docs":{},"个":{"docs":{},"特":{"docs":{},"定":{"docs":{},"资":{"docs":{},"源":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"数":{"docs":{},"量":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"同":{"docs":{},"时":{"docs":{},"执":{"docs":{},"行":{"docs":{},"某":{"docs":{},"个":{"docs":{},"指":{"docs":{},"定":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"。":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"年":{"docs":{},"龄":{"docs":{},"的":{"docs":{},"阈":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}},"于":{"docs":{},"存":{"docs":{},"放":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}},"已":{"docs":{},"被":{"docs":{},"加":{"docs":{},"载":{"docs":{},"的":{"docs":{},"类":{"docs":{},"信":{"docs":{},"息":{"docs":{},"、":{"docs":{},"常":{"docs":{},"量":{"docs":{},"、":{"docs":{},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"、":{"docs":{},"即":{"docs":{},"时":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"编":{"docs":{},"译":{"docs":{},"后":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"等":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"需":{"docs":{},"要":{"docs":{},"调":{"docs":{},"整":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}},"生":{"docs":{},"成":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}},"在":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"输":{"docs":{},"入":{"docs":{},"、":{"docs":{},"输":{"docs":{},"出":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}},"输":{"docs":{},"入":{"docs":{},"、":{"docs":{},"输":{"docs":{},"出":{"docs":{},"文":{"docs":{},"件":{"docs":{},"。":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}},"输":{"docs":{},"出":{"docs":{},"文":{"docs":{},"本":{"docs":{},"文":{"docs":{},"件":{"docs":{},"。":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}},"控":{"docs":{},"制":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"版":{"docs":{},"本":{"docs":{},"是":{"docs":{},"否":{"docs":{},"兼":{"docs":{},"容":{"docs":{},"。":{"docs":{},"若":{"docs":{},"我":{"docs":{},"们":{"docs":{},"认":{"docs":{},"为":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"可":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"类":{"docs":{},"是":{"docs":{},"向":{"docs":{},"后":{"docs":{},"兼":{"docs":{},"容":{"docs":{},"的":{"docs":{},"，":{"docs":{},"则":{"docs":{},"不":{"docs":{},"修":{"docs":{},"改":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"关":{"docs":{},"联":{"docs":{},"两":{"docs":{},"个":{"docs":{},"表":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"类":{"docs":{},"型":{"docs":{},"作":{"docs":{},"为":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"或":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"的":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"问":{"docs":{},"题":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"图":{"docs":{},"形":{"docs":{},"化":{"docs":{},"编":{"docs":{},"辑":{"docs":{},"管":{"docs":{},"理":{"docs":{},"工":{"docs":{},"具":{"docs":{},"，":{"docs":{},"方":{"docs":{},"便":{"docs":{},"我":{"docs":{},"们":{"docs":{},"实":{"docs":{},"时":{"docs":{},"编":{"docs":{},"辑":{"docs":{},"查":{"docs":{},"看":{"docs":{},"内":{"docs":{},"容":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"推":{"docs":{},"荐":{"docs":{},"用":{"docs":{},"v":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"，":{"docs":{},"又":{"docs":{},"可":{"docs":{},"以":{"docs":{},"编":{"docs":{},"辑":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"，":{"docs":{},"又":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"，":{"docs":{},"又":{"docs":{},"可":{"docs":{},"以":{"docs":{},"分":{"docs":{},"屏":{"docs":{},"看":{"docs":{},"效":{"docs":{},"果":{"docs":{},"。":{"docs":{},"别":{"docs":{},"忘":{"docs":{},"了":{"docs":{},"在":{"docs":{},"提":{"docs":{},"交":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"掉":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"文":{"docs":{},"件":{"docs":{},"夹":{"docs":{},"，":{"docs":{},"不":{"docs":{},"然":{"docs":{},"每":{"docs":{},"次":{"docs":{},"提":{"docs":{},"交":{"docs":{},"拉":{"docs":{},"取":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"会":{"docs":{},"很":{"docs":{},"痛":{"docs":{},"苦":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.011235955056179775},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.016842105263157894},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.01904761904761905},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":2.5017605633802815}},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.008645533141210375},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.008645533141210375},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.008645533141210375}}},"中":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"定":{"docs":{},"义":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"来":{"docs":{},"决":{"docs":{},"定":{"docs":{},"集":{"docs":{},"合":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"单":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{},"并":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"能":{"docs":{},"在":{"docs":{},"单":{"docs":{},"例":{"docs":{},"类":{"docs":{},"中":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"保":{"docs":{},"持":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"定":{"docs":{},"义":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"方":{"docs":{},"法":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"类":{"docs":{},"（":{"docs":{},"由":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"有":{"docs":{},"几":{"docs":{},"个":{"docs":{},"非":{"docs":{},"常":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}}},"具":{"docs":{},"有":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.008421052631578947},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.009523809523809525}}}}}}},"提":{"docs":{},"供":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"工":{"docs":{},"具":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}},"有":{"docs":{},"用":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"去":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"执":{"docs":{},"行":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}},"继":{"docs":{},"承":{"docs":{},"了":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}},"通":{"docs":{},"过":{"docs":{},"继":{"docs":{},"承":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.00631578947368421}}}}}},"是":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},"基":{"docs":{},"于":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"堆":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"无":{"docs":{},"界":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"期":{"docs":{},"间":{"docs":{},"动":{"docs":{},"态":{"docs":{},"加":{"docs":{},"载":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}},"随":{"docs":{},"机":{"docs":{},"读":{"docs":{},"取":{"docs":{},"类":{"docs":{},"，":{"docs":{},"它":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"完":{"docs":{},"全":{"docs":{},"独":{"docs":{},"立":{"docs":{},"的":{"docs":{},"类":{"docs":{},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}},"型":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"的":{"docs":{},"；":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"装":{"docs":{},"类":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"自":{"docs":{},"动":{"docs":{},"的":{"docs":{},"保":{"docs":{},"证":{"docs":{},"对":{"docs":{},"于":{"docs":{},"他":{"docs":{},"们":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"是":{"docs":{},"原":{"docs":{},"子":{"docs":{},"的":{"docs":{},"并":{"docs":{},"且":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"这":{"docs":{},"篇":{"docs":{},"文":{"docs":{},"章":{"docs":{},"来":{"docs":{},"了":{"docs":{},"解":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"双":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"类":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"是":{"docs":{},"否":{"docs":{},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}},"是":{"docs":{},"否":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}},"/":{"docs":{},"内":{"docs":{},"存":{"docs":{},"大":{"docs":{},"小":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"来":{"docs":{},"找":{"docs":{},"到":{"docs":{},"系":{"docs":{},"统":{"docs":{},"的":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}},"并":{"docs":{},"且":{"docs":{},"为":{"docs":{},"它":{"docs":{},"设":{"docs":{},"置":{"docs":{},"内":{"docs":{},"存":{"docs":{},"大":{"docs":{},"小":{"docs":{},"。":{"docs":{},"此":{"docs":{},"时":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"，":{"docs":{},"请":{"docs":{},"如":{"docs":{},"上":{"docs":{},"文":{"docs":{},"提":{"docs":{},"到":{"docs":{},"的":{"docs":{},"那":{"docs":{},"样":{"docs":{},"，":{"docs":{},"在":{"docs":{},"每":{"docs":{},"台":{"docs":{},"机":{"docs":{},"器":{"docs":{},"上":{"docs":{},"设":{"docs":{},"置":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"配":{"docs":{},"置":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}},"其":{"docs":{},"中":{"docs":{},"的":{"docs":{},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"种":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}}}},"大":{"docs":{},"致":{"docs":{},"等":{"docs":{},"同":{"docs":{},"于":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.00400962309542903},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},"操":{"docs":{},"作":{"docs":{},"中":{"docs":{},"，":{"docs":{},"包":{"docs":{},"括":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"子":{"docs":{},"类":{"docs":{},"，":{"docs":{},"并":{"docs":{},"重":{"docs":{},"写":{"docs":{},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"卸":{"docs":{},"载":{"docs":{},"条":{"docs":{},"件":{"docs":{},"很":{"docs":{},"多":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"满":{"docs":{},"足":{"docs":{},"以":{"docs":{},"下":{"docs":{},"三":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"满":{"docs":{},"足":{"docs":{},"了":{"docs":{},"也":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"会":{"docs":{},"被":{"docs":{},"卸":{"docs":{},"载":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"完":{"docs":{},"整":{"docs":{},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{},"包":{"docs":{},"括":{"docs":{},"以":{"docs":{},"下":{"docs":{},"几":{"docs":{},"个":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}},"方":{"docs":{},"法":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"无":{"docs":{},"参":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}},"会":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"这":{"docs":{},"个":{"docs":{},"原":{"docs":{},"因":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}},"来":{"docs":{},"包":{"docs":{},"装":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"保":{"docs":{},"证":{"docs":{},"引":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"，":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"多":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"放":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"里":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"软":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"实":{"docs":{},"现":{"docs":{},"弱":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"里":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}},"，":{"docs":{},"单":{"docs":{},"当":{"docs":{},"我":{"docs":{},"们":{"docs":{},"打":{"docs":{},"算":{"docs":{},"重":{"docs":{},"写":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}},"因":{"docs":{},"为":{"docs":{},"根":{"docs":{},"据":{"docs":{},"开":{"docs":{},"放":{"docs":{},"封":{"docs":{},"闭":{"docs":{},"原":{"docs":{},"则":{"docs":{},"—":{"docs":{},"—":{"docs":{},"实":{"docs":{},"现":{"docs":{},"接":{"docs":{},"口":{"docs":{},"更":{"docs":{},"便":{"docs":{},"于":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"；":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"接":{"docs":{},"口":{"docs":{},"方":{"docs":{},"式":{"docs":{},"更":{"docs":{},"便":{"docs":{},"于":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"类":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}},"构":{"docs":{},"造":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"：":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}},"似":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"只":{"docs":{},"不":{"docs":{},"过":{"docs":{},"等":{"docs":{},"待":{"docs":{},"一":{"docs":{},"定":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"后":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}},"在":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"加":{"docs":{},"载":{"docs":{},"因":{"docs":{},"子":{"docs":{},"为":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}},"：":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"去":{"docs":{},"继":{"docs":{},"承":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"与":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"时":{"docs":{},"机":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}},"分":{"docs":{},"类":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}}},"机":{"docs":{},"制":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":5.00418410041841}}}},"过":{"docs":{},"程":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}},"是":{"docs":{},"指":{"docs":{},"加":{"docs":{},"载":{"docs":{},"、":{"docs":{},"验":{"docs":{},"证":{"docs":{},"、":{"docs":{},"准":{"docs":{},"备":{"docs":{},"、":{"docs":{},"解":{"docs":{},"析":{"docs":{},"和":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"这":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{},"是":{"docs":{},"被":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"和":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"全":{"docs":{},"限":{"docs":{},"定":{"docs":{},"名":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}},"文":{"docs":{},"件":{"docs":{},"结":{"docs":{},"构":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}}}},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}}}},"索":{"docs":{},"引":{"docs":{},"、":{"docs":{},"父":{"docs":{},"类":{"docs":{},"索":{"docs":{},"引":{"docs":{},"和":{"docs":{},"接":{"docs":{},"口":{"docs":{},"索":{"docs":{},"引":{"docs":{},"集":{"docs":{},"合":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}},"随":{"docs":{},"着":{"docs":{},"它":{"docs":{},"的":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"一":{"docs":{},"起":{"docs":{},"具":{"docs":{},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"带":{"docs":{},"有":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"的":{"docs":{},"层":{"docs":{},"次":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"使":{"docs":{},"得":{"docs":{},"基":{"docs":{},"础":{"docs":{},"类":{"docs":{},"得":{"docs":{},"到":{"docs":{},"统":{"docs":{},"一":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"全":{"docs":{},"名":{"docs":{},"或":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"虽":{"docs":{},"然":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"对":{"docs":{},"文":{"docs":{},"件":{"docs":{},"内":{"docs":{},"容":{"docs":{},"的":{"docs":{},"读":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"比":{"docs":{},"较":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"一":{"docs":{},"般":{"docs":{},"操":{"docs":{},"作":{"docs":{},"文":{"docs":{},"件":{"docs":{},"内":{"docs":{},"容":{"docs":{},"往":{"docs":{},"往":{"docs":{},"会":{"docs":{},"使":{"docs":{},"用":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"或":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"方":{"docs":{},"式":{"docs":{},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"于":{"docs":{},"从":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"中":{"docs":{},"读":{"docs":{},"取":{"docs":{},"内":{"docs":{},"容":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"字":{"docs":{},"节":{"docs":{},"数":{"docs":{},"据":{"docs":{},"都":{"docs":{},"放":{"docs":{},"在":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"中":{"docs":{},"。":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"绑":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.006046863189720333}},"。":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}},"作":{"docs":{},"进":{"docs":{},"一":{"docs":{},"步":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"使":{"docs":{},"其":{"docs":{},"能":{"docs":{},"够":{"docs":{},"对":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}},"改":{"docs":{},"为":{"docs":{},"如":{"docs":{},"下":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"看":{"docs":{},"看":{"docs":{},"运":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"使":{"docs":{},"其":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}},"结":{"docs":{},"构":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{},"结":{"docs":{},"构":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"是":{"docs":{},"指":{"docs":{},"添":{"docs":{},"加":{"docs":{},"或":{"docs":{},"者":{"docs":{},"删":{"docs":{},"除":{"docs":{},"至":{"docs":{},"少":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"是":{"docs":{},"调":{"docs":{},"整":{"docs":{},"内":{"docs":{},"部":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"只":{"docs":{},"是":{"docs":{},"设":{"docs":{},"置":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"值":{"docs":{},"不":{"docs":{},"算":{"docs":{},"结":{"docs":{},"构":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{},"和":{"docs":{},"流":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"大":{"docs":{},"致":{"docs":{},"说":{"docs":{},"下":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-interview.html":{"ref":"javacore/jvm/jvm-interview.html","tf":0.09090909090909091}}}}}}}}}}}}}},"束":{"docs":{},"并":{"docs":{},"获":{"docs":{},"取":{"docs":{},"它":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}},"论":{"docs":{},"：":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"由":{"docs":{},"于":{"docs":{},"同":{"docs":{},"步":{"docs":{},"容":{"docs":{},"器":{"docs":{},"不":{"docs":{},"能":{"docs":{},"彻":{"docs":{},"底":{"docs":{},"保":{"docs":{},"证":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"，":{"docs":{},"且":{"docs":{},"性":{"docs":{},"能":{"docs":{},"不":{"docs":{},"高":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"不":{"docs":{},"建":{"docs":{},"议":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"想":{"docs":{},"使":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"容":{"docs":{},"器":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"考":{"docs":{},"虑":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"你":{"docs":{},"给":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"表":{"docs":{},"示":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}},"双":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"为":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"它":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}},"堆":{"docs":{},"空":{"docs":{},"间":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"方":{"docs":{},"法":{"docs":{},"区":{"docs":{},"和":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}},"层":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"（":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"最":{"docs":{},"核":{"docs":{},"心":{"docs":{},"的":{"docs":{},"能":{"docs":{},"力":{"docs":{},"在":{"docs":{},"于":{"docs":{},"将":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}},"要":{"docs":{},"大":{"docs":{},"，":{"docs":{},"访":{"docs":{},"问":{"docs":{},"速":{"docs":{},"度":{"docs":{},"更":{"docs":{},"慢":{"docs":{},"。":{"docs":{},"最":{"docs":{},"好":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}}}}}}},"点":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.008421052631578947},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.009523809523809525},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002857142857142857},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.006024096385542169}},"：":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"和":{"docs":{},"线":{"docs":{},"程":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{},"有":{"docs":{},"一":{"docs":{},"定":{"docs":{},"开":{"docs":{},"销":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"这":{"docs":{},"个":{"docs":{},"需":{"docs":{},"求":{"docs":{},"，":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"中":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"类":{"docs":{},"，":{"docs":{},"它":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"三":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"用":{"docs":{},"来":{"docs":{},"操":{"docs":{},"作":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"和":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"。":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"位":{"docs":{},"于":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},"中":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"保":{"docs":{},"存":{"docs":{},"的":{"docs":{},"副":{"docs":{},"本":{"docs":{},"变":{"docs":{},"量":{"docs":{},"为":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"证":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"包":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"到":{"docs":{},"达":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"必":{"docs":{},"需":{"docs":{},"要":{"docs":{},"有":{"docs":{},"重":{"docs":{},"传":{"docs":{},"机":{"docs":{},"制":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}},"长":{"docs":{},"很":{"docs":{},"多":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"读":{"docs":{},"写":{"docs":{},"分":{"docs":{},"离":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.003745318352059925},"database/database.html":{"ref":"database/database.html","tf":0.011494252873563218}}}},"锁":{"docs":{},"在":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"模":{"docs":{},"式":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"文":{"docs":{},"件":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"创":{"docs":{},"建":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}},"和":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"写":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"语":{"docs":{},"义":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"通":{"docs":{},"信":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"的":{"docs":{},"公":{"docs":{},"共":{"docs":{},"状":{"docs":{},"态":{"docs":{},"来":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"进":{"docs":{},"行":{"docs":{},"通":{"docs":{},"信":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}},"取":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}},"时":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"只":{"docs":{},"能":{"docs":{},"按":{"docs":{},"照":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"人":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}},"二":{"docs":{},"个":{"docs":{},"人":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"要":{"docs":{},"空":{"docs":{},"出":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"人":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"容":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}}}},"实":{"docs":{},"体":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"包":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"变":{"docs":{},"为":{"docs":{},"字":{"docs":{},"符":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}},"对":{"docs":{},"象":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}},"一":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}},"”":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"互":{"docs":{},"斥":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}},"锁":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}},"资":{"docs":{},"料":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626},"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.007246376811594203},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}}},"源":{"docs":{},"限":{"docs":{},"制":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}},"引":{"docs":{},"来":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{},"为":{"docs":{},"了":{"docs":{},"将":{"docs":{},"代":{"docs":{},"码":{"docs":{},"执":{"docs":{},"行":{"docs":{},"速":{"docs":{},"度":{"docs":{},"加":{"docs":{},"快":{"docs":{},"将":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"串":{"docs":{},"行":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"变":{"docs":{},"成":{"docs":{},"并":{"docs":{},"发":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"资":{"docs":{},"源":{"docs":{},"受":{"docs":{},"限":{"docs":{},"，":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"在":{"docs":{},"串":{"docs":{},"行":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"程":{"docs":{},"序":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"不":{"docs":{},"会":{"docs":{},"加":{"docs":{},"快":{"docs":{},"，":{"docs":{},"反":{"docs":{},"而":{"docs":{},"会":{"docs":{},"变":{"docs":{},"慢":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{},"和":{"docs":{},"资":{"docs":{},"源":{"docs":{},"调":{"docs":{},"度":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"发":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}},"指":{"docs":{},"的":{"docs":{},"是":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"速":{"docs":{},"度":{"docs":{},"受":{"docs":{},"限":{"docs":{},"于":{"docs":{},"计":{"docs":{},"算":{"docs":{},"机":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"资":{"docs":{},"源":{"docs":{},"或":{"docs":{},"软":{"docs":{},"件":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"如":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"的":{"docs":{},"带":{"docs":{},"宽":{"docs":{},"只":{"docs":{},"有":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"指":{"docs":{},"在":{"docs":{},"进":{"docs":{},"行":{"docs":{},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{},"时":{"docs":{},"，":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"速":{"docs":{},"度":{"docs":{},"受":{"docs":{},"限":{"docs":{},"于":{"docs":{},"计":{"docs":{},"算":{"docs":{},"机":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"资":{"docs":{},"源":{"docs":{},"或":{"docs":{},"软":{"docs":{},"件":{"docs":{},"资":{"docs":{},"源":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"看":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"：":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}},"，":{"docs":{},"即":{"docs":{},"使":{"docs":{},"没":{"docs":{},"有":{"docs":{},"任":{"docs":{},"何":{"docs":{},"用":{"docs":{},"也":{"docs":{},"会":{"docs":{},"做":{"docs":{},"一":{"docs":{},"些":{"docs":{},"无":{"docs":{},"用":{"docs":{},"功":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}},"敏":{"docs":{},"感":{"docs":{},"的":{"docs":{},"场":{"docs":{},"合":{"docs":{},"，":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"优":{"docs":{},"先":{"docs":{},"考":{"docs":{},"虑":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}},"都":{"docs":{},"不":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}}}}}}}},"填":{"docs":{},"的":{"docs":{},"是":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}},"参":{"docs":{},"与":{"docs":{},"到":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"新":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"让":{"docs":{},"一":{"docs":{},"组":{"docs":{},"线":{"docs":{},"程":{"docs":{},"等":{"docs":{},"待":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{},"与":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}},"访":{"docs":{},"问":{"docs":{},"主":{"docs":{},"存":{"docs":{},"。":{"docs":{},"主":{"docs":{},"存":{"docs":{},"通":{"docs":{},"常":{"docs":{},"比":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"系":{"docs":{},"列":{"docs":{},"的":{"docs":{},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"是":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}},"有":{"docs":{},"一":{"docs":{},"定":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"层":{"docs":{},"。":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}},"个":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"是":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"这":{"docs":{},"个":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"由":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"插":{"docs":{},"。":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"1":{"docs":{},".":{"8":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"docs":{}}},"docs":{}}}}}}},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"插":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}},"长":{"docs":{},"度":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"问":{"docs":{},"题":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}},"接":{"docs":{},"（":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"）":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/container/container-list.html":{"ref":"javacore/container/container-list.html","tf":0.0018726591760299626}}}},"强":{"docs":{},"调":{"docs":{},"的":{"docs":{},"是":{"docs":{},"：":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}}}}},"和":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"这":{"docs":{},"并":{"docs":{},"不":{"docs":{},"会":{"docs":{},"让":{"docs":{},"线":{"docs":{},"程":{"docs":{},"终":{"docs":{},"止":{"docs":{},"，":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"从":{"docs":{},"休":{"docs":{},"眠":{"docs":{},"中":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"将":{"docs":{},"会":{"docs":{},"被":{"docs":{},"改":{"docs":{},"变":{"docs":{},"为":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"是":{"docs":{},"目":{"docs":{},"录":{"docs":{},"，":{"docs":{},"且":{"docs":{},"目":{"docs":{},"录":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"用":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}},"保":{"docs":{},"存":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"本":{"docs":{},"地":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"程":{"docs":{},"序":{"docs":{},"指":{"docs":{},"针":{"docs":{},"等":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"并":{"docs":{},"加":{"docs":{},"载":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"要":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"本":{"docs":{},"地":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"程":{"docs":{},"序":{"docs":{},"指":{"docs":{},"针":{"docs":{},"等":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"开":{"docs":{},"关":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{},"“":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{},"”":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"操":{"docs":{},"作":{"docs":{},"值":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"检":{"docs":{},"查":{"docs":{},"下":{"docs":{},"值":{"docs":{},"有":{"docs":{},"没":{"docs":{},"有":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"则":{"docs":{},"更":{"docs":{},"新":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"原":{"docs":{},"来":{"docs":{},"是":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"缓":{"docs":{},"存":{"docs":{},"层":{"docs":{},"存":{"docs":{},"放":{"docs":{},"一":{"docs":{},"些":{"docs":{},"东":{"docs":{},"西":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"存":{"docs":{},"放":{"docs":{},"在":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"中":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"通":{"docs":{},"常":{"docs":{},"会":{"docs":{},"被":{"docs":{},"刷":{"docs":{},"新":{"docs":{},"回":{"docs":{},"主":{"docs":{},"存":{"docs":{},"。":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"结":{"docs":{},"果":{"docs":{},"写":{"docs":{},"回":{"docs":{},"到":{"docs":{},"主":{"docs":{},"存":{"docs":{},"中":{"docs":{},"去":{"docs":{},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"会":{"docs":{},"将":{"docs":{},"内":{"docs":{},"部":{"docs":{},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"的":{"docs":{},"值":{"docs":{},"刷":{"docs":{},"新":{"docs":{},"到":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"中":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"某":{"docs":{},"个":{"docs":{},"时":{"docs":{},"间":{"docs":{},"点":{"docs":{},"将":{"docs":{},"值":{"docs":{},"刷":{"docs":{},"新":{"docs":{},"回":{"docs":{},"主":{"docs":{},"存":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"读":{"docs":{},"取":{"docs":{},"主":{"docs":{},"存":{"docs":{},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"会":{"docs":{},"将":{"docs":{},"主":{"docs":{},"存":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"读":{"docs":{},"到":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"作":{"docs":{},"担":{"docs":{},"保":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"三":{"docs":{},"次":{"docs":{},"握":{"docs":{},"手":{"docs":{},"、":{"docs":{},"四":{"docs":{},"次":{"docs":{},"挥":{"docs":{},"手":{"docs":{},"原":{"docs":{},"则":{"docs":{},"建":{"docs":{},"立":{"docs":{},"和":{"docs":{},"断":{"docs":{},"开":{"docs":{},"双":{"docs":{},"向":{"docs":{},"连":{"docs":{},"接":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.004001778568252557},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}},"e":{"docs":{},"y":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.006224988883948421},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0026678523788350376}},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}}},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.004001778568252557},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.004371584699453552}}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"去":{"docs":{},"链":{"docs":{},"表":{"docs":{},"或":{"docs":{},"树":{"docs":{},"中":{"docs":{},"去":{"docs":{},"查":{"docs":{},"找":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}},"k":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918}}}}},"去":{"docs":{},"查":{"docs":{},"找":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"；":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}},"e":{"docs":{},"k":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"在":{"docs":{},"链":{"docs":{},"中":{"docs":{},"找":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"/":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"次":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"运":{"docs":{},"算":{"docs":{},"得":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"。":{"docs":{},"(":{"docs":{},"这":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"运":{"docs":{},"算":{"docs":{},"下":{"docs":{},"文":{"docs":{},"详":{"docs":{},"说":{"docs":{},")":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"e":{"docs":{},",":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}},"：":{"docs":{},"线":{"docs":{},"程":{"docs":{},"活":{"docs":{},"动":{"docs":{},"保":{"docs":{},"持":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"后":{"docs":{},"，":{"docs":{},"保":{"docs":{},"持":{"docs":{},"存":{"docs":{},"活":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"如":{"docs":{},"果":{"docs":{},"任":{"docs":{},"务":{"docs":{},"很":{"docs":{},"多":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"每":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"比":{"docs":{},"较":{"docs":{},"短":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"调":{"docs":{},"大":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"提":{"docs":{},"高":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"利":{"docs":{},"用":{"docs":{},"率":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"p":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"t":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}},"/":{"docs":{},"v":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}},")":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},",":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"i":{"docs":{},"b":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"，":{"docs":{},"主":{"docs":{},"要":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"已":{"docs":{},"经":{"docs":{},"在":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}},"件":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"应":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"会":{"docs":{},"因":{"docs":{},"此":{"docs":{},"操":{"docs":{},"作":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}},"：":{"docs":{},"初":{"docs":{},"始":{"docs":{},"标":{"docs":{},"记":{"docs":{},"和":{"docs":{},"重":{"docs":{},"新":{"docs":{},"标":{"docs":{},"记":{"docs":{},"。":{"docs":{},"当":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"达":{"docs":{},"到":{"docs":{},"特":{"docs":{},"定":{"docs":{},"的":{"docs":{},"占":{"docs":{},"用":{"docs":{},"比":{"docs":{},"例":{"docs":{},"时":{"docs":{},"，":{"docs":{},"c":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"允":{"docs":{},"许":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"同":{"docs":{},"时":{"docs":{},"对":{"docs":{},"其":{"docs":{},"执":{"docs":{},"行":{"docs":{},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"只":{"docs":{},"允":{"docs":{},"许":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"对":{"docs":{},"其":{"docs":{},"执":{"docs":{},"行":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"原":{"docs":{},"理":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474},"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.007142857142857143},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}},"：":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}},"j":{"docs":{},"d":{"docs":{},"k":{"6":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"docs":{}}}},"a":{"docs":{},"q":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}},"利":{"docs":{},"用":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"对":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"标":{"docs":{},"识":{"docs":{},"符":{"docs":{},"的":{"docs":{},"解":{"docs":{},"析":{"docs":{},"强":{"docs":{},"行":{"docs":{},"从":{"docs":{},"页":{"docs":{},"面":{"docs":{},"向":{"docs":{},"后":{"docs":{},"台":{"docs":{},"传":{"docs":{},"入":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}},"索":{"docs":{},"引":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"+":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"放":{"docs":{},"到":{"docs":{},"b":{"docs":{},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"里":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}},"放":{"docs":{},"到":{"docs":{},"b":{"docs":{},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"里":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}},"因":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"线":{"docs":{},"程":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"的":{"docs":{},"支":{"docs":{},"持":{"docs":{},"，":{"docs":{},"然":{"docs":{},"而":{"docs":{},"，":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"支":{"docs":{},"持":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"并":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"很":{"docs":{},"好":{"docs":{},"的":{"docs":{},"和":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"d":{"docs":{},"k":{"6":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"docs":{}}},"v":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"线":{"docs":{},"程":{"docs":{},"过":{"docs":{},"多":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"传":{"docs":{},"入":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"与":{"docs":{},"系":{"docs":{},"统":{"docs":{},"的":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"成":{"docs":{},"了":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"而":{"docs":{},"导":{"docs":{},"致":{"docs":{},"的":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"子":{"docs":{},"变":{"docs":{},"量":{"docs":{},"类":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":5.001945525291829}},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"一":{"docs":{},"种":{"docs":{},"泛":{"docs":{},"化":{"docs":{},"的":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}},"比":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"粒":{"docs":{},"度":{"docs":{},"更":{"docs":{},"细":{"docs":{},"，":{"docs":{},"量":{"docs":{},"级":{"docs":{},"更":{"docs":{},"轻":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"对":{"docs":{},"于":{"docs":{},"在":{"docs":{},"多":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"系":{"docs":{},"统":{"docs":{},"上":{"docs":{},"实":{"docs":{},"现":{"docs":{},"高":{"docs":{},"性":{"docs":{},"能":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"代":{"docs":{},"码":{"docs":{},"来":{"docs":{},"说":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"关":{"docs":{},"键":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"是":{"docs":{},"指":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"受":{"docs":{},"其":{"docs":{},"他":{"docs":{},"操":{"docs":{},"作":{"docs":{},"影":{"docs":{},"响":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"任":{"docs":{},"务":{"docs":{},"单":{"docs":{},"元":{"docs":{},"。":{"docs":{},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{},"是":{"docs":{},"在":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"环":{"docs":{},"境":{"docs":{},"下":{"docs":{},"避":{"docs":{},"免":{"docs":{},"数":{"docs":{},"据":{"docs":{},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"必":{"docs":{},"须":{"docs":{},"的":{"docs":{},"手":{"docs":{},"段":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"和":{"docs":{},"解":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"测":{"docs":{},"试":{"docs":{},"一":{"docs":{},"下":{"docs":{},"对":{"docs":{},"象":{"docs":{},"头":{"docs":{},"中":{"docs":{},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"(":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"理":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}},"在":{"docs":{},"内":{"docs":{},"部":{"docs":{},"使":{"docs":{},"用":{"docs":{},"现":{"docs":{},"代":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}},"更":{"docs":{},"新":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}}}}}},"字":{"docs":{},"段":{"docs":{},"类":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}}}}},"布":{"docs":{},"尔":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}},"带":{"docs":{},"有":{"docs":{},"标":{"docs":{},"记":{"docs":{},"位":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"原":{"docs":{},"子":{"docs":{},"更":{"docs":{},"新":{"docs":{},"一":{"docs":{},"个":{"docs":{},"布":{"docs":{},"尔":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"标":{"docs":{},"记":{"docs":{},"位":{"docs":{},"和":{"docs":{},"应":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{},"该":{"docs":{},"类":{"docs":{},"将":{"docs":{},"整":{"docs":{},"型":{"docs":{},"数":{"docs":{},"值":{"docs":{},"与":{"docs":{},"引":{"docs":{},"用":{"docs":{},"关":{"docs":{},"联":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"可":{"docs":{},"用":{"docs":{},"于":{"docs":{},"原":{"docs":{},"子":{"docs":{},"的":{"docs":{},"更":{"docs":{},"新":{"docs":{},"数":{"docs":{},"据":{"docs":{},"和":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"解":{"docs":{},"决":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}},"。":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}},"里":{"docs":{},"的":{"docs":{},"字":{"docs":{},"段":{"docs":{},"。":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876}}}},"整":{"docs":{},"型":{"docs":{},"。":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}},"的":{"docs":{},"字":{"docs":{},"段":{"docs":{},"的":{"docs":{},"更":{"docs":{},"新":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}},"长":{"docs":{},"整":{"docs":{},"型":{"docs":{},"。":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}},"字":{"docs":{},"段":{"docs":{},"的":{"docs":{},"更":{"docs":{},"新":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}},"性":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}},"语":{"docs":{},"，":{"docs":{},"保":{"docs":{},"证":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"是":{"docs":{},"可":{"docs":{},"见":{"docs":{},"的":{"docs":{},"（":{"docs":{},"共":{"docs":{},"享":{"docs":{},"的":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},"加":{"docs":{},"载":{"docs":{},"因":{"docs":{},"子":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}},"用":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"实":{"docs":{},"际":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"副":{"docs":{},"本":{"docs":{},"的":{"docs":{},"，":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"键":{"docs":{},"值":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"变":{"docs":{},"化":{"docs":{},"：":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"将":{"docs":{},"最":{"docs":{},"近":{"docs":{},"最":{"docs":{},"久":{"docs":{},"未":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"移":{"docs":{},"除":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}},"变":{"docs":{},"成":{"1":{"docs":{},"a":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}},"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}},"报":{"docs":{},"这":{"docs":{},"部":{"docs":{},"分":{"docs":{},"内":{"docs":{},"存":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"了":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"加":{"docs":{},"大":{"docs":{},"内":{"docs":{},"存":{"docs":{},"分":{"docs":{},"配":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}},"好":{"docs":{},"了":{"docs":{},"，":{"docs":{},"是":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"了":{"docs":{},"。":{"docs":{},"大":{"docs":{},"致":{"docs":{},"思":{"docs":{},"路":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"对":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"取":{"docs":{},"模":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"在":{"docs":{},"速":{"docs":{},"度":{"docs":{},"、":{"docs":{},"效":{"docs":{},"率":{"docs":{},"上":{"docs":{},"比":{"docs":{},"直":{"docs":{},"接":{"docs":{},"取":{"docs":{},"模":{"docs":{},"要":{"docs":{},"快":{"docs":{},"得":{"docs":{},"多":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"餐":{"docs":{},"时":{"docs":{},"，":{"1":{"docs":{},"、":{"3":{"docs":{},"、":{"5":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}},"docs":{}}},"docs":{}}},"docs":{}}}},"无":{"docs":{},"法":{"docs":{},"保":{"docs":{},"证":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"候":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"取":{"docs":{},"巧":{"docs":{},"的":{"docs":{},"办":{"docs":{},"法":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"把":{"docs":{},"多":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"合":{"docs":{},"并":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"来":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"这":{"docs":{},"些":{"docs":{},"代":{"docs":{},"替":{"docs":{},"了":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"很":{"docs":{},"好":{"docs":{},"的":{"docs":{},"隔":{"docs":{},"离":{"docs":{},"二":{"docs":{},"者":{"docs":{},"所":{"docs":{},"关":{"docs":{},"注":{"docs":{},"的":{"docs":{},"事":{"docs":{},"情":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}},"把":{"docs":{},"它":{"docs":{},"划":{"docs":{},"分":{"docs":{},"短":{"docs":{},"一":{"docs":{},"些":{"docs":{},"再":{"docs":{},"传":{"docs":{},"送":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"一":{"docs":{},"次":{"docs":{},"只":{"docs":{},"发":{"docs":{},"送":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"节":{"docs":{},"，":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"有":{"docs":{},"了":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"在":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"对":{"docs":{},"应":{"docs":{},"了":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"主":{"docs":{},"机":{"docs":{},"或":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}},"既":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"又":{"docs":{},"保":{"docs":{},"证":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"速":{"docs":{},"度":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}},"中":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"的":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"父":{"docs":{},"类":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}},"、":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"、":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}},"主":{"docs":{},"要":{"docs":{},"有":{"docs":{},"三":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"（":{"docs":{},"必":{"docs":{},"须":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"领":{"docs":{},"会":{"docs":{},"双":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"精":{"docs":{},"髓":{"docs":{},"）":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}},"检":{"docs":{},"索":{"docs":{},"并":{"docs":{},"移":{"docs":{},"除":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"（":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"）":{"docs":{},"元":{"docs":{},"素":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"（":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"）":{"docs":{},"元":{"docs":{},"素":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}},"比":{"docs":{},"较":{"docs":{},"器":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"避":{"docs":{},"免":{"docs":{},"活":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"通":{"docs":{},"用":{"docs":{},"指":{"docs":{},"南":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"我":{"docs":{},"们":{"docs":{},"改":{"docs":{},"变":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"也":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"公":{"docs":{},"共":{"docs":{},"对":{"docs":{},"象":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"中":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"在":{"docs":{},"上":{"docs":{},"述":{"docs":{},"场":{"docs":{},"景":{"docs":{},"中":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"必":{"docs":{},"须":{"docs":{},"小":{"docs":{},"心":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"超":{"docs":{},"时":{"docs":{},"机":{"docs":{},"制":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"响":{"docs":{},"应":{"docs":{},"时":{"docs":{},"，":{"docs":{},"强":{"docs":{},"制":{"docs":{},"生":{"docs":{},"成":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"回":{"docs":{},"收":{"docs":{},"时":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"公":{"docs":{},"有":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"创":{"docs":{},"建":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}},"确":{"docs":{},"认":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"包":{"docs":{},"不":{"docs":{},"会":{"docs":{},"从":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"中":{"docs":{},"移":{"docs":{},"走":{"docs":{},"，":{"docs":{},"定":{"docs":{},"时":{"docs":{},"器":{"docs":{},"在":{"docs":{},"重":{"docs":{},"传":{"docs":{},"时":{"docs":{},"间":{"docs":{},"到":{"docs":{},"期":{"docs":{},"内":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"片":{"docs":{},"段":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"不":{"docs":{},"变":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"超":{"docs":{},"过":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"就":{"docs":{},"扩":{"docs":{},"充":{"docs":{},"为":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}},"源":{"docs":{},"码":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002857142857142857},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.006024096385542169},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}},"实":{"docs":{},"现":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686}}}},"小":{"docs":{},"结":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"维":{"docs":{},"护":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"双":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"由":{"docs":{},"双":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"可":{"docs":{},"以":{"docs":{},"知":{"docs":{},"道":{"docs":{},"，":{"docs":{},"它":{"docs":{},"是":{"docs":{},"按":{"docs":{},"照":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"保":{"docs":{},"存":{"docs":{},"的":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"对":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"；":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"将":{"docs":{},"读":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"分":{"docs":{},"开":{"docs":{},"，":{"docs":{},"有":{"docs":{},"利":{"docs":{},"于":{"docs":{},"提":{"docs":{},"高":{"docs":{},"并":{"docs":{},"发":{"docs":{},"效":{"docs":{},"率":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}}}}}},"定":{"docs":{},"数":{"docs":{},"量":{"docs":{},"的":{"docs":{},"连":{"docs":{},"接":{"docs":{},"，":{"docs":{},"减":{"docs":{},"少":{"docs":{},"创":{"docs":{},"建":{"docs":{},"连":{"docs":{},"接":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},"反":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{},"的":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}}}}},"大":{"docs":{},"于":{"docs":{},"或":{"docs":{},"等":{"docs":{},"于":{"docs":{},"指":{"docs":{},"定":{"docs":{},"值":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"中":{"docs":{},"最":{"docs":{},"接":{"docs":{},"近":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}}},"指":{"docs":{},"定":{"docs":{},"值":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"中":{"docs":{},"最":{"docs":{},"接":{"docs":{},"近":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"子":{"docs":{},"集":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}}}}}}}}},"小":{"docs":{},"于":{"docs":{},"或":{"docs":{},"等":{"docs":{},"于":{"docs":{},"指":{"docs":{},"定":{"docs":{},"值":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"中":{"docs":{},"最":{"docs":{},"接":{"docs":{},"近":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}}}},"指":{"docs":{},"定":{"docs":{},"值":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"中":{"docs":{},"最":{"docs":{},"接":{"docs":{},"近":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"子":{"docs":{},"集":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}}}}}}}}},"指":{"docs":{},"定":{"docs":{},"区":{"docs":{},"间":{"docs":{},"的":{"docs":{},"子":{"docs":{},"集":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.004210526315789474}}}}}}}}},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}},"特":{"docs":{},"殊":{"docs":{},"值":{"docs":{},"（":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"处":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"用":{"docs":{},"于":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"行":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}},"通":{"docs":{},"过":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"未":{"docs":{},"找":{"docs":{},"到":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"日":{"docs":{},"志":{"docs":{},"分":{"docs":{},"析":{"docs":{},"得":{"docs":{},"出":{"docs":{},"，":{"docs":{},"p":{"docs":{},"s":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"、":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"、":{"docs":{},"p":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"象":{"docs":{},"输":{"docs":{},"入":{"docs":{},"输":{"docs":{},"出":{"docs":{},"流":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"和":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"：":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"将":{"docs":{},"产":{"docs":{},"生":{"docs":{},"碰":{"docs":{},"撞":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"组":{"docs":{},"织":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"在":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"获":{"docs":{},"取":{"docs":{},"指":{"docs":{},"定":{"docs":{},"偏":{"docs":{},"移":{"docs":{},"量":{"docs":{},"上":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"值":{"docs":{},"时":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"需":{"docs":{},"要":{"docs":{},"获":{"docs":{},"取":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"值":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"。":{"docs":{},"而":{"docs":{},"在":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"1":{"docs":{},".":{"8":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"通":{"docs":{},"过":{"docs":{},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"获":{"docs":{},"取":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"循":{"docs":{},"环":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"链":{"docs":{},"表":{"docs":{},"获":{"docs":{},"取":{"docs":{},"对":{"docs":{},"应":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}},"给":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"分":{"docs":{},"配":{"docs":{},"时":{"docs":{},"间":{"docs":{},"切":{"docs":{},"片":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"来":{"docs":{},"循":{"docs":{},"环":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"一":{"docs":{},"个":{"docs":{},"时":{"docs":{},"间":{"docs":{},"片":{"docs":{},"后":{"docs":{},"会":{"docs":{},"切":{"docs":{},"换":{"docs":{},"到":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"，":{"docs":{},"在":{"docs":{},"切":{"docs":{},"换":{"docs":{},"前":{"docs":{},"会":{"docs":{},"保":{"docs":{},"持":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"以":{"docs":{},"便":{"docs":{},"下":{"docs":{},"次":{"docs":{},"切":{"docs":{},"换":{"docs":{},"回":{"docs":{},"这":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"时":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"再":{"docs":{},"加":{"docs":{},"载":{"docs":{},"这":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"任":{"docs":{},"务":{"docs":{},"从":{"docs":{},"保":{"docs":{},"存":{"docs":{},"到":{"docs":{},"再":{"docs":{},"加":{"docs":{},"载":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"次":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}},"继":{"docs":{},"承":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"一":{"docs":{},"个":{"docs":{},"双":{"docs":{},"向":{"docs":{},"的":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"类":{"docs":{},"的":{"docs":{},"全":{"docs":{},"限":{"docs":{},"定":{"docs":{},"名":{"docs":{},"来":{"docs":{},"获":{"docs":{},"取":{"docs":{},"定":{"docs":{},"义":{"docs":{},"此":{"docs":{},"类":{"docs":{},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}},"引":{"docs":{},"入":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"锁":{"docs":{},"升":{"docs":{},"级":{"docs":{},"的":{"docs":{},"机":{"docs":{},"制":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"高":{"docs":{},"效":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{},"可":{"docs":{},"知":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}},"技":{"docs":{},"术":{"docs":{},"来":{"docs":{},"保":{"docs":{},"证":{"docs":{},"：":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}},"重":{"docs":{},"复":{"docs":{},"利":{"docs":{},"用":{"docs":{},"已":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"降":{"docs":{},"低":{"docs":{},"线":{"docs":{},"程":{"docs":{},"创":{"docs":{},"建":{"docs":{},"和":{"docs":{},"销":{"docs":{},"毁":{"docs":{},"造":{"docs":{},"成":{"docs":{},"的":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}},"子":{"docs":{},"类":{"docs":{},"引":{"docs":{},"用":{"docs":{},"父":{"docs":{},"类":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"字":{"docs":{},"段":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"子":{"docs":{},"类":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"和":{"docs":{},"控":{"docs":{},"制":{"docs":{},"流":{"docs":{},"分":{"docs":{},"析":{"docs":{},"，":{"docs":{},"确":{"docs":{},"保":{"docs":{},"程":{"docs":{},"序":{"docs":{},"语":{"docs":{},"义":{"docs":{},"是":{"docs":{},"合":{"docs":{},"法":{"docs":{},"、":{"docs":{},"符":{"docs":{},"合":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}},"组":{"docs":{},"定":{"docs":{},"义":{"docs":{},"来":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"触":{"docs":{},"发":{"docs":{},"此":{"docs":{},"类":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"。":{"docs":{},"该":{"docs":{},"过":{"docs":{},"程":{"docs":{},"会":{"docs":{},"对":{"docs":{},"数":{"docs":{},"组":{"docs":{},"类":{"docs":{},"进":{"docs":{},"行":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"类":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"由":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"自":{"docs":{},"动":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"、":{"docs":{},"直":{"docs":{},"接":{"docs":{},"继":{"docs":{},"承":{"docs":{},"自":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"张":{"docs":{},"图":{"docs":{},"非":{"docs":{},"常":{"docs":{},"明":{"docs":{},"显":{"docs":{},"看":{"docs":{},"出":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"添":{"docs":{},"加":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"常":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"加":{"docs":{},"载":{"docs":{},"因":{"docs":{},"子":{"docs":{},"（":{"0":{"docs":{},".":{"7":{"5":{"docs":{},"）":{"docs":{},"在":{"docs":{},"时":{"docs":{},"间":{"docs":{},"和":{"docs":{},"空":{"docs":{},"间":{"docs":{},"成":{"docs":{},"本":{"docs":{},"之":{"docs":{},"间":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"良":{"docs":{},"好":{"docs":{},"的":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"。":{"docs":{},"较":{"docs":{},"高":{"docs":{},"的":{"docs":{},"值":{"docs":{},"会":{"docs":{},"减":{"docs":{},"少":{"docs":{},"空":{"docs":{},"间":{"docs":{},"开":{"docs":{},"销":{"docs":{},"，":{"docs":{},"但":{"docs":{},"会":{"docs":{},"增":{"docs":{},"加":{"docs":{},"查":{"docs":{},"找":{"docs":{},"成":{"docs":{},"本":{"docs":{},"（":{"docs":{},"反":{"docs":{},"映":{"docs":{},"在":{"docs":{},"大":{"docs":{},"部":{"docs":{},"分":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}},"俗":{"docs":{},"来":{"docs":{},"讲":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"采":{"docs":{},"用":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"查":{"docs":{},"找":{"docs":{},"速":{"docs":{},"度":{"docs":{},"较":{"docs":{},"快":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}},"了":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"（":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"）":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"维":{"docs":{},"护":{"docs":{},"着":{"docs":{},"几":{"docs":{},"个":{"docs":{},"桶":{"docs":{},"（":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"）":{"docs":{},"，":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"同":{"docs":{},"时":{"docs":{},"访":{"docs":{},"问":{"docs":{},"不":{"docs":{},"同":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"上":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"使":{"docs":{},"并":{"docs":{},"发":{"docs":{},"度":{"docs":{},"更":{"docs":{},"高":{"docs":{},"（":{"docs":{},"并":{"docs":{},"发":{"docs":{},"度":{"docs":{},"就":{"docs":{},"是":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"机":{"docs":{},"制":{"docs":{},"。":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"8":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"docs":{}}}}}}}}}},"链":{"docs":{},"地":{"docs":{},"址":{"docs":{},"法":{"docs":{},"。":{"docs":{},"链":{"docs":{},"地":{"docs":{},"址":{"docs":{},"法":{"docs":{},"，":{"docs":{},"简":{"docs":{},"单":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"加":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"结":{"docs":{},"合":{"docs":{},"。":{"docs":{},"在":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"上":{"docs":{},"都":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"当":{"docs":{},"数":{"docs":{},"据":{"docs":{},"被":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"写":{"docs":{},"法":{"docs":{},"，":{"docs":{},"在":{"docs":{},"没":{"docs":{},"有":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"发":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"正":{"docs":{},"则":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"将":{"docs":{},"包":{"docs":{},"含":{"docs":{},"有":{"docs":{},"单":{"docs":{},"引":{"docs":{},"号":{"docs":{},"(":{"docs":{},"'":{"docs":{},")":{"docs":{},"、":{"docs":{},"分":{"docs":{},"号":{"docs":{},"(":{"docs":{},";":{"docs":{},")":{"docs":{},"、":{"docs":{},"注":{"docs":{},"释":{"docs":{},"符":{"docs":{},"号":{"docs":{},"（":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"取":{"docs":{},"的":{"docs":{},"是":{"docs":{},"分":{"docs":{},"代":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"，":{"docs":{},"经":{"docs":{},"常":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"放":{"docs":{},"入":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}},"限":{"docs":{},"定":{"docs":{},"了":{"docs":{},"存":{"docs":{},"储":{"docs":{},"元":{"docs":{},"素":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}}}}}}},"集":{"docs":{},"合":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"javacore/container/container-set.html":{"ref":"javacore/container/container-set.html","tf":0.002105263157894737}}}}}}}}}}},"类":{"docs":{},"都":{"docs":{},"是":{"docs":{},"快":{"docs":{},"速":{"docs":{},"失":{"docs":{},"败":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"当":{"docs":{},"集":{"docs":{},"合":{"docs":{},"被":{"docs":{},"改":{"docs":{},"变":{"docs":{},"且":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"使":{"docs":{},"用":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"集":{"docs":{},"合":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"在":{"docs":{},"互":{"docs":{},"联":{"docs":{},"网":{"docs":{},"站":{"docs":{},"或":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"q":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.02619047619047619},"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},";":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}},"。":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"docs":{}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"e":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{},"写":{"docs":{},"入":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}},"读":{"docs":{},"取":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}},"个":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"调":{"docs":{},"整":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{},"值":{"docs":{},"（":{"docs":{},"容":{"docs":{},"量":{"docs":{},"*":{"docs":{},"加":{"docs":{},"载":{"docs":{},"因":{"docs":{},"子":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}},"步":{"docs":{},"终":{"docs":{},"于":{"docs":{},"轮":{"docs":{},"到":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"面":{"docs":{},"的":{"docs":{},"几":{"docs":{},"个":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"创":{"docs":{},"建":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"示":{"docs":{},"例":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}},"图":{"docs":{},"展":{"docs":{},"示":{"docs":{},"的":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"层":{"docs":{},"次":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"称":{"docs":{},"为":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"的":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"委":{"docs":{},"派":{"docs":{},"模":{"docs":{},"型":{"docs":{},"（":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"以":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"下":{"docs":{},"几":{"docs":{},"个":{"docs":{},"就":{"docs":{},"是":{"docs":{},"控":{"docs":{},"制":{"docs":{},"并":{"docs":{},"发":{"docs":{},"用":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"器":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"各":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"说":{"docs":{},"明":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"状":{"docs":{},"态":{"docs":{},"间":{"docs":{},"的":{"docs":{},"联":{"docs":{},"系":{"docs":{},"：":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{},"不":{"docs":{},"确":{"docs":{},"定":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}},"及":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"之":{"docs":{},"前":{"docs":{},"版":{"docs":{},"本":{"docs":{},"（":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}},"上":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"代":{"docs":{},"码":{"docs":{},"和":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"是":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"前":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"后":{"docs":{},"把":{"docs":{},"原":{"docs":{},"本":{"docs":{},"放":{"docs":{},"在":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{},"移":{"docs":{},"出":{"docs":{},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"字":{"docs":{},"节":{"docs":{},"为":{"docs":{},"第":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}},"，":{"docs":{},"目":{"docs":{},"录":{"docs":{},"里":{"docs":{},"会":{"docs":{},"有":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}},"只":{"docs":{},"读":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"打":{"docs":{},"开":{"docs":{},"文":{"docs":{},"件":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}},"总":{"docs":{},"结":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}},"共":{"docs":{},"需":{"docs":{},"要":{"1":{"2":{"docs":{},"秒":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}},"4":{"docs":{},"秒":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}},"docs":{}},"docs":{}}}},"的":{"docs":{},"说":{"docs":{},"来":{"docs":{},"，":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}},"或":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}},"者":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"自":{"docs":{},"己":{"docs":{},"搭":{"docs":{},"个":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"集":{"docs":{},"群":{"docs":{},"，":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"机":{"docs":{},"器":{"docs":{},"处":{"docs":{},"理":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"“":{"docs":{},"数":{"docs":{},"据":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"区":{"docs":{},"域":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"被":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}},"导":{"docs":{},"致":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"；":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}},"搭":{"docs":{},"配":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"插":{"docs":{},"入":{"docs":{},"（":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"）":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"获":{"docs":{},"取":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"（":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"）":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"获":{"docs":{},"取":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"分":{"docs":{},"析":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"条":{"docs":{},"件":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.004761904761904762}},"运":{"docs":{},"算":{"docs":{},"：":{"docs":{},"例":{"docs":{},"如":{"docs":{},"若":{"docs":{},"没":{"docs":{},"有":{"docs":{},"则":{"docs":{},"添":{"docs":{},"加":{"docs":{},"等":{"docs":{},"；":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}},"指":{"docs":{},"令":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"是":{"docs":{},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}},"架":{"docs":{},"构":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.004761904761904762}}}},"独":{"docs":{},"占":{"docs":{},"锁":{"docs":{},"才":{"docs":{},"能":{"docs":{},"进":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}},"享":{"docs":{},"锁":{"docs":{},"/":{"docs":{},"共":{"docs":{},"享":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"是":{"docs":{},"指":{"docs":{},"该":{"docs":{},"锁":{"docs":{},"一":{"docs":{},"次":{"docs":{},"只":{"docs":{},"能":{"docs":{},"被":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"所":{"docs":{},"持":{"docs":{},"有":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}},"立":{"docs":{},"的":{"docs":{},"列":{"docs":{},"：":{"docs":{},"索":{"docs":{},"引":{"docs":{},"不":{"docs":{},"能":{"docs":{},"是":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}},"虽":{"docs":{},"然":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}},"不":{"docs":{},"是":{"docs":{},"继":{"docs":{},"承":{"docs":{},"于":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"和":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}},"解":{"docs":{},"读":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}},"决":{"docs":{},"饥":{"docs":{},"饿":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}},"方":{"docs":{},"案":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}},"析":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"目":{"docs":{},"标":{"docs":{},"是":{"docs":{},"将":{"docs":{},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{},"的":{"docs":{},"符":{"docs":{},"号":{"docs":{},"引":{"docs":{},"用":{"docs":{},"替":{"docs":{},"换":{"docs":{},"为":{"docs":{},"直":{"docs":{},"接":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}},"锁":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":5.0007142857142854}},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"获":{"docs":{},"取":{"docs":{},"了":{"docs":{},"锁":{"docs":{},"还":{"docs":{},"不":{"docs":{},"够":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"队":{"docs":{},"列":{"docs":{},"此":{"docs":{},"时":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"队":{"docs":{},"列":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"（":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"）":{"docs":{},"这":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"（":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"已":{"docs":{},"满":{"docs":{},"，":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"队":{"docs":{},"列":{"docs":{},"不":{"docs":{},"是":{"docs":{},"满":{"docs":{},"的":{"docs":{},"（":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"）":{"docs":{},"这":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"（":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"共":{"docs":{},"有":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}},"间":{"docs":{},"接":{"docs":{},"地":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"数":{"docs":{},"量":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.004761904761904762}}}}}}}},"容":{"docs":{},"量":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}},"，":{"docs":{},"其":{"docs":{},"限":{"docs":{},"制":{"docs":{},"了":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"最":{"docs":{},"多":{"docs":{},"允":{"docs":{},"许":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"；":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}}}}}}},"等":{"docs":{},"待":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"头":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}},"尾":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}},"阻":{"docs":{},"塞":{"docs":{},"等":{"docs":{},"待":{"docs":{},"此":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"成":{"docs":{},"功":{"docs":{},"或":{"docs":{},"者":{"docs":{},"超":{"docs":{},"时":{"docs":{},"指":{"docs":{},"定":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"成":{"docs":{},"功":{"docs":{},"；":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"线":{"docs":{},"程":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"状":{"docs":{},"态":{"docs":{},"等":{"docs":{},"待":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"。":{"docs":{},"处":{"docs":{},"于":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"正":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"，":{"docs":{},"以":{"docs":{},"便":{"docs":{},"在":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"不":{"docs":{},"接":{"docs":{},"受":{"docs":{},"空":{"docs":{},"值":{"docs":{},"，":{"docs":{},"当":{"docs":{},"你":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"向":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"添":{"docs":{},"加":{"docs":{},"空":{"docs":{},"值":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"它":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"都":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"查":{"docs":{},"询":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"是":{"docs":{},"原":{"docs":{},"子":{"docs":{},"的":{"docs":{},"并":{"docs":{},"且":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"内":{"docs":{},"部":{"docs":{},"锁":{"docs":{},"或":{"docs":{},"者":{"docs":{},"其":{"docs":{},"他":{"docs":{},"形":{"docs":{},"式":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"控":{"docs":{},"制":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"）":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"和":{"docs":{},"非":{"docs":{},"阻":{"docs":{},"塞":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}},"关":{"docs":{},"注":{"docs":{},"的":{"docs":{},"是":{"docs":{},"程":{"docs":{},"序":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"调":{"docs":{},"用":{"docs":{},"结":{"docs":{},"果":{"docs":{},"（":{"docs":{},"消":{"docs":{},"息":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"）":{"docs":{},"时":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},".":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"就":{"docs":{},"像":{"docs":{},"是":{"docs":{},"打":{"docs":{},"电":{"docs":{},"话":{"docs":{},"，":{"docs":{},"通":{"docs":{},"话":{"docs":{},"不":{"docs":{},"结":{"docs":{},"束":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"放":{"docs":{},"下":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"指":{"docs":{},"调":{"docs":{},"用":{"docs":{},"结":{"docs":{},"果":{"docs":{},"返":{"docs":{},"回":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"会":{"docs":{},"被":{"docs":{},"挂":{"docs":{},"起":{"docs":{},"。":{"docs":{},"调":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{},"只":{"docs":{},"有":{"docs":{},"在":{"docs":{},"得":{"docs":{},"到":{"docs":{},"结":{"docs":{},"果":{"docs":{},"之":{"docs":{},"后":{"docs":{},"才":{"docs":{},"会":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"顾":{"docs":{},"名":{"docs":{},"思":{"docs":{},"义":{"docs":{},"，":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"javacore/container/container-queue.html":{"ref":"javacore/container/container-queue.html","tf":0.002380952380952381}}}}}}}}}}}}}}},"!":{"docs":{},"=":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.012449977767896843},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002735229759299781},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.004371584699453552},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.005},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0030234315948601664},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"h":{"docs":{},",":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"&":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0026678523788350376},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"&":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.006224988883948421},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.007142857142857143}}}},"*":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.004891062694530902},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.005},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.003779289493575208},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107},"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.03755868544600939}},"/":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.008571428571428572},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.003779289493575208},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0035746201966041107},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.033707865168539325}}},"*":{"docs":{},"注":{"docs":{},"意":{"docs":{},"：":{"docs":{},"*":{"docs":{},"*":{"docs":{},"写":{"docs":{},"作":{"docs":{},"此":{"docs":{},"文":{"docs":{},"章":{"docs":{},"时":{"docs":{},"，":{"docs":{},"收":{"docs":{},"集":{"docs":{},"极":{"docs":{},"大":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"优":{"docs":{},"化":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"你":{"docs":{},"应":{"docs":{},"该":{"docs":{},"避":{"docs":{},"免":{"docs":{},"创":{"docs":{},"建":{"docs":{},"这":{"docs":{},"个":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"区":{"docs":{},"域":{"docs":{},"没":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"像":{"docs":{},"旧":{"docs":{},"的":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"一":{"docs":{},"样":{"docs":{},"是":{"docs":{},"保":{"docs":{},"持":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"1":{"docs":{},"）":{"docs":{},"初":{"docs":{},"始":{"docs":{},"标":{"docs":{},"记":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"*":{"docs":{},"*":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"2":{"docs":{},"）":{"docs":{},"g":{"1":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"docs":{}}}},"3":{"docs":{},"）":{"docs":{},"g":{"1":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"docs":{}}}},"4":{"docs":{},"）":{"docs":{},"g":{"1":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"docs":{}}}},"5":{"docs":{},"）":{"docs":{},"g":{"1":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"docs":{}}}},"docs":{}}}},";":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"?":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0026678523788350376}}},"[":{"0":{"docs":{},"x":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{},".":{"docs":{},".":{"0":{"docs":{},"x":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{},"]":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"f":{"docs":{},"b":{"5":{"docs":{},"f":{"docs":{},"d":{"7":{"9":{"8":{"docs":{},"]":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}}}}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"7":{"docs":{},"f":{"3":{"docs":{},"a":{"docs":{},"e":{"0":{"8":{"docs":{},"e":{"3":{"0":{"0":{"0":{"docs":{},"]":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}},"9":{"4":{"docs":{},"c":{"6":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"0":{"0":{"0":{"docs":{},"]":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"f":{"docs":{},"b":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"0":{"0":{"0":{"docs":{},".":{"docs":{},".":{"0":{"docs":{},"x":{"docs":{},"f":{"docs":{},"b":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"b":{"8":{"docs":{},"]":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}}}}}}}}}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}}}},"f":{"4":{"docs":{},"a":{"0":{"0":{"0":{"docs":{},".":{"docs":{},".":{"0":{"docs":{},"x":{"docs":{},"f":{"docs":{},"b":{"docs":{},"f":{"4":{"docs":{},"a":{"docs":{},"a":{"3":{"8":{"docs":{},"]":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}},"1":{"docs":{},",":{"1":{"0":{"docs":{},"]":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"高":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"会":{"docs":{},"具":{"docs":{},"有":{"docs":{},"优":{"docs":{},"先":{"docs":{},"权":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"3":{"docs":{},",":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"docs":{},"]":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"\"":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},"]":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"]":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}}},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"]":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"]":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"]":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.003526448362720403}}},"s":{"docs":{},"]":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"@":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}}},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"]":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"1":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{},")":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}},"2":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{},")":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}},"docs":{}}},"docs":{}}}}}}}}}},"2":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{},")":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}},"2":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{},")":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}},"docs":{}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"书":{"docs":{},"籍":{"docs":{},"路":{"docs":{},"径":{"docs":{},"]":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}},"电":{"docs":{},"子":{"docs":{},"书":{"docs":{},"名":{"docs":{},"称":{"docs":{},"]":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{},")":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"章":{"docs":{},"]":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"1":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{},")":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"二":{"docs":{},"章":{"docs":{},"]":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{},")":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"输":{"docs":{},"出":{"docs":{},"路":{"docs":{},"径":{"docs":{},"]":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}},"^":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}}},"x":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"值":{"docs":{},"与":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"做":{"docs":{},"&":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"取":{"docs":{},"最":{"docs":{},"后":{"docs":{},"四":{"docs":{},"位":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"值":{"docs":{},"确":{"docs":{},"定":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"+":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"开":{"docs":{},"关":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"打":{"docs":{},"开":{"docs":{},"参":{"docs":{},"数":{"docs":{},"后":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"手":{"docs":{},"工":{"docs":{},"指":{"docs":{},"定":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"（":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"m":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"s":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"g":{"1":{"docs":{},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"docs":{}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"g":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"m":{"docs":{},"s":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"g":{"docs":{},"c":{"docs":{},"s":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"g":{"docs":{},"c":{"docs":{},"p":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"=":{"1":{"5":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"\"":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"=":{"2":{"5":{"6":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}},"docs":{}},"docs":{}},"docs":{}},"参":{"docs":{},"数":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"设":{"docs":{},"置":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"要":{"docs":{},"记":{"docs":{},"住":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"当":{"docs":{},"出":{"docs":{},"现":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"错":{"docs":{},"误":{"docs":{},"时":{"docs":{},"你":{"docs":{},"才":{"docs":{},"需":{"docs":{},"要":{"docs":{},"去":{"docs":{},"设":{"docs":{},"置":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"g":{"docs":{},"c":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"c":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"）":{"docs":{},"等":{"docs":{},"细":{"docs":{},"节":{"docs":{},"参":{"docs":{},"数":{"docs":{},"了":{"docs":{},"，":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"会":{"docs":{},"根":{"docs":{},"据":{"docs":{},"当":{"docs":{},"前":{"docs":{},"系":{"docs":{},"统":{"docs":{},"的":{"docs":{},"运":{"docs":{},"行":{"docs":{},"情":{"docs":{},"况":{"docs":{},"收":{"docs":{},"集":{"docs":{},"性":{"docs":{},"能":{"docs":{},"监":{"docs":{},"控":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"动":{"docs":{},"态":{"docs":{},"调":{"docs":{},"整":{"docs":{},"这":{"docs":{},"些":{"docs":{},"参":{"docs":{},"数":{"docs":{},"以":{"docs":{},"提":{"docs":{},"供":{"docs":{},"最":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"时":{"docs":{},"间":{"docs":{},"或":{"docs":{},"者":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"称":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"大":{"docs":{},"于":{"docs":{},"此":{"docs":{},"值":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"直":{"docs":{},"接":{"docs":{},"在":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"分":{"docs":{},"配":{"docs":{},"，":{"docs":{},"避":{"docs":{},"免":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}},"e":{"docs":{},"=":{"6":{"4":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}},"docs":{}},"docs":{}},"和":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"）":{"docs":{},"、":{"docs":{},"晋":{"docs":{},"升":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"对":{"docs":{},"象":{"docs":{},"年":{"docs":{},"龄":{"docs":{},"（":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}},"=":{"4":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"docs":{}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}}}}},"m":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}},"s":{"2":{"0":{"0":{"0":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"=":{"1":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}},"docs":{}},",":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"和":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"，":{"docs":{},"即":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"x":{"2":{"0":{"0":{"0":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}},"=":{"2":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}},"docs":{}},"参":{"docs":{},"数":{"docs":{},"通":{"docs":{},"常":{"docs":{},"是":{"docs":{},"必":{"docs":{},"须":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"的":{"docs":{},"值":{"docs":{},"将":{"docs":{},"对":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"n":{"8":{"0":{"0":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}},"docs":{}},"docs":{}},"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"）":{"docs":{},"、":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}},"=":{"5":{"1":{"2":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}},"docs":{}},"docs":{}},"docs":{}}}},"n":{"docs":{},"o":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"c":{"docs":{},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"$":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"_":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"s":{"docs":{},"/":{"docs":{},"g":{"docs":{},"c":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"j":{"docs":{},"d":{"docs":{},"w":{"docs":{},"p":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"=":{"docs":{},"d":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"=":{"2":{"8":{"8":{"8":{"8":{"docs":{},",":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"docs":{},"y":{"docs":{},",":{"docs":{},"s":{"docs":{},"u":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"=":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"(":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0056134723336006415},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0032822757111597373}},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"静":{"docs":{},"态":{"docs":{},"的":{"docs":{},"？":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}}}}}},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"g":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}}},"z":{"docs":{},"\"":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"i":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0030234315948601664}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}},"y":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.003779289493575208}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"m":{"docs":{},"l":{"docs":{},"d":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{},"x":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0022675736961451248}}},",":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"|":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}},"|":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0026678523788350376},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"上":{"docs":{},"限":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}},"是":{"docs":{},"存":{"docs":{},"储":{"docs":{},"和":{"docs":{},"恢":{"docs":{},"复":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}},"例":{"docs":{},"中":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"能":{"docs":{},"同":{"docs":{},"时":{"docs":{},"（":{"docs":{},"并":{"docs":{},"发":{"docs":{},"）":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}},"图":{"docs":{},"示":{"docs":{},"意":{"docs":{},"了":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"形":{"docs":{},"。":{"docs":{},"跑":{"docs":{},"在":{"docs":{},"左":{"docs":{},"边":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"对":{"docs":{},"象":{"docs":{},"读":{"docs":{},"到":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"见":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"修":{"docs":{},"改":{"docs":{},"后":{"docs":{},"的":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"见":{"docs":{},"的":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"可":{"docs":{},"能":{"docs":{},"导":{"docs":{},"致":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"这":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"私":{"docs":{},"有":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"停":{"docs":{},"留":{"docs":{},"在":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"不":{"docs":{},"得":{"docs":{},"超":{"docs":{},"过":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"面":{"docs":{},"已":{"docs":{},"经":{"docs":{},"提":{"docs":{},"到":{"docs":{},"，":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"重":{"docs":{},"入":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"点":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"是":{"docs":{},"可":{"docs":{},"重":{"docs":{},"入":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"讲":{"docs":{},"的":{"docs":{},"独":{"docs":{},"享":{"docs":{},"锁":{"docs":{},"/":{"docs":{},"共":{"docs":{},"享":{"docs":{},"锁":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"广":{"docs":{},"义":{"docs":{},"的":{"docs":{},"说":{"docs":{},"法":{"docs":{},"，":{"docs":{},"互":{"docs":{},"斥":{"docs":{},"锁":{"docs":{},"/":{"docs":{},"读":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"就":{"docs":{},"是":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"互":{"docs":{},"斥":{"docs":{},"锁":{"docs":{},"在":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"场":{"docs":{},"了":{"docs":{},"，":{"docs":{},"它":{"docs":{},"用":{"docs":{},"来":{"docs":{},"输":{"docs":{},"出":{"docs":{},"进":{"docs":{},"程":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"花":{"docs":{},"费":{"docs":{},"过":{"docs":{},"多":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"（":{"docs":{},"超":{"docs":{},"过":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"为":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918},"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584},"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"空":{"docs":{},"则":{"docs":{},"创":{"docs":{},"建":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"。":{"docs":{},"当":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}},"，":{"docs":{},"当":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}},"什":{"docs":{},"么":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"中":{"docs":{},"在":{"docs":{},"重":{"docs":{},"写":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"后":{"docs":{},"必":{"docs":{},"须":{"docs":{},"对":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"重":{"docs":{},"写":{"docs":{},"和":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},")":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"k":{"1":{"docs":{},".":{"8":{"docs":{},"中":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"链":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{},"超":{"docs":{},"过":{"8":{"docs":{},"会":{"docs":{},"转":{"docs":{},"成":{"docs":{},"树":{"docs":{},"结":{"docs":{},"构":{"docs":{},"？":{"docs":{},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}},"用":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"?":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"重":{"docs":{},"写":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}},"用":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"？":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}}}}}}}},"线":{"docs":{},"程":{"docs":{},"通":{"docs":{},"信":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}},"了":{"docs":{},"在":{"docs":{},"新":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"执":{"docs":{},"行":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"保":{"docs":{},"证":{"docs":{},"增":{"docs":{},"加":{"docs":{},"操":{"docs":{},"作":{"docs":{},"是":{"docs":{},"原":{"docs":{},"子":{"docs":{},"的":{"docs":{},"，":{"docs":{},"在":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}},"修":{"docs":{},"正":{"docs":{},"在":{"docs":{},"并":{"docs":{},"发":{"docs":{},"标":{"docs":{},"记":{"docs":{},"期":{"docs":{},"间":{"docs":{},"因":{"docs":{},"用":{"docs":{},"户":{"docs":{},"程":{"docs":{},"序":{"docs":{},"继":{"docs":{},"续":{"docs":{},"运":{"docs":{},"作":{"docs":{},"而":{"docs":{},"导":{"docs":{},"致":{"docs":{},"标":{"docs":{},"记":{"docs":{},"产":{"docs":{},"生":{"docs":{},"变":{"docs":{},"动":{"docs":{},"的":{"docs":{},"那":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"标":{"docs":{},"记":{"docs":{},"记":{"docs":{},"录":{"docs":{},"，":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"将":{"docs":{},"这":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"对":{"docs":{},"象":{"docs":{},"变":{"docs":{},"化":{"docs":{},"记":{"docs":{},"录":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"便":{"docs":{},"于":{"docs":{},"说":{"docs":{},"明":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"为":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{},"副":{"docs":{},"本":{"docs":{},"（":{"docs":{},"即":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"在":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"都":{"docs":{},"创":{"docs":{},"建":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"副":{"docs":{},"本":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"访":{"docs":{},"问":{"docs":{},"自":{"docs":{},"己":{"docs":{},"内":{"docs":{},"部":{"docs":{},"的":{"docs":{},"副":{"docs":{},"本":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"偏":{"docs":{},"序":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"称":{"docs":{},"之":{"docs":{},"为":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"设":{"docs":{},"置":{"docs":{},"虚":{"docs":{},"引":{"docs":{},"用":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"目":{"docs":{},"的":{"docs":{},"就":{"docs":{},"是":{"docs":{},"能":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"被":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"回":{"docs":{},"收":{"docs":{},"时":{"docs":{},"收":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"系":{"docs":{},"统":{"docs":{},"通":{"docs":{},"知":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"定":{"docs":{},"义":{"docs":{},"年":{"docs":{},"龄":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"，":{"docs":{},"对":{"docs":{},"象":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"量":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"新":{"docs":{},"生":{"docs":{},"代":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"空":{"docs":{},"间":{"docs":{},"中":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"释":{"docs":{},"放":{"docs":{},"很":{"docs":{},"小":{"docs":{},"空":{"docs":{},"间":{"docs":{},"占":{"docs":{},"用":{"docs":{},"大":{"docs":{},"量":{"docs":{},"时":{"docs":{},"间":{"docs":{},"时":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"；":{"docs":{},"一":{"docs":{},"般":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"堆":{"docs":{},"太":{"docs":{},"小":{"docs":{},"，":{"docs":{},"导":{"docs":{},"致":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"足":{"docs":{},"够":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"写":{"docs":{},"；":{"docs":{},"r":{"docs":{},"w":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}},"读":{"docs":{},"；":{"docs":{},"w":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}},"读":{"docs":{},"写":{"docs":{},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}},"每":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"类":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"标":{"docs":{},"识":{"docs":{},"。":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"保":{"docs":{},"证":{"docs":{},"在":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"时":{"docs":{},"，":{"docs":{},"发":{"docs":{},"送":{"docs":{},"方":{"docs":{},"发":{"docs":{},"送":{"docs":{},"的":{"docs":{},"和":{"docs":{},"接":{"docs":{},"受":{"docs":{},"方":{"docs":{},"接":{"docs":{},"收":{"docs":{},"的":{"docs":{},"是":{"docs":{},"可":{"docs":{},"兼":{"docs":{},"容":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"接":{"docs":{},"收":{"docs":{},"方":{"docs":{},"接":{"docs":{},"收":{"docs":{},"的":{"docs":{},"类":{"docs":{},"的":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"了":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"会":{"docs":{},"根":{"docs":{},"据":{"docs":{},"当":{"docs":{},"前":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"在":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"操":{"docs":{},"作":{"docs":{},"中":{"docs":{},"会":{"docs":{},"被":{"docs":{},"删":{"docs":{},"除":{"docs":{},"，":{"docs":{},"而":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}},"让":{"docs":{},"这":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"去":{"docs":{},"执":{"docs":{},"行":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}},"去":{"docs":{},"处":{"docs":{},"理":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"。":{"docs":{},"记":{"docs":{},"住":{"docs":{},"，":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"磁":{"docs":{},"盘":{"docs":{},"读":{"docs":{},"取":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"产":{"docs":{},"生":{"docs":{},"大":{"docs":{},"量":{"docs":{},"不":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"碎":{"docs":{},"片":{"docs":{},"，":{"docs":{},"导":{"docs":{},"致":{"docs":{},"无":{"docs":{},"法":{"docs":{},"给":{"docs":{},"大":{"docs":{},"对":{"docs":{},"象":{"docs":{},"分":{"docs":{},"配":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"现":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"频":{"docs":{},"繁":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"速":{"docs":{},"度":{"docs":{},"一":{"docs":{},"般":{"docs":{},"也":{"docs":{},"会":{"docs":{},"比":{"docs":{},"较":{"docs":{},"快":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"整":{"docs":{},"个":{"docs":{},"堆":{"docs":{},"内":{"docs":{},"存":{"docs":{},"进":{"docs":{},"行":{"docs":{},"回":{"docs":{},"城":{"docs":{},"，":{"docs":{},"耗":{"docs":{},"时":{"docs":{},"长":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"一":{"docs":{},"般":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"减":{"docs":{},"少":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"定":{"docs":{},"格":{"docs":{},"式":{"docs":{},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"输":{"docs":{},"入":{"docs":{},"、":{"docs":{},"输":{"docs":{},"出":{"docs":{},"。":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}},"话":{"docs":{},"层":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"（":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}},"你":{"docs":{},"知":{"docs":{},"道":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0013339261894175188}}}},"吃":{"docs":{},"饭":{"docs":{},"吃":{"docs":{},"到":{"docs":{},"一":{"docs":{},"半":{"docs":{},"，":{"docs":{},"电":{"docs":{},"话":{"docs":{},"来":{"docs":{},"了":{"docs":{},"，":{"docs":{},"你":{"docs":{},"一":{"docs":{},"直":{"docs":{},"到":{"docs":{},"吃":{"docs":{},"完":{"docs":{},"了":{"docs":{},"以":{"docs":{},"后":{"docs":{},"才":{"docs":{},"去":{"docs":{},"接":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"说":{"docs":{},"明":{"docs":{},"你":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{},"并":{"docs":{},"发":{"docs":{},"也":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{},"并":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"边":{"docs":{},"打":{"docs":{},"电":{"docs":{},"话":{"docs":{},"一":{"docs":{},"边":{"docs":{},"吃":{"docs":{},"饭":{"docs":{},"，":{"docs":{},"这":{"docs":{},"说":{"docs":{},"明":{"docs":{},"你":{"docs":{},"支":{"docs":{},"持":{"docs":{},"并":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}},"停":{"docs":{},"了":{"docs":{},"下":{"docs":{},"来":{"docs":{},"接":{"docs":{},"了":{"docs":{},"电":{"docs":{},"话":{"docs":{},"，":{"docs":{},"接":{"docs":{},"完":{"docs":{},"后":{"docs":{},"继":{"docs":{},"续":{"docs":{},"吃":{"docs":{},"饭":{"docs":{},"，":{"docs":{},"这":{"docs":{},"说":{"docs":{},"明":{"docs":{},"你":{"docs":{},"支":{"docs":{},"持":{"docs":{},"并":{"docs":{},"发":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"互":{"docs":{},"联":{"docs":{},"网":{"docs":{},"上":{"docs":{},"搜":{"docs":{},"索":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"将":{"docs":{},"电":{"docs":{},"子":{"docs":{},"书":{"docs":{},"提":{"docs":{},"交":{"docs":{},"到":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"监":{"docs":{},"控":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"使":{"docs":{},"用":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.004201680672268907},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}},"了":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"这":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"机":{"docs":{},"制":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"并":{"docs":{},"发":{"docs":{},"更":{"docs":{},"新":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"核":{"docs":{},"心":{"docs":{},"类":{"docs":{},"为":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"从":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"获":{"docs":{},"取":{"docs":{},"该":{"docs":{},"索":{"docs":{},"引":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"处":{"docs":{},"理":{"docs":{},"异":{"docs":{},"步":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{},"通":{"docs":{},"常":{"docs":{},"我":{"docs":{},"们":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}},"它":{"docs":{},"的":{"docs":{},"目":{"docs":{},"的":{"docs":{},"是":{"docs":{},"：":{"docs":{},"当":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}},"协":{"docs":{},"程":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}},"最":{"docs":{},"少":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}},"锁":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}},"更":{"docs":{},"广":{"docs":{},"泛":{"docs":{},"的":{"docs":{},"子":{"docs":{},"类":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"其":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{},"管":{"docs":{},"理":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"可":{"docs":{},"跟":{"docs":{},"踪":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{},"异":{"docs":{},"步":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"状":{"docs":{},"况":{"docs":{},"返":{"docs":{},"回":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"复":{"docs":{},"制":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"的":{"docs":{},"是":{"docs":{},"启":{"docs":{},"动":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"，":{"docs":{},"而":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"。":{"docs":{},"正":{"docs":{},"因":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}},"（":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"）":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}},"命":{"docs":{},"令":{"docs":{},"动":{"docs":{},"态":{"docs":{},"查":{"docs":{},"看":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"默":{"docs":{},"认":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"在":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"，":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"会":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"当":{"docs":{},"前":{"docs":{},"对":{"docs":{},"象":{"docs":{},"本":{"docs":{},"身":{"docs":{},"，":{"docs":{},"还":{"docs":{},"会":{"docs":{},"对":{"docs":{},"其":{"docs":{},"父":{"docs":{},"类":{"docs":{},"的":{"docs":{},"字":{"docs":{},"段":{"docs":{},"以":{"docs":{},"及":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"其":{"docs":{},"它":{"docs":{},"对":{"docs":{},"象":{"docs":{},"也":{"docs":{},"进":{"docs":{},"行":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"。":{"docs":{},"同":{"docs":{},"样":{"docs":{},"地":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"其":{"docs":{},"它":{"docs":{},"对":{"docs":{},"象":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"另":{"docs":{},"外":{"docs":{},"对":{"docs":{},"象":{"docs":{},"也":{"docs":{},"将":{"docs":{},"被":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"，":{"docs":{},"以":{"docs":{},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"是":{"docs":{},"容":{"docs":{},"器":{"docs":{},"类":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"而":{"docs":{},"这":{"docs":{},"些":{"docs":{},"容":{"docs":{},"器":{"docs":{},"所":{"docs":{},"含":{"docs":{},"有":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"也":{"docs":{},"是":{"docs":{},"容":{"docs":{},"器":{"docs":{},"类":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"这":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"就":{"docs":{},"会":{"docs":{},"较":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"，":{"docs":{},"开":{"docs":{},"销":{"docs":{},"也":{"docs":{},"较":{"docs":{},"大":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"分":{"docs":{},"析":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"框":{"docs":{},"架":{"docs":{},"的":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"注":{"docs":{},"入":{"docs":{},"防":{"docs":{},"范":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"（":{"docs":{},"预":{"docs":{},"处":{"docs":{},"理":{"docs":{},"执":{"docs":{},"行":{"docs":{},"语":{"docs":{},"句":{"docs":{},"）":{"docs":{},"，":{"docs":{},"它":{"docs":{},"内":{"docs":{},"置":{"docs":{},"了":{"docs":{},"处":{"docs":{},"理":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"注":{"docs":{},"入":{"docs":{},"的":{"docs":{},"能":{"docs":{},"力":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"对":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"语":{"docs":{},"句":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"询":{"docs":{},"参":{"docs":{},"数":{"docs":{},"化":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"方":{"docs":{},"法":{"docs":{},"传":{"docs":{},"值":{"docs":{},"即":{"docs":{},"可":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"辅":{"docs":{},"助":{"docs":{},"索":{"docs":{},"引":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"先":{"docs":{},"获":{"docs":{},"取":{"docs":{},"主":{"docs":{},"键":{"docs":{},"值":{"docs":{},"，":{"docs":{},"再":{"docs":{},"到":{"docs":{},"主":{"docs":{},"索":{"docs":{},"引":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"只":{"docs":{},"被":{"docs":{},"软":{"docs":{},"引":{"docs":{},"用":{"docs":{},"关":{"docs":{},"联":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}},"得":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"保":{"docs":{},"存":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"缓":{"docs":{},"存":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"的":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"采":{"docs":{},"用":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}},"对":{"docs":{},"象":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}},"证":{"docs":{},"了":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"不":{"docs":{},"同":{"docs":{},"线":{"docs":{},"程":{"docs":{},"对":{"docs":{},"这":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"进":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"的":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"，":{"docs":{},"即":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"修":{"docs":{},"改":{"docs":{},"了":{"docs":{},"某":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"这":{"docs":{},"新":{"docs":{},"值":{"docs":{},"对":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"来":{"docs":{},"说":{"docs":{},"是":{"docs":{},"立":{"docs":{},"即":{"docs":{},"可":{"docs":{},"见":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"性":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}},"留":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"内":{"docs":{},"存":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"做":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"异":{"docs":{},"或":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"段":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}},"处":{"docs":{},"理":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"自":{"docs":{},"动":{"docs":{},"删":{"docs":{},"除":{"docs":{},"（":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}},"决":{"docs":{},"定":{"docs":{},"了":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"对":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"写":{"docs":{},"入":{"docs":{},"何":{"docs":{},"时":{"docs":{},"对":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"见":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"为":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"一":{"docs":{},"般":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"化":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}},"加":{"docs":{},"载":{"docs":{},"因":{"docs":{},"子":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"容":{"docs":{},"量":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"；":{"docs":{},"以":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"分":{"docs":{},"段":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"的":{"docs":{},"值":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"则":{"docs":{},"创":{"docs":{},"建":{"docs":{},"默":{"docs":{},"认":{"docs":{},"容":{"docs":{},"量":{"docs":{},"的":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"创":{"docs":{},"建":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"的":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"；":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"机":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"固":{"docs":{},"定":{"docs":{},"数":{"docs":{},"量":{"docs":{},"的":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.004016064257028112}}}}}}},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}},"阶":{"docs":{},"段":{"docs":{},"才":{"docs":{},"真":{"docs":{},"正":{"docs":{},"开":{"docs":{},"始":{"docs":{},"执":{"docs":{},"行":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}},"电":{"docs":{},"子":{"docs":{},"书":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}},"目":{"docs":{},"录":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}},"时":{"docs":{},"，":{"docs":{},"在":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"堆":{"docs":{},"空":{"docs":{},"间":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"大":{"docs":{},"小":{"docs":{},",":{"docs":{},"x":{"docs":{},"m":{"docs":{},"x":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"标":{"docs":{},"记":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"短":{"docs":{},"暂":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"的":{"docs":{},"、":{"docs":{},"可":{"docs":{},"达":{"docs":{},"对":{"docs":{},"象":{"docs":{},"被":{"docs":{},"标":{"docs":{},"记":{"docs":{},"的":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"只":{"docs":{},"是":{"docs":{},"标":{"docs":{},"记":{"docs":{},"一":{"docs":{},"下":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"加":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}},"载":{"docs":{},"因":{"docs":{},"子":{"docs":{},"是":{"docs":{},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"在":{"docs":{},"其":{"docs":{},"容":{"docs":{},"量":{"docs":{},"自":{"docs":{},"动":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"之":{"docs":{},"前":{"docs":{},"被":{"docs":{},"允":{"docs":{},"许":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"饱":{"docs":{},"和":{"docs":{},"量":{"docs":{},"。":{"docs":{},"当":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"、":{"docs":{},"验":{"docs":{},"证":{"docs":{},"、":{"docs":{},"准":{"docs":{},"备":{"docs":{},"、":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"和":{"docs":{},"卸":{"docs":{},"载":{"docs":{},"这":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}},"是":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"不":{"docs":{},"要":{"docs":{},"混":{"docs":{},"淆":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}},"过":{"docs":{},"程":{"docs":{},"完":{"docs":{},"成":{"docs":{},"以":{"docs":{},"下":{"docs":{},"三":{"docs":{},"件":{"docs":{},"事":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}},"（":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"）":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}},"锁":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"便":{"docs":{},"是":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"节":{"docs":{},"点":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"结":{"docs":{},"构":{"docs":{},"的":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"快":{"docs":{},"表":{"docs":{},"与":{"docs":{},"表":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"连":{"docs":{},"接":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}},"占":{"docs":{},"用":{"docs":{},"程":{"docs":{},"度":{"docs":{},"已":{"docs":{},"经":{"docs":{},"超":{"docs":{},"过":{"docs":{},"了":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"变":{"docs":{},"为":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"量":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"来":{"docs":{},"统":{"docs":{},"计":{"docs":{},"该":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"控":{"docs":{},"制":{"docs":{},"是":{"docs":{},"否":{"docs":{},"需":{"docs":{},"要":{"docs":{},"停":{"docs":{},"止":{"docs":{},"任":{"docs":{},"务":{"docs":{},"并":{"docs":{},"终":{"docs":{},"止":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"键":{"docs":{},"值":{"docs":{},"，":{"docs":{},"以":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"，":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"随":{"docs":{},"后":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.005747126436781609}}}},"能":{"docs":{},"够":{"docs":{},"支":{"docs":{},"持":{"docs":{},"原":{"docs":{},"子":{"docs":{},"的":{"docs":{},"和":{"docs":{},"有":{"docs":{},"条":{"docs":{},"件":{"docs":{},"的":{"docs":{},"读":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}},"上":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"束":{"docs":{},"后":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}},"的":{"docs":{},"值":{"docs":{},"应":{"docs":{},"该":{"docs":{},"等":{"docs":{},"于":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}},"修":{"docs":{},"改":{"docs":{},"为":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}},"读":{"docs":{},"/":{"docs":{},"写":{"docs":{},"和":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}},"写":{"docs":{},"入":{"docs":{},"操":{"docs":{},"作":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"对":{"docs":{},"该":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"之":{"docs":{},"前":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.005747126436781609}}},"修":{"docs":{},"饰":{"docs":{},"符":{"docs":{},"使":{"docs":{},"用":{"docs":{},"恰":{"docs":{},"当":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"它":{"docs":{},"比":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}},"规":{"docs":{},"则":{"docs":{},"：":{"docs":{},"对":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}},"用":{"docs":{},"来":{"docs":{},"保":{"docs":{},"证":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"；":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}},"只":{"docs":{},"有":{"docs":{},"在":{"docs":{},"构":{"docs":{},"建":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"等":{"docs":{},"待":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"对":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"一":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"当":{"docs":{},"对":{"docs":{},"一":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"执":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"循":{"docs":{},"环":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"来":{"docs":{},"保":{"docs":{},"证":{"docs":{},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"对":{"docs":{},"多":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"循":{"docs":{},"环":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"就":{"docs":{},"无":{"docs":{},"法":{"docs":{},"保":{"docs":{},"证":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"候":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"取":{"docs":{},"巧":{"docs":{},"的":{"docs":{},"办":{"docs":{},"法":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"把":{"docs":{},"多":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"合":{"docs":{},"并":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"来":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"i":{"docs":{},"＝":{"2":{"docs":{},",":{"docs":{},"j":{"docs":{},"=":{"docs":{},"a":{"docs":{},"，":{"docs":{},"合":{"docs":{},"并":{"docs":{},"一":{"docs":{},"下":{"docs":{},"i":{"docs":{},"j":{"docs":{},"=":{"2":{"docs":{},"a":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"用":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"来":{"docs":{},"操":{"docs":{},"作":{"docs":{},"i":{"docs":{},"j":{"docs":{},"。":{"docs":{},"从":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"1":{"docs":{},".":{"5":{"docs":{},"开":{"docs":{},"始":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"类":{"docs":{},"来":{"docs":{},"保":{"docs":{},"证":{"docs":{},"引":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"，":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"多":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"放":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"里":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"是":{"docs":{},"将":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"设":{"docs":{},"置":{"docs":{},"成":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}},"要":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}},"被":{"docs":{},"执":{"docs":{},"行":{"docs":{},"到":{"docs":{},"就":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"内":{"docs":{},"存":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"列":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}},"回":{"docs":{},"收":{"docs":{},"时":{"docs":{},"。":{"docs":{},"在":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"，":{"docs":{},"系":{"docs":{},"统":{"docs":{},"可":{"docs":{},"以":{"docs":{},"检":{"docs":{},"测":{"docs":{},"到":{"docs":{},"该":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}},"的":{"docs":{},"弱":{"docs":{},"键":{"docs":{},"。":{"docs":{},"实":{"docs":{},"现":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"是":{"docs":{},"：":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"；":{"docs":{},"同":{"docs":{},"步":{"docs":{},"它":{"docs":{},"们":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"删":{"docs":{},"除":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}},"该":{"docs":{},"弱":{"docs":{},"键":{"docs":{},"时":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"弱":{"docs":{},"键":{"docs":{},"也":{"docs":{},"同":{"docs":{},"时":{"docs":{},"会":{"docs":{},"被":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"实":{"docs":{},"际":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"详":{"docs":{},"细":{"docs":{},"步":{"docs":{},"骤":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0025210084033613447}}}}}}}},"轻":{"docs":{},"代":{"docs":{},"详":{"docs":{},"细":{"docs":{},"步":{"docs":{},"骤":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0025210084033613447}}}}}}}}},"机":{"docs":{},"制":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0025210084033613447}}}},"前":{"docs":{},"后":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"变":{"docs":{},"化":{"docs":{},"；":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}},"永":{"docs":{},"久":{"docs":{},"区":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"变":{"docs":{},"化":{"docs":{},"。":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"g":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"变":{"docs":{},"化":{"docs":{},"；":{"docs":{},"p":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}},"器":{"docs":{},"选":{"docs":{},"择":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}},"日":{"docs":{},"志":{"docs":{},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}},"写":{"docs":{},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"值":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{},"到":{"docs":{},"内":{"docs":{},"存":{"docs":{},".":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}},"3":{"docs":{},")":{"docs":{},"到":{"docs":{},"内":{"docs":{},"存":{"docs":{},".":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}},"docs":{}}}}}}},"调":{"docs":{},"方":{"docs":{},"法":{"docs":{},"完":{"docs":{},"成":{"docs":{},"时":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"处":{"docs":{},"于":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}},"尝":{"docs":{},"试":{"docs":{},"次":{"docs":{},"数":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"使":{"docs":{},"用":{"docs":{},"定":{"docs":{},"时":{"docs":{},"锁":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}},"获":{"docs":{},"取":{"docs":{},"共":{"docs":{},"享":{"docs":{},"锁":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}},"很":{"docs":{},"大":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"能":{"docs":{},"够":{"docs":{},"比":{"docs":{},"较":{"docs":{},"理":{"docs":{},"想":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"在":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"的":{"docs":{},"速":{"docs":{},"度":{"docs":{},"显":{"docs":{},"然":{"docs":{},"是":{"docs":{},"影":{"docs":{},"响":{"docs":{},"速":{"docs":{},"度":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"似":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}},"显":{"docs":{},"然":{"docs":{},"，":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"少":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"执":{"docs":{},"行":{"docs":{},"速":{"docs":{},"度":{"docs":{},"会":{"docs":{},"比":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"怎":{"docs":{},"么":{"docs":{},"理":{"docs":{},"解":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"例":{"docs":{},"如":{"docs":{},"我":{"docs":{},"们":{"docs":{},"从":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"用":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"写":{"docs":{},"书":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":10.004694835680752}}}}}}}}},"样":{"docs":{},"计":{"docs":{},"算":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"算":{"docs":{},"法":{"docs":{},")":{"docs":{},"？":{"docs":{},"根":{"docs":{},"据":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"计":{"docs":{},"算":{"docs":{},"数":{"docs":{},"组":{"docs":{},"下":{"docs":{},"标":{"docs":{},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"现":{"docs":{},"在":{"docs":{},"可":{"docs":{},"以":{"docs":{},"回":{"docs":{},"答":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"几":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"加":{"docs":{},"深":{"docs":{},"对":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"作":{"docs":{},"为":{"docs":{},"键":{"docs":{},"吗":{"docs":{},"？":{"docs":{},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}}}}}}},"找":{"docs":{},"出":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"已":{"docs":{},"经":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"了":{"docs":{},"它":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"调":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}},"当":{"docs":{},"然":{"docs":{},"希":{"docs":{},"望":{"docs":{},"这":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"里":{"docs":{},"面":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"位":{"docs":{},"置":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"的":{"docs":{},"分":{"docs":{},"布":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"些":{"docs":{},"，":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"使":{"docs":{},"得":{"docs":{},"每":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"数":{"docs":{},"量":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"当":{"docs":{},"我":{"docs":{},"们":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"算":{"docs":{},"法":{"docs":{},"求":{"docs":{},"得":{"docs":{},"这":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"马":{"docs":{},"上":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"知":{"docs":{},"道":{"docs":{},"对":{"docs":{},"应":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"就":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"用":{"docs":{},"再":{"docs":{},"去":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"链":{"docs":{},"表":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"常":{"docs":{},"常":{"docs":{},"做":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}},"仍":{"docs":{},"然":{"docs":{},"通":{"docs":{},"过":{"docs":{},"采":{"docs":{},"取":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"源":{"docs":{},"码":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"来":{"docs":{},"学":{"docs":{},"习":{"docs":{},"底":{"docs":{},"层":{"docs":{},"具":{"docs":{},"体":{"docs":{},"是":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}},"不":{"docs":{},"妨":{"docs":{},"做":{"docs":{},"一":{"docs":{},"个":{"docs":{},"小":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"：":{"docs":{},"将":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}},"将":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}},"来":{"docs":{},"举":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}},"基":{"docs":{},"于":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}},"按":{"docs":{},"照":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"进":{"docs":{},"行":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"，":{"docs":{},"搜":{"docs":{},"到":{"docs":{},"返":{"docs":{},"回":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}},"顺":{"docs":{},"序":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"预":{"docs":{},"防":{"docs":{},"机":{"docs":{},"制":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"需":{"docs":{},"要":{"docs":{},"你":{"docs":{},"事":{"docs":{},"先":{"docs":{},"知":{"docs":{},"道":{"docs":{},"所":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"用":{"docs":{},"到":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"(":{"docs":{},"译":{"docs":{},"者":{"docs":{},"注":{"docs":{},"：":{"docs":{},"并":{"docs":{},"对":{"docs":{},"这":{"docs":{},"些":{"docs":{},"锁":{"docs":{},"做":{"docs":{},"适":{"docs":{},"当":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},")":{"docs":{},"，":{"docs":{},"但":{"docs":{},"总":{"docs":{},"有":{"docs":{},"些":{"docs":{},"时":{"docs":{},"候":{"docs":{},"是":{"docs":{},"无":{"docs":{},"法":{"docs":{},"预":{"docs":{},"知":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}},"失":{"docs":{},"败":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{},"内":{"docs":{},"置":{"docs":{},"锁":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"的":{"docs":{},"重":{"docs":{},"试":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"时":{"docs":{},"先":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"不":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"连":{"docs":{},"续":{"docs":{},"两":{"docs":{},"次":{"docs":{},"不":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"操":{"docs":{},"作":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"一":{"docs":{},"致":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"可":{"docs":{},"以":{"docs":{},"认":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"结":{"docs":{},"果":{"docs":{},"是":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"所":{"docs":{},"有":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"来":{"docs":{},"支":{"docs":{},"持":{"docs":{},"更":{"docs":{},"高":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"度":{"docs":{},"，":{"docs":{},"在":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}},"，":{"docs":{},"并":{"docs":{},"允":{"docs":{},"许":{"docs":{},"使":{"docs":{},"用":{"docs":{},"空":{"docs":{},"值":{"docs":{},"和":{"docs":{},"空":{"docs":{},"键":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"如":{"docs":{},"果":{"docs":{},"成":{"docs":{},"功":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"重":{"docs":{},"试":{"docs":{},"直":{"docs":{},"到":{"docs":{},"成":{"docs":{},"功":{"docs":{},"为":{"docs":{},"止":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"想":{"docs":{},"要":{"docs":{},"非":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"地":{"docs":{},"完":{"docs":{},"成":{"docs":{},"某":{"docs":{},"一":{"docs":{},"操":{"docs":{},"作":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"考":{"docs":{},"虑":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"次":{"docs":{},"从":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"读":{"docs":{},"取":{"docs":{},"数":{"docs":{},"据":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"此":{"docs":{},"数":{"docs":{},"据":{"docs":{},"和":{"docs":{},"+":{"1":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}},"docs":{}}}}}}}}}}}}}}}}}}},"直":{"docs":{},"到":{"docs":{},"成":{"docs":{},"功":{"docs":{},"为":{"docs":{},"止":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"结":{"docs":{},"果":{"docs":{},"都":{"docs":{},"会":{"docs":{},"直":{"docs":{},"接":{"docs":{},"刷":{"docs":{},"到":{"docs":{},"主":{"docs":{},"存":{"docs":{},"中":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"也":{"docs":{},"使":{"docs":{},"得":{"docs":{},"先":{"docs":{},"获":{"docs":{},"得":{"docs":{},"这":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"都":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}},"编":{"docs":{},"译":{"docs":{},"为":{"docs":{},"底":{"docs":{},"层":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"最":{"docs":{},"有":{"docs":{},"效":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"在":{"docs":{},"支":{"docs":{},"持":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}},"？":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}},"将":{"docs":{},"节":{"docs":{},"点":{"docs":{},"插":{"docs":{},"入":{"docs":{},"队":{"docs":{},"列":{"docs":{},"尾":{"docs":{},"部":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"成":{"docs":{},"功":{"docs":{},"为":{"docs":{},"止":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}},"参":{"docs":{},"数":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"系":{"docs":{},"统":{"docs":{},"下":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"的":{"docs":{},"加":{"docs":{},"载":{"docs":{},"因":{"docs":{},"子":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"新":{"docs":{},"建":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"容":{"docs":{},"量":{"docs":{},"=":{"docs":{},"旧":{"docs":{},"容":{"docs":{},"量":{"2":{"docs":{},"；":{"docs":{},"默":{"docs":{},"认":{"docs":{},"旧":{"docs":{},"容":{"docs":{},"量":{"docs":{},"=":{"1":{"6":{"0":{"docs":{},".":{"7":{"5":{"docs":{},"=":{"1":{"2":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"docs":{}}}}}}},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"=":{"docs":{},"旧":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}},"生":{"docs":{},"代":{"docs":{},"（":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"g":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}},"内":{"docs":{},"存":{"docs":{},"大":{"docs":{},"小":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"和":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"比":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"空":{"docs":{},"间":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"大":{"docs":{},"小":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"增":{"docs":{},"错":{"docs":{},"误":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"当":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"时":{"docs":{},"会":{"docs":{},"移":{"docs":{},"除":{"docs":{},"最":{"docs":{},"晚":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"首":{"docs":{},"部":{"docs":{},"节":{"docs":{},"点":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"是":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"：":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"，":{"docs":{},"两":{"docs":{},"步":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"会":{"docs":{},"先":{"docs":{},"同":{"docs":{},"步":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"其":{"docs":{},"实":{"docs":{},"散":{"docs":{},"列":{"docs":{},"真":{"docs":{},"正":{"docs":{},"生":{"docs":{},"效":{"docs":{},"的":{"docs":{},"只":{"docs":{},"是":{"docs":{},"低":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"变":{"docs":{},"化":{"docs":{},"如":{"docs":{},"下":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"发":{"docs":{},"现":{"docs":{},"目":{"docs":{},"前":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"该":{"docs":{},"类":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"键":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"来":{"docs":{},"帮":{"docs":{},"助":{"docs":{},"断":{"docs":{},"开":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"读":{"docs":{},"到":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"会":{"docs":{},"引":{"docs":{},"发":{"docs":{},"错":{"docs":{},"误":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{},"线":{"docs":{},"程":{"docs":{},"检":{"docs":{},"测":{"docs":{},"到":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}},"后":{"docs":{},"继":{"docs":{},"节":{"docs":{},"点":{"docs":{},"会":{"docs":{},"被":{"docs":{},"挂":{"docs":{},"起":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"在":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"或":{"docs":{},"被":{"docs":{},"取":{"docs":{},"消":{"docs":{},"之":{"docs":{},"后":{"docs":{},"必":{"docs":{},"须":{"docs":{},"被":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},"其":{"docs":{},"后":{"docs":{},"继":{"docs":{},"结":{"docs":{},"点":{"docs":{},".":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"控":{"docs":{},"制":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"大":{"docs":{},"量":{"docs":{},"线":{"docs":{},"程":{"docs":{},"同":{"docs":{},"时":{"docs":{},"运":{"docs":{},"行":{"docs":{},"，":{"docs":{},"很":{"docs":{},"有":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"系":{"docs":{},"统":{"docs":{},"瘫":{"docs":{},"痪":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"间":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}},"一":{"docs":{},"旦":{"docs":{},"我":{"docs":{},"们":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"并":{"docs":{},"启":{"docs":{},"动":{"docs":{},"它":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"便":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"度":{"docs":{},"器":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"片":{"docs":{},"是":{"docs":{},"指":{"docs":{},"将":{"docs":{},"可":{"docs":{},"用":{"docs":{},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}},"配":{"docs":{},"给":{"docs":{},"可":{"docs":{},"用":{"docs":{},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}},"可":{"docs":{},"以":{"docs":{},"基":{"docs":{},"于":{"docs":{},"线":{"docs":{},"程":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"或":{"docs":{},"者":{"docs":{},"线":{"docs":{},"程":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"度":{"docs":{},"并":{"docs":{},"不":{"docs":{},"受":{"docs":{},"到":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"片":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"运":{"docs":{},"行":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"用":{"docs":{},"于":{"docs":{},"等":{"docs":{},"待":{"docs":{},"磁":{"docs":{},"盘":{"docs":{},"去":{"docs":{},"读":{"docs":{},"取":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"在":{"docs":{},"这":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"里":{"docs":{},"，":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"尽":{"docs":{},"快":{"docs":{},"完":{"docs":{},"成":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"运":{"docs":{},"算":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"主":{"docs":{},"要":{"docs":{},"适":{"docs":{},"合":{"docs":{},"在":{"docs":{},"后":{"docs":{},"台":{"docs":{},"运":{"docs":{},"算":{"docs":{},"而":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"太":{"docs":{},"多":{"docs":{},"交":{"docs":{},"互":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"引":{"docs":{},"起":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"最":{"docs":{},"长":{"docs":{},"的":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"返":{"docs":{},"回":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}},"能":{"docs":{},"够":{"docs":{},"将":{"docs":{},"内":{"docs":{},"存":{"docs":{},"进":{"docs":{},"行":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}},"（":{"docs":{},"即":{"docs":{},"线":{"docs":{},"程":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"时":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{},"）":{"docs":{},"，":{"docs":{},"代":{"docs":{},"码":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"开":{"docs":{},"启":{"docs":{},"内":{"docs":{},"存":{"docs":{},"碎":{"docs":{},"片":{"docs":{},"的":{"docs":{},"合":{"docs":{},"并":{"docs":{},"整":{"docs":{},"理":{"docs":{},"，":{"docs":{},"内":{"docs":{},"存":{"docs":{},"整":{"docs":{},"理":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"是":{"docs":{},"无":{"docs":{},"法":{"docs":{},"并":{"docs":{},"发":{"docs":{},"的":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"碎":{"docs":{},"片":{"docs":{},"问":{"docs":{},"题":{"docs":{},"没":{"docs":{},"有":{"docs":{},"了":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"时":{"docs":{},"间":{"docs":{},"不":{"docs":{},"得":{"docs":{},"不":{"docs":{},"变":{"docs":{},"长":{"docs":{},"了":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"浮":{"docs":{},"动":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"过":{"docs":{},"多":{"docs":{},"导":{"docs":{},"致":{"docs":{},"暂":{"docs":{},"时":{"docs":{},"性":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"不":{"docs":{},"足":{"docs":{},"触":{"docs":{},"发":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}},"才":{"docs":{},"能":{"docs":{},"进":{"docs":{},"行":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"浮":{"docs":{},"动":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"的":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"需":{"docs":{},"要":{"docs":{},"预":{"docs":{},"留":{"docs":{},"出":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"都":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"碎":{"docs":{},"片":{"docs":{},"整":{"docs":{},"理":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"堆":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"就":{"docs":{},"会":{"docs":{},"被":{"docs":{},"放":{"docs":{},"到":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"最":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"是":{"docs":{},"以":{"docs":{},"下":{"docs":{},"用":{"docs":{},"于":{"docs":{},"维":{"docs":{},"护":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"会":{"docs":{},"在":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}},"，":{"docs":{},"调":{"docs":{},"用":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"记":{"docs":{},"录":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"中":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"在":{"docs":{},"重":{"docs":{},"新":{"docs":{},"标":{"docs":{},"记":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"，":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"在":{"docs":{},"之":{"docs":{},"前":{"docs":{},"并":{"docs":{},"发":{"docs":{},"标":{"docs":{},"记":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"中":{"docs":{},"丢":{"docs":{},"失":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"搭":{"docs":{},"配":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"一":{"docs":{},"起":{"docs":{},"使":{"docs":{},"用":{"docs":{},"时":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"书":{"docs":{},"籍":{"docs":{},"根":{"docs":{},"目":{"docs":{},"录":{"docs":{},"下":{"docs":{},"执":{"docs":{},"行":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}},"坏":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"：":{"docs":{},"第":{"docs":{},"三":{"docs":{},"次":{"docs":{},"计":{"docs":{},"算":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"更":{"docs":{},"新":{"docs":{},"次":{"docs":{},"数":{"docs":{},"和":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"也":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"则":{"docs":{},"只":{"docs":{},"能":{"docs":{},"先":{"docs":{},"对":{"docs":{},"所":{"docs":{},"有":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"再":{"docs":{},"计":{"docs":{},"算":{"docs":{},"最":{"docs":{},"后":{"docs":{},"解":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"容":{"docs":{},"量":{"docs":{},"时":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"r":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"，":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"。":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{},"是":{"docs":{},"引":{"docs":{},"入":{"docs":{},"分":{"docs":{},"区":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"，":{"docs":{},"弱":{"docs":{},"化":{"docs":{},"了":{"docs":{},"分":{"docs":{},"代":{"docs":{},"的":{"docs":{},"概":{"docs":{},"念":{"docs":{},"，":{"docs":{},"合":{"docs":{},"理":{"docs":{},"利":{"docs":{},"用":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"各":{"docs":{},"个":{"docs":{},"周":{"docs":{},"期":{"docs":{},"的":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"解":{"docs":{},"决":{"docs":{},"了":{"docs":{},"其":{"docs":{},"他":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"甚":{"docs":{},"至":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"存":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"可":{"docs":{},"用":{"docs":{},"内":{"docs":{},"存":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"关":{"docs":{},"键":{"docs":{},"的":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"：":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"同":{"docs":{},"时":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{},"为":{"docs":{},"用":{"docs":{},"于":{"docs":{},"解":{"docs":{},"决":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"连":{"docs":{},"接":{"docs":{},"、":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}},"好":{"docs":{},"说":{"docs":{},"下":{"docs":{},"如":{"docs":{},"果":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"排":{"docs":{},"查":{"docs":{},"？":{"docs":{},"如":{"docs":{},"何":{"docs":{},"看":{"docs":{},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"文":{"docs":{},"件":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-interview.html":{"ref":"javacore/jvm/jvm-interview.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"做":{"docs":{},"法":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}},"终":{"docs":{},"标":{"docs":{},"记":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"内":{"docs":{},"存":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"近":{"docs":{},"晋":{"docs":{},"升":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"以":{"docs":{},"深":{"docs":{},"蓝":{"docs":{},"色":{"docs":{},"显":{"docs":{},"示":{"docs":{},"在":{"docs":{},"上":{"docs":{},"图":{"docs":{},"中":{"docs":{},"，":{"docs":{},"绿":{"docs":{},"色":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"幸":{"docs":{},"免":{"docs":{},"的":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"晋":{"docs":{},"升":{"docs":{},"到":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"显":{"docs":{},"示":{"docs":{},"为":{"docs":{},"深":{"docs":{},"蓝":{"docs":{},"色":{"docs":{},"。":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"区":{"docs":{},"域":{"docs":{},"显":{"docs":{},"示":{"docs":{},"为":{"docs":{},"绿":{"docs":{},"色":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"高":{"docs":{},"的":{"docs":{},"进":{"docs":{},"程":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"未":{"docs":{},"命":{"docs":{},"中":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"示":{"docs":{},"例":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}},"发":{"docs":{},"送":{"docs":{},"而":{"docs":{},"接":{"docs":{},"收":{"docs":{},"方":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"已":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}},"次":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"幂":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"扩":{"docs":{},"展":{"docs":{},"(":{"docs":{},"指":{"docs":{},"长":{"docs":{},"度":{"docs":{},"扩":{"docs":{},"为":{"docs":{},"原":{"docs":{},"来":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}},"，":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"数":{"docs":{},"越":{"docs":{},"多":{"docs":{},"，":{"docs":{},"f":{"docs":{},"g":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"重":{"docs":{},"复":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}},"比":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}},"较":{"docs":{},"小":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"也":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"到":{"docs":{},"高":{"docs":{},"低":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}},"花":{"docs":{},"费":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}},"如":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"比":{"docs":{},"较":{"docs":{},"成":{"docs":{},"功":{"docs":{},"后":{"docs":{},"，":{"docs":{},"准":{"docs":{},"备":{"docs":{},"更":{"docs":{},"新":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"值":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"值":{"docs":{},"被":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"更":{"docs":{},"改":{"docs":{},"了":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"函":{"docs":{},"数":{"docs":{},"必":{"docs":{},"须":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"满":{"docs":{},"了":{"docs":{},"(":{"docs":{},"超":{"docs":{},"过":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"然":{"docs":{},"后":{"docs":{},"把":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"重":{"docs":{},"置":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"的":{"docs":{},"值":{"docs":{},"为":{"0":{"docs":{},".":{"7":{"5":{"docs":{},"n":{"docs":{},"，":{"docs":{},"即":{"docs":{},"当":{"docs":{},"前":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"容":{"docs":{},"量":{"docs":{},"的":{"0":{"docs":{},".":{"7":{"5":{"docs":{},"倍":{"docs":{},"，":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"完":{"docs":{},"成":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}},"，":{"docs":{},"在":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"中":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"元":{"docs":{},"素":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"节":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{},"小":{"docs":{},"于":{"6":{"docs":{},"，":{"docs":{},"则":{"docs":{},"会":{"docs":{},"触":{"docs":{},"发":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"结":{"docs":{},"构":{"docs":{},"转":{"docs":{},"换":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}},"在":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"里":{"docs":{},"面":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"副":{"docs":{},"本":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}},"来":{"docs":{},"看":{"docs":{},"看":{"docs":{},"+":{"docs":{},"+":{"docs":{},"i":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"了":{"docs":{},"这":{"docs":{},"句":{"docs":{},"：":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}},"根":{"docs":{},"据":{"docs":{},"输":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{},"到":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"安":{"docs":{},"装":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}},"而":{"docs":{},"，":{"docs":{},"两":{"docs":{},"次":{"docs":{},"增":{"docs":{},"加":{"docs":{},"都":{"docs":{},"是":{"docs":{},"在":{"docs":{},"没":{"docs":{},"有":{"docs":{},"适":{"docs":{},"当":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"下":{"docs":{},"并":{"docs":{},"发":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"。":{"docs":{},"无":{"docs":{},"论":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"现":{"docs":{},"在":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"来":{"docs":{},"支":{"docs":{},"持":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"效":{"docs":{},"率":{"docs":{},"会":{"docs":{},"更":{"docs":{},"高":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"引":{"docs":{},"入":{"docs":{},"了":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"等":{"docs":{},"于":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}}}},"的":{"docs":{},"商":{"docs":{},"业":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"都":{"docs":{},"采":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"收":{"docs":{},"集":{"docs":{},"算":{"docs":{},"法":{"docs":{},"来":{"docs":{},"回":{"docs":{},"收":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"将":{"docs":{},"内":{"docs":{},"存":{"docs":{},"划":{"docs":{},"分":{"docs":{},"为":{"docs":{},"大":{"docs":{},"小":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"两":{"docs":{},"块":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"分":{"docs":{},"为":{"docs":{},"一":{"docs":{},"块":{"docs":{},"较":{"docs":{},"大":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"采":{"docs":{},"用":{"docs":{},"分":{"docs":{},"代":{"docs":{},"收":{"docs":{},"集":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"它":{"docs":{},"根":{"docs":{},"据":{"docs":{},"对":{"docs":{},"象":{"docs":{},"存":{"docs":{},"活":{"docs":{},"周":{"docs":{},"期":{"docs":{},"将":{"docs":{},"内":{"docs":{},"存":{"docs":{},"划":{"docs":{},"分":{"docs":{},"为":{"docs":{},"几":{"docs":{},"块":{"docs":{},"，":{"docs":{},"不":{"docs":{},"同":{"docs":{},"块":{"docs":{},"采":{"docs":{},"用":{"docs":{},"适":{"docs":{},"当":{"docs":{},"的":{"docs":{},"收":{"docs":{},"集":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"调":{"docs":{},"度":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"单":{"docs":{},"元":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"也":{"docs":{},"叫":{"docs":{},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"进":{"docs":{},"程":{"docs":{},"（":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}},"硬":{"docs":{},"件":{"docs":{},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{},"与":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}},"直":{"docs":{},"接":{"docs":{},"命":{"docs":{},"中":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"内":{"docs":{},"存":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.015748031496062992}}}},"设":{"docs":{},"置":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{},"（":{"docs":{},"值":{"docs":{},"为":{"docs":{},"大":{"docs":{},"于":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"指":{"docs":{},"向":{"docs":{},"目":{"docs":{},"标":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"、":{"docs":{},"相":{"docs":{},"对":{"docs":{},"偏":{"docs":{},"移":{"docs":{},"量":{"docs":{},"或":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"能":{"docs":{},"间":{"docs":{},"接":{"docs":{},"定":{"docs":{},"位":{"docs":{},"到":{"docs":{},"目":{"docs":{},"标":{"docs":{},"的":{"docs":{},"句":{"docs":{},"柄":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}},"示":{"docs":{},"例":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.002142857142857143},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.006024096385542169}},"：":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0038910505836575876},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.01232394366197183},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.006802721088435374}},"j":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}},"接":{"docs":{},"受":{"docs":{},"控":{"docs":{},"制":{"docs":{},"台":{"docs":{},"输":{"docs":{},"入":{"docs":{},"信":{"docs":{},"息":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}},"重":{"docs":{},"定":{"docs":{},"向":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804}}}}}},"中":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}},"如":{"docs":{},"下":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"上":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}},"意":{"docs":{},"图":{"docs":{},"：":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"累":{"docs":{},"计":{"docs":{},"起":{"docs":{},"来":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}},"缓":{"docs":{},"存":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"：":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"中":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}},"再":{"docs":{},"想":{"docs":{},"象":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}},"它":{"docs":{},"甚":{"docs":{},"至":{"docs":{},"可":{"docs":{},"能":{"docs":{},"将":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"中":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"内":{"docs":{},"容":{"docs":{},"读":{"docs":{},"到":{"docs":{},"它":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"中":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"中":{"docs":{},"执":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"当":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"然":{"docs":{},"后":{"docs":{},"修":{"docs":{},"改":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"只":{"docs":{},"要":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}},"现":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}},"一":{"docs":{},"次":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}},"和":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"某":{"docs":{},"一":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"局":{"docs":{},"部":{"docs":{},"写":{"docs":{},"到":{"docs":{},"它":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"，":{"docs":{},"和":{"docs":{},"在":{"docs":{},"某":{"docs":{},"一":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"局":{"docs":{},"部":{"docs":{},"刷":{"docs":{},"新":{"docs":{},"它":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{},"它":{"docs":{},"不":{"docs":{},"会":{"docs":{},"再":{"docs":{},"某":{"docs":{},"一":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"读":{"docs":{},"/":{"docs":{},"写":{"docs":{},"整":{"docs":{},"个":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"。":{"docs":{},"通":{"docs":{},"常":{"docs":{},"，":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"被":{"docs":{},"称":{"docs":{},"作":{"docs":{},"“":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"层":{"docs":{},"。":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"，":{"docs":{},"绝":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"的":{"docs":{},"现":{"docs":{},"代":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"刷":{"docs":{},"新":{"docs":{},"会":{"docs":{},"主":{"docs":{},"存":{"docs":{},"，":{"docs":{},"对":{"docs":{},"象":{"docs":{},"修":{"docs":{},"改":{"docs":{},"后":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"对":{"docs":{},"跑":{"docs":{},"在":{"docs":{},"其":{"docs":{},"它":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"复":{"docs":{},"查":{"docs":{},"询":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"存":{"docs":{},"在":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}},"若":{"docs":{},"为":{"docs":{},"树":{"docs":{},"，":{"docs":{},"则":{"docs":{},"在":{"docs":{},"树":{"docs":{},"中":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"则":{"docs":{},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}},"刚":{"docs":{},"才":{"docs":{},"读":{"docs":{},"取":{"docs":{},"到":{"docs":{},"的":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"值":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"中":{"docs":{},"的":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"值":{"docs":{},"相":{"docs":{},"等":{"docs":{},"时":{"docs":{},"才":{"docs":{},"更":{"docs":{},"新":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"重":{"docs":{},"试":{"docs":{},"更":{"docs":{},"新":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"更":{"docs":{},"新":{"docs":{},"成":{"docs":{},"功":{"docs":{},"。":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"范":{"docs":{},"围":{"docs":{},"在":{"docs":{},"高":{"docs":{},"位":{"docs":{},"多":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}},"计":{"docs":{},"算":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0017785682525566918}},"新":{"docs":{},"的":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"大":{"docs":{},"小":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"趣":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"他":{"docs":{},"是":{"docs":{},"并":{"docs":{},"发":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"在":{"docs":{},"你":{"docs":{},"计":{"docs":{},"算":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"他":{"docs":{},"还":{"docs":{},"在":{"docs":{},"并":{"docs":{},"发":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"你":{"docs":{},"计":{"docs":{},"算":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"和":{"docs":{},"你":{"docs":{},"实":{"docs":{},"际":{"docs":{},"的":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"有":{"docs":{},"相":{"docs":{},"差":{"docs":{},"（":{"docs":{},"在":{"docs":{},"你":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"就":{"docs":{},"要":{"docs":{},"防":{"docs":{},"止":{"docs":{},"键":{"docs":{},"值":{"docs":{},"改":{"docs":{},"变":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"键":{"docs":{},"值":{"docs":{},"在":{"docs":{},"放":{"docs":{},"入":{"docs":{},"时":{"docs":{},"和":{"docs":{},"获":{"docs":{},"取":{"docs":{},"时":{"docs":{},"返":{"docs":{},"回":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"不":{"docs":{},"能":{"docs":{},"从":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"你":{"docs":{},"想":{"docs":{},"要":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"，":{"docs":{},"即":{"docs":{},"调":{"docs":{},"用":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"计":{"docs":{},"算":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"；":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"过":{"docs":{},"程":{"docs":{},"是":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"：":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}},"机":{"docs":{},"网":{"docs":{},"络":{"docs":{},"分":{"docs":{},"层":{"docs":{},"一":{"docs":{},"般":{"docs":{},"有":{"docs":{},"三":{"docs":{},"种":{"docs":{},"划":{"docs":{},"分":{"docs":{},"体":{"docs":{},"系":{"docs":{},"：":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}},"如":{"docs":{},"何":{"docs":{},"分":{"docs":{},"层":{"docs":{},"？":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}}}}}}}}}},"数":{"docs":{},"增":{"docs":{},"加":{"1":{"docs":{},"，":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"触":{"docs":{},"发":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"操":{"docs":{},"作":{"docs":{},"(":{"docs":{},"扩":{"docs":{},"容":{"docs":{},")":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"设":{"docs":{},"定":{"docs":{},"最":{"docs":{},"大":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}},"置":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"为":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"空":{"docs":{},"，":{"docs":{},"a":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"/":{"docs":{},"获":{"docs":{},"取":{"docs":{},"线":{"docs":{},"程":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"名":{"docs":{},"称":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"休":{"docs":{},"眠":{"docs":{},"时":{"docs":{},"间":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"线":{"docs":{},"程":{"docs":{},"名":{"docs":{},"称":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"则":{"docs":{},"说":{"docs":{},"明":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"成":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"比":{"docs":{},"较":{"docs":{},"大":{"docs":{},"的":{"docs":{},"值":{"docs":{},"（":{"docs":{},"比":{"docs":{},"如":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"不":{"docs":{},"断":{"docs":{},"尝":{"docs":{},"试":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"状":{"docs":{},"态":{"docs":{},"位":{"docs":{},"为":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"冒":{"docs":{},"险":{"docs":{},"，":{"docs":{},"那":{"docs":{},"这":{"docs":{},"时":{"docs":{},"也":{"docs":{},"要":{"docs":{},"改":{"docs":{},"为":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"允":{"docs":{},"许":{"docs":{},"担":{"docs":{},"保":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"允":{"docs":{},"许":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"会":{"docs":{},"继":{"docs":{},"续":{"docs":{},"检":{"docs":{},"查":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"最":{"docs":{},"大":{"docs":{},"可":{"docs":{},"用":{"docs":{},"的":{"docs":{},"连":{"docs":{},"续":{"docs":{},"空":{"docs":{},"间":{"docs":{},"是":{"docs":{},"否":{"docs":{},"大":{"docs":{},"于":{"docs":{},"历":{"docs":{},"次":{"docs":{},"晋":{"docs":{},"升":{"docs":{},"到":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"大":{"docs":{},"于":{"docs":{},"，":{"docs":{},"将":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"着":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"停":{"docs":{},"顿":{"docs":{},"标":{"docs":{},"识":{"docs":{},"，":{"docs":{},"待":{"docs":{},"所":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"进":{"docs":{},"入":{"docs":{},"安":{"docs":{},"全":{"docs":{},"点":{"docs":{},"（":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"）":{"docs":{},"时":{"docs":{},"，":{"docs":{},"应":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"，":{"docs":{},"串":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"示":{"docs":{},"例":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"计":{"docs":{},"者":{"docs":{},"认":{"docs":{},"为":{"docs":{},"这":{"docs":{},"方":{"docs":{},"法":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"发":{"docs":{},"生":{"docs":{},"碰":{"docs":{},"撞":{"docs":{},"。":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"这":{"docs":{},"么":{"docs":{},"说":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"不":{"docs":{},"妨":{"docs":{},"思":{"docs":{},"考":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"在":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"备":{"docs":{},"尚":{"docs":{},"未":{"docs":{},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"发":{"docs":{},"出":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}},"短":{"docs":{},"了":{"docs":{},"，":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"可":{"docs":{},"能":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"丢":{"docs":{},"就":{"docs":{},"重":{"docs":{},"发":{"docs":{},"。":{"docs":{},"于":{"docs":{},"是":{"docs":{},"重":{"docs":{},"发":{"docs":{},"的":{"docs":{},"就":{"docs":{},"快":{"docs":{},"，":{"docs":{},"会":{"docs":{},"增":{"docs":{},"加":{"docs":{},"网":{"docs":{},"络":{"docs":{},"拥":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"导":{"docs":{},"致":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"超":{"docs":{},"时":{"docs":{},"，":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"超":{"docs":{},"时":{"docs":{},"导":{"docs":{},"致":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"重":{"docs":{},"发":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"长":{"docs":{},"了":{"docs":{},"，":{"docs":{},"重":{"docs":{},"发":{"docs":{},"就":{"docs":{},"慢":{"docs":{},"，":{"docs":{},"丢":{"docs":{},"了":{"docs":{},"老":{"docs":{},"半":{"docs":{},"天":{"docs":{},"才":{"docs":{},"重":{"docs":{},"发":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"效":{"docs":{},"率":{"docs":{},"，":{"docs":{},"性":{"docs":{},"能":{"docs":{},"差":{"docs":{},"；":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"该":{"docs":{},"表":{"docs":{},"在":{"docs":{},"初":{"docs":{},"次":{"docs":{},"使":{"docs":{},"用":{"docs":{},"时":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"并":{"docs":{},"根":{"docs":{},"据":{"docs":{},"需":{"docs":{},"要":{"docs":{},"调":{"docs":{},"整":{"docs":{},"大":{"docs":{},"小":{"docs":{},"。":{"docs":{},"分":{"docs":{},"配":{"docs":{},"时":{"docs":{},"，":{"docs":{},"长":{"docs":{},"度":{"docs":{},"总":{"docs":{},"是":{"2":{"docs":{},"的":{"docs":{},"幂":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"为":{"docs":{},"树":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"链":{"docs":{},"表":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}},"方":{"docs":{},"法":{"docs":{},"既":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"其":{"docs":{},"他":{"docs":{},"同":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"或":{"docs":{},"者":{"docs":{},"高":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"得":{"docs":{},"到":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"机":{"docs":{},"会":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"低":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"得":{"docs":{},"到":{"docs":{},"执":{"docs":{},"行":{"docs":{},"机":{"docs":{},"会":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{},"没":{"docs":{},"有":{"docs":{},"包":{"docs":{},"含":{"docs":{},"在":{"docs":{},"具":{"docs":{},"有":{"docs":{},"其":{"docs":{},"他":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"不":{"docs":{},"变":{"docs":{},"式":{"docs":{},"中":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}},"等":{"docs":{},"待":{"docs":{},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"处":{"docs":{},"于":{"docs":{},"共":{"docs":{},"享":{"docs":{},"模":{"docs":{},"式":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"独":{"docs":{},"占":{"docs":{},"模":{"docs":{},"式":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"能":{"docs":{},"由":{"docs":{},"于":{"docs":{},"超":{"docs":{},"时":{"docs":{},"或":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{},"而":{"docs":{},"处":{"docs":{},"于":{"docs":{},"被":{"docs":{},"取":{"docs":{},"消":{"docs":{},"(":{"docs":{},"作":{"docs":{},"废":{"docs":{},")":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"处":{"docs":{},"于":{"docs":{},"这":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"节":{"docs":{},"点":{"docs":{},"状":{"docs":{},"态":{"docs":{},"将":{"docs":{},"一":{"docs":{},"直":{"docs":{},"处":{"docs":{},"于":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"处":{"docs":{},"于":{"docs":{},"等":{"docs":{},"待":{"docs":{},"条":{"docs":{},"件":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"当":{"docs":{},"作":{"docs":{},"是":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"上":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},",":{"docs":{},"直":{"docs":{},"到":{"docs":{},"被":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},"，":{"docs":{},"设":{"docs":{},"置":{"docs":{},"其":{"docs":{},"值":{"docs":{},"为":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"区":{"docs":{},"域":{"docs":{},"可":{"docs":{},"能":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"以":{"docs":{},"下":{"docs":{},"异":{"docs":{},"常":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}},"类":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"都":{"docs":{},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}},"超":{"docs":{},"过":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"就":{"docs":{},"不":{"docs":{},"再":{"docs":{},"扩":{"docs":{},"充":{"docs":{},"了":{"docs":{},"，":{"docs":{},"就":{"docs":{},"只":{"docs":{},"好":{"docs":{},"随":{"docs":{},"你":{"docs":{},"碰":{"docs":{},"撞":{"docs":{},"去":{"docs":{},"吧":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"时":{"docs":{},"间":{"docs":{},"结":{"docs":{},"束":{"docs":{},"，":{"docs":{},"仍":{"docs":{},"未":{"docs":{},"获":{"docs":{},"得":{"docs":{},"锁":{"docs":{},"返":{"docs":{},"回":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}},"重":{"docs":{},"传":{"docs":{},"机":{"docs":{},"制":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"是":{"docs":{},"指":{"docs":{},"：":{"docs":{},"发":{"docs":{},"送":{"docs":{},"数":{"docs":{},"据":{"docs":{},"包":{"docs":{},"在":{"docs":{},"一":{"docs":{},"定":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"周":{"docs":{},"期":{"docs":{},"内":{"docs":{},"没":{"docs":{},"有":{"docs":{},"收":{"docs":{},"到":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"是":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}},"会":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"内":{"docs":{},"存":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"，":{"docs":{},"内":{"docs":{},"存":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"指":{"docs":{},"令":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"所":{"docs":{},"有":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"可":{"docs":{},"以":{"docs":{},"利":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"有":{"docs":{},"多":{"docs":{},"层":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"，":{"docs":{},"但":{"docs":{},"这":{"docs":{},"些":{"docs":{},"对":{"docs":{},"理":{"docs":{},"解":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}},"核":{"docs":{},"。":{"docs":{},"从":{"docs":{},"这":{"docs":{},"一":{"docs":{},"点":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"，":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"或":{"docs":{},"者":{"docs":{},"多":{"docs":{},"个":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"扩":{"docs":{},"容":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"以":{"docs":{},"当":{"docs":{},"前":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"检":{"docs":{},"查":{"docs":{},"时":{"docs":{},"会":{"docs":{},"发":{"docs":{},"现":{"docs":{},"它":{"docs":{},"的":{"docs":{},"值":{"docs":{},"没":{"docs":{},"有":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"却":{"docs":{},"变":{"docs":{},"化":{"docs":{},"了":{"docs":{},"。":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"了":{"docs":{},"同":{"docs":{},"步":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"而":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}},"，":{"docs":{},"它":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"是":{"docs":{},"继":{"docs":{},"承":{"docs":{},"于":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}},"入":{"docs":{},"队":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"核":{"docs":{},"心":{"docs":{},"方":{"docs":{},"法":{"docs":{},"在":{"docs":{},"于":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"先":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}},"原":{"docs":{},"子":{"docs":{},"更":{"docs":{},"新":{"docs":{},"时":{"docs":{},"可":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"，":{"docs":{},"还":{"docs":{},"可":{"docs":{},"能":{"docs":{},"立":{"docs":{},"即":{"docs":{},"创":{"docs":{},"建":{"docs":{},"新":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"来":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}},"监":{"docs":{},"控":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"读":{"docs":{},"或":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"，":{"docs":{},"当":{"docs":{},"读":{"docs":{},"取":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{},"被":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"类":{"docs":{},"的":{"docs":{},"无":{"docs":{},"参":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"去":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"；":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"将":{"docs":{},"被":{"docs":{},"保":{"docs":{},"存":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"字":{"docs":{},"段":{"docs":{},"的":{"docs":{},"值":{"docs":{},"分":{"docs":{},"别":{"docs":{},"填":{"docs":{},"充":{"docs":{},"到":{"docs":{},"新":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"。":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"在":{"docs":{},"此":{"docs":{},"次":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"输":{"docs":{},"入":{"docs":{},"输":{"docs":{},"出":{"docs":{},"。":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}},"程":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"和":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}},"关":{"docs":{},"系":{"docs":{},"及":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"体":{"docs":{},"，":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"独":{"docs":{},"立":{"docs":{},"的":{"docs":{},"资":{"docs":{},"源":{"docs":{},"；":{"docs":{},"而":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"进":{"docs":{},"程":{"docs":{},"中":{"docs":{},"的":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"共":{"docs":{},"享":{"docs":{},"进":{"docs":{},"程":{"docs":{},"的":{"docs":{},"资":{"docs":{},"源":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"具":{"docs":{},"有":{"docs":{},"一":{"docs":{},"定":{"docs":{},"独":{"docs":{},"立":{"docs":{},"功":{"docs":{},"能":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"关":{"docs":{},"于":{"docs":{},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"合":{"docs":{},"上":{"docs":{},"的":{"docs":{},"一":{"docs":{},"次":{"docs":{},"运":{"docs":{},"行":{"docs":{},"活":{"docs":{},"动":{"docs":{},"。":{"docs":{},"进":{"docs":{},"程":{"docs":{},"是":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"进":{"docs":{},"行":{"docs":{},"资":{"docs":{},"源":{"docs":{},"分":{"docs":{},"配":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"单":{"docs":{},"位":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"不":{"docs":{},"会":{"docs":{},"消":{"docs":{},"失":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"此":{"docs":{},"时":{"docs":{},"可":{"docs":{},"以":{"docs":{},"设":{"docs":{},"置":{"docs":{},"一":{"docs":{},"个":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"即":{"docs":{},"使":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"束":{"docs":{},"了":{"docs":{},"，":{"docs":{},"此":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"依":{"docs":{},"然":{"docs":{},"会":{"docs":{},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"最":{"docs":{},"耗":{"docs":{},"费":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"挂":{"docs":{},"起":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"制":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"数":{"docs":{},"字":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"获":{"docs":{},"取":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}},"里":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"命":{"docs":{},"中":{"docs":{},"；":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}},"；":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"面":{"docs":{},"查":{"docs":{},"找":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"最":{"docs":{},"终":{"docs":{},"标":{"docs":{},"记":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}},"长":{"docs":{},"度":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}},"比":{"docs":{},"较":{"docs":{},"小":{"docs":{},"时":{"docs":{},")":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"引":{"docs":{},"起":{"docs":{},"的":{"docs":{},"碰":{"docs":{},"撞":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"在":{"docs":{},"每":{"docs":{},"次":{"docs":{},"访":{"docs":{},"问":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"移":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"，":{"docs":{},"保":{"docs":{},"证":{"docs":{},"链":{"docs":{},"表":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"是":{"docs":{},"最":{"docs":{},"近":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"链":{"docs":{},"表":{"docs":{},"首":{"docs":{},"部":{"docs":{},"就":{"docs":{},"是":{"docs":{},"最":{"docs":{},"近":{"docs":{},"最":{"docs":{},"久":{"docs":{},"未":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"；":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"首":{"docs":{},"先":{"docs":{},"根":{"docs":{},"据":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"会":{"docs":{},"判":{"docs":{},"断":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"其":{"docs":{},"小":{"docs":{},"于":{"0":{"docs":{},"，":{"docs":{},"则":{"docs":{},"说":{"docs":{},"明":{"docs":{},"其":{"docs":{},"正":{"docs":{},"在":{"docs":{},"进":{"docs":{},"行":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"或":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"则":{"docs":{},"不":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"何":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"调":{"docs":{},"用":{"docs":{},"y":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"使":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"返":{"docs":{},"回":{"docs":{},"等":{"docs":{},"待":{"docs":{},"状":{"docs":{},"态":{"docs":{},"；":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"检":{"docs":{},"查":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"是":{"docs":{},"否":{"docs":{},"大":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"为":{"6":{"4":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"小":{"docs":{},"于":{"docs":{},"该":{"docs":{},"值":{"docs":{},"，":{"docs":{},"则":{"docs":{},"表":{"docs":{},"示":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"将":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"在":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"中":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"添":{"docs":{},"加":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"节":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"8":{"docs":{},"，":{"docs":{},"则":{"docs":{},"会":{"docs":{},"触":{"docs":{},"发":{"docs":{},"链":{"docs":{},"表":{"docs":{},"向":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"结":{"docs":{},"构":{"docs":{},"转":{"docs":{},"换":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}},"声":{"docs":{},"明":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"为":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}},"要":{"docs":{},"知":{"docs":{},"道":{"docs":{},"有":{"docs":{},"三":{"docs":{},"种":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"毫":{"docs":{},"无":{"docs":{},"疑":{"docs":{},"问":{"docs":{},"，":{"docs":{},"在":{"docs":{},"没":{"docs":{},"有":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"机":{"docs":{},"制":{"docs":{},"下":{"docs":{},"可":{"docs":{},"能":{"docs":{},"需":{"docs":{},"要":{"docs":{},"借":{"docs":{},"助":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"设":{"docs":{},"置":{"docs":{},"成":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}},"对":{"docs":{},"各":{"docs":{},"个":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}},"加":{"docs":{},"载":{"docs":{},"因":{"docs":{},"子":{"0":{"docs":{},".":{"7":{"5":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.0008892841262783459}},"；":{"docs":{},"以":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}}},"docs":{}},"docs":{}}},"docs":{}}}}},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"级":{"docs":{},"别":{"docs":{},"为":{"1":{"6":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"默":{"docs":{},"认":{"docs":{},"创":{"docs":{},"建":{"1":{"6":{"docs":{},"个":{"docs":{"javacore/container/container-map.html":{"ref":"javacore/container/container-map.html","tf":0.00044464206313917296}}}},"docs":{}},"docs":{}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"初":{"docs":{},"始":{"docs":{},"容":{"docs":{},"量":{"docs":{},"为":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}},"化":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"是":{"docs":{},"没":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"提":{"docs":{},"交":{"docs":{},"任":{"docs":{},"务":{"docs":{},"之":{"docs":{},"后":{"docs":{},"才":{"docs":{},"会":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"机":{"docs":{},"制":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}},"值":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"导":{"docs":{},"致":{"docs":{},"在":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"时":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}},"安":{"docs":{},"装":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}},"–":{"docs":{},">":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.005366726296958855}}}},"举":{"docs":{},"例":{"docs":{},"：":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}},"行":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"表":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"和":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}},"乐":{"docs":{},"观":{"docs":{},"锁":{"docs":{},"：":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}},"认":{"docs":{},"为":{"docs":{},"数":{"docs":{},"据":{"docs":{},"一":{"docs":{},"般":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"不":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"在":{"docs":{},"数":{"docs":{},"据":{"docs":{},"进":{"docs":{},"行":{"docs":{},"提":{"docs":{},"交":{"docs":{},"更":{"docs":{},"新":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"才":{"docs":{},"会":{"docs":{},"正":{"docs":{},"式":{"docs":{},"对":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"与":{"docs":{},"否":{"docs":{},"进":{"docs":{},"行":{"docs":{},"检":{"docs":{},"测":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"发":{"docs":{},"现":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"了":{"docs":{},"，":{"docs":{},"则":{"docs":{},"让":{"docs":{},"用":{"docs":{},"户":{"docs":{},"返":{"docs":{},"回":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{},"让":{"docs":{},"用":{"docs":{},"户":{"docs":{},"决":{"docs":{},"定":{"docs":{},"如":{"docs":{},"何":{"docs":{},"去":{"docs":{},"做":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"悲":{"docs":{},"观":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"与":{"docs":{},"悲":{"docs":{},"观":{"docs":{},"锁":{"docs":{},"不":{"docs":{},"是":{"docs":{},"指":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"什":{"docs":{},"么":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"指":{"docs":{},"看":{"docs":{},"待":{"docs":{},"并":{"docs":{},"发":{"docs":{},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"角":{"docs":{},"度":{"docs":{},"。":{"docs":{},"悲":{"docs":{},"观":{"docs":{},"锁":{"docs":{},"认":{"docs":{},"为":{"docs":{},"对":{"docs":{},"于":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"，":{"docs":{},"哪":{"docs":{},"怕":{"docs":{},"没":{"docs":{},"有":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"也":{"docs":{},"会":{"docs":{},"认":{"docs":{},"为":{"docs":{},"修":{"docs":{},"改":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"对":{"docs":{},"于":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"悲":{"docs":{},"观":{"docs":{},"锁":{"docs":{},"采":{"docs":{},"取":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"。":{"docs":{},"悲":{"docs":{},"观":{"docs":{},"的":{"docs":{},"认":{"docs":{},"为":{"docs":{},"，":{"docs":{},"不":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"操":{"docs":{},"作":{"docs":{},"一":{"docs":{},"定":{"docs":{},"会":{"docs":{},"出":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"乐":{"docs":{},"观":{"docs":{},"锁":{"docs":{},"则":{"docs":{},"认":{"docs":{},"为":{"docs":{},"对":{"docs":{},"于":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"是":{"docs":{},"不":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"。":{"docs":{},"在":{"docs":{},"更":{"docs":{},"新":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"会":{"docs":{},"采":{"docs":{},"用":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"更":{"docs":{},"新":{"docs":{},"，":{"docs":{},"不":{"docs":{},"断":{"docs":{},"重":{"docs":{},"新":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"更":{"docs":{},"新":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"乐":{"docs":{},"观":{"docs":{},"的":{"docs":{},"认":{"docs":{},"为":{"docs":{},"，":{"docs":{},"不":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"操":{"docs":{},"作":{"docs":{},"是":{"docs":{},"没":{"docs":{},"有":{"docs":{},"事":{"docs":{},"情":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"例":{"docs":{},"如":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"等":{"docs":{},"于":{"1":{"6":{"docs":{},"，":{"docs":{},"则":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"=":{"1":{"6":{"docs":{},",":{"docs":{},"s":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"=":{"4":{"docs":{},"，":{"docs":{},"则":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"为":{"2":{"8":{"docs":{},",":{"docs":{},"。":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"=":{"1":{"5":{"docs":{},";":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"3":{"2":{"docs":{},"位":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"向":{"docs":{},"右":{"docs":{},"移":{"docs":{},"动":{"2":{"8":{"docs":{},"位":{"docs":{},"就":{"docs":{},"变":{"docs":{},"成":{"docs":{},"这":{"docs":{},"个":{"docs":{},"样":{"docs":{},"子":{"docs":{},"：":{"0":{"0":{"0":{"0":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"子":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.008379888268156424}},"：":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"，":{"docs":{},"了":{"docs":{},"解":{"docs":{},"如":{"docs":{},"何":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"周":{"docs":{},"期":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}},"学":{"docs":{},"习":{"docs":{},"如":{"docs":{},"何":{"docs":{},"使":{"docs":{},"用":{"docs":{},"它":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}},"修":{"docs":{},"改":{"docs":{},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}},"为":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}},"后":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"写":{"docs":{},"回":{"docs":{},"到":{"docs":{},"主":{"docs":{},"存":{"docs":{},"中":{"docs":{},"取":{"docs":{},"，":{"docs":{},"修":{"docs":{},"改":{"docs":{},"后":{"docs":{},"的":{"docs":{},"值":{"docs":{},"仅":{"docs":{},"会":{"docs":{},"被":{"docs":{},"原":{"docs":{},"值":{"docs":{},"大":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}},"了":{"docs":{},"对":{"docs":{},"象":{"docs":{},"！":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}}}}}}}}},"饰":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"具":{"docs":{},"备":{"docs":{},"了":{"docs":{},"两":{"docs":{},"层":{"docs":{},"语":{"docs":{},"义":{"docs":{},"：":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"每":{"docs":{},"次":{"docs":{},"只":{"docs":{},"允":{"docs":{},"许":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"只":{"docs":{},"允":{"docs":{},"许":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"试":{"docs":{},"图":{"docs":{},"访":{"docs":{},"问":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"只":{"docs":{},"能":{"docs":{},"等":{"docs":{},"待":{"docs":{},"。":{"docs":{},"显":{"docs":{},"然":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"比":{"docs":{},"没":{"docs":{},"有":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"或":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"被":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"这":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"也":{"docs":{},"只":{"docs":{},"能":{"docs":{},"等":{"docs":{},"待":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"准":{"docs":{},"备":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"为":{"docs":{},"类":{"docs":{},"变":{"docs":{},"量":{"docs":{},"分":{"docs":{},"配":{"docs":{},"内":{"docs":{},"存":{"docs":{},"并":{"docs":{},"设":{"docs":{},"置":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"方":{"docs":{},"法":{"docs":{},"区":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"、":{"docs":{},"已":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"把":{"docs":{},"结":{"docs":{},"果":{"docs":{},"放":{"docs":{},"入":{"docs":{},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"字":{"docs":{},"段":{"docs":{},"除":{"docs":{},"外":{"docs":{},"）":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"；":{"docs":{},"以":{"docs":{},"及":{"docs":{},"调":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"后":{"docs":{},"插":{"docs":{},"入":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}},"插":{"docs":{},"入":{"docs":{},"后":{"docs":{},"扩":{"docs":{},"容":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"检":{"docs":{},"查":{"docs":{},"类":{"docs":{},"是":{"docs":{},"否":{"docs":{},"已":{"docs":{},"经":{"docs":{},"加":{"docs":{},"载":{"docs":{},"过":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"则":{"docs":{},"让":{"docs":{},"父":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"去":{"docs":{},"加":{"docs":{},"载":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}},"测":{"docs":{},"自":{"docs":{},"己":{"docs":{},"电":{"docs":{},"脑":{"docs":{},"是":{"docs":{},"否":{"docs":{},"安":{"docs":{},"装":{"docs":{},"了":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}},"其":{"docs":{},"为":{"0":{"docs":{},"时":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"还":{"docs":{},"未":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}},"docs":{}},"他":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"则":{"docs":{},"直":{"docs":{},"接":{"docs":{},"向":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"中":{"docs":{},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"这":{"docs":{},"个":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"链":{"docs":{},"表":{"docs":{},"或":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"通":{"docs":{},"过":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"都":{"docs":{},"是":{"docs":{},"以":{"docs":{},"关":{"docs":{},"注":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"时":{"docs":{},"间":{"docs":{},"为":{"docs":{},"目":{"docs":{},"标":{"docs":{},"，":{"docs":{},"而":{"docs":{},"并":{"docs":{},"行":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"是":{"docs":{},"以":{"docs":{},"关":{"docs":{},"注":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"（":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"）":{"docs":{},"为":{"docs":{},"目":{"docs":{},"标":{"docs":{},"的":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"容":{"docs":{},"略":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.012511170688114389}}}}}},"中":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"以":{"docs":{},"下":{"docs":{},"方":{"docs":{},"式":{"docs":{},"中":{"docs":{},"获":{"docs":{},"取":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"]":{"docs":{},"、":{"docs":{},"[":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"参":{"docs":{},"数":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"写":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}},"度":{"docs":{},"量":{"docs":{},"标":{"docs":{},"准":{"docs":{},"是":{"docs":{},"缩":{"docs":{},"短":{"docs":{},"由":{"docs":{},"于":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"啊":{"docs":{},"收":{"docs":{},"集":{"docs":{},"引":{"docs":{},"起":{"docs":{},"的":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"时":{"docs":{},"间":{"docs":{},"或":{"docs":{},"者":{"docs":{},"完":{"docs":{},"全":{"docs":{},"消":{"docs":{},"除":{"docs":{},"因":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"所":{"docs":{},"引":{"docs":{},"起":{"docs":{},"的":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"，":{"docs":{},"避":{"docs":{},"免":{"docs":{},"应":{"docs":{},"用":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"发":{"docs":{},"生":{"docs":{},"抖":{"docs":{},"动":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"冲":{"docs":{},"突":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"开":{"docs":{},"放":{"docs":{},"地":{"docs":{},"址":{"docs":{},"法":{"docs":{},"和":{"docs":{},"链":{"docs":{},"地":{"docs":{},"址":{"docs":{},"法":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"检":{"docs":{},"测":{"docs":{},"和":{"docs":{},"数":{"docs":{},"据":{"docs":{},"更":{"docs":{},"新":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"否":{"docs":{},"启":{"docs":{},"动":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686}}}},"是":{"docs":{},"文":{"docs":{},"件":{"docs":{},"夹":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}},"线":{"docs":{},"程":{"docs":{},"是":{"docs":{},"否":{"docs":{},"启":{"docs":{},"动":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"释":{"docs":{},"放":{"docs":{},"是":{"docs":{},"否":{"docs":{},"成":{"docs":{},"功":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}},"尾":{"docs":{},"指":{"docs":{},"针":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"小":{"docs":{},"数":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}},"整":{"docs":{},"数":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}},"前":{"docs":{},"缀":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"特":{"docs":{},"性":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}},"指":{"docs":{},"令":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"内":{"docs":{},"存":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"（":{"docs":{},"也":{"docs":{},"成":{"docs":{},"内":{"docs":{},"存":{"docs":{},"栅":{"docs":{},"栏":{"docs":{},"）":{"docs":{},"，":{"docs":{},"内":{"docs":{},"存":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"会":{"docs":{},"提":{"docs":{},"供":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"索":{"docs":{},"引":{"docs":{},"：":{"docs":{},"对":{"docs":{},"于":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"列":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"索":{"docs":{},"引":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"驱":{"docs":{},"节":{"docs":{},"点":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"即":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"当":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{},"容":{"docs":{},"量":{"docs":{},"长":{"docs":{},"度":{"docs":{},"的":{"0":{"docs":{},".":{"7":{"5":{"docs":{},"倍":{"docs":{},"时":{"docs":{},"，":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}},"使":{"docs":{},"设":{"docs":{},"置":{"docs":{},"了":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"，":{"docs":{},"也":{"docs":{},"无":{"docs":{},"法":{"docs":{},"保":{"docs":{},"证":{"docs":{},"高":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"一":{"docs":{},"定":{"docs":{},"先":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"远":{"docs":{},"程":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"同":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"既":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"具":{"docs":{},"有":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"发":{"docs":{},"现":{"docs":{},"，":{"docs":{},"当":{"docs":{},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"1":{"5":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"的":{"docs":{},"值":{"docs":{},"会":{"docs":{},"与":{"1":{"4":{"docs":{},"（":{"1":{"1":{"1":{"0":{"docs":{},"）":{"docs":{},"进":{"docs":{},"行":{"docs":{},"“":{"docs":{},"与":{"docs":{},"”":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"位":{"docs":{},"永":{"docs":{},"远":{"docs":{},"是":{"0":{"docs":{},"，":{"docs":{},"而":{"0":{"0":{"0":{"1":{"docs":{},"，":{"0":{"0":{"1":{"1":{"docs":{},"，":{"0":{"1":{"0":{"1":{"docs":{},"，":{"1":{"0":{"0":{"1":{"docs":{},"，":{"1":{"0":{"1":{"1":{"docs":{},"，":{"0":{"1":{"1":{"1":{"docs":{},"，":{"1":{"1":{"0":{"1":{"docs":{},"这":{"docs":{},"几":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"永":{"docs":{},"远":{"docs":{},"都":{"docs":{},"不":{"docs":{},"能":{"docs":{},"存":{"docs":{},"放":{"docs":{},"元":{"docs":{},"素":{"docs":{},"了":{"docs":{},"，":{"docs":{},"显":{"docs":{},"然":{"docs":{},"不":{"docs":{},"符":{"docs":{},"合":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"算":{"docs":{},"法":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"分":{"docs":{},"布":{"docs":{},"的":{"docs":{},"原":{"docs":{},"则":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"相":{"docs":{},"当":{"docs":{},"大":{"docs":{},"，":{"docs":{},"更":{"docs":{},"糟":{"docs":{},"的":{"docs":{},"是":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"中":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"比":{"docs":{},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{},"小":{"docs":{},"了":{"docs":{},"很":{"docs":{},"多":{"docs":{},"，":{"docs":{},"这":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"进":{"docs":{},"一":{"docs":{},"步":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"碰":{"docs":{},"撞":{"docs":{},"的":{"docs":{},"几":{"docs":{},"率":{"docs":{},"，":{"docs":{},"减":{"docs":{},"慢":{"docs":{},"了":{"docs":{},"查":{"docs":{},"询":{"docs":{},"的":{"docs":{},"效":{"docs":{},"率":{"docs":{},"！":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}},"配":{"docs":{},"合":{"docs":{},"以":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}},"执":{"docs":{},"行":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}},"步":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}},"块":{"docs":{},"是":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"不":{"docs":{},"能":{"docs":{},"访":{"docs":{},"问":{"docs":{},"共":{"docs":{},"享":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"用":{"docs":{},"括":{"docs":{},"号":{"docs":{},"将":{"docs":{},"对":{"docs":{},"象":{"docs":{},"括":{"docs":{},"起":{"docs":{},"来":{"docs":{},"。":{"docs":{},"在":{"docs":{},"上":{"docs":{},"例":{"docs":{},"中":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"在":{"docs":{},"同":{"docs":{},"一":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"仅":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"进":{"docs":{},"入":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"临":{"docs":{},"界":{"docs":{},"区":{"docs":{},"。":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"将":{"docs":{},"会":{"docs":{},"从":{"docs":{},"主":{"docs":{},"存":{"docs":{},"中":{"docs":{},"读":{"docs":{},"入":{"docs":{},"，":{"docs":{},"当":{"docs":{},"线":{"docs":{},"程":{"docs":{},"退":{"docs":{},"出":{"docs":{},"同":{"docs":{},"步":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"时":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"被":{"docs":{},"更":{"docs":{},"新":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"都":{"docs":{},"会":{"docs":{},"被":{"docs":{},"刷":{"docs":{},"新":{"docs":{},"回":{"docs":{},"主":{"docs":{},"存":{"docs":{},"中":{"docs":{},"去":{"docs":{},"，":{"docs":{},"不":{"docs":{},"管":{"docs":{},"这":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"是":{"docs":{},"否":{"docs":{},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"容":{"docs":{},"器":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"自":{"docs":{},"带":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"，":{"docs":{},"对":{"docs":{},"这":{"docs":{},"些":{"docs":{},"集":{"docs":{},"合":{"docs":{},"类":{"docs":{},"的":{"docs":{},"复":{"docs":{},"合":{"docs":{},"操":{"docs":{},"作":{"docs":{},"无":{"docs":{},"法":{"docs":{},"保":{"docs":{},"证":{"docs":{},"其":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"。":{"docs":{},"需":{"docs":{},"要":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"通":{"docs":{},"过":{"docs":{},"主":{"docs":{},"动":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"来":{"docs":{},"保":{"docs":{},"证":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"之":{"docs":{},"所":{"docs":{},"以":{"docs":{},"说":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"，":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"被":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"并":{"docs":{},"发":{"docs":{},"容":{"docs":{},"器":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":5.001092896174863}}}}}}},"是":{"docs":{},"指":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"原":{"docs":{},"理":{"docs":{},"就":{"docs":{},"是":{"docs":{},"在":{"docs":{},"方":{"docs":{},"法":{"docs":{},"上":{"docs":{},"用":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}},"缺":{"docs":{},"陷":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.002185792349726776}}}}},"真":{"docs":{},"的":{"docs":{},"一":{"docs":{},"定":{"docs":{},"安":{"docs":{},"全":{"docs":{},"吗":{"docs":{},"？":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"，":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"更":{"docs":{},"好":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}},"和":{"docs":{},"异":{"docs":{},"步":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}}}}},"就":{"docs":{},"像":{"docs":{},"是":{"docs":{},"打":{"docs":{},"电":{"docs":{},"话":{"docs":{},"，":{"docs":{},"不":{"docs":{},"挂":{"docs":{},"电":{"docs":{},"话":{"docs":{},"，":{"docs":{},"通":{"docs":{},"话":{"docs":{},"不":{"docs":{},"会":{"docs":{},"结":{"docs":{},"束":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}}}}},"实":{"docs":{},"例":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}}}}}},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}}}}}},"机":{"docs":{},"制":{"docs":{},"完":{"docs":{},"全":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"此":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}},"状":{"docs":{},"态":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"队":{"docs":{},"列":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"来":{"docs":{},"完":{"docs":{},"成":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"管":{"docs":{},"理":{"docs":{},"，":{"docs":{},"当":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"失":{"docs":{},"败":{"docs":{},"后":{"docs":{},"，":{"docs":{},"就":{"docs":{},"被":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{},"队":{"docs":{},"列":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"向":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.008645533141210375},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.008645533141210375},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.008645533141210375}},"这":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"值":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"操":{"docs":{},"作":{"docs":{},"也":{"docs":{},"基":{"docs":{},"本":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"（":{"docs":{},"通":{"docs":{},"过":{"docs":{},"&":{"docs":{},"运":{"docs":{},"算":{"docs":{},"获":{"docs":{},"取":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"取":{"docs":{},"中":{"docs":{},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"队":{"docs":{},"列":{"docs":{},"当":{"docs":{},"前":{"docs":{},"有":{"docs":{},"：":{"docs":{},"\"":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"提":{"docs":{},"交":{"docs":{},"任":{"docs":{},"务":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"为":{"docs":{},"解":{"docs":{},"决":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}},"的":{"docs":{},"\"":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}},"循":{"docs":{},"环":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"时":{"docs":{},"间":{"docs":{},"长":{"docs":{},"，":{"docs":{},"开":{"docs":{},"销":{"docs":{},"大":{"docs":{},"；":{"3":{"docs":{},".":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}},"docs":{}}}}}},"开":{"docs":{},"销":{"docs":{},"大":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"。":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"如":{"docs":{},"果":{"docs":{},"长":{"docs":{},"时":{"docs":{},"间":{"docs":{},"不":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"会":{"docs":{},"给":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"带":{"docs":{},"来":{"docs":{},"非":{"docs":{},"常":{"docs":{},"大":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"开":{"docs":{},"销":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"能":{"docs":{},"支":{"docs":{},"持":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"p":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"指":{"docs":{},"令":{"docs":{},"那":{"docs":{},"么":{"docs":{},"效":{"docs":{},"率":{"docs":{},"会":{"docs":{},"有":{"docs":{},"一":{"docs":{},"定":{"docs":{},"的":{"docs":{},"提":{"docs":{},"升":{"docs":{},"，":{"docs":{},"p":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"指":{"docs":{},"令":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"作":{"docs":{},"用":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"流":{"docs":{},"水":{"docs":{},"线":{"docs":{},"执":{"docs":{},"行":{"docs":{},"指":{"docs":{},"令":{"docs":{},"（":{"docs":{},"d":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"思":{"docs":{},"想":{"docs":{},"：":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}},"悲":{"docs":{},"观":{"docs":{},"锁":{"docs":{},":":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}},"就":{"docs":{},"是":{"docs":{},"对":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"采":{"docs":{},"取":{"docs":{},"一":{"docs":{},"种":{"docs":{},"悲":{"docs":{},"观":{"docs":{},"的":{"docs":{},"态":{"docs":{},"度":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"假":{"docs":{},"设":{"docs":{},"数":{"docs":{},"据":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"会":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"在":{"docs":{},"数":{"docs":{},"据":{"docs":{},"开":{"docs":{},"始":{"docs":{},"读":{"docs":{},"取":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"就":{"docs":{},"把":{"docs":{},"数":{"docs":{},"据":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"住":{"docs":{},"。":{"docs":{},"【":{"docs":{},"数":{"docs":{},"据":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"：":{"docs":{},"数":{"docs":{},"据":{"docs":{},"将":{"docs":{},"暂":{"docs":{},"时":{"docs":{},"不":{"docs":{},"会":{"docs":{},"得":{"docs":{},"到":{"docs":{},"修":{"docs":{},"改":{"docs":{},"】":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"乐":{"docs":{},"观":{"docs":{},"锁":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.011494252873563218}}}}}}}}},"插":{"docs":{},"入":{"docs":{},"元":{"docs":{},"素":{"docs":{},"后":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"结":{"docs":{},"构":{"docs":{},"是":{"docs":{},"否":{"docs":{},"需":{"docs":{},"要":{"docs":{},"改":{"docs":{},"变":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"则":{"docs":{},"调":{"docs":{},"用":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"将":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"链":{"docs":{},"表":{"docs":{},"升":{"docs":{},"级":{"docs":{},"为":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"结":{"docs":{},"构":{"docs":{},"；":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"件":{"docs":{},"名":{"docs":{},"称":{"docs":{},"：":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}},"旧":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"+":{"docs":{},"旧":{"docs":{},"容":{"docs":{},"量":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"（":{"docs":{},"串":{"docs":{},"行":{"docs":{},"的":{"docs":{},"：":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"，":{"docs":{},"并":{"docs":{},"行":{"docs":{},"的":{"docs":{},"：":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"，":{"docs":{},"并":{"docs":{},"发":{"docs":{},"标":{"docs":{},"记":{"docs":{},"清":{"docs":{},"除":{"docs":{},"：":{"docs":{},"c":{"docs":{},"m":{"docs":{},"s":{"docs":{},"）":{"docs":{},"都":{"docs":{},"把":{"docs":{},"堆":{"docs":{},"结":{"docs":{},"构":{"docs":{},"化":{"docs":{},"为":{"docs":{},"三":{"docs":{},"个":{"docs":{},"部":{"docs":{},"分":{"docs":{},"：":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"、":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"和":{"docs":{},"固":{"docs":{},"定":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"机":{"docs":{},"制":{"docs":{},"的":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}},"查":{"docs":{},"询":{"docs":{},"时":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"通":{"docs":{},"过":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"找":{"docs":{},"到":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"链":{"docs":{},"表":{"docs":{},"或":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"该":{"docs":{},"结":{"docs":{},"构":{"docs":{},"便":{"docs":{},"可":{"docs":{},"以":{"docs":{},"获":{"docs":{},"取":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"值":{"docs":{},"。":{"docs":{},"其":{"docs":{},"中":{"docs":{},"，":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"主":{"docs":{},"要":{"docs":{},"通":{"docs":{},"过":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"类":{"docs":{},"的":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"获":{"docs":{},"取":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"值":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"读":{"docs":{},"获":{"docs":{},"取":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"值":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"值":{"docs":{},"的":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"保":{"docs":{},"证":{"docs":{},"其":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"最":{"docs":{},"新":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"性":{"docs":{},"能":{"docs":{},"优":{"docs":{},"化":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}},"看":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.009389671361502348}},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"指":{"docs":{},"定":{"docs":{},"进":{"docs":{},"程":{"docs":{},"的":{"docs":{},"堆":{"docs":{},"信":{"docs":{},"息":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"系":{"docs":{},"统":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"使":{"docs":{},"用":{"docs":{},"大":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"或":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"；":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"下":{"docs":{},"具":{"docs":{},"体":{"docs":{},"进":{"docs":{},"程":{"docs":{},"信":{"docs":{},"息":{"docs":{},"的":{"docs":{},"命":{"docs":{},"令":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}},"段":{"docs":{},"偏":{"docs":{},"移":{"docs":{},"量":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}},"掩":{"docs":{},"码":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}},"注":{"docs":{},"意":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"要":{"docs":{},"想":{"docs":{},"实":{"docs":{},"现":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"需":{"docs":{},"要":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"取":{"docs":{},"了":{"docs":{},"锁":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"是":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}},"未":{"docs":{},"被":{"docs":{},"标":{"docs":{},"记":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"等":{"docs":{},"于":{"docs":{},"死":{"docs":{},"亡":{"docs":{},"对":{"docs":{},"象":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"一":{"docs":{},"般":{"docs":{},"不":{"docs":{},"会":{"docs":{},"直":{"docs":{},"接":{"docs":{},"在":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"上":{"docs":{},"进":{"docs":{},"行":{"docs":{},"分":{"docs":{},"析":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}},"这":{"docs":{},"里":{"docs":{},"的":{"docs":{},"父":{"docs":{},"类":{"docs":{},"和":{"docs":{},"引":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"既":{"docs":{},"然":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"它":{"docs":{},"们":{"docs":{},"当":{"docs":{},"然":{"docs":{},"也":{"docs":{},"要":{"docs":{},"满":{"docs":{},"足":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"要":{"docs":{},"求":{"docs":{},"：":{"docs":{},"被":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"必":{"docs":{},"须":{"docs":{},"属":{"docs":{},"于":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"点":{"docs":{},"：":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"：":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}},"g":{"1":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"docs":{}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}},"看":{"docs":{},"下":{"docs":{},"图":{"docs":{},"，":{"docs":{},"左":{"docs":{},"边":{"docs":{},"两":{"docs":{},"组":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"1":{"6":{"docs":{},"（":{"2":{"docs":{},"的":{"4":{"docs":{},"次":{"docs":{},"方":{"docs":{},"）":{"docs":{},"，":{"docs":{},"右":{"docs":{},"边":{"docs":{},"两":{"docs":{},"组":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"1":{"5":{"docs":{},"。":{"docs":{},"两":{"docs":{},"组":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"均":{"docs":{},"为":{"8":{"docs":{},"和":{"9":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"很":{"docs":{},"明":{"docs":{},"显":{"docs":{},"，":{"docs":{},"当":{"docs":{},"它":{"docs":{},"们":{"docs":{},"和":{"1":{"1":{"1":{"0":{"docs":{},"“":{"docs":{},"与":{"docs":{},"”":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"产":{"docs":{},"生":{"docs":{},"了":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"它":{"docs":{},"们":{"docs":{},"会":{"docs":{},"定":{"docs":{},"位":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"去":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"产":{"docs":{},"生":{"docs":{},"了":{"docs":{},"碰":{"docs":{},"撞":{"docs":{},"，":{"8":{"docs":{},"和":{"9":{"docs":{},"会":{"docs":{},"被":{"docs":{},"放":{"docs":{},"到":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"上":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"查":{"docs":{},"询":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"这":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"8":{"docs":{},"或":{"docs":{},"者":{"9":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"降":{"docs":{},"低":{"docs":{},"了":{"docs":{},"查":{"docs":{},"询":{"docs":{},"的":{"docs":{},"效":{"docs":{},"率":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"你":{"docs":{},"的":{"docs":{},"插":{"docs":{},"件":{"docs":{},"是":{"docs":{},"否":{"docs":{},"已":{"docs":{},"经":{"docs":{},"生":{"docs":{},"效":{"docs":{},"。":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}},"碰":{"docs":{},"撞":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"冲":{"docs":{},"突":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}}}}}}}}}}},"禁":{"docs":{},"止":{"docs":{},"该":{"docs":{},"指":{"docs":{},"令":{"docs":{},"与":{"docs":{},"前":{"docs":{},"面":{"docs":{},"和":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"读":{"docs":{},"写":{"docs":{},"指":{"docs":{},"令":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"指":{"docs":{},"令":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}},"第":{"1":{"docs":{},"步":{"docs":{},"、":{"docs":{},"使":{"docs":{},"用":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"类":{"docs":{},"找":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}}}}}}}}}}}}}}}},"2":{"docs":{},"步":{"docs":{},"、":{"docs":{},"通":{"docs":{},"过":{"docs":{},"子":{"docs":{},"类":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"父":{"docs":{},"类":{"docs":{},"对":{"docs":{},"象":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}}}}}}}}}}}}}},"3":{"docs":{},"步":{"docs":{},"、":{"docs":{},"进":{"docs":{},"行":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}},"4":{"docs":{},"步":{"docs":{},"、":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"输":{"docs":{},"入":{"docs":{},"流":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},"出":{"docs":{},"流":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}},"docs":{},"一":{"docs":{},"次":{"docs":{},"计":{"docs":{},"算":{"docs":{},"，":{"docs":{},"不":{"docs":{},"对":{"docs":{},"s":{"1":{"docs":{},"，":{"docs":{},"s":{"2":{"docs":{},"，":{"docs":{},"s":{"3":{"docs":{},"，":{"docs":{},"s":{"4":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"每":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"1":{"docs":{},"，":{"2":{"docs":{},"，":{"3":{"docs":{},"，":{"4":{"docs":{},"，":{"docs":{},"更":{"docs":{},"新":{"docs":{},"操":{"docs":{},"作":{"docs":{},"次":{"docs":{},"数":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"docs":{},"：":{"2":{"docs":{},"，":{"2":{"docs":{},"，":{"3":{"docs":{},"，":{"1":{"docs":{},"，":{"docs":{},"则":{"docs":{},"这":{"docs":{},"次":{"docs":{},"计":{"docs":{},"算":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"总":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"1":{"docs":{},"+":{"2":{"docs":{},"+":{"3":{"docs":{},"+":{"4":{"docs":{},"=":{"1":{"0":{"docs":{},"，":{"docs":{},"总":{"docs":{},"共":{"docs":{},"更":{"docs":{},"新":{"docs":{},"操":{"docs":{},"作":{"docs":{},"次":{"docs":{},"数":{"docs":{},"为":{"2":{"docs":{},"+":{"2":{"docs":{},"+":{"3":{"docs":{},"+":{"1":{"docs":{},"=":{"8":{"docs":{},"；":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}},"挥":{"docs":{},"手":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},"握":{"docs":{},"手":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"，":{"docs":{},"a":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}},"种":{"docs":{},"方":{"docs":{},"案":{"docs":{},"他":{"docs":{},"会":{"docs":{},"使":{"docs":{},"用":{"docs":{},"不":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"模":{"docs":{},"式":{"docs":{},"去":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"多":{"docs":{},"次":{"docs":{},"计":{"docs":{},"算":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"，":{"docs":{},"最":{"docs":{},"多":{"docs":{},"三":{"docs":{},"次":{"docs":{},"，":{"docs":{},"比":{"docs":{},"较":{"docs":{},"前":{"docs":{},"后":{"docs":{},"两":{"docs":{},"次":{"docs":{},"计":{"docs":{},"算":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"结":{"docs":{},"果":{"docs":{},"一":{"docs":{},"致":{"docs":{},"就":{"docs":{},"认":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"没":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"加":{"docs":{},"入":{"docs":{},"，":{"docs":{},"计":{"docs":{},"算":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"是":{"docs":{},"准":{"docs":{},"确":{"docs":{},"的":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"章":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":5},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":5}}},"范":{"docs":{},"式":{"docs":{},"：":{"docs":{},"列":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"再":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"为":{"docs":{},"列":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}},"步":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}},"三":{"docs":{},"次":{"docs":{},"计":{"docs":{},"算":{"docs":{},"，":{"docs":{},"不":{"docs":{},"对":{"docs":{},"s":{"1":{"docs":{},"，":{"docs":{},"s":{"2":{"docs":{},"，":{"docs":{},"s":{"3":{"docs":{},"，":{"docs":{},"s":{"4":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"所":{"docs":{},"有":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"每":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"的":{"docs":{},"更":{"docs":{},"新":{"docs":{},"操":{"docs":{},"作":{"docs":{},"次":{"docs":{},"数":{"docs":{},"还":{"docs":{},"是":{"docs":{},"为":{"3":{"docs":{},"，":{"2":{"docs":{},"，":{"3":{"docs":{},"，":{"1":{"docs":{},"，":{"docs":{},"则":{"docs":{},"因":{"docs":{},"为":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"计":{"docs":{},"算":{"docs":{},"和":{"docs":{},"第":{"docs":{},"三":{"docs":{},"次":{"docs":{},"计":{"docs":{},"算":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"更":{"docs":{},"新":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"是":{"docs":{},"一":{"docs":{},"致":{"docs":{},"的":{"docs":{},"，":{"docs":{},"就":{"docs":{},"能":{"docs":{},"说":{"docs":{},"明":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"计":{"docs":{},"算":{"docs":{},"和":{"docs":{},"第":{"docs":{},"三":{"docs":{},"次":{"docs":{},"计":{"docs":{},"算":{"docs":{},"这":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"内":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"数":{"docs":{},"据":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"更":{"docs":{},"新":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"第":{"docs":{},"三":{"docs":{},"次":{"docs":{},"计":{"docs":{},"算":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"。":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}},"挥":{"docs":{},"手":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},"握":{"docs":{},"手":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"，":{"docs":{},"a":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}},"章":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":5},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":5}}},"范":{"docs":{},"式":{"docs":{},"：":{"docs":{},"首":{"docs":{},"先":{"2":{"docs":{},"n":{"docs":{},"f":{"docs":{},"，":{"docs":{},"非":{"docs":{},"主":{"docs":{},"键":{"docs":{},"列":{"docs":{},"必":{"docs":{},"须":{"docs":{},"直":{"docs":{},"接":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"主":{"docs":{},"键":{"docs":{},"，":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"传":{"docs":{},"递":{"docs":{},"依":{"docs":{},"赖":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"部":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}},"二":{"docs":{},"次":{"docs":{},"计":{"docs":{},"算":{"docs":{},"，":{"docs":{},"不":{"docs":{},"对":{"docs":{},"s":{"1":{"docs":{},",":{"docs":{},"s":{"2":{"docs":{},",":{"docs":{},"s":{"3":{"docs":{},",":{"docs":{},"s":{"4":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"所":{"docs":{},"有":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"这":{"docs":{},"次":{"docs":{},"每":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"2":{"docs":{},"，":{"2":{"docs":{},"，":{"3":{"docs":{},"，":{"4":{"docs":{},"，":{"docs":{},"更":{"docs":{},"新":{"docs":{},"次":{"docs":{},"数":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"3":{"docs":{},"，":{"2":{"docs":{},"，":{"3":{"docs":{},"，":{"1":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"两":{"docs":{},"次":{"docs":{},"计":{"docs":{},"算":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"更":{"docs":{},"新":{"docs":{},"次":{"docs":{},"数":{"docs":{},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"(":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"是":{"8":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"是":{"9":{"docs":{},")":{"docs":{},"则":{"docs":{},"可":{"docs":{},"以":{"docs":{},"断":{"docs":{},"定":{"docs":{},"这":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"数":{"docs":{},"据":{"docs":{},"被":{"docs":{},"更":{"docs":{},"新":{"docs":{},"，":{"docs":{},"则":{"docs":{},"此":{"docs":{},"时":{"docs":{},"应":{"docs":{},"该":{"docs":{},"再":{"docs":{},"试":{"docs":{},"一":{"docs":{},"次":{"docs":{},"；":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}},"挥":{"docs":{},"手":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},"握":{"docs":{},"手":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"，":{"docs":{},"b":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}},"种":{"docs":{},"方":{"docs":{},"案":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"第":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"案":{"docs":{},"不":{"docs":{},"符":{"docs":{},"合":{"docs":{},"，":{"docs":{},"他":{"docs":{},"就":{"docs":{},"会":{"docs":{},"给":{"docs":{},"每":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"加":{"docs":{},"上":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"计":{"docs":{},"算":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"返":{"docs":{},"回":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"章":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":5},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":5}}},"范":{"docs":{},"式":{"docs":{},"：":{"1":{"docs":{},"n":{"docs":{},"f":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"包":{"docs":{},"含":{"docs":{},"主":{"docs":{},"键":{"docs":{},"的":{"docs":{},"列":{"docs":{},"必":{"docs":{},"须":{"docs":{},"完":{"docs":{},"全":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"主":{"docs":{},"键":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"步":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}},"四":{"docs":{},"章":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":5},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":3.333333333333333}}},"次":{"docs":{},"挥":{"docs":{},"手":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}},"五":{"docs":{},"章":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":5}}}},"六":{"docs":{},"章":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":5}}}},"七":{"docs":{},"章":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":5}}}},"八":{"docs":{},"章":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":5}}}},"九":{"docs":{},"章":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":5}}}}},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}},"安":{"docs":{},"全":{"docs":{},"。":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}},"，":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}},"很":{"docs":{},"难":{"docs":{},"定":{"docs":{},"义":{"docs":{},"。":{"docs":{},"我":{"docs":{},"所":{"docs":{},"看":{"docs":{},"到":{"docs":{},"的":{"docs":{},"对":{"docs":{},"于":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"都":{"docs":{},"太":{"docs":{},"过":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.003278688524590164}},"无":{"docs":{},"界":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{},"底":{"docs":{},"层":{"docs":{},"采":{"docs":{},"用":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"支":{"docs":{},"持":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{},"底":{"docs":{},"层":{"docs":{},"采":{"docs":{},"用":{"docs":{},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"支":{"docs":{},"持":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}},"有":{"docs":{},"序":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}},"一":{"docs":{},"定":{"docs":{},"先":{"docs":{},"执":{"docs":{},"行":{"docs":{},"吗":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}},"中":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"断":{"docs":{},"抛":{"docs":{},"异":{"docs":{},"常":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"为":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"（":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}},"通":{"docs":{},"信":{"docs":{},"现":{"docs":{},"在":{"docs":{},"有":{"docs":{},"了":{"docs":{},"下":{"docs":{},"面":{"docs":{},"四":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"的":{"docs":{},"支":{"docs":{},"持":{"docs":{},"，":{"docs":{},"然":{"docs":{},"而":{"docs":{},"，":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"支":{"docs":{},"持":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"并":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"很":{"docs":{},"好":{"docs":{},"的":{"docs":{},"和":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"控":{"docs":{},"制":{"docs":{},"并":{"docs":{},"不":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}},"基":{"docs":{},"础":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":5.00054704595186}}}},"数":{"docs":{},"多":{"docs":{},"少":{"docs":{},"才":{"docs":{},"合":{"docs":{},"理":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}},"要":{"docs":{},"合":{"docs":{},"理":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}},"方":{"docs":{},"法":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}},"是":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"进":{"docs":{},"行":{"docs":{},"调":{"docs":{},"度":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"单":{"docs":{},"位":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}},"稀":{"docs":{},"缺":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"无":{"docs":{},"限":{"docs":{},"制":{"docs":{},"的":{"docs":{},"创":{"docs":{},"建":{"docs":{},"，":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"会":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"系":{"docs":{},"统":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"还":{"docs":{},"会":{"docs":{},"降":{"docs":{},"低":{"docs":{},"系":{"docs":{},"统":{"docs":{},"的":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"性":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"可":{"docs":{},"以":{"docs":{},"进":{"docs":{},"行":{"docs":{},"统":{"docs":{},"一":{"docs":{},"的":{"docs":{},"分":{"docs":{},"配":{"docs":{},"，":{"docs":{},"调":{"docs":{},"优":{"docs":{},"和":{"docs":{},"监":{"docs":{},"控":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"要":{"docs":{},"做":{"docs":{},"到":{"docs":{},"合":{"docs":{},"理":{"docs":{},"的":{"docs":{},"利":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"对":{"docs":{},"其":{"docs":{},"原":{"docs":{},"理":{"docs":{},"了":{"docs":{},"如":{"docs":{},"指":{"docs":{},"掌":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"栈":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.007246376811594203}},"还":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"当":{"docs":{},"前":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"本":{"docs":{},"地":{"docs":{},"变":{"docs":{},"量":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"的":{"docs":{},"本":{"docs":{},"地":{"docs":{},"变":{"docs":{},"量":{"docs":{},"对":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"见":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"比":{"docs":{},"进":{"docs":{},"程":{"docs":{},"划":{"docs":{},"分":{"docs":{},"更":{"docs":{},"细":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"执":{"docs":{},"行":{"docs":{},"开":{"docs":{},"销":{"docs":{},"更":{"docs":{},"小":{"docs":{},"，":{"docs":{},"并":{"docs":{},"发":{"docs":{},"性":{"docs":{},"更":{"docs":{},"高":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}},"池":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":5.0016155088852985}},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607}}}}}}}}},"容":{"docs":{},"量":{"docs":{},"的":{"docs":{},"动":{"docs":{},"态":{"docs":{},"调":{"docs":{},"整":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"处":{"docs":{},"理":{"docs":{},"形":{"docs":{},"式":{"docs":{},"，":{"docs":{},"处":{"docs":{},"理":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"将":{"docs":{},"任":{"docs":{},"务":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"后":{"docs":{},"自":{"docs":{},"动":{"docs":{},"启":{"docs":{},"动":{"docs":{},"这":{"docs":{},"些":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607}}}},"的":{"docs":{},"关":{"docs":{},"闭":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.006462035541195477}}}},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"理":{"docs":{},"，":{"docs":{},"大":{"docs":{},"致":{"docs":{},"从":{"docs":{},"以":{"docs":{},"下":{"docs":{},"几":{"docs":{},"个":{"docs":{},"方":{"docs":{},"面":{"docs":{},"讲":{"docs":{},"解":{"docs":{},"：":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}},"中":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"状":{"docs":{},"态":{"docs":{},"？":{"docs":{},"各":{"docs":{},"状":{"docs":{},"态":{"docs":{},"之":{"docs":{},"间":{"docs":{},"如":{"docs":{},"何":{"docs":{},"切":{"docs":{},"换":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178}},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"休":{"docs":{},"眠":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"启":{"docs":{},"动":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}},"强":{"docs":{},"制":{"docs":{},"执":{"docs":{},"行":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"执":{"docs":{},"行":{"docs":{},"实":{"docs":{},"体":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}},"礼":{"docs":{},"让":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}},"调":{"docs":{},"度":{"docs":{},"器":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"服":{"docs":{},"务":{"docs":{},"，":{"docs":{},"它":{"docs":{},"负":{"docs":{},"责":{"docs":{},"为":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}},"间":{"docs":{},"同":{"docs":{},"步":{"docs":{},"机":{"docs":{},"制":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"通":{"docs":{},"信":{"docs":{},"的":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}},"通":{"docs":{},"信":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}},"机":{"docs":{},"制":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"过":{"docs":{},"写":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}},"面":{"docs":{},"试":{"docs":{},"题":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"不":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"示":{"docs":{},"例":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"一":{"docs":{},"个":{"docs":{},"本":{"docs":{},"身":{"docs":{},"(":{"docs":{},"在":{"docs":{},"其":{"docs":{},"上":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}},"被":{"docs":{},"永":{"docs":{},"久":{"docs":{},"堵":{"docs":{},"塞":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"等":{"docs":{},"待":{"docs":{},"进":{"docs":{},"入":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"总":{"docs":{},"是":{"docs":{},"能":{"docs":{},"在":{"docs":{},"它":{"docs":{},"之":{"docs":{},"前":{"docs":{},"持":{"docs":{},"续":{"docs":{},"地":{"docs":{},"对":{"docs":{},"该":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"进":{"docs":{},"行":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"断":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{},"异":{"docs":{},"常":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"休":{"docs":{},"眠":{"1":{"0":{"docs":{},"秒":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"docs":{}},"2":{"docs":{},"秒":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"docs":{}}},"强":{"docs":{},"制":{"docs":{},"运":{"docs":{},"行":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"简":{"docs":{},"介":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}},"自":{"docs":{},"动":{"docs":{},"释":{"docs":{},"放":{"docs":{},"其":{"docs":{},"占":{"docs":{},"有":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"并":{"docs":{},"等":{"docs":{},"待":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}},"运":{"docs":{},"行":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{},"确":{"docs":{},"保":{"docs":{},"所":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"看":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"值":{"docs":{},"是":{"docs":{},"一":{"docs":{},"致":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}},"写":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}}},"用":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.005747126436781609}}},"读":{"docs":{},"这":{"docs":{},"个":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}}}}},"启":{"docs":{},"动":{"docs":{},"规":{"docs":{},"则":{"docs":{},"：":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"上":{"docs":{},"对":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}},"对":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}},"结":{"docs":{},"束":{"docs":{},"规":{"docs":{},"则":{"docs":{},"：":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"的":{"docs":{},"任":{"docs":{},"何":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"检":{"docs":{},"测":{"docs":{},"到":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"已":{"docs":{},"经":{"docs":{},"结":{"docs":{},"束":{"docs":{},"之":{"docs":{},"前":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"从":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"失":{"docs":{},"败":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"被":{"docs":{},"封":{"docs":{},"装":{"docs":{},"成":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"当":{"docs":{},"且":{"docs":{},"仅":{"docs":{},"当":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}},"同":{"docs":{},"时":{"docs":{},"运":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"出":{"docs":{},"现":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"号":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"前":{"docs":{},"面":{"docs":{},"转":{"docs":{},"化":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"快":{"docs":{},"照":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"执":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"耗":{"docs":{},"费":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"过":{"docs":{},"多":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"缺":{"docs":{},"点":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"：":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"问":{"docs":{},"题":{"docs":{},"；":{"docs":{},"改":{"docs":{},"进":{"docs":{},"：":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"节":{"docs":{},"点":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"几":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"：":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"共":{"docs":{},"享":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"到":{"docs":{},"了":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"而":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"可":{"docs":{},"中":{"docs":{},"断":{"docs":{},"的":{"docs":{},"共":{"docs":{},"享":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"独":{"docs":{},"占":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"失":{"docs":{},"败":{"docs":{},"后":{"docs":{},"就":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"独":{"docs":{},"占":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"超":{"docs":{},"时":{"docs":{},"等":{"docs":{},"待":{"docs":{},"式":{"docs":{},"的":{"docs":{},"共":{"docs":{},"享":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"独":{"docs":{},"占":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}},"锁":{"docs":{},"出":{"docs":{},"队":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"和":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"都":{"docs":{},"是":{"docs":{},"自":{"docs":{},"动":{"docs":{},"的":{"docs":{},"）":{"docs":{},"，":{"docs":{},"以":{"docs":{},"避":{"docs":{},"免":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"进":{"docs":{},"入":{"docs":{},"等":{"docs":{},"待":{"docs":{},"状":{"docs":{},"态":{"docs":{},"等":{"docs":{},"待":{"docs":{},"获":{"docs":{},"取":{"docs":{},"独":{"docs":{},"占":{"docs":{},"式":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}},"堆":{"docs":{},"快":{"docs":{},"照":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"得":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}},"造":{"docs":{},"成":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},".":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"\"":{"docs":{},"都":{"docs":{},"是":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}},"非":{"docs":{},"同":{"docs":{},"步":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}},"常":{"docs":{},"的":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"。":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"做":{"docs":{},"一":{"docs":{},"些":{"docs":{},"别":{"docs":{},"的":{"docs":{},"事":{"docs":{},"情":{"docs":{},"。":{"docs":{},"通":{"docs":{},"过":{"docs":{},"改":{"docs":{},"变":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"就":{"docs":{},"能":{"docs":{},"够":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"阻":{"docs":{},"塞":{"docs":{},"调":{"docs":{},"用":{"docs":{},"就":{"docs":{},"像":{"docs":{},"是":{"docs":{},"发":{"docs":{},"短":{"docs":{},"信":{"docs":{},"，":{"docs":{},"发":{"docs":{},"完":{"docs":{},"短":{"docs":{},"信":{"docs":{},"后":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"做":{"docs":{},"其":{"docs":{},"他":{"docs":{},"事":{"docs":{},"，":{"docs":{},"短":{"docs":{},"信":{"docs":{},"来":{"docs":{},"了":{"docs":{},"，":{"docs":{},"手":{"docs":{},"机":{"docs":{},"会":{"docs":{},"提":{"docs":{},"醒":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"指":{"docs":{},"在":{"docs":{},"不":{"docs":{},"能":{"docs":{},"立":{"docs":{},"刻":{"docs":{},"得":{"docs":{},"到":{"docs":{},"结":{"docs":{},"果":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"该":{"docs":{},"调":{"docs":{},"用":{"docs":{},"不":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}},"以":{"docs":{},"上":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"是":{"docs":{},"指":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"按":{"docs":{},"照":{"docs":{},"申":{"docs":{},"请":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"后":{"docs":{},"申":{"docs":{},"请":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"比":{"docs":{},"先":{"docs":{},"申":{"docs":{},"请":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"优":{"docs":{},"先":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"，":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"反":{"docs":{},"转":{"docs":{},"或":{"docs":{},"者":{"docs":{},"饥":{"docs":{},"饿":{"docs":{},"现":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"版":{"docs":{},"本":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"默":{"docs":{},"认":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"机":{"docs":{},"制":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}}}},"聚":{"docs":{},"集":{"docs":{},"索":{"docs":{},"引":{"docs":{},"，":{"docs":{},"叶":{"docs":{},"节":{"docs":{},"点":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"是":{"docs":{},"索":{"docs":{},"引":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"只":{"docs":{},"不":{"docs":{},"过":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"块":{"docs":{},"。":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"高":{"1":{"6":{"docs":{},"位":{"docs":{},"异":{"docs":{},"或":{"docs":{},"低":{"1":{"6":{"docs":{},"位":{"docs":{},"，":{"docs":{},"后":{"docs":{},"&":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"h":{"docs":{},"&":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}},"线":{"docs":{},"程":{"docs":{},"吞":{"docs":{},"噬":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"低":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}},"级":{"docs":{},"特":{"docs":{},"性":{"docs":{},"与":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"实":{"docs":{},"践":{"docs":{},"（":{"docs":{},"第":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"打":{"docs":{},"印":{"docs":{},"其":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"？":{"docs":{"javacore/container/container-map2.html":{"ref":"javacore/container/container-map2.html","tf":0.0035778175313059034}},"设":{"docs":{},"置":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"开":{"docs":{},"启":{"docs":{},"慢":{"docs":{},"日":{"docs":{},"志":{"docs":{},"功":{"docs":{},"能":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"耗":{"docs":{},"时":{"docs":{},"超":{"docs":{},"过":{"docs":{},"一":{"docs":{},"定":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"功":{"docs":{},"能":{"docs":{},"：":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"的":{"docs":{},"名":{"docs":{},"字":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"，":{"docs":{},"是":{"docs":{},"预":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"意":{"docs":{},"思":{"docs":{},"，":{"docs":{},"即":{"docs":{},"在":{"docs":{},"没":{"docs":{},"有":{"docs":{},"任":{"docs":{},"务":{"docs":{},"到":{"docs":{},"来":{"docs":{},"之":{"docs":{},"前":{"docs":{},"就":{"docs":{},"创":{"docs":{},"建":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"去":{"docs":{},"下":{"docs":{},"载":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"下":{"docs":{},"载":{"docs":{},"速":{"docs":{},"度":{"docs":{},"不":{"docs":{},"会":{"docs":{},"变":{"docs":{},"成":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}},"或":{"docs":{},"者":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{},"默":{"docs":{},"认":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"在":{"docs":{},"创":{"docs":{},"建":{"docs":{},"了":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"后":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"为":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"正":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"，":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"使":{"docs":{},"用":{"docs":{},"给":{"docs":{},"定":{"docs":{},"命":{"docs":{},"令":{"docs":{},"作":{"docs":{},"为":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"启":{"docs":{},"动":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{},"对":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"数":{"docs":{},"，":{"docs":{},"内":{"docs":{},"存":{"docs":{},"值":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}},"条":{"docs":{},"件":{"docs":{},"：":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}},"步":{"docs":{},"骤":{"docs":{},"：":{"docs":{},"比":{"docs":{},"较":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}},"特":{"docs":{},"征":{"docs":{},"来":{"docs":{},"建":{"docs":{},"立":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}},"）":{"docs":{},"元":{"docs":{},"素":{"docs":{},"；":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}},"状":{"docs":{},"态":{"docs":{},"值":{"docs":{},"的":{"docs":{},"含":{"docs":{},"义":{"docs":{},"：":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}},"：":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}},"许":{"docs":{},"可":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.008032128514056224}}}},"区":{"docs":{},"域":{"docs":{},"。":{"docs":{},"最":{"docs":{},"小":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"，":{"docs":{},"连":{"docs":{},"线":{"docs":{},"表":{"docs":{},"示":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"可":{"docs":{},"以":{"docs":{},"配":{"docs":{},"合":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"节":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"是":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"是":{"docs":{},"主":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"（":{"docs":{},"m":{"docs":{},"a":{"docs":{},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}},"次":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"（":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}},"称":{"docs":{},"为":{"docs":{},"魔":{"docs":{},"数":{"docs":{},"（":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"发":{"docs":{},"送":{"docs":{},"并":{"docs":{},"确":{"docs":{},"认":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}},"，":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"有":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}},"阶":{"docs":{},"段":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"是":{"docs":{},"确":{"docs":{},"定":{"docs":{},"的":{"docs":{},"，":{"docs":{},"类":{"docs":{},"的":{"docs":{},"加":{"docs":{},"载":{"docs":{},"过":{"docs":{},"程":{"docs":{},"必":{"docs":{},"须":{"docs":{},"按":{"docs":{},"照":{"docs":{},"这":{"docs":{},"种":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"按":{"docs":{},"部":{"docs":{},"就":{"docs":{},"班":{"docs":{},"地":{"docs":{},"开":{"docs":{},"始":{"docs":{},"。":{"docs":{},"而":{"docs":{},"解":{"docs":{},"析":{"docs":{},"过":{"docs":{},"程":{"docs":{},"在":{"docs":{},"某":{"docs":{},"些":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"之":{"docs":{},"后":{"docs":{},"再":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"支":{"docs":{},"持":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"已":{"docs":{},"发":{"docs":{},"送":{"docs":{},"的":{"docs":{},"字":{"docs":{},"节":{"docs":{},"得":{"docs":{},"到":{"docs":{},"了":{"docs":{},"确":{"docs":{},"认":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}},"于":{"docs":{},"随":{"docs":{},"后":{"docs":{},"获":{"docs":{},"得":{"docs":{},"这":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}},"仅":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"在":{"docs":{},"变":{"docs":{},"量":{"docs":{},"级":{"docs":{},"别":{"docs":{},"；":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"；":{"docs":{},"而":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"时":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"便":{"docs":{},"获":{"docs":{},"得":{"docs":{},"了":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"暂":{"docs":{},"时":{"docs":{},"无":{"docs":{},"法":{"docs":{},"访":{"docs":{},"问":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"等":{"docs":{},"待":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"或":{"docs":{},"者":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"才":{"docs":{},"会":{"docs":{},"释":{"docs":{},"放":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"才":{"docs":{},"能":{"docs":{},"执":{"docs":{},"行":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"者":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"何":{"docs":{},"确":{"docs":{},"保":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"执":{"docs":{},"行":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}},"替":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}},"任":{"docs":{},"务":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}},"是":{"docs":{},"并":{"docs":{},"行":{"docs":{},"的":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"必":{"docs":{},"须":{"docs":{},"等":{"docs":{},"待":{"docs":{},"它":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"和":{"docs":{},"得":{"docs":{},"到":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}},"执":{"docs":{},"行":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607}}}}},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"核":{"docs":{},"心":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}},"拒":{"docs":{},"绝":{"docs":{},"策":{"docs":{},"略":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607}}}}}},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"及":{"docs":{},"排":{"docs":{},"队":{"docs":{},"策":{"docs":{},"略":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607}}}}}}}}}}}}},"优":{"docs":{},"化":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"如":{"docs":{},"果":{"docs":{},"分":{"docs":{},"析":{"docs":{},"结":{"docs":{},"果":{"docs":{},"显":{"docs":{},"示":{"docs":{},"运":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"上":{"docs":{},"，":{"docs":{},"但":{"docs":{},"如":{"docs":{},"果":{"docs":{},"运":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"你":{"docs":{},"需":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"你":{"docs":{},"需":{"docs":{},"要":{"docs":{},"分":{"docs":{},"配":{"docs":{},"这":{"docs":{},"么":{"docs":{},"大":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"分":{"docs":{},"配":{"docs":{},"了":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"了":{"docs":{},"。":{"docs":{},"在":{"docs":{},"进":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"将":{"docs":{},"是":{"docs":{},"很":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"时":{"docs":{},"最":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"目":{"docs":{},"标":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"基":{"docs":{},"本":{"docs":{},"原":{"docs":{},"则":{"docs":{},"是":{"docs":{},"：":{"docs":{},"将":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"结":{"docs":{},"果":{"docs":{},"令":{"docs":{},"人":{"docs":{},"满":{"docs":{},"意":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"参":{"docs":{},"数":{"docs":{},"应":{"docs":{},"用":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"上":{"docs":{},"，":{"docs":{},"并":{"docs":{},"停":{"docs":{},"止":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}},"过":{"docs":{},"程":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"和":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{},"提":{"docs":{},"升":{"docs":{},"性":{"docs":{},"能":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"相":{"docs":{},"似":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"是":{"docs":{},"笔":{"docs":{},"者":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"流":{"docs":{},"程":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"你":{"docs":{},"需":{"docs":{},"要":{"docs":{},"选":{"docs":{},"择":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"访":{"docs":{},"问":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}},"先":{"docs":{},"级":{"docs":{},"最":{"docs":{},"低":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686}}}},")":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"这":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"异":{"docs":{},"常":{"docs":{},"结":{"docs":{},"束":{"docs":{},"，":{"docs":{},"会":{"docs":{},"有":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"取":{"docs":{},"代":{"docs":{},"它":{"docs":{},"，":{"docs":{},"保":{"docs":{},"证":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{},"单":{"docs":{},"工":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{},"是":{"docs":{},"可":{"docs":{},"保":{"docs":{},"证":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"地":{"docs":{},"执":{"docs":{},"行":{"docs":{},"各":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"在":{"docs":{},"任":{"docs":{},"意":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"不":{"docs":{},"会":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"是":{"docs":{},"活":{"docs":{},"动":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"更":{"docs":{},"高":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"再":{"docs":{},"进":{"docs":{},"行":{"docs":{},"业":{"docs":{},"务":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"一":{"docs":{},"锁":{"docs":{},"二":{"docs":{},"查":{"docs":{},"三":{"docs":{},"更":{"docs":{},"新":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}},"点":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"：":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}},"作":{"docs":{},"用":{"docs":{},"：":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"，":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"，":{"docs":{},"即":{"docs":{},"队":{"docs":{},"列":{"docs":{},"同":{"docs":{},"步":{"docs":{},"器":{"docs":{},"。":{"docs":{},"它":{"docs":{},"是":{"docs":{},"构":{"docs":{},"建":{"docs":{},"锁":{"docs":{},"或":{"docs":{},"者":{"docs":{},"其":{"docs":{},"他":{"docs":{},"同":{"docs":{},"步":{"docs":{},"组":{"docs":{},"件":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"框":{"docs":{},"架":{"docs":{},"（":{"docs":{},"如":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"面":{"docs":{},"意":{"docs":{},"思":{"docs":{},"为":{"docs":{},"信":{"docs":{},"号":{"docs":{},"量":{"docs":{},"。":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}},"递":{"docs":{},"减":{"docs":{},"计":{"docs":{},"数":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"它":{"docs":{},"允":{"docs":{},"许":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"等":{"docs":{},"待":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"在":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"一":{"docs":{},"组":{"docs":{},"操":{"docs":{},"作":{"docs":{},"完":{"docs":{},"成":{"docs":{},"。":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"循":{"docs":{},"环":{"docs":{},"栅":{"docs":{},"栏":{"docs":{},"。":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"一":{"docs":{},"组":{"docs":{},"线":{"docs":{},"程":{"docs":{},"等":{"docs":{},"待":{"docs":{},"至":{"docs":{},"某":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"之":{"docs":{},"后":{"docs":{},"再":{"docs":{},"全":{"docs":{},"部":{"docs":{},"同":{"docs":{},"时":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"循":{"docs":{},"环":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"当":{"docs":{},"所":{"docs":{},"有":{"docs":{},"等":{"docs":{},"待":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"被":{"docs":{},"释":{"docs":{},"放":{"docs":{},"以":{"docs":{},"后":{"docs":{},"，":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"键":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"构":{"docs":{},"建":{"docs":{},"锁":{"docs":{},"或":{"docs":{},"者":{"docs":{},"其":{"docs":{},"他":{"docs":{},"同":{"docs":{},"步":{"docs":{},"组":{"docs":{},"件":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"框":{"docs":{},"架":{"docs":{},"，":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"好":{"docs":{},"好":{"docs":{},"了":{"docs":{},"解":{"docs":{},"一":{"docs":{},"下":{"docs":{},"其":{"docs":{},"原":{"docs":{},"理":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"起":{"docs":{},"始":{"docs":{},"点":{"docs":{},"进":{"docs":{},"行":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"，":{"docs":{},"能":{"docs":{},"够":{"docs":{},"到":{"docs":{},"达":{"docs":{},"到":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"都":{"docs":{},"是":{"docs":{},"存":{"docs":{},"活":{"docs":{},"的":{"docs":{},"，":{"docs":{},"不":{"docs":{},"可":{"docs":{},"达":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"可":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"测":{"docs":{},"试":{"docs":{},"你":{"docs":{},"应":{"docs":{},"该":{"docs":{},"知":{"docs":{},"道":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"：":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"锁":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"总":{"docs":{},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"多":{"docs":{},"次":{"docs":{},"获":{"docs":{},"取":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"让":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"得":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"代":{"docs":{},"价":{"docs":{},"更":{"docs":{},"低":{"docs":{},"引":{"docs":{},"入":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"当":{"docs":{},"某":{"docs":{},"一":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"在":{"docs":{},"对":{"docs":{},"象":{"docs":{},"头":{"docs":{},"和":{"docs":{},"栈":{"docs":{},"帧":{"docs":{},"中":{"docs":{},"的":{"docs":{},"琐":{"docs":{},"记":{"docs":{},"录":{"docs":{},"里":{"docs":{},"存":{"docs":{},"储":{"docs":{},"锁":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"/":{"docs":{},"重":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}},"是":{"docs":{},"指":{"docs":{},"一":{"docs":{},"段":{"docs":{},"同":{"docs":{},"步":{"docs":{},"代":{"docs":{},"码":{"docs":{},"一":{"docs":{},"直":{"docs":{},"被":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"所":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"降":{"docs":{},"低":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"代":{"docs":{},"价":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"共":{"docs":{},"享":{"docs":{},"内":{"docs":{},"存":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}},"对":{"docs":{},"象":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.007246376811594203}}}}}}},"锁":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.011494252873563218}},"是":{"docs":{},"指":{"docs":{},"该":{"docs":{},"锁":{"docs":{},"可":{"docs":{},"被":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"所":{"docs":{},"持":{"docs":{},"有":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}},"又":{"docs":{},"称":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}},"典":{"docs":{},"型":{"docs":{},"场":{"docs":{},"景":{"docs":{},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{},"同":{"docs":{},"步":{"docs":{},"容":{"docs":{},"器":{"docs":{},"做":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"对":{"docs":{},"外":{"docs":{},"部":{"docs":{},"做":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"配":{"docs":{},"置":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}},"设":{"docs":{},"备":{"docs":{},"：":{"docs":{},"二":{"docs":{},"层":{"docs":{},"交":{"docs":{},"换":{"docs":{},"机":{"docs":{},"、":{"docs":{},"网":{"docs":{},"桥":{"docs":{},"、":{"docs":{},"网":{"docs":{},"卡":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}},"光":{"docs":{},"纤":{"docs":{},"、":{"docs":{},"同":{"docs":{},"轴":{"docs":{},"电":{"docs":{},"缆":{"docs":{},"、":{"docs":{},"双":{"docs":{},"绞":{"docs":{},"线":{"docs":{},"、":{"docs":{},"中":{"docs":{},"继":{"docs":{},"器":{"docs":{},"和":{"docs":{},"集":{"docs":{},"线":{"docs":{},"器":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}},"网":{"docs":{},"关":{"docs":{},"、":{"docs":{},"路":{"docs":{},"由":{"docs":{},"器":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0032076984763432237},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002188183807439825}},"并":{"docs":{},"启":{"docs":{},"动":{"docs":{},"新":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"主":{"docs":{},"要":{"docs":{},"有":{"docs":{},"三":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"方":{"docs":{},"式":{"docs":{},"？":{"docs":{},"这":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"各":{"docs":{},"自":{"docs":{},"利":{"docs":{},"弊":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"三":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"及":{"docs":{},"其":{"docs":{},"对":{"docs":{},"比":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{},"化":{"docs":{},"的":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}},"可":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"长":{"docs":{},"度":{"docs":{},"超":{"docs":{},"过":{"docs":{},"处":{"docs":{},"理":{"docs":{},"需":{"docs":{},"要":{"docs":{},"，":{"docs":{},"可":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"回":{"docs":{},"收":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"若":{"docs":{},"无":{"docs":{},"可":{"docs":{},"回":{"docs":{},"收":{"docs":{},"，":{"docs":{},"则":{"docs":{},"新":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"指":{"docs":{},"定":{"docs":{},"工":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"量":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"。":{"docs":{},"每":{"docs":{},"当":{"docs":{},"提":{"docs":{},"交":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"就":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"工":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"工":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"量":{"docs":{},"达":{"docs":{},"到":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"初":{"docs":{},"始":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"提":{"docs":{},"交":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"存":{"docs":{},"入":{"docs":{},"到":{"docs":{},"池":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"安":{"docs":{},"排":{"docs":{},"任":{"docs":{},"务":{"docs":{},"在":{"docs":{},"给":{"docs":{},"定":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"后":{"docs":{},"运":{"docs":{},"行":{"docs":{},"，":{"docs":{},"或":{"docs":{},"定":{"docs":{},"期":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"仓":{"docs":{},"库":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"就":{"docs":{},"愉":{"docs":{},"快":{"docs":{},"的":{"docs":{},"拉":{"docs":{},"取":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}},"目":{"docs":{},"录":{"docs":{},"，":{"docs":{},"进":{"docs":{},"入":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}},"索":{"docs":{},"引":{"docs":{},"和":{"docs":{},"维":{"docs":{},"护":{"docs":{},"索":{"docs":{},"引":{"docs":{},"需":{"docs":{},"要":{"docs":{},"时":{"docs":{},"间":{"docs":{},"成":{"docs":{},"本":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}},"空":{"docs":{},"间":{"docs":{},"成":{"docs":{},"本":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}},"千":{"docs":{},"分":{"docs":{},"之":{"docs":{},"一":{"docs":{},"微":{"docs":{},"秒":{"docs":{},")":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}},"毫":{"docs":{},"秒":{"docs":{},")":{"docs":{},"和":{"docs":{},"毫":{"docs":{},"微":{"docs":{},"秒":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},",":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}},"协":{"docs":{},"程":{"docs":{},"：":{"docs":{},"在":{"docs":{},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"实":{"docs":{},"现":{"docs":{},"多":{"docs":{},"任":{"docs":{},"务":{"docs":{},"调":{"docs":{},"度":{"docs":{},"，":{"docs":{},"并":{"docs":{},"在":{"docs":{},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"维":{"docs":{},"持":{"docs":{},"多":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"切":{"docs":{},"换":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"议":{"docs":{},"实":{"docs":{},"现":{"docs":{},"网":{"docs":{},"络":{"docs":{},"通":{"docs":{},"信":{"docs":{},"。":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}},"；":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}}},"分":{"docs":{},"层":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}},"参":{"docs":{},"数":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0025188916876574307}},"说":{"docs":{},"明":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}},"来":{"docs":{},"控":{"docs":{},"制":{"docs":{},"是":{"docs":{},"否":{"docs":{},"对":{"docs":{},"类":{"docs":{},"进":{"docs":{},"行":{"docs":{},"卸":{"docs":{},"载":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}},"设":{"docs":{},"置":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"让":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"出":{"docs":{},"现":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"所":{"docs":{},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"中":{"docs":{},"的":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"是":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"识":{"docs":{},"别":{"docs":{},"的":{"docs":{},"（":{"docs":{},"仅":{"docs":{},"按":{"docs":{},"照":{"docs":{},"文":{"docs":{},"件":{"docs":{},"名":{"docs":{},"识":{"docs":{},"别":{"docs":{},"，":{"docs":{},"如":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"如":{"docs":{},"若":{"docs":{},"不":{"docs":{},"然":{"docs":{},"，":{"docs":{},"你":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"分":{"docs":{},"析":{"docs":{},"输":{"docs":{},"出":{"docs":{},"日":{"docs":{},"志":{"docs":{},"并":{"docs":{},"检":{"docs":{},"查":{"docs":{},"分":{"docs":{},"配":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"需":{"docs":{},"要":{"docs":{},"通":{"docs":{},"过":{"docs":{},"不":{"docs":{},"断":{"docs":{},"调":{"docs":{},"整":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"开":{"docs":{},"始":{"docs":{},"收":{"docs":{},"集":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"请":{"docs":{},"在":{"docs":{},"收":{"docs":{},"集":{"docs":{},"至":{"docs":{},"少":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"分":{"docs":{},"析":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"应":{"docs":{},"用":{"docs":{},"到":{"docs":{},"两":{"docs":{},"个":{"docs":{},"及":{"docs":{},"以":{"docs":{},"上":{"docs":{},"的":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"上":{"docs":{},"然":{"docs":{},"后":{"docs":{},"比":{"docs":{},"较":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"那":{"docs":{},"些":{"docs":{},"被":{"docs":{},"证":{"docs":{},"明":{"docs":{},"可":{"docs":{},"以":{"docs":{},"提":{"docs":{},"高":{"docs":{},"性":{"docs":{},"能":{"docs":{},"或":{"docs":{},"减":{"docs":{},"少":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"值":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}},"调":{"docs":{},"优":{"docs":{},"案":{"docs":{},"例":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0025188916876574307}}}},"考":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"阅":{"docs":{},"读":{"docs":{},"：":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.010425020048115477},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0016411378555798686},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}}}}}},"s":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"y":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"和":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}},"全":{"docs":{},"面":{"docs":{},"理":{"docs":{},"解":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}},"进":{"docs":{},"程":{"docs":{},"和":{"docs":{},"线":{"docs":{},"程":{"docs":{},"关":{"docs":{},"系":{"docs":{},"及":{"docs":{},"区":{"docs":{},"别":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}},"深":{"docs":{},"入":{"docs":{},"理":{"docs":{},"解":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}},"资":{"docs":{},"料":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.015748031496062992},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861},"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},"：":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"堆":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.007246376811594203},"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.015748031496062992}},"区":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}},"上":{"docs":{},"包":{"docs":{},"含":{"docs":{},"在":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}},"\"":{"docs":{},"）":{"docs":{},"，":{"docs":{},"现":{"docs":{},"代":{"docs":{},"的":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"基":{"docs":{},"本":{"docs":{},"都":{"docs":{},"是":{"docs":{},"采":{"docs":{},"用":{"docs":{},"分":{"docs":{},"代":{"docs":{},"收":{"docs":{},"集":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"该":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"是":{"docs":{},"针":{"docs":{},"对":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"采":{"docs":{},"取":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"把":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"样":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"可":{"docs":{},"以":{"docs":{},"动":{"docs":{},"态":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"，":{"docs":{},"动":{"docs":{},"态":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"失":{"docs":{},"败":{"docs":{},"一":{"docs":{},"样":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"连":{"docs":{},"续":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"可":{"docs":{},"以":{"docs":{},"动":{"docs":{},"态":{"docs":{},"增":{"docs":{},"加":{"docs":{},"其":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"增":{"docs":{},"加":{"docs":{},"失":{"docs":{},"败":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"来":{"docs":{},"回":{"docs":{},"复":{"docs":{},"制":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{},"任":{"docs":{},"何":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}},"。":{"docs":{},"（":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"不":{"docs":{},"是":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"发":{"docs":{},"生":{"docs":{},"在":{"docs":{},"所":{"docs":{},"有":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"操":{"docs":{},"作":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"只":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"，":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"可":{"docs":{},"以":{"docs":{},"进":{"docs":{},"行":{"docs":{},"多":{"docs":{},"次":{"docs":{},"）":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"元":{"docs":{},"空":{"docs":{},"间":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"内":{"docs":{},"存":{"docs":{},"大":{"docs":{},"小":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"设":{"docs":{},"置":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"设":{"docs":{},"置":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"限":{"docs":{},"制":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"分":{"docs":{},"成":{"docs":{},"以":{"docs":{},"下":{"docs":{},"三":{"docs":{},"块":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}},"为":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"和":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"和":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}},"方":{"docs":{},"法":{"docs":{},"区":{"docs":{},"进":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"的":{"docs":{},"详":{"docs":{},"细":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"如":{"docs":{},"当":{"docs":{},"前":{"docs":{},"使":{"docs":{},"用":{"docs":{},"率":{"docs":{},"、":{"docs":{},"当":{"docs":{},"前":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"哪":{"docs":{},"种":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"等":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"里":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}},"空":{"docs":{},"间":{"docs":{},"分":{"docs":{},"配":{"docs":{},"*":{"docs":{},"*":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"被":{"docs":{},"分":{"docs":{},"成":{"docs":{},"许":{"docs":{},"多":{"docs":{},"固":{"docs":{},"定":{"docs":{},"大":{"docs":{},"小":{"docs":{},"区":{"docs":{},"域":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"块":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}},"块":{"docs":{},"单":{"docs":{},"独":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"被":{"docs":{},"分":{"docs":{},"割":{"docs":{},"成":{"docs":{},"多":{"docs":{},"个":{"docs":{},"区":{"docs":{},"域":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}},"被":{"docs":{},"分":{"docs":{},"割":{"docs":{},"成":{"docs":{},"大":{"docs":{},"约":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"溢":{"docs":{},"出":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"被":{"docs":{},"分":{"docs":{},"为":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"、":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"和":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"，":{"docs":{},"其":{"docs":{},"它":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"进":{"docs":{},"行":{"docs":{},"收":{"docs":{},"集":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"都":{"docs":{},"是":{"docs":{},"整":{"docs":{},"个":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"或":{"docs":{},"者":{"docs":{},"老":{"docs":{},"生":{"docs":{},"代":{"docs":{},"，":{"docs":{},"而":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"到":{"docs":{},"文":{"docs":{},"件":{"docs":{},"，":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"大":{"docs":{},"小":{"docs":{},"设":{"docs":{},"置":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}},"快":{"docs":{},"照":{"docs":{},"（":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"详":{"docs":{},"细":{"docs":{},"信":{"docs":{},"息":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{},"总":{"docs":{},"线":{"docs":{},"锁":{"docs":{},"保":{"docs":{},"证":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"锁":{"docs":{},"保":{"docs":{},"证":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"（":{"docs":{},"修":{"docs":{},"改":{"docs":{},"内":{"docs":{},"存":{"docs":{},"地":{"docs":{},"址":{"docs":{},"，":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"机":{"docs":{},"制":{"docs":{},"：":{"docs":{},"阻":{"docs":{},"止":{"docs":{},"同":{"docs":{},"时":{"docs":{},"修":{"docs":{},"改":{"docs":{},"由":{"2":{"docs":{},"个":{"docs":{},"以":{"docs":{},"上":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"区":{"docs":{},"域":{"docs":{},"数":{"docs":{},"据":{"docs":{},"）":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"断":{"docs":{},"异":{"docs":{},"常":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}},"无":{"docs":{},"法":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"异":{"docs":{},"常":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}},"v":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"中":{"docs":{},"m":{"docs":{},"d":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"乱":{"docs":{},"码":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"手":{"docs":{},"动":{"docs":{},"生":{"docs":{},"成":{"docs":{},"m":{"docs":{},"d":{"docs":{},"文":{"docs":{},"件":{"docs":{},"。":{"docs":{},"不":{"docs":{},"用":{"docs":{},"系":{"docs":{},"统":{"docs":{},"自":{"docs":{},"动":{"docs":{},"生":{"docs":{},"成":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"可":{"docs":{},"以":{"docs":{},"避":{"docs":{},"免":{"docs":{},"乱":{"docs":{},"码":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"比":{"docs":{},"较":{"docs":{},"低":{"docs":{},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"为":{"docs":{},"系":{"docs":{},"统":{"docs":{},"中":{"docs":{},"的":{"docs":{},"其":{"docs":{},"它":{"docs":{},"对":{"docs":{},"象":{"docs":{},"和":{"docs":{},"线":{"docs":{},"程":{"docs":{},"提":{"docs":{},"供":{"docs":{},"服":{"docs":{},"务":{"docs":{},"。":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"就":{"docs":{},"是":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"d":{"docs":{},"a":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}},"尽":{"docs":{},"量":{"docs":{},"少":{"docs":{},"用":{"docs":{},"锁":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}},"已":{"docs":{},"经":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}},"被":{"docs":{},"增":{"docs":{},"在":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"分":{"docs":{},"配":{"docs":{},"内":{"docs":{},"存":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"中":{"docs":{},"的":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"空":{"docs":{},"间":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"发":{"docs":{},"送":{"docs":{},"但":{"docs":{},"尚":{"docs":{},"未":{"docs":{},"得":{"docs":{},"到":{"docs":{},"确":{"docs":{},"认":{"docs":{},"的":{"docs":{},"字":{"docs":{},"节":{"docs":{},"。":{"docs":{},"发":{"docs":{},"送":{"docs":{},"方":{"docs":{},"在":{"docs":{},"确":{"docs":{},"认":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"不":{"docs":{},"认":{"docs":{},"为":{"docs":{},"这":{"docs":{},"些":{"docs":{},"数":{"docs":{},"据":{"docs":{},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{},"上":{"docs":{},"图":{"docs":{},"中":{"docs":{},"的":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"确":{"docs":{},"认":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}},"已":{"docs":{},"确":{"docs":{},"认":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}},"开":{"docs":{},"始":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}},"（":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"）":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}},"工":{"docs":{},"作":{"docs":{},"，":{"docs":{},"采":{"docs":{},"用":{"docs":{},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{},"方":{"docs":{},"式":{"docs":{},"回":{"docs":{},"收":{"docs":{},"空":{"docs":{},"间":{"docs":{},"并":{"docs":{},"整":{"docs":{},"理":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"启":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"后":{"docs":{},"，":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"选":{"docs":{},"项":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.004201680672268907}}}}}},"辟":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"数":{"docs":{},"组":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"者":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"中":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}},"具":{"docs":{},"备":{"docs":{},"以":{"docs":{},"下":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}},"放":{"docs":{},"在":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"需":{"docs":{},"要":{"docs":{},"知":{"docs":{},"道":{"docs":{},"网":{"docs":{},"络":{"docs":{},"实":{"docs":{},"际":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"处":{"docs":{},"理":{"docs":{},"带":{"docs":{},"宽":{"docs":{},"或":{"docs":{},"是":{"docs":{},"数":{"docs":{},"据":{"docs":{},"处":{"docs":{},"理":{"docs":{},"速":{"docs":{},"度":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"才":{"docs":{},"不":{"docs":{},"会":{"docs":{},"引":{"docs":{},"起":{"docs":{},"网":{"docs":{},"络":{"docs":{},"拥":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"导":{"docs":{},"致":{"docs":{},"丢":{"docs":{},"包":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"的":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"传":{"docs":{},"输":{"docs":{},"以":{"docs":{},"及":{"docs":{},"包":{"docs":{},"乱":{"docs":{},"序":{"docs":{},"（":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"）":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"括":{"docs":{},"号":{"docs":{},"里":{"docs":{},"配":{"docs":{},"置":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"通":{"docs":{},"常":{"docs":{},"要":{"docs":{},"高":{"docs":{},"于":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}},"文":{"docs":{},"章":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}},"件":{"docs":{},"中":{"docs":{},"的":{"docs":{},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{},"（":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"各":{"docs":{},"种":{"docs":{},"字":{"docs":{},"面":{"docs":{},"量":{"docs":{},"和":{"docs":{},"符":{"docs":{},"号":{"docs":{},"引":{"docs":{},"用":{"docs":{},"）":{"docs":{},"会":{"docs":{},"在":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"后":{"docs":{},"被":{"docs":{},"放":{"docs":{},"入":{"docs":{},"这":{"docs":{},"个":{"docs":{},"区":{"docs":{},"域":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"都":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"能":{"docs":{},"够":{"docs":{},"确":{"docs":{},"定":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"记":{"docs":{},"录":{"docs":{},"有":{"docs":{},"多":{"docs":{},"大":{"docs":{},"以":{"docs":{},"及":{"docs":{},"它":{"docs":{},"们":{"docs":{},"在":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"是":{"docs":{},"一":{"docs":{},"组":{"docs":{},"以":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"本":{"docs":{},"质":{"docs":{},"上":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"张":{"docs":{},"表":{"docs":{},"，":{"docs":{},"由":{"docs":{},"下":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"项":{"docs":{},"组":{"docs":{},"成":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}},"格":{"docs":{},"式":{"docs":{},"的":{"docs":{},"规":{"docs":{},"范":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"能":{"docs":{},"被":{"docs":{},"当":{"docs":{},"前":{"docs":{},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}},"验":{"docs":{},"证":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"生":{"docs":{},"成":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}},"由":{"docs":{},"类":{"docs":{},"索":{"docs":{},"引":{"docs":{},"、":{"docs":{},"父":{"docs":{},"类":{"docs":{},"索":{"docs":{},"引":{"docs":{},"和":{"docs":{},"接":{"docs":{},"口":{"docs":{},"索":{"docs":{},"引":{"docs":{},"集":{"docs":{},"合":{"docs":{},"这":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"头":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"符":{"docs":{},"合":{"docs":{},"当":{"docs":{},"前":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"的":{"docs":{},"要":{"docs":{},"求":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"不":{"docs":{},"会":{"docs":{},"危":{"docs":{},"害":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"自":{"docs":{},"身":{"docs":{},"的":{"docs":{},"安":{"docs":{},"全":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"版":{"docs":{},"本":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"号":{"docs":{},"：":{"docs":{},"第":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}},"）":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"读":{"docs":{},"取":{"docs":{},"该":{"docs":{},"文":{"docs":{},"件":{"docs":{},"内":{"docs":{},"容":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{},"本":{"docs":{},"地":{"docs":{},"或":{"docs":{},"其":{"docs":{},"他":{"docs":{},"机":{"docs":{},"器":{"docs":{},"上":{"docs":{},"进":{"docs":{},"行":{"docs":{},"分":{"docs":{},"析":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}},"，":{"docs":{},"j":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"查":{"docs":{},"询":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"输":{"docs":{},"入":{"docs":{},"流":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}},"出":{"docs":{},"流":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}}}}},"无":{"docs":{},"限":{"docs":{},"制":{"docs":{},"的":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"会":{"docs":{},"引":{"docs":{},"起":{"docs":{},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"内":{"docs":{},"存":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"是":{"docs":{},"个":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"可":{"docs":{},"以":{"docs":{},"限":{"docs":{},"制":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"并":{"docs":{},"且":{"docs":{},"可":{"docs":{},"以":{"docs":{},"回":{"docs":{},"收":{"docs":{},"再":{"docs":{},"利":{"docs":{},"用":{"docs":{},"这":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{},"利":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"锁":{"docs":{},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}},"法":{"docs":{},"保":{"docs":{},"证":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"。":{"docs":{},"通":{"docs":{},"常":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}},"替":{"docs":{},"代":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}},"处":{"docs":{},"理":{"docs":{},"浮":{"docs":{},"动":{"docs":{},"垃":{"docs":{},"圾":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"回":{"docs":{},"收":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"论":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"引":{"docs":{},"用":{"docs":{},"计":{"docs":{},"算":{"docs":{},"算":{"docs":{},"法":{"docs":{},"判":{"docs":{},"断":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"数":{"docs":{},"量":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"可":{"docs":{},"达":{"docs":{},"性":{"docs":{},"分":{"docs":{},"析":{"docs":{},"算":{"docs":{},"法":{"docs":{},"判":{"docs":{},"断":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"链":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"达":{"docs":{},"，":{"docs":{},"判":{"docs":{},"定":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"都":{"docs":{},"与":{"docs":{},"引":{"docs":{},"用":{"docs":{},"有":{"docs":{},"关":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"编":{"docs":{},"程":{"docs":{},"模":{"docs":{},"型":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}},"资":{"docs":{},"源":{"docs":{},"利":{"docs":{},"用":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.008379888268156424}}}}}}}},"快":{"docs":{},"的":{"docs":{},"响":{"docs":{},"应":{"docs":{},"时":{"docs":{},"间":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}},"有":{"docs":{},"效":{"docs":{},"率":{"docs":{},"的":{"docs":{},"利":{"docs":{},"用":{"docs":{},"多":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"核":{"docs":{},"心":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"编":{"docs":{},"程":{"docs":{},"模":{"docs":{},"型":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}},"新":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}}}},"这":{"docs":{},"个":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046}}}},"数":{"docs":{},"据":{"docs":{},"时":{"docs":{},"效":{"docs":{},"率":{"docs":{},"低":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"要":{"docs":{},"同":{"docs":{},"时":{"docs":{},"更":{"docs":{},"新":{"docs":{},"索":{"docs":{},"引":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}},"多":{"docs":{},"示":{"docs":{},"例":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"耗":{"docs":{},"时":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"减":{"docs":{},"少":{"docs":{},"进":{"docs":{},"入":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"数":{"docs":{},"量":{"docs":{},"可":{"docs":{},"以":{"docs":{},"显":{"docs":{},"著":{"docs":{},"降":{"docs":{},"低":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}},"标":{"docs":{},"记":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.008403361344537815}},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"优":{"docs":{},"化":{"docs":{},"；":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"优":{"docs":{},"化":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}},"和":{"docs":{},"清":{"docs":{},"除":{"docs":{},"过":{"docs":{},"程":{"docs":{},"效":{"docs":{},"率":{"docs":{},"都":{"docs":{},"不":{"docs":{},"高":{"docs":{},"；":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}},"志":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"包":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.008645533141210375},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.008645533141210375},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.008645533141210375}}}}}}}}},"框":{"docs":{},"架":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385}},"中":{"docs":{},"最":{"docs":{},"核":{"docs":{},"心":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"非":{"docs":{},"常":{"docs":{},"方":{"docs":{},"便":{"docs":{},"的":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"这":{"docs":{},"篇":{"docs":{},"文":{"docs":{},"章":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{},"解":{"docs":{},"如":{"docs":{},"何":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"根":{"docs":{},"据":{"docs":{},"一":{"docs":{},"组":{"docs":{},"执":{"docs":{},"行":{"docs":{},"策":{"docs":{},"略":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"调":{"docs":{},"度":{"docs":{},"，":{"docs":{},"执":{"docs":{},"行":{"docs":{},"和":{"docs":{},"控":{"docs":{},"制":{"docs":{},"的":{"docs":{},"异":{"docs":{},"步":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"框":{"docs":{},"架":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"它":{"docs":{},"主":{"docs":{},"要":{"docs":{},"用":{"docs":{},"于":{"docs":{},"实":{"docs":{},"现":{"docs":{},"生":{"docs":{},"产":{"docs":{},"者":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}},"、":{"docs":{},"动":{"docs":{},"态":{"docs":{},"生":{"docs":{},"成":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"正":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{},"用":{"docs":{},"户":{"docs":{},"线":{"docs":{},"程":{"docs":{},"无":{"docs":{},"法":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}},"因":{"docs":{},"为":{"docs":{},"循":{"docs":{},"环":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"死":{"docs":{},"锁":{"docs":{},"是":{"docs":{},"指":{"docs":{},"两":{"docs":{},"个":{"docs":{},"以":{"docs":{},"上":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"永":{"docs":{},"远":{"docs":{},"相":{"docs":{},"互":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"产":{"docs":{},"生":{"docs":{},"至":{"docs":{},"少":{"docs":{},"需":{"docs":{},"要":{"docs":{},"两":{"docs":{},"个":{"docs":{},"以":{"docs":{},"上":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"和":{"docs":{},"两":{"docs":{},"个":{"docs":{},"以":{"docs":{},"上":{"docs":{},"的":{"docs":{},"资":{"docs":{},"源":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"线":{"docs":{},"程":{"docs":{},"进":{"docs":{},"入":{"docs":{},"无":{"docs":{},"限":{"docs":{},"期":{"docs":{},"等":{"docs":{},"待":{"docs":{},"状":{"docs":{},"态":{"docs":{},"时":{"docs":{},"发":{"docs":{},"生":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"所":{"docs":{},"请":{"docs":{},"求":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"被":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"持":{"docs":{},"有":{"docs":{},"，":{"docs":{},"而":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"又":{"docs":{},"等":{"docs":{},"待":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"持":{"docs":{},"有":{"docs":{},"的":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"检":{"docs":{},"测":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"预":{"docs":{},"防":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"它":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"针":{"docs":{},"对":{"docs":{},"那":{"docs":{},"些":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"实":{"docs":{},"现":{"docs":{},"按":{"docs":{},"序":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"并":{"docs":{},"且":{"docs":{},"锁":{"docs":{},"超":{"docs":{},"时":{"docs":{},"也":{"docs":{},"不":{"docs":{},"可":{"docs":{},"行":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"）":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}},"消":{"docs":{},"息":{"docs":{},"传":{"docs":{},"递":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"费":{"docs":{},"者":{"docs":{},"模":{"docs":{},"型":{"docs":{},"？":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}}}},"耗":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"状":{"docs":{},"态":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607}}},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"在":{"docs":{},"其":{"docs":{},"他":{"docs":{},"处":{"docs":{},"于":{"docs":{},"非":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"上":{"docs":{},"执":{"docs":{},"行":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"没":{"docs":{},"有":{"docs":{},"意":{"docs":{},"义":{"docs":{},"的":{"docs":{},"。":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"这":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"静":{"docs":{},"态":{"docs":{},"的":{"docs":{},"。":{"docs":{},"它":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"当":{"docs":{},"前":{"docs":{},"正":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"工":{"docs":{},"作":{"docs":{},"，":{"docs":{},"并":{"docs":{},"避":{"docs":{},"免":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"认":{"docs":{},"为":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"其":{"docs":{},"他":{"docs":{},"非":{"docs":{},"运":{"docs":{},"行":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"这":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"配":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"它":{"docs":{},"使":{"docs":{},"得":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"能":{"docs":{},"够":{"docs":{},"从":{"docs":{},"中":{"docs":{},"断":{"docs":{},"点":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{},"是":{"docs":{},"多":{"docs":{},"任":{"docs":{},"务":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"和":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"环":{"docs":{},"境":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"特":{"docs":{},"征":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"转":{"docs":{},"入":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}},"，":{"docs":{},"等":{"docs":{},"待":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"此":{"docs":{},"时":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"不":{"docs":{},"能":{"docs":{},"够":{"docs":{},"接":{"docs":{},"受":{"docs":{},"新":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"它":{"docs":{},"会":{"docs":{},"等":{"docs":{},"待":{"docs":{},"所":{"docs":{},"有":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"受":{"docs":{},"新":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"会":{"docs":{},"去":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"终":{"docs":{},"止":{"docs":{},"正":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"然":{"docs":{},"后":{"docs":{},"中":{"docs":{},"断":{"docs":{},"所":{"docs":{},"有":{"docs":{},"没":{"docs":{},"有":{"docs":{},"正":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}},"标":{"docs":{},"记":{"docs":{},"量":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"保":{"docs":{},"留":{"docs":{},"数":{"docs":{},"（":{"docs":{},"详":{"docs":{},"细":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"参":{"docs":{},"见":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}},"就":{"docs":{},"直":{"docs":{},"接":{"docs":{},"让":{"docs":{},"到":{"docs":{},"达":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}},"；":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}},"后":{"docs":{},"，":{"docs":{},"你":{"docs":{},"需":{"docs":{},"要":{"docs":{},"分":{"docs":{},"析":{"docs":{},"监":{"docs":{},"控":{"docs":{},"结":{"docs":{},"构":{"docs":{},"并":{"docs":{},"决":{"docs":{},"定":{"docs":{},"是":{"docs":{},"否":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"，":{"docs":{},"收":{"docs":{},"到":{"docs":{},"建":{"docs":{},"立":{"docs":{},"连":{"docs":{},"接":{"docs":{},"请":{"docs":{},"求":{"docs":{},"的":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}},"由":{"docs":{},"于":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"这":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"线":{"docs":{},"程":{"docs":{},"持":{"docs":{},"有":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"只":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"同":{"docs":{},"步":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"他":{"docs":{},"们":{"docs":{},"只":{"docs":{},"能":{"docs":{},"在":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"者":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"中":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"被":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"父":{"docs":{},"类":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"和":{"docs":{},"老":{"docs":{},"版":{"docs":{},"本":{"docs":{},"不":{"docs":{},"兼":{"docs":{},"容":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"修":{"docs":{},"改":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"：":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"收":{"docs":{},"方":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}},"其":{"docs":{},"他":{"docs":{},"文":{"docs":{},"件":{"docs":{},"生":{"docs":{},"成":{"docs":{},"，":{"docs":{},"典":{"docs":{},"型":{"docs":{},"场":{"docs":{},"景":{"docs":{},"是":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"占":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"种":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"在":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"只":{"docs":{},"能":{"docs":{},"处":{"docs":{},"于":{"docs":{},"其":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"取":{"docs":{},"值":{"docs":{},"。":{"docs":{},"可":{"docs":{},"选":{"docs":{},"的":{"docs":{},"单":{"docs":{},"位":{"docs":{},"有":{"docs":{},"天":{"docs":{},"（":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"）":{"docs":{},"，":{"docs":{},"小":{"docs":{},"时":{"docs":{},"（":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"）":{"docs":{},"，":{"docs":{},"分":{"docs":{},"钟":{"docs":{},"（":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"）":{"docs":{},"，":{"docs":{},"毫":{"docs":{},"秒":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},")":{"docs":{},"，":{"docs":{},"微":{"docs":{},"秒":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},",":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{},"及":{"docs":{},"切":{"docs":{},"换":{"docs":{},"(":{"docs":{},"透":{"docs":{},"彻":{"docs":{},"讲":{"docs":{},"解":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0024057738572574178}}}}}}}}}}},"，":{"docs":{},"级":{"docs":{},"别":{"docs":{},"从":{"docs":{},"低":{"docs":{},"到":{"docs":{},"高":{"docs":{},"为":{"docs":{},"：":{"docs":{},"无":{"docs":{},"锁":{"docs":{},"状":{"docs":{},"态":{"docs":{},"、":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"状":{"docs":{},"态":{"docs":{},"、":{"docs":{},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"状":{"docs":{},"态":{"docs":{},"和":{"docs":{},"重":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"这":{"docs":{},"几":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"会":{"docs":{},"随":{"docs":{},"着":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"情":{"docs":{},"况":{"docs":{},"逐":{"docs":{},"渐":{"docs":{},"升":{"docs":{},"级":{"docs":{},"。":{"docs":{},"锁":{"docs":{},"可":{"docs":{},"以":{"docs":{},"升":{"docs":{},"级":{"docs":{},"但":{"docs":{},"不":{"docs":{},"能":{"docs":{},"降":{"docs":{},"级":{"docs":{},"，":{"docs":{},"目":{"docs":{},"的":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"提":{"docs":{},"高":{"docs":{},"获":{"docs":{},"得":{"docs":{},"锁":{"docs":{},"和":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"效":{"docs":{},"率":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"、":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"、":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"应":{"docs":{},"用":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}},"场":{"docs":{},"景":{"docs":{},"中":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"称":{"docs":{},"为":{"docs":{},"对":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"进":{"docs":{},"行":{"docs":{},"主":{"docs":{},"动":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"除":{"docs":{},"此":{"docs":{},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"都":{"docs":{},"不":{"docs":{},"会":{"docs":{},"触":{"docs":{},"发":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"称":{"docs":{},"为":{"docs":{},"被":{"docs":{},"动":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"被":{"docs":{},"动":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"常":{"docs":{},"见":{"docs":{},"例":{"docs":{},"子":{"docs":{},"包":{"docs":{},"括":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"竞":{"docs":{},"争":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"指":{"docs":{},"向":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}},"态":{"docs":{},"条":{"docs":{},"件":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.007246376811594203}},"和":{"docs":{},"临":{"docs":{},"界":{"docs":{},"区":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}},"（":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}},"答":{"docs":{},"：":{"docs":{},"否":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"案":{"docs":{},"是":{"docs":{},"：":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"有":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"和":{"docs":{},"线":{"docs":{},"程":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{},"的":{"docs":{},"开":{"docs":{},"销":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}},"未":{"docs":{},"必":{"docs":{},"。":{"docs":{},"同":{"docs":{},"步":{"docs":{},"容":{"docs":{},"器":{"docs":{},"未":{"docs":{},"必":{"docs":{},"真":{"docs":{},"的":{"docs":{},"安":{"docs":{},"全":{"docs":{},"。":{"docs":{},"在":{"docs":{},"做":{"docs":{},"复":{"docs":{},"合":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"需":{"docs":{},"要":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"来":{"docs":{},"保":{"docs":{},"护":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"简":{"docs":{},"言":{"docs":{},"之":{"docs":{},"，":{"docs":{},"进":{"docs":{},"程":{"docs":{},"可":{"docs":{},"视":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"正":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}},"介":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385},"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}},"算":{"docs":{},"法":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"取":{"docs":{},"模":{"docs":{},"分":{"docs":{},"段":{"docs":{},"，":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"处":{"docs":{},"理":{"docs":{},"不":{"docs":{},"同":{"docs":{},"段":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}},"来":{"docs":{},"更":{"docs":{},"新":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"，":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"就":{"docs":{},"是":{"docs":{},"原":{"docs":{},"子":{"docs":{},"类":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}},"终":{"docs":{},"止":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}},"结":{"docs":{},"器":{"docs":{},"规":{"docs":{},"则":{"docs":{},"：":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"启":{"docs":{},"动":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"终":{"docs":{},"结":{"docs":{},"器":{"docs":{},"之":{"docs":{},"前":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"成":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"控":{"docs":{},"制":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"由":{"docs":{},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"来":{"docs":{},"控":{"docs":{},"制":{"docs":{},"它":{"docs":{},"是":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"（":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"不":{"docs":{},"要":{"docs":{},"让":{"docs":{},"你":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"部":{"docs":{},"划":{"docs":{},"分":{"docs":{},"为":{"docs":{},"线":{"docs":{},"程":{"docs":{},"栈":{"docs":{},"和":{"docs":{},"堆":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}},"每":{"docs":{},"一":{"docs":{},"条":{"docs":{},"线":{"docs":{},"程":{"docs":{},"正":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"堆":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"，":{"docs":{},"生":{"docs":{},"成":{"docs":{},"线":{"docs":{},"程":{"docs":{},"快":{"docs":{},"照":{"docs":{},"的":{"docs":{},"主":{"docs":{},"要":{"docs":{},"目":{"docs":{},"的":{"docs":{},"是":{"docs":{},"定":{"docs":{},"位":{"docs":{},"线":{"docs":{},"程":{"docs":{},"出":{"docs":{},"现":{"docs":{},"长":{"docs":{},"时":{"docs":{},"间":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"，":{"docs":{},"如":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"、":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"、":{"docs":{},"请":{"docs":{},"求":{"docs":{},"外":{"docs":{},"部":{"docs":{},"资":{"docs":{},"源":{"docs":{},"导":{"docs":{},"致":{"docs":{},"的":{"docs":{},"长":{"docs":{},"时":{"docs":{},"间":{"docs":{},"等":{"docs":{},"待":{"docs":{},"等":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"里":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"栈":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"栈":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"当":{"docs":{},"前":{"docs":{},"执":{"docs":{},"行":{"docs":{},"点":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"仅":{"docs":{},"能":{"docs":{},"访":{"docs":{},"问":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"栈":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"本":{"docs":{},"地":{"docs":{},"变":{"docs":{},"量":{"docs":{},"对":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"可":{"docs":{},"见":{"docs":{},"，":{"docs":{},"仅":{"docs":{},"自":{"docs":{},"己":{"docs":{},"可":{"docs":{},"见":{"docs":{},"。":{"docs":{},"即":{"docs":{},"使":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"任":{"docs":{},"然":{"docs":{},"在":{"docs":{},"在":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"来":{"docs":{},"创":{"docs":{},"建":{"docs":{},"本":{"docs":{},"地":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"每":{"docs":{},"个":{"docs":{},"本":{"docs":{},"地":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"独":{"docs":{},"有":{"docs":{},"版":{"docs":{},"本":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"第":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"把":{"docs":{},"它":{"docs":{},"当":{"docs":{},"成":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"，":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}},"栈":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.015748031496062992}},"中":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"和":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"内":{"docs":{},"存":{"docs":{},"大":{"docs":{},"小":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"只":{"docs":{},"不":{"docs":{},"过":{"docs":{},"是":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"栈":{"docs":{},"为":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"服":{"docs":{},"务":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"适":{"docs":{},"用":{"docs":{},"引":{"docs":{},"用":{"docs":{},"计":{"docs":{},"数":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"方":{"docs":{},"法":{"docs":{},"区":{"docs":{},"是":{"docs":{},"用":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"中":{"docs":{},"存":{"docs":{},"放":{"docs":{},"的":{"docs":{},"为":{"docs":{},"一":{"docs":{},"些":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"该":{"docs":{},"算":{"docs":{},"法":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"，":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"永":{"docs":{},"远":{"docs":{},"地":{"docs":{},"要":{"docs":{},"求":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"年":{"docs":{},"龄":{"docs":{},"必":{"docs":{},"须":{"docs":{},"达":{"docs":{},"到":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"会":{"docs":{},"保":{"docs":{},"证":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}},"外":{"docs":{},"部":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"以":{"docs":{},"便":{"docs":{},"让":{"docs":{},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"自":{"docs":{},"己":{"docs":{},"决":{"docs":{},"定":{"docs":{},"如":{"docs":{},"何":{"docs":{},"去":{"docs":{},"获":{"docs":{},"取":{"docs":{},"所":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"类":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"规":{"docs":{},"范":{"docs":{},"中":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"强":{"docs":{},"制":{"docs":{},"约":{"docs":{},"束":{"docs":{},"何":{"docs":{},"时":{"docs":{},"进":{"docs":{},"行":{"docs":{},"加":{"docs":{},"载":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"规":{"docs":{},"范":{"docs":{},"严":{"docs":{},"格":{"docs":{},"规":{"docs":{},"定":{"docs":{},"了":{"docs":{},"有":{"docs":{},"且":{"docs":{},"只":{"docs":{},"有":{"docs":{},"下":{"docs":{},"列":{"docs":{},"五":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"必":{"docs":{},"须":{"docs":{},"对":{"docs":{},"类":{"docs":{},"进":{"docs":{},"行":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"（":{"docs":{},"加":{"docs":{},"载":{"docs":{},"、":{"docs":{},"验":{"docs":{},"证":{"docs":{},"、":{"docs":{},"准":{"docs":{},"备":{"docs":{},"都":{"docs":{},"会":{"docs":{},"随":{"docs":{},"着":{"docs":{},"发":{"docs":{},"生":{"docs":{},"）":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"快":{"docs":{},"照":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"装":{"docs":{},"载":{"docs":{},"类":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"不":{"docs":{},"够":{"docs":{},"，":{"docs":{},"超":{"docs":{},"过":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"进":{"docs":{},"程":{"docs":{},"状":{"docs":{},"态":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"被":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"定":{"docs":{},"义":{"docs":{},"在":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118}}}}},"写":{"docs":{},"回":{"docs":{},"到":{"docs":{},"主":{"docs":{},"存":{"docs":{},"中":{"docs":{},"去":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}},"弱":{"docs":{},"引":{"docs":{},"用":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"一":{"docs":{},"定":{"docs":{},"会":{"docs":{},"被":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"回":{"docs":{},"收":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"它":{"docs":{},"只":{"docs":{},"能":{"docs":{},"存":{"docs":{},"活":{"docs":{},"到":{"docs":{},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"发":{"docs":{},"生":{"docs":{},"之":{"docs":{},"前":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"强":{"docs":{},"引":{"docs":{},"用":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}},"软":{"docs":{},"引":{"docs":{},"用":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"在":{"docs":{},"内":{"docs":{},"存":{"docs":{},"不":{"docs":{},"够":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"才":{"docs":{},"会":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}},"选":{"docs":{},"择":{"docs":{},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"和":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"到":{"docs":{},"图":{"docs":{},"中":{"docs":{},"显":{"docs":{},"示":{"docs":{},"的":{"docs":{},"深":{"docs":{},"蓝":{"docs":{},"色":{"docs":{},"区":{"docs":{},"和":{"docs":{},"深":{"docs":{},"绿":{"docs":{},"色":{"docs":{},"区":{"docs":{},"中":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"动":{"docs":{},"引":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"必":{"docs":{},"须":{"docs":{},"属":{"docs":{},"于":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}},"观":{"docs":{},"察":{"docs":{},"加":{"docs":{},"入":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"得":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"使":{"docs":{},"用":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"获":{"docs":{},"得":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"正":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"字":{"docs":{},"节":{"docs":{},"码":{"docs":{},"指":{"docs":{},"令":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{},"（":{"docs":{},"如":{"docs":{},"果":{"docs":{},"正":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"是":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"则":{"docs":{},"为":{"docs":{},"空":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"说":{"docs":{},"明":{"docs":{},"：":{"docs":{},"即":{"docs":{},"使":{"docs":{},"是":{"docs":{},"单":{"docs":{},"核":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"也":{"docs":{},"支":{"docs":{},"持":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"头":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"即":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}},"一":{"docs":{},"下":{"docs":{},"：":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}},"的":{"docs":{},"有":{"docs":{},"点":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"会":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"示":{"docs":{},"例":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"的":{"docs":{},"流":{"docs":{},"程":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"针":{"docs":{},"对":{"docs":{},"性":{"docs":{},"地":{"docs":{},"说":{"docs":{},"下":{"docs":{},"如":{"docs":{},"何":{"docs":{},"在":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"优":{"docs":{},"化":{"docs":{},"内":{"docs":{},"存":{"docs":{},"性":{"docs":{},"能":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-interview.html":{"ref":"javacore/jvm/jvm-interview.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562},"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143},"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"线":{"docs":{},"程":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0016038492381716118},"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}},"主":{"docs":{},"体":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.002735229759299781}}}}}},"其":{"docs":{},"他":{"docs":{},"语":{"docs":{},"言":{"docs":{},"。":{"docs":{},"）":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"。":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}},"之":{"docs":{},"前":{"docs":{},"执":{"docs":{},"行":{"docs":{},"（":{"docs":{},"通":{"docs":{},"过":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}},"时":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"优":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":3.334340890008396}},"原":{"docs":{},"则":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"总":{"docs":{},"结":{"docs":{},"（":{"5":{"docs":{},"）":{"docs":{},"：":{"docs":{},"典":{"docs":{},"型":{"docs":{},"配":{"docs":{},"置":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"docs":{}}}},"概":{"docs":{},"述":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}}}},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"：":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"会":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"帧":{"docs":{},"中":{"docs":{},"开":{"docs":{},"辟":{"docs":{},"用":{"docs":{},"于":{"docs":{},"存":{"docs":{},"储":{"docs":{},"锁":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"称":{"docs":{},"为":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"指":{"docs":{},"当":{"docs":{},"锁":{"docs":{},"是":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"被":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"所":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"就":{"docs":{},"会":{"docs":{},"升":{"docs":{},"级":{"docs":{},"为":{"docs":{},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"会":{"docs":{},"通":{"docs":{},"过":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"提":{"docs":{},"高":{"docs":{},"性":{"docs":{},"能":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"连":{"docs":{},"接":{"docs":{},"复":{"docs":{},"用":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"在":{"docs":{},"调":{"docs":{},"用":{"docs":{},"对":{"docs":{},"方":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}},"数":{"docs":{},"等":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}},"管":{"docs":{},"道":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},"续":{"docs":{},"输":{"docs":{},"出":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"间":{"docs":{},"隔":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"次":{"docs":{},"数":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"避":{"docs":{},"免":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"同":{"docs":{},"时":{"docs":{},"获":{"docs":{},"取":{"docs":{},"多":{"docs":{},"个":{"docs":{},"锁":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}},"在":{"docs":{},"锁":{"docs":{},"内":{"docs":{},"同":{"docs":{},"时":{"docs":{},"占":{"docs":{},"用":{"docs":{},"多":{"docs":{},"个":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"保":{"docs":{},"证":{"docs":{},"每":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"只":{"docs":{},"占":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"资":{"docs":{},"源":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"嵌":{"docs":{},"套":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"只":{"docs":{},"在":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"使":{"docs":{},"用":{"docs":{},"锁":{"docs":{},"和":{"docs":{},"避":{"docs":{},"免":{"docs":{},"无":{"docs":{},"限":{"docs":{},"期":{"docs":{},"等":{"docs":{},"待":{"docs":{},"是":{"docs":{},"避":{"docs":{},"免":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"通":{"docs":{},"常":{"docs":{},"办":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"任":{"docs":{},"务":{"docs":{},"很":{"docs":{},"少":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"创":{"docs":{},"建":{"docs":{},"了":{"docs":{},"很":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"来":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"大":{"docs":{},"量":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"处":{"docs":{},"于":{"docs":{},"等":{"docs":{},"待":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"死":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}},"活":{"docs":{},"锁":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}},"阅":{"docs":{},"读":{"docs":{},"这":{"docs":{},"篇":{"docs":{},"文":{"docs":{},"章":{"docs":{},"了":{"docs":{},"解":{"docs":{},"如":{"docs":{},"何":{"docs":{},"使":{"docs":{},"用":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"实":{"docs":{},"现":{"docs":{},"生":{"docs":{},"产":{"docs":{},"者":{"docs":{"javacore/concurrent/Java多线程面试题集.html":{"ref":"javacore/concurrent/Java多线程面试题集.html","tf":0.0008019246190858059}}}}}}}}}}}}}}}}}}}}}}},"临":{"docs":{},"界":{"docs":{},"区":{"docs":{},"（":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}},"交":{"docs":{},"错":{"docs":{},"执":{"docs":{},"行":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"什":{"docs":{},"么":{"docs":{},"：":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}},"/":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"是":{"docs":{},"指":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"按":{"docs":{},"照":{"docs":{},"申":{"docs":{},"请":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"来":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}},"版":{"docs":{},"本":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}},"减":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}},"少":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"的":{"docs":{},"行":{"docs":{},"数":{"docs":{},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{},"索":{"docs":{},"引":{"docs":{},"来":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"查":{"docs":{},"询":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}},"请":{"docs":{},"求":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"量":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}},"凡":{"docs":{},"事":{"docs":{},"有":{"docs":{},"利":{"docs":{},"有":{"docs":{},"弊":{"docs":{},"，":{"docs":{},"引":{"docs":{},"入":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"除":{"docs":{},"了":{"docs":{},"带":{"docs":{},"来":{"docs":{},"的":{"docs":{},"好":{"docs":{},"处":{"docs":{},"以":{"docs":{},"外":{"docs":{},"，":{"docs":{},"也":{"docs":{},"产":{"docs":{},"生":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"利":{"docs":{},"用":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"率":{"docs":{},"的":{"docs":{},"提":{"docs":{},"升":{"docs":{},"。":{"docs":{},"而":{"docs":{},"且":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"记":{"docs":{},"录":{"docs":{},"一":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"也":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"编":{"docs":{},"程":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"够":{"docs":{},"高":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"到":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}},"一":{"docs":{},"个":{"docs":{},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}}}}}}},"它":{"docs":{},"的":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"以":{"docs":{},"避":{"docs":{},"免":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"在":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"超":{"docs":{},"时":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"这":{"docs":{},"也":{"docs":{},"就":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"在":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"若":{"docs":{},"超":{"docs":{},"过":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"限":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"则":{"docs":{},"放":{"docs":{},"弃":{"docs":{},"对":{"docs":{},"该":{"docs":{},"锁":{"docs":{},"请":{"docs":{},"求":{"docs":{},"。":{"docs":{},"若":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"没":{"docs":{},"有":{"docs":{},"在":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"时":{"docs":{},"限":{"docs":{},"内":{"docs":{},"成":{"docs":{},"功":{"docs":{},"获":{"docs":{},"得":{"docs":{},"所":{"docs":{},"有":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"则":{"docs":{},"会":{"docs":{},"进":{"docs":{},"行":{"docs":{},"回":{"docs":{},"退":{"docs":{},"并":{"docs":{},"释":{"docs":{},"放":{"docs":{},"所":{"docs":{},"有":{"docs":{},"已":{"docs":{},"经":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"等":{"docs":{},"待":{"docs":{},"一":{"docs":{},"段":{"docs":{},"随":{"docs":{},"机":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"再":{"docs":{},"重":{"docs":{},"试":{"docs":{},"。":{"docs":{},"这":{"docs":{},"段":{"docs":{},"随":{"docs":{},"机":{"docs":{},"的":{"docs":{},"等":{"docs":{},"待":{"docs":{},"时":{"docs":{},"间":{"docs":{},"让":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"有":{"docs":{},"机":{"docs":{},"会":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"获":{"docs":{},"取":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"这":{"docs":{},"些":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"让":{"docs":{},"该":{"docs":{},"应":{"docs":{},"用":{"docs":{},"在":{"docs":{},"没":{"docs":{},"有":{"docs":{},"获":{"docs":{},"得":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"可":{"docs":{},"以":{"docs":{},"继":{"docs":{},"续":{"docs":{},"运":{"docs":{},"行":{"docs":{},"(":{"docs":{},"译":{"docs":{},"者":{"docs":{},"注":{"docs":{},"：":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"超":{"docs":{},"时":{"docs":{},"后":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"继":{"docs":{},"续":{"docs":{},"运":{"docs":{},"行":{"docs":{},"干":{"docs":{},"点":{"docs":{},"其":{"docs":{},"它":{"docs":{},"事":{"docs":{},"情":{"docs":{},"，":{"docs":{},"再":{"docs":{},"回":{"docs":{},"头":{"docs":{},"来":{"docs":{},"重":{"docs":{},"复":{"docs":{},"之":{"docs":{},"前":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},")":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"通":{"docs":{},"过":{"docs":{},"增":{"docs":{},"加":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"内":{"docs":{},"存":{"docs":{},"来":{"docs":{},"降":{"docs":{},"低":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}},"若":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}},"大":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}},"多":{"docs":{},"数":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"对":{"docs":{},"象":{"docs":{},"在":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"指":{"docs":{},"需":{"docs":{},"要":{"docs":{},"连":{"docs":{},"续":{"docs":{},"内":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"最":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"大":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"那":{"docs":{},"种":{"docs":{},"很":{"docs":{},"长":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"以":{"docs":{},"及":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"小":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"并":{"docs":{},"且":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"，":{"docs":{},"那":{"docs":{},"你":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"执":{"docs":{},"行":{"docs":{},"堆":{"docs":{},"快":{"docs":{},"照":{"docs":{},"（":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"学":{"docs":{},"习":{"docs":{},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{},"，":{"docs":{},"免":{"docs":{},"不":{"docs":{},"了":{"docs":{},"大":{"docs":{},"量":{"docs":{},"接":{"docs":{},"触":{"docs":{},"一":{"docs":{},"些":{"docs":{},"术":{"docs":{},"语":{"docs":{},"。":{"docs":{},"其":{"docs":{},"中":{"docs":{},"，":{"docs":{},"有":{"docs":{},"些":{"docs":{},"术":{"docs":{},"语":{"docs":{},"经":{"docs":{},"常":{"docs":{},"容":{"docs":{},"易":{"docs":{},"被":{"docs":{},"混":{"docs":{},"淆":{"docs":{},"或":{"docs":{},"分":{"docs":{},"不":{"docs":{},"清":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"差":{"docs":{},"异":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"汇":{"docs":{},"总":{"docs":{},"一":{"docs":{},"下":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"问":{"docs":{},"题":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.008379888268156424}}}}},"地":{"docs":{},"终":{"docs":{},"止":{"docs":{},"线":{"docs":{},"程":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}},"示":{"docs":{},"例":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"问":{"docs":{},"题":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"装":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}},"环":{"docs":{},"境":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}},"导":{"docs":{},"致":{"docs":{},"饥":{"docs":{},"饿":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}},"出":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"性":{"docs":{},"能":{"docs":{},"问":{"docs":{},"题":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.008379888268156424},"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"产":{"docs":{},"生":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"影":{"docs":{},"响":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"定":{"docs":{},"义":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"调":{"docs":{},"优":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"想":{"docs":{},"象":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"本":{"docs":{},"地":{"docs":{},"文":{"docs":{},"件":{"docs":{},"系":{"docs":{},"统":{"docs":{},"中":{"docs":{},"读":{"docs":{},"取":{"docs":{},"和":{"docs":{},"处":{"docs":{},"理":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"情":{"docs":{},"景":{"docs":{},"。":{"docs":{},"比":{"docs":{},"方":{"docs":{},"说":{"docs":{},"，":{"docs":{},"从":{"docs":{},"磁":{"docs":{},"盘":{"docs":{},"读":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"需":{"docs":{},"要":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"共":{"docs":{},"享":{"docs":{},"对":{"docs":{},"象":{"docs":{},"被":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"在":{"docs":{},"主":{"docs":{},"存":{"docs":{},"中":{"docs":{},"。":{"docs":{},"跑":{"docs":{},"在":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}},"下":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}},"这":{"docs":{},"样":{"docs":{},"一":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{},"两":{"docs":{},"个":{"docs":{},"人":{"docs":{},"在":{"docs":{},"狭":{"docs":{},"窄":{"docs":{},"的":{"docs":{},"走":{"docs":{},"廊":{"docs":{},"里":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"，":{"docs":{},"二":{"docs":{},"者":{"docs":{},"都":{"docs":{},"很":{"docs":{},"礼":{"docs":{},"貌":{"docs":{},"，":{"docs":{},"试":{"docs":{},"图":{"docs":{},"移":{"docs":{},"到":{"docs":{},"旁":{"docs":{},"边":{"docs":{},"让":{"docs":{},"对":{"docs":{},"方":{"docs":{},"先":{"docs":{},"通":{"docs":{},"过":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"他":{"docs":{},"们":{"docs":{},"最":{"docs":{},"终":{"docs":{},"在":{"docs":{},"没":{"docs":{},"有":{"docs":{},"取":{"docs":{},"得":{"docs":{},"任":{"docs":{},"何":{"docs":{},"进":{"docs":{},"展":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"左":{"docs":{},"右":{"docs":{},"摇":{"docs":{},"摆":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"他":{"docs":{},"们":{"docs":{},"都":{"docs":{},"在":{"docs":{},"同":{"docs":{},"一":{"docs":{},"时":{"docs":{},"间":{"docs":{},"向":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"方":{"docs":{},"向":{"docs":{},"移":{"docs":{},"动":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"某":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"时":{"docs":{},"，":{"docs":{},"假":{"docs":{},"若":{"docs":{},"此":{"docs":{},"时":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}},"慢":{"docs":{},"的":{"docs":{},"多":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}},"很":{"docs":{},"多":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"查":{"docs":{},"询":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}},"服":{"docs":{},"务":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"器":{"docs":{},"的":{"docs":{},"流":{"docs":{},"程":{"docs":{},"如":{"docs":{},"下":{"docs":{},"所":{"docs":{},"述":{"docs":{},"：":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}},"，":{"docs":{},"生":{"docs":{},"成":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"监":{"docs":{},"听":{"docs":{},"在":{"docs":{},"本":{"docs":{},"地":{"docs":{},"的":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}},"和":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}}}}},"在":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},"端":{"docs":{},"为":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}},"关":{"docs":{},"闭":{"docs":{},"与":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"的":{"docs":{},"连":{"docs":{},"接":{"docs":{},"，":{"docs":{},"向":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"发":{"docs":{},"送":{"docs":{},"一":{"docs":{},"个":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}},"向":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"发":{"docs":{},"送":{"docs":{},"带":{"docs":{},"有":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}},"收":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}},"桌":{"docs":{},"面":{"docs":{},"应":{"docs":{},"用":{"docs":{},"也":{"docs":{},"是":{"docs":{},"同":{"docs":{},"样":{"docs":{},"如":{"docs":{},"此":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"点":{"docs":{},"击":{"docs":{},"一":{"docs":{},"个":{"docs":{},"按":{"docs":{},"钮":{"docs":{},"开":{"docs":{},"始":{"docs":{},"运":{"docs":{},"行":{"docs":{},"一":{"docs":{},"个":{"docs":{},"耗":{"docs":{},"时":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"既":{"docs":{},"要":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"又":{"docs":{},"要":{"docs":{},"更":{"docs":{},"新":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"和":{"docs":{},"按":{"docs":{},"钮":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"在":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"看":{"docs":{},"起":{"docs":{},"来":{"docs":{},"好":{"docs":{},"像":{"docs":{},"没":{"docs":{},"有":{"docs":{},"反":{"docs":{},"应":{"docs":{},"一":{"docs":{},"样":{"docs":{},"。":{"docs":{},"相":{"docs":{},"反":{"docs":{},"，":{"docs":{},"任":{"docs":{},"务":{"docs":{},"可":{"docs":{},"以":{"docs":{},"传":{"docs":{},"递":{"docs":{},"给":{"docs":{},"工":{"docs":{},"作":{"docs":{},"者":{"docs":{},"线":{"docs":{},"程":{"docs":{},"（":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"永":{"docs":{},"远":{"docs":{},"无":{"docs":{},"法":{"docs":{},"就":{"docs":{},"餐":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"看":{"docs":{},"着":{"docs":{},"盘":{"docs":{},"中":{"docs":{},"的":{"docs":{},"美":{"docs":{},"食":{"docs":{},"饥":{"docs":{},"饿":{"docs":{},"的":{"docs":{},"等":{"docs":{},"待":{"docs":{},"着":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}},"久":{"docs":{},"代":{"docs":{},"（":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}},"空":{"docs":{},"间":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"活":{"docs":{},"跃":{"docs":{},"性":{"docs":{},"问":{"docs":{},"题":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.008379888268156424}}}}},"对":{"docs":{},"象":{"docs":{},"会":{"docs":{},"被":{"docs":{},"疏":{"docs":{},"散":{"docs":{},"（":{"docs":{},"复":{"docs":{},"制":{"docs":{},"、":{"docs":{},"移":{"docs":{},"动":{"docs":{},"）":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}},"被":{"docs":{},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{},"新":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"疏":{"docs":{},"散":{"docs":{},"到":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"锁":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"或":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"会":{"docs":{},"不":{"docs":{},"断":{"docs":{},"重":{"docs":{},"复":{"docs":{},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"定":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"。":{"docs":{},"预":{"docs":{},"期":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"通":{"docs":{},"常":{"docs":{},"为":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"提":{"docs":{},"供":{"docs":{},"机":{"docs":{},"会":{"docs":{},"继":{"docs":{},"续":{"docs":{},"支":{"docs":{},"持":{"docs":{},"'":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"'":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"）":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}},"秒":{"docs":{},"。":{"docs":{},"处":{"docs":{},"理":{"docs":{},"两":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"则":{"docs":{},"需":{"docs":{},"要":{"docs":{},"：":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}},"，":{"docs":{},"处":{"docs":{},"理":{"docs":{},"一":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"需":{"docs":{},"要":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}},"每":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}},"甚":{"docs":{},"至":{"docs":{},"大":{"docs":{},"于":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"那":{"docs":{},"么":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"就":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"时":{"docs":{},"间":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}},"\"":{"docs":{},")":{"docs":{},",":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}},"执":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"\"":{"docs":{},")":{"docs":{},",":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}},"程":{"docs":{},"序":{"docs":{},"响":{"docs":{},"应":{"docs":{},"更":{"docs":{},"快":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}}},"灵":{"docs":{},"敏":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}},"设":{"docs":{},"计":{"docs":{},"更":{"docs":{},"简":{"docs":{},"单":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095}}}}}}},"中":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"前":{"docs":{},"台":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"，":{"docs":{},"则":{"docs":{},"整":{"docs":{},"个":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}},"看":{"docs":{},"到":{"docs":{},"当":{"docs":{},"时":{"docs":{},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"无":{"docs":{},"论":{"docs":{},"是":{"docs":{},"哪":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"。":{"docs":{},"这":{"docs":{},"包":{"docs":{},"括":{"docs":{},"原":{"docs":{},"始":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"版":{"docs":{},"本":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"被":{"docs":{},"创":{"docs":{},"建":{"docs":{},"然":{"docs":{},"后":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"一":{"docs":{},"个":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"用":{"docs":{},"来":{"docs":{},"作":{"docs":{},"为":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"任":{"docs":{},"然":{"docs":{},"是":{"docs":{},"存":{"docs":{},"放":{"docs":{},"在":{"docs":{},"堆":{"docs":{},"上":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"个":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}},"在":{"docs":{},"各":{"docs":{},"种":{"docs":{},"平":{"docs":{},"台":{"docs":{},"下":{"docs":{},"都":{"docs":{},"能":{"docs":{},"达":{"docs":{},"到":{"docs":{},"一":{"docs":{},"致":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"访":{"docs":{},"问":{"docs":{},"效":{"docs":{},"果":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"，":{"docs":{},"在":{"docs":{},"你":{"docs":{},"的":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}},"如":{"docs":{},"何":{"docs":{},"崩":{"docs":{},"溃":{"docs":{},"和":{"docs":{},"在":{"docs":{},"程":{"docs":{},"序":{"docs":{},"何":{"docs":{},"处":{"docs":{},"发":{"docs":{},"生":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"另":{"docs":{},"外":{"docs":{},"，":{"docs":{},"j":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}},"顺":{"docs":{},"序":{"docs":{},"规":{"docs":{},"则":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.015748031496062992}},"、":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"栈":{"docs":{},"和":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"栈":{"docs":{},"这":{"docs":{},"三":{"docs":{},"个":{"docs":{},"区":{"docs":{},"域":{"docs":{},"属":{"docs":{},"于":{"docs":{},"线":{"docs":{},"程":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"，":{"docs":{},"只":{"docs":{},"存":{"docs":{},"在":{"docs":{},"于":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{},"内":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"结":{"docs":{},"束":{"docs":{},"之":{"docs":{},"后":{"docs":{},"也":{"docs":{},"会":{"docs":{},"消":{"docs":{},"失":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"这":{"docs":{},"三":{"docs":{},"个":{"docs":{},"区":{"docs":{},"域":{"docs":{},"进":{"docs":{},"行":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"针":{"docs":{},"对":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"。":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"即":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"执":{"docs":{},"行":{"docs":{},"类":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}},"直":{"docs":{},"接":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"用":{"docs":{},"户":{"docs":{},"在":{"docs":{},"编":{"docs":{},"写":{"docs":{},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"加":{"docs":{},"载":{"docs":{},"请":{"docs":{},"求":{"docs":{},"委":{"docs":{},"派":{"docs":{},"给":{"docs":{},"启":{"docs":{},"动":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"呈":{"docs":{},"现":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"崩":{"docs":{},"溃":{"docs":{},"生":{"docs":{},"成":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"基":{"docs":{},"本":{"docs":{},"信":{"docs":{},"息":{"docs":{},"和":{"docs":{},"运":{"docs":{},"行":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"，":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"都":{"docs":{},"将":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"不":{"docs":{},"要":{"docs":{},"在":{"docs":{},"系":{"docs":{},"统":{"docs":{},"执":{"docs":{},"行":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"创":{"docs":{},"建":{"docs":{},"该":{"docs":{},"文":{"docs":{},"件":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}},"章":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.00558659217877095},"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.010869565217391304}}},"能":{"docs":{},"够":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}},"支":{"docs":{},"持":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}},"响":{"docs":{},"应":{"docs":{},"中":{"docs":{},"断":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"相":{"docs":{},"较":{"docs":{},"于":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}},"直":{"docs":{},"接":{"docs":{},"关":{"docs":{},"联":{"docs":{},"到":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"速":{"docs":{},"度":{"docs":{},"很":{"docs":{},"快":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}},"否":{"docs":{},"被":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"（":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"）":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}},"部":{"docs":{},"分":{"docs":{},"时":{"docs":{},"间":{"docs":{},"是":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}},"释":{"docs":{},"放":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}},"所":{"docs":{},"有":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"回":{"docs":{},"退":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"等":{"docs":{},"待":{"docs":{},"一":{"docs":{},"段":{"docs":{},"随":{"docs":{},"机":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"后":{"docs":{},"重":{"docs":{},"试":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"和":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"超":{"docs":{},"时":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"是":{"docs":{},"只":{"docs":{},"有":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"已":{"docs":{},"经":{"docs":{},"发":{"docs":{},"生":{"docs":{},"了":{"docs":{},"才":{"docs":{},"回":{"docs":{},"退":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"会":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"请":{"docs":{},"求":{"docs":{},"超":{"docs":{},"时":{"docs":{},"了":{"docs":{},"。":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"有":{"docs":{},"回":{"docs":{},"退":{"docs":{},"和":{"docs":{},"等":{"docs":{},"待":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"大":{"docs":{},"量":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"同":{"docs":{},"一":{"docs":{},"批":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"还":{"docs":{},"是":{"docs":{},"会":{"docs":{},"重":{"docs":{},"复":{"docs":{},"地":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"（":{"docs":{},"编":{"docs":{},"者":{"docs":{},"注":{"docs":{},"：":{"docs":{},"原":{"docs":{},"因":{"docs":{},"同":{"docs":{},"超":{"docs":{},"时":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"从":{"docs":{},"根":{"docs":{},"本":{"docs":{},"上":{"docs":{},"减":{"docs":{},"轻":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"共":{"docs":{},"享":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"独":{"docs":{},"占":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"锁":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"会":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"后":{"docs":{},"继":{"docs":{},"节":{"docs":{},"点":{"docs":{},"；":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}},"饥":{"docs":{},"饿":{"docs":{},"问":{"docs":{},"题":{"docs":{},"最":{"docs":{},"经":{"docs":{},"典":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"就":{"docs":{},"是":{"docs":{},"哲":{"docs":{},"学":{"docs":{},"家":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"如":{"docs":{},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{},"有":{"docs":{},"五":{"docs":{},"个":{"docs":{},"哲":{"docs":{},"学":{"docs":{},"家":{"docs":{},"用":{"docs":{},"餐":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"人":{"docs":{},"要":{"docs":{},"获":{"docs":{},"得":{"docs":{},"两":{"docs":{},"把":{"docs":{},"叉":{"docs":{},"子":{"docs":{},"才":{"docs":{},"可":{"docs":{},"以":{"docs":{},"就":{"docs":{},"餐":{"docs":{},"。":{"docs":{},"当":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{"javacore/concurrent/并发简介.html":{"ref":"javacore/concurrent/并发简介.html","tf":0.002793296089385475}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}},"休":{"docs":{},"眠":{"docs":{},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"卖":{"docs":{},"票":{"docs":{},"：":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}}},"取":{"docs":{},"得":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"消":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}},"出":{"docs":{},"内":{"docs":{},"容":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"启":{"docs":{},"动":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"和":{"docs":{},"终":{"docs":{},"止":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}},"线":{"docs":{},"程":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0038293216630196935},"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0015117157974300832}}}},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"（":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}},"时":{"docs":{},"传":{"docs":{},"递":{"docs":{},"给":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"得":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"显":{"docs":{},"示":{"docs":{},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"唤":{"docs":{},"醒":{"docs":{},"一":{"docs":{},"个":{"docs":{},"正":{"docs":{},"在":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"所":{"docs":{},"有":{"docs":{},"正":{"docs":{},"在":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}},"手":{"docs":{},"工":{"docs":{},"设":{"docs":{},"置":{"docs":{},"线":{"docs":{},"程":{"docs":{},"名":{"docs":{},"称":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}}}}}}}}}},"此":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"后":{"docs":{},"台":{"docs":{},"运":{"docs":{},"行":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"外":{"docs":{},"，":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"是":{"docs":{},"建":{"docs":{},"议":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"进":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"负":{"docs":{},"责":{"docs":{},"将":{"docs":{},"存":{"docs":{},"放":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}},"生":{"docs":{},"产":{"docs":{},"者":{"docs":{},"、":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"示":{"docs":{},"例":{"docs":{},"：":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}},"成":{"docs":{},"堆":{"docs":{},"快":{"docs":{},"照":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"转":{"docs":{},"储":{"docs":{},"快":{"docs":{},"照":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"目":{"docs":{},"录":{"docs":{},"结":{"docs":{},"构":{"docs":{},"文":{"docs":{},"件":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"编":{"docs":{},"写":{"docs":{},"各":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"夹":{"docs":{},"中":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{},"。":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}}},"睡":{"docs":{},"眠":{"1":{"docs":{},"秒":{"docs":{},"，":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"线":{"docs":{},"程":{"docs":{},"对":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"进":{"docs":{},"行":{"docs":{},"中":{"docs":{},"断":{"docs":{},"，":{"docs":{},"使":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"能":{"docs":{},"够":{"docs":{},"感":{"docs":{},"知":{"docs":{},"中":{"docs":{},"断":{"docs":{},"而":{"docs":{},"结":{"docs":{},"束":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}},"docs":{}}},"管":{"docs":{},"理":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}},"等":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}},"着":{"docs":{},"一":{"docs":{},"组":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"的":{"docs":{},"许":{"docs":{},"可":{"docs":{},"（":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"）":{"docs":{},"，":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}},"道":{"docs":{},"输":{"docs":{},"入":{"docs":{},"/":{"docs":{},"输":{"docs":{},"出":{"docs":{},"流":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0010940919037199124}},"主":{"docs":{},"要":{"docs":{},"包":{"docs":{},"括":{"docs":{},"了":{"docs":{},"如":{"docs":{},"下":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}},"和":{"docs":{},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{},"输":{"docs":{},"入":{"docs":{},"/":{"docs":{},"输":{"docs":{},"出":{"docs":{},"流":{"docs":{},"或":{"docs":{},"者":{"docs":{},"网":{"docs":{},"络":{"docs":{},"输":{"docs":{},"入":{"docs":{},"/":{"docs":{},"输":{"docs":{},"出":{"docs":{},"流":{"docs":{},"不":{"docs":{},"同":{"docs":{},"之":{"docs":{},"处":{"docs":{},"在":{"docs":{},"于":{"docs":{},"，":{"docs":{},"它":{"docs":{},"主":{"docs":{},"要":{"docs":{},"用":{"docs":{},"于":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"传":{"docs":{},"输":{"docs":{},"，":{"docs":{},"而":{"docs":{},"传":{"docs":{},"输":{"docs":{},"的":{"docs":{},"媒":{"docs":{},"介":{"docs":{},"为":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"系":{"docs":{},"统":{"docs":{},"自":{"docs":{},"动":{"docs":{},"设":{"docs":{},"置":{"docs":{},"线":{"docs":{},"程":{"docs":{},"名":{"docs":{},"称":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}},"服":{"docs":{},"务":{"docs":{},"端":{"docs":{},"上":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"变":{"docs":{},"量":{"docs":{},"所":{"docs":{},"指":{"docs":{},"定":{"docs":{},"路":{"docs":{},"径":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"类":{"docs":{},"库":{"docs":{},"加":{"docs":{},"载":{"docs":{},"到":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"，":{"docs":{},"开":{"docs":{},"发":{"docs":{},"者":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"可":{"docs":{},"用":{"docs":{},"物":{"docs":{},"理":{"docs":{},"内":{"docs":{},"存":{"docs":{},"限":{"docs":{},"制":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"虚":{"docs":{},"拟":{"docs":{},"内":{"docs":{},"存":{"docs":{},"限":{"docs":{},"制":{"docs":{},"；":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"列":{"docs":{},"(":{"docs":{},"九":{"docs":{},")":{"docs":{},":":{"docs":{},"如":{"docs":{},"何":{"docs":{},"优":{"docs":{},"化":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"笔":{"docs":{},"记":{"docs":{},"(":{"4":{"docs":{},")":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"docs":{}}}}}},"至":{"docs":{},"此":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"大":{"docs":{},"部":{"docs":{},"分":{"docs":{},"朋":{"docs":{},"友":{"docs":{},"已":{"docs":{},"经":{"docs":{},"明":{"docs":{},"白":{"docs":{},"了":{"docs":{"javacore/concurrent/线程基础.html":{"ref":"javacore/concurrent/线程基础.html","tf":0.0005470459518599562}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}},"带":{"docs":{},"来":{"docs":{},"非":{"docs":{},"常":{"docs":{},"大":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"开":{"docs":{},"销":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}},"拿":{"docs":{},"出":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}},"整":{"docs":{},"体":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"就":{"docs":{},"是":{"docs":{},"这":{"docs":{},"样":{"docs":{},"子":{"docs":{},"的":{"docs":{},"，":{"docs":{},"利":{"docs":{},"用":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}},"理":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.005042016806722689}},"”":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"算":{"docs":{},"法":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"，":{"docs":{},"从":{"docs":{},"局":{"docs":{},"部":{"docs":{},"（":{"docs":{},"两":{"docs":{},"个":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}},"，":{"docs":{},"在":{"docs":{},"回":{"docs":{},"收":{"docs":{},"的":{"docs":{},"同":{"docs":{},"时":{"docs":{},"还":{"docs":{},"会":{"docs":{},"对":{"docs":{},"内":{"docs":{},"存":{"docs":{},"进":{"docs":{},"行":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"。":{"docs":{},"并":{"docs":{},"行":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"适":{"docs":{},"合":{"docs":{},"对":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"要":{"docs":{},"求":{"docs":{},"远":{"docs":{},"远":{"docs":{},"高":{"docs":{},"于":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"在":{"docs":{},"满":{"docs":{},"足":{"docs":{},"最":{"docs":{},"差":{"docs":{},"延":{"docs":{},"时":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"并":{"docs":{},"行":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"将":{"docs":{},"提":{"docs":{},"供":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"的":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"堆":{"docs":{},"大":{"docs":{},"小":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"事":{"docs":{},"务":{"docs":{},"要":{"docs":{},"么":{"docs":{},"全":{"docs":{},"部":{"docs":{},"完":{"docs":{},"成":{"docs":{},"，":{"docs":{},"要":{"docs":{},"么":{"docs":{},"全":{"docs":{},"部":{"docs":{},"不":{"docs":{},"完":{"docs":{},"成":{"docs":{},"，":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"停":{"docs":{},"滞":{"docs":{},"在":{"docs":{},"中":{"docs":{},"间":{"docs":{},"某":{"docs":{},"个":{"docs":{},"环":{"docs":{},"节":{"docs":{},"。":{"docs":{},"事":{"docs":{},"务":{"docs":{},"在":{"docs":{},"中":{"docs":{},"间":{"docs":{},"某":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"发":{"docs":{},"生":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"会":{"docs":{},"被":{"docs":{},"回":{"docs":{},"滚":{"docs":{},"到":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"流":{"docs":{},"水":{"docs":{},"线":{"docs":{},"被":{"docs":{},"清":{"docs":{},"空":{"docs":{},"（":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}},"程":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"操":{"docs":{},"作":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":5.0007558578987155}}}}},"特":{"docs":{},"点":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0028735632183908046},"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}},"自":{"docs":{},"旋":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"更":{"docs":{},"新":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"适":{"docs":{},"应":{"docs":{},"的":{"docs":{},"调":{"docs":{},"节":{"docs":{},"策":{"docs":{},"略":{"docs":{},"（":{"docs":{},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"器":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}}}}}}}},"身":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"机":{"docs":{},"制":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}},"试":{"docs":{},"想":{"docs":{},"一":{"docs":{},"下":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"做":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}},"那":{"docs":{},"么":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}},"问":{"docs":{},"题":{"docs":{},"就":{"docs":{},"来":{"docs":{},"了":{"docs":{},"，":{"docs":{},"成":{"docs":{},"功":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"需":{"docs":{},"要":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}},"能":{"docs":{},"创":{"docs":{},"建":{"docs":{},"多":{"docs":{},"少":{"docs":{},"线":{"docs":{},"程":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"这":{"docs":{},"里":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"公":{"docs":{},"式":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}},"错":{"docs":{},"误":{"docs":{},"示":{"docs":{},"例":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}},"，":{"docs":{},"并":{"docs":{},"触":{"docs":{},"发":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"问":{"docs":{},"题":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}},"。":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023},"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}},"那":{"docs":{},"么":{"docs":{},"分":{"docs":{},"析":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"思":{"docs":{},"路":{"docs":{},"就":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"。":{"docs":{},"在":{"docs":{},"变":{"docs":{},"量":{"docs":{},"前":{"docs":{},"面":{"docs":{},"追":{"docs":{},"加":{"docs":{},"上":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"变":{"docs":{},"量":{"docs":{},"更":{"docs":{},"新":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"把":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"加":{"docs":{},"一":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"定":{"docs":{},"位":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"：":{"docs":{},"三":{"docs":{},"次":{"docs":{},"握":{"docs":{},"手":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"用":{"docs":{},"？":{"docs":{},"什":{"docs":{},"么":{"docs":{},"是":{"docs":{},"三":{"docs":{},"次":{"docs":{},"握":{"docs":{},"手":{"docs":{},"？":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"需":{"docs":{},"要":{"docs":{},"三":{"docs":{},"次":{"docs":{},"握":{"docs":{},"手":{"docs":{},"？":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"需":{"docs":{},"要":{"docs":{},"重":{"docs":{},"传":{"docs":{},"机":{"docs":{},"制":{"docs":{},"？":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}},"什":{"docs":{},"么":{"docs":{},"是":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"？":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"原":{"docs":{},"理":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}},"四":{"docs":{},"次":{"docs":{},"挥":{"docs":{},"手":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"用":{"docs":{},"？":{"docs":{},"什":{"docs":{},"么":{"docs":{},"是":{"docs":{},"四":{"docs":{},"次":{"docs":{},"挥":{"docs":{},"手":{"docs":{},"？":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"建":{"docs":{},"立":{"docs":{},"连":{"docs":{},"接":{"docs":{},"是":{"docs":{},"三":{"docs":{},"次":{"docs":{},"握":{"docs":{},"手":{"docs":{},"，":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"连":{"docs":{},"接":{"docs":{},"确":{"docs":{},"是":{"docs":{},"四":{"docs":{},"次":{"docs":{},"挥":{"docs":{},"手":{"docs":{},"呢":{"docs":{},"？":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"机":{"docs":{},"网":{"docs":{},"络":{"docs":{},"如":{"docs":{},"何":{"docs":{},"分":{"docs":{},"层":{"docs":{},"？":{"docs":{},"各":{"docs":{},"层":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{},"各":{"docs":{},"层":{"docs":{},"的":{"docs":{},"主":{"docs":{},"要":{"docs":{},"协":{"docs":{},"议":{"docs":{},"、":{"docs":{},"设":{"docs":{},"备":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"是":{"docs":{},"指":{"docs":{},"同":{"docs":{},"步":{"docs":{},"在":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"类":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"在":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}}}}}}}}}}}}}}}}}}}}}}}}},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"跟":{"docs":{},"随":{"docs":{},"着":{"docs":{},"类":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"起":{"docs":{},"也":{"docs":{},"存":{"docs":{},"放":{"docs":{},"在":{"docs":{},"堆":{"docs":{},"上":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}},"集":{"docs":{},"合":{"docs":{},"类":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"常":{"docs":{},"量":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"根":{"docs":{},"据":{"docs":{},"所":{"docs":{},"在":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"选":{"docs":{},"取":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"分":{"docs":{},"隔":{"docs":{},"符":{"docs":{},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}}}}}}}}}}},"＝":{"docs":{"javacore/concurrent/并发机制的底层实现.html":{"ref":"javacore/concurrent/并发机制的底层实现.html","tf":0.0014367816091954023}}},"声":{"docs":{},"明":{"docs":{},"或":{"docs":{},"者":{"docs":{},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"共":{"docs":{},"享":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"更":{"docs":{},"新":{"docs":{},"这":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"对":{"docs":{},"象":{"docs":{},"可":{"docs":{},"能":{"docs":{},"对":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"来":{"docs":{},"说":{"docs":{},"是":{"docs":{},"不":{"docs":{},"接":{"docs":{},"见":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"静":{"docs":{},"态":{"docs":{},"（":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"）":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"类":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804}}}}}}}}}}}}}}}}}}}}}}}},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"锁":{"docs":{},"规":{"docs":{},"则":{"docs":{},"：":{"docs":{},"在":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"锁":{"docs":{},"上":{"docs":{},"的":{"docs":{},"解":{"docs":{},"锁":{"docs":{},"操":{"docs":{},"作":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"锁":{"docs":{},"上":{"docs":{},"的":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"操":{"docs":{},"作":{"docs":{},"之":{"docs":{},"前":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"听":{"docs":{},"器":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"被":{"docs":{},"注":{"docs":{},"册":{"docs":{},"后":{"docs":{},"释":{"docs":{},"放":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"没":{"docs":{},"有":{"docs":{},"删":{"docs":{},"除":{"docs":{},"监":{"docs":{},"听":{"docs":{},"器":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}},"控":{"docs":{},"与":{"docs":{},"调":{"docs":{},"优":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"硬":{"docs":{},"件":{"docs":{},"内":{"docs":{},"存":{"docs":{},"架":{"docs":{},"构":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.007246376811594203}}}}}}},"链":{"docs":{},"接":{"docs":{},"和":{"docs":{},"软":{"docs":{},"连":{"docs":{},"接":{"docs":{"linux/linux.html":{"ref":"linux/linux.html","tf":0.5}}}}}}}}},"访":{"docs":{},"问":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"的":{"docs":{},"速":{"docs":{},"度":{"docs":{},"远":{"docs":{},"大":{"docs":{},"于":{"docs":{},"主":{"docs":{},"存":{"docs":{},"。":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}},"缓":{"docs":{},"存":{"docs":{},"层":{"docs":{},"的":{"docs":{},"速":{"docs":{},"度":{"docs":{},"快":{"docs":{},"于":{"docs":{},"访":{"docs":{},"问":{"docs":{},"主":{"docs":{},"存":{"docs":{},"的":{"docs":{},"速":{"docs":{},"度":{"docs":{},"，":{"docs":{},"但":{"docs":{},"通":{"docs":{},"常":{"docs":{},"比":{"docs":{},"访":{"docs":{},"问":{"docs":{},"内":{"docs":{},"部":{"docs":{},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"的":{"docs":{},"速":{"docs":{},"度":{"docs":{},"还":{"docs":{},"要":{"docs":{},"慢":{"docs":{},"一":{"docs":{},"点":{"docs":{},"。":{"docs":{},"一":{"docs":{},"些":{"docs":{"javacore/concurrent/内存模型.html":{"ref":"javacore/concurrent/内存模型.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"标":{"docs":{},"志":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}},"假":{"docs":{},"若":{"docs":{},"此":{"docs":{},"时":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}},"设":{"docs":{},"应":{"docs":{},"用":{"docs":{},"名":{"docs":{},"称":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}},"同":{"docs":{},"理":{"docs":{},"，":{"docs":{},"将":{"docs":{},"除":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"之":{"docs":{},"外":{"docs":{},"的":{"docs":{},"其":{"docs":{},"他":{"docs":{},"元":{"docs":{},"素":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"到":{"docs":{},"新":{"docs":{},"副":{"docs":{},"本":{"docs":{},"中":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"切":{"docs":{},"换":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"将":{"docs":{},"原":{"docs":{},"容":{"docs":{},"器":{"docs":{},"引":{"docs":{},"用":{"docs":{},"指":{"docs":{},"向":{"docs":{},"新":{"docs":{},"副":{"docs":{},"本":{"docs":{},"。":{"docs":{},"同":{"docs":{},"属":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"掉":{"docs":{},"，":{"docs":{},"多":{"docs":{},"个":{"docs":{},"应":{"docs":{},"用":{"docs":{},"公":{"docs":{},"共":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"会":{"docs":{},"失":{"docs":{},"败":{"docs":{},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}},"执":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"写":{"docs":{},"时":{"docs":{},"复":{"docs":{},"制":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"可":{"docs":{},"重":{"docs":{},"入":{"docs":{},"锁":{"docs":{},"加":{"docs":{},"锁":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"数":{"docs":{},"组":{"docs":{},"越":{"docs":{},"界":{"docs":{},"错":{"docs":{},"误":{"docs":{},"。":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}},"间":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"应":{"docs":{},"用":{"docs":{},"于":{"docs":{},"最":{"docs":{},"终":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"上":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"默":{"docs":{},"认":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}},"，":{"docs":{},"i":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.004846526655896607}}}},"结":{"docs":{},"果":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"队":{"docs":{},"列":{"docs":{},"、":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"跳":{"docs":{},"转":{"docs":{},"：":{"docs":{},"根":{"docs":{},"据":{"docs":{},"指":{"docs":{},"定":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"（":{"docs":{},"下":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}},"过":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"人":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}},"针":{"docs":{},"对":{"docs":{},"首":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"进":{"docs":{},"行":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"进":{"docs":{},"一":{"docs":{},"步":{"docs":{},"减":{"docs":{},"少":{"docs":{},"线":{"docs":{},"程":{"docs":{},"冲":{"docs":{},"突":{"docs":{"javacore/concurrent/同步容器和并发容器.html":{"ref":"javacore/concurrent/同步容器和并发容器.html","tf":0.001092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"互":{"docs":{},"斥":{"docs":{},"锁":{"docs":{},"/":{"docs":{},"读":{"docs":{},"写":{"docs":{},"锁":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"五":{"docs":{},"个":{"docs":{},"值":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"层":{"docs":{},"协":{"docs":{},"议":{"docs":{},"分":{"docs":{},"层":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"折":{"docs":{},"中":{"docs":{},"方":{"docs":{},"案":{"docs":{},"，":{"docs":{},"在":{"docs":{},"现":{"docs":{},"实":{"docs":{},"中":{"docs":{},"更":{"docs":{},"为":{"docs":{},"流":{"docs":{},"行":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}},"他":{"docs":{},"的":{"docs":{},"名":{"docs":{},"字":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"重":{"docs":{},"入":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"其":{"docs":{},"名":{"docs":{},"字":{"docs":{},"是":{"docs":{},"r":{"docs":{},"e":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"对":{"docs":{},"整":{"docs":{},"个":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"验":{"docs":{},"证":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}},"全":{"docs":{},"局":{"docs":{},"信":{"docs":{},"息":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"获":{"docs":{},"取":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"才":{"docs":{},"能":{"docs":{},"统":{"docs":{},"计":{"docs":{},"。":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"目":{"docs":{},"的":{"docs":{},"是":{"docs":{},"细":{"docs":{},"化":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"粒":{"docs":{},"度":{"docs":{},"，":{"docs":{},"当":{"docs":{},"操":{"docs":{},"作":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"更":{"docs":{},"新":{"docs":{},"整":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"就":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"针":{"docs":{},"对":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"项":{"docs":{},"进":{"docs":{},"行":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"安":{"docs":{},"装":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}},"几":{"docs":{},"乎":{"docs":{},"一":{"docs":{},"致":{"docs":{},"，":{"docs":{},"不":{"docs":{},"再":{"docs":{},"赘":{"docs":{},"述":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0014285714285714286}}}}}}}}}}}},"发":{"docs":{},"送":{"docs":{},"后":{"docs":{},"继":{"docs":{},"信":{"docs":{},"号":{"docs":{},"并":{"docs":{},"确":{"docs":{},"保":{"docs":{},"传":{"docs":{},"播":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}},"生":{"docs":{},"两":{"docs":{},"次":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"在":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"将":{"docs":{},"符":{"docs":{},"号":{"docs":{},"引":{"docs":{},"用":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"直":{"docs":{},"接":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"对":{"docs":{},"类":{"docs":{},"自":{"docs":{},"身":{"docs":{},"以":{"docs":{},"外":{"docs":{},"（":{"docs":{},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"各":{"docs":{},"种":{"docs":{},"符":{"docs":{},"号":{"docs":{},"引":{"docs":{},"用":{"docs":{},"）":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"进":{"docs":{},"行":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"性":{"docs":{},"校":{"docs":{},"验":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"现":{"docs":{},"它":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"同":{"docs":{},"内":{"docs":{},"存":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"，":{"docs":{},"可":{"docs":{},"再":{"docs":{},"加":{"docs":{},"个":{"docs":{},"实":{"docs":{},"时":{"docs":{},"观":{"docs":{},"察":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"步":{"docs":{},"消":{"docs":{},"息":{"docs":{},"。":{"docs":{},"b":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},"和":{"docs":{},"确":{"docs":{},"认":{"docs":{},"消":{"docs":{},"息":{"docs":{},"。":{"docs":{},"a":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}},"消":{"docs":{},"息":{"docs":{},"、":{"docs":{},"收":{"docs":{},"消":{"docs":{},"息":{"docs":{},"都":{"docs":{},"没":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}},"；":{"docs":{},"b":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}},"没":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}},"；":{"docs":{},"b":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}},"确":{"docs":{},"认":{"docs":{},"消":{"docs":{},"息":{"docs":{},"。":{"docs":{},"b":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}},"响":{"docs":{},"应":{"docs":{},"中":{"docs":{},"断":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"？":{"docs":{},"答":{"docs":{},"案":{"docs":{},"就":{"docs":{},"在":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}},"速":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.004201680672268907}}}}}}}},"场":{"docs":{},"景":{"docs":{},"：":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}},"在":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}}}}}}}},"块":{"docs":{},"中":{"docs":{},"或":{"docs":{},"者":{"docs":{},"在":{"docs":{},"调":{"docs":{},"用":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}},"进":{"docs":{},"行":{"docs":{},"，":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"锁":{"docs":{},"一":{"docs":{},"定":{"docs":{},"被":{"docs":{},"被":{"docs":{},"释":{"docs":{},"放":{"docs":{},"，":{"docs":{},"防":{"docs":{},"止":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"发":{"docs":{},"生":{"docs":{},"。":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"且":{"docs":{},"将":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"放":{"docs":{},"在":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}}}}}}}}}},"）":{"docs":{},"中":{"docs":{},"的":{"docs":{},"语":{"docs":{},"句":{"docs":{},"合":{"docs":{},"并":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"收":{"docs":{},"集":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"由":{"docs":{},"语":{"docs":{},"句":{"docs":{},"在":{"docs":{},"源":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"决":{"docs":{},"定":{"docs":{},"。":{"docs":{},"特":{"docs":{},"别":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"静":{"docs":{},"态":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"只":{"docs":{},"能":{"docs":{},"访":{"docs":{},"问":{"docs":{},"到":{"docs":{},"定":{"docs":{},"义":{"docs":{},"在":{"docs":{},"它":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"类":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"定":{"docs":{},"义":{"docs":{},"在":{"docs":{},"它":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"类":{"docs":{},"变":{"docs":{},"量":{"docs":{},"只":{"docs":{},"能":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"以":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"域":{"docs":{},"也":{"docs":{},"为":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"自":{"docs":{},"旋":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"头":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"后":{"docs":{},"继":{"docs":{},"节":{"docs":{},"点":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}}}}},"里":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"段":{"docs":{},"叫":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}},"尾":{"docs":{},"指":{"docs":{},"针":{"docs":{},"为":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}}},"属":{"docs":{},"性":{"docs":{},"和":{"docs":{},"方":{"docs":{},"法":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}}},"表":{"docs":{},"集":{"docs":{},"合":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}}},"集":{"docs":{},"合":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}}},"于":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"根":{"docs":{},"据":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"综":{"docs":{},"上":{"docs":{},"所":{"docs":{},"述":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}}},"我":{"docs":{},"们":{"docs":{},"大":{"docs":{},"概":{"docs":{},"可":{"docs":{},"以":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"：":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"合":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}}},"；":{"docs":{"javacore/concurrent/锁.html":{"ref":"javacore/concurrent/锁.html","tf":0.0007142857142857143}}},"改":{"docs":{"javacore/concurrent/原子变量类.html":{"ref":"javacore/concurrent/原子变量类.html","tf":0.0019455252918287938}}},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}}}}}},"才":{"docs":{},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{"javacore/concurrent/并发工具类.html":{"ref":"javacore/concurrent/并发工具类.html","tf":0.002008032128514056}}}}}},"能":{"docs":{},"晋":{"docs":{},"升":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}},"工":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"创":{"docs":{},"建":{"docs":{},"数":{"docs":{},"量":{"docs":{},"几":{"docs":{},"乎":{"docs":{},"没":{"docs":{},"有":{"docs":{},"限":{"docs":{},"制":{"docs":{},"（":{"docs":{},"其":{"docs":{},"实":{"docs":{},"也":{"docs":{},"有":{"docs":{},"限":{"docs":{},"制":{"docs":{},"的":{"docs":{},",":{"docs":{},"数":{"docs":{},"目":{"docs":{},"为":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}},"具":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"获":{"docs":{},"得":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"附":{"docs":{},"属":{"docs":{},"到":{"docs":{},"正":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}},"延":{"docs":{},"迟":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0032310177705977385},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"降":{"docs":{},"低":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"资":{"docs":{},"源":{"docs":{},"消":{"docs":{},"耗":{"docs":{"javacore/concurrent/线程池.html":{"ref":"javacore/concurrent/线程池.html","tf":0.0016155088852988692}}}}}}}},"栈":{"docs":{},"进":{"docs":{},"行":{"docs":{},"动":{"docs":{},"态":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"时":{"docs":{},"如":{"docs":{},"果":{"docs":{},"无":{"docs":{},"法":{"docs":{},"申":{"docs":{},"请":{"docs":{},"到":{"docs":{},"足":{"docs":{},"够":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0033613445378151263}},"（":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}},"使":{"docs":{},"用":{"docs":{},"：":{"docs":{},"标":{"docs":{},"记":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"空":{"docs":{},"间":{"docs":{},"不":{"docs":{},"足":{"docs":{},"的":{"docs":{},"常":{"docs":{},"见":{"docs":{},"场":{"docs":{},"景":{"docs":{},"为":{"docs":{},"前":{"docs":{},"文":{"docs":{},"所":{"docs":{},"讲":{"docs":{},"的":{"docs":{},"大":{"docs":{},"对":{"docs":{},"象":{"docs":{},"直":{"docs":{},"接":{"docs":{},"进":{"docs":{},"入":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"、":{"docs":{},"长":{"docs":{},"期":{"docs":{},"存":{"docs":{},"活":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"进":{"docs":{},"入":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"等":{"docs":{},"，":{"docs":{},"当":{"docs":{},"执":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.015748031496062992}},"是":{"docs":{},"方":{"docs":{},"法":{"docs":{},"区":{"docs":{},"的":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"区":{"docs":{},"域":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":5.0078740157480315}}}}}},"计":{"docs":{},"算":{"docs":{},"生":{"docs":{},"成":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"场":{"docs":{},"景":{"docs":{},"使":{"docs":{},"用":{"docs":{},"得":{"docs":{},"最":{"docs":{},"多":{"docs":{},"得":{"docs":{},"就":{"docs":{},"是":{"docs":{},"动":{"docs":{},"态":{"docs":{},"代":{"docs":{},"理":{"docs":{},"技":{"docs":{},"术":{"docs":{},"，":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"户":{"docs":{},"代":{"docs":{},"码":{"docs":{},"时":{"docs":{},"间":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"除":{"docs":{},"了":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"常":{"docs":{},"量":{"docs":{},"，":{"docs":{},"还":{"docs":{},"允":{"docs":{},"许":{"docs":{},"动":{"docs":{},"态":{"docs":{},"生":{"docs":{},"成":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{"javacore/jvm/jvm-memory.html":{"ref":"javacore/jvm/jvm-memory.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"堆":{"docs":{},"栈":{"docs":{},"外":{"docs":{},"，":{"docs":{},"显":{"docs":{},"示":{"docs":{},"关":{"docs":{},"于":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"附":{"docs":{},"加":{"docs":{},"信":{"docs":{},"息":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}},"#":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.023474178403755867}},"#":{"docs":{},"#":{"docs":{},"#":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"%":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"每":{"docs":{},"次":{"docs":{},"回":{"docs":{},"收":{"docs":{},"有":{"docs":{},"多":{"docs":{},"于":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},":":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"且":{"docs":{},"小":{"docs":{},"于":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"串":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.004201680672268907}},"/":{"docs":{},"并":{"docs":{},"行":{"docs":{},"/":{"docs":{},"并":{"docs":{},"发":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}},"是":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"最":{"docs":{},"基":{"docs":{},"本":{"docs":{},"、":{"docs":{},"发":{"docs":{},"展":{"docs":{},"历":{"docs":{},"史":{"docs":{},"最":{"docs":{},"悠":{"docs":{},"久":{"docs":{},"的":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}},"采":{"docs":{},"用":{"docs":{},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"器":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"碎":{"docs":{},"片":{"docs":{},"过":{"docs":{},"多":{"docs":{},"，":{"docs":{},"导":{"docs":{},"致":{"docs":{},"无":{"docs":{},"法":{"docs":{},"存":{"docs":{},"放":{"docs":{},"浮":{"docs":{},"动":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"，":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}},"仍":{"docs":{},"然":{"docs":{},"回":{"docs":{},"收":{"docs":{},"不":{"docs":{},"了":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}},"低":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"时":{"docs":{},"间":{"docs":{},"是":{"docs":{},"以":{"docs":{},"牺":{"docs":{},"牲":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"为":{"docs":{},"代":{"docs":{},"价":{"docs":{},"的":{"docs":{},"，":{"docs":{},"导":{"docs":{},"致":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},"依":{"docs":{},"然":{"docs":{},"存":{"docs":{},"活":{"docs":{},"，":{"docs":{},"将":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}},"停":{"docs":{},"顿":{"docs":{},"时":{"docs":{},"间":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"越":{"docs":{},"短":{"docs":{},"就":{"docs":{},"越":{"docs":{},"适":{"docs":{},"合":{"docs":{},"需":{"docs":{},"要":{"docs":{},"与":{"docs":{},"用":{"docs":{},"户":{"docs":{},"交":{"docs":{},"互":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"，":{"docs":{},"良":{"docs":{},"好":{"docs":{},"的":{"docs":{},"响":{"docs":{},"应":{"docs":{},"速":{"docs":{},"度":{"docs":{},"能":{"docs":{},"提":{"docs":{},"升":{"docs":{},"用":{"docs":{},"户":{"docs":{},"体":{"docs":{},"验":{"docs":{},"；":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"时":{"docs":{},"间":{"docs":{},"来":{"docs":{},"制":{"docs":{},"定":{"docs":{},"回":{"docs":{},"收":{"docs":{},"计":{"docs":{},"划":{"docs":{},"。":{"docs":{},"此":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"其":{"docs":{},"实":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"做":{"docs":{},"到":{"docs":{},"与":{"docs":{},"用":{"docs":{},"户":{"docs":{},"程":{"docs":{},"序":{"docs":{},"一":{"docs":{},"起":{"docs":{},"并":{"docs":{},"发":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"只":{"docs":{},"回":{"docs":{},"收":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"生":{"docs":{},"并":{"docs":{},"经":{"docs":{},"过":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"区":{"docs":{},"。":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"一":{"docs":{},"个":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{},"就":{"docs":{},"地":{"docs":{},"完":{"docs":{},"成":{"docs":{},"对":{"docs":{},"象":{"docs":{},"收":{"docs":{},"集":{"docs":{},"。":{"docs":{},"除":{"docs":{},"非":{"docs":{},"有":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"达":{"docs":{},"到":{"docs":{},"他":{"docs":{},"们":{"docs":{},"的":{"docs":{},"年":{"docs":{},"龄":{"docs":{},"阈":{"docs":{},"值":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"会":{"docs":{},"晋":{"docs":{},"升":{"docs":{},"到":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"，":{"docs":{},"少":{"docs":{},"数":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"直":{"docs":{},"接":{"docs":{},"分":{"docs":{},"配":{"docs":{},"在":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"中":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"相":{"docs":{},"同":{"docs":{},"年":{"docs":{},"龄":{"docs":{},"所":{"docs":{},"有":{"docs":{},"对":{"docs":{},"象":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{},"总":{"docs":{},"和":{"docs":{},"大":{"docs":{},"于":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"大":{"docs":{},"量":{"docs":{},"内":{"docs":{},"存":{"docs":{},"复":{"docs":{},"制":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"分":{"docs":{},"配":{"docs":{},"，":{"docs":{},"当":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"和":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"两":{"docs":{},"个":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"救":{"docs":{},"助":{"docs":{},"空":{"docs":{},"间":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"域":{"docs":{},"。":{"docs":{},"另":{"docs":{},"外":{"docs":{},"，":{"docs":{},"有":{"docs":{},"第":{"docs":{},"四":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"*":{"docs":{},"极":{"docs":{},"大":{"docs":{},"区":{"docs":{},"域":{"docs":{},"(":{"docs":{},"h":{"docs":{},"u":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"达":{"docs":{},"到":{"docs":{},"晋":{"docs":{},"升":{"docs":{},"总":{"docs":{},"阈":{"docs":{},"值":{"docs":{},"，":{"docs":{},"对":{"docs":{},"象":{"docs":{},"会":{"docs":{},"晋":{"docs":{},"升":{"docs":{},"到":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"区":{"docs":{},"域":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}},"复":{"docs":{},"制":{"docs":{},"活":{"docs":{},"跃":{"docs":{},"对":{"docs":{},"象":{"docs":{},"到":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"或":{"docs":{},"者":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"区":{"docs":{},"域":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"的":{"docs":{},"比":{"docs":{},"例":{"docs":{},"（":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"值":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"内":{"docs":{},"存":{"docs":{},"比":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"大":{"docs":{},"小":{"docs":{},"比":{"docs":{},"值":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"是":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"空":{"docs":{},"间":{"docs":{},"不":{"docs":{},"够":{"docs":{},"时":{"docs":{},"，":{"docs":{},"发":{"docs":{},"起":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"满":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"将":{"docs":{},"触":{"docs":{},"发":{"docs":{},"一":{"docs":{},"次":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}},"被":{"docs":{},"清":{"docs":{},"空":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"创":{"docs":{},"建":{"docs":{},"后":{"docs":{},"会":{"docs":{},"直":{"docs":{},"接":{"docs":{},"被":{"docs":{},"传":{"docs":{},"入":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"。":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}},"，":{"docs":{},"随":{"docs":{},"后":{"docs":{},"被":{"docs":{},"转":{"docs":{},"移":{"docs":{},"到":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"与":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"主":{"docs":{},"要":{"docs":{},"用":{"docs":{},"于":{"docs":{},"存":{"docs":{},"放":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"占":{"docs":{},"整":{"docs":{},"个":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"呆":{"docs":{},"长":{"docs":{},"一":{"docs":{},"点":{"docs":{},"，":{"docs":{},"减":{"docs":{},"少":{"docs":{},"进":{"docs":{},"入":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"去":{"docs":{},"掉":{"docs":{},"救":{"docs":{},"助":{"docs":{},"空":{"docs":{},"间":{"docs":{},"的":{"docs":{},"想":{"docs":{},"法":{"docs":{},"是":{"docs":{},"让":{"docs":{},"大":{"docs":{},"部":{"docs":{},"分":{"docs":{},"不":{"docs":{},"能":{"docs":{},"马":{"docs":{},"上":{"docs":{},"回":{"docs":{},"收":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"尽":{"docs":{},"快":{"docs":{},"进":{"docs":{},"入":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"，":{"docs":{},"加":{"docs":{},"快":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"的":{"docs":{},"回":{"docs":{},"收":{"docs":{},"频":{"docs":{},"率":{"docs":{},"，":{"docs":{},"减":{"docs":{},"少":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"暴":{"docs":{},"涨":{"docs":{},"的":{"docs":{},"可":{"docs":{},"能":{"docs":{},"性":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"将":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"在":{"docs":{},"此":{"docs":{},"之":{"docs":{},"后":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"会":{"docs":{},"被":{"docs":{},"转":{"docs":{},"入":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"。":{"docs":{},"也":{"docs":{},"有":{"docs":{},"一":{"docs":{},"些":{"docs":{},"对":{"docs":{},"象":{"docs":{},"由":{"docs":{},"于":{"docs":{},"占":{"docs":{},"用":{"docs":{},"内":{"docs":{},"存":{"docs":{},"过":{"docs":{},"大":{"docs":{},"，":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"让":{"docs":{},"对":{"docs":{},"象":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"单":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}},"线":{"docs":{},"程":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"更":{"docs":{},"低":{"docs":{},"、":{"docs":{},"占":{"docs":{},"用":{"docs":{},"内":{"docs":{},"存":{"docs":{},"更":{"docs":{},"少":{"docs":{},"，":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"效":{"docs":{},"率":{"docs":{},"高":{"docs":{},"；":{"docs":{},"但":{"docs":{},"同":{"docs":{},"时":{"docs":{},"也":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"不":{"docs":{},"能":{"docs":{},"有":{"docs":{},"效":{"docs":{},"利":{"docs":{},"用":{"docs":{},"多":{"docs":{},"核":{"docs":{},"优":{"docs":{},"势":{"docs":{},"。":{"docs":{},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"，":{"docs":{},"串":{"docs":{},"行":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"特":{"docs":{},"别":{"docs":{},"适":{"docs":{},"合":{"docs":{},"堆":{"docs":{},"内":{"docs":{},"存":{"docs":{},"不":{"docs":{},"高":{"docs":{},"、":{"docs":{},"单":{"docs":{},"核":{"docs":{},"甚":{"docs":{},"至":{"docs":{},"双":{"docs":{},"核":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"又":{"docs":{},"称":{"docs":{},"为":{"docs":{},"幽":{"docs":{},"灵":{"docs":{},"引":{"docs":{},"用":{"docs":{},"或":{"docs":{},"者":{"docs":{},"幻":{"docs":{},"影":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"虚":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"完":{"docs":{},"全":{"docs":{},"不":{"docs":{},"会":{"docs":{},"对":{"docs":{},"其":{"docs":{},"生":{"docs":{},"存":{"docs":{},"时":{"docs":{},"间":{"docs":{},"构":{"docs":{},"成":{"docs":{},"影":{"docs":{},"响":{"docs":{},"，":{"docs":{},"也":{"docs":{},"无":{"docs":{},"法":{"docs":{},"通":{"docs":{},"过":{"docs":{},"虚":{"docs":{},"引":{"docs":{},"用":{"docs":{},"取":{"docs":{},"得":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"及":{"docs":{},"以":{"docs":{},"前":{"docs":{},"的":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"空":{"docs":{},"间":{"docs":{},"不":{"docs":{},"足":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"，":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"定":{"docs":{},"位":{"docs":{},"分":{"docs":{},"析":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"更":{"docs":{},"高":{"docs":{},"版":{"docs":{},"本":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631},"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"优":{"docs":{},"先":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}},"低":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"关":{"docs":{},"注":{"docs":{},"在":{"docs":{},"特":{"docs":{},"定":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"周":{"docs":{},"期":{"docs":{},"内":{"docs":{},"一":{"docs":{},"个":{"docs":{},"应":{"docs":{},"用":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"量":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{},"对":{"docs":{},"关":{"docs":{},"注":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"来":{"docs":{},"说":{"docs":{},"长":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"时":{"docs":{},"间":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"接":{"docs":{},"受":{"docs":{},"的":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"高":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"关":{"docs":{},"注":{"docs":{},"的":{"docs":{},"基":{"docs":{},"准":{"docs":{},"在":{"docs":{},"更":{"docs":{},"长":{"docs":{},"周":{"docs":{},"期":{"docs":{},"时":{"docs":{},"间":{"docs":{},"上":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"快":{"docs":{},"速":{"docs":{},"响":{"docs":{},"应":{"docs":{},"时":{"docs":{},"间":{"docs":{},"不":{"docs":{},"在":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"之":{"docs":{},"内":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"否":{"docs":{},"则":{"docs":{},"不":{"docs":{},"会":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"图":{"docs":{},"片":{"docs":{},"中":{"docs":{},"的":{"docs":{},"颜":{"docs":{},"色":{"docs":{},"表":{"docs":{},"明":{"docs":{},"了":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"区":{"docs":{},"域":{"docs":{},"被":{"docs":{},"关":{"docs":{},"联":{"docs":{},"上":{"docs":{},"什":{"docs":{},"么":{"docs":{},"角":{"docs":{},"色":{"docs":{},"。":{"docs":{},"活":{"docs":{},"跃":{"docs":{},"对":{"docs":{},"象":{"docs":{},"从":{"docs":{},"一":{"docs":{},"个":{"docs":{},"区":{"docs":{},"域":{"docs":{},"疏":{"docs":{},"散":{"docs":{},"（":{"docs":{},"复":{"docs":{},"制":{"docs":{},"、":{"docs":{},"移":{"docs":{},"动":{"docs":{},"）":{"docs":{},"到":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"区":{"docs":{},"域":{"docs":{},"。":{"docs":{},"区":{"docs":{},"域":{"docs":{},"被":{"docs":{},"设":{"docs":{},"计":{"docs":{},"为":{"docs":{},"并":{"docs":{},"行":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"收":{"docs":{},"集":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"或":{"docs":{},"者":{"docs":{},"不":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"其":{"docs":{},"它":{"docs":{},"用":{"docs":{},"户":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}},"形":{"docs":{},"化":{"docs":{},"编":{"docs":{},"辑":{"docs":{},"管":{"docs":{},"理":{"docs":{},"工":{"docs":{},"具":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"时":{"docs":{},"间":{"docs":{},"以":{"docs":{},"及":{"docs":{},"回":{"docs":{},"收":{"docs":{},"所":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"（":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"值":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"过":{"docs":{},"去":{"docs":{},"回":{"docs":{},"收":{"docs":{},"的":{"docs":{},"经":{"docs":{},"验":{"docs":{},"获":{"docs":{},"得":{"docs":{},"）":{"docs":{},"，":{"docs":{},"并":{"docs":{},"维":{"docs":{},"护":{"docs":{},"一":{"docs":{},"个":{"docs":{},"优":{"docs":{},"先":{"docs":{},"列":{"docs":{},"表":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"根":{"docs":{},"据":{"docs":{},"允":{"docs":{},"许":{"docs":{},"的":{"docs":{},"收":{"docs":{},"集":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"优":{"docs":{},"先":{"docs":{},"回":{"docs":{},"收":{"docs":{},"价":{"docs":{},"值":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"器":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"组":{"docs":{},"合":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"收":{"docs":{},"集":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":5.000840336134454}},"器":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0033613445378151263}},"入":{"docs":{},"门":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"既":{"docs":{},"可":{"docs":{},"以":{"docs":{},"回":{"docs":{},"收":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"回":{"docs":{},"收":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{},"而":{"docs":{},"其":{"docs":{},"他":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"只":{"docs":{},"能":{"docs":{},"针":{"docs":{},"对":{"docs":{},"特":{"docs":{},"定":{"docs":{},"代":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"进":{"docs":{},"行":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"指":{"docs":{},"标":{"docs":{},"主":{"docs":{},"要":{"docs":{},"有":{"docs":{},"两":{"docs":{},"点":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}},"流":{"docs":{},"畅":{"docs":{},"运":{"docs":{},"行":{"docs":{},"所":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"数":{"docs":{},"量":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}},"性":{"docs":{},"能":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}},"时":{"docs":{},"间":{"docs":{},")":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"算":{"docs":{},"法":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}}}}}},"复":{"docs":{},"制":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0025210084033613447},"database/database.html":{"ref":"database/database.html","tf":0.011494252873563218}},"算":{"docs":{},"法":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0025210084033613447}}}},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"文":{"docs":{},"件":{"docs":{},"下":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"文":{"docs":{},"件":{"docs":{},"，":{"docs":{},"切":{"docs":{},"换":{"docs":{},"到":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.014084507042253521}}}}}},"岁":{"docs":{},"，":{"docs":{},"增":{"docs":{},"加":{"docs":{},"到":{"docs":{},"一":{"docs":{},"定":{"docs":{},"年":{"docs":{},"龄":{"docs":{},"则":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"中":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0033613445378151263}},"/":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"使":{"docs":{},"用":{"docs":{},"：":{"docs":{},"复":{"docs":{},"制":{"docs":{},"算":{"docs":{},"法":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"内":{"docs":{},"存":{"docs":{},"是":{"docs":{},"由":{"docs":{},"一":{"docs":{},"组":{"docs":{},"非":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{},"组":{"docs":{},"成":{"docs":{},"。":{"docs":{},"这":{"docs":{},"使":{"docs":{},"得":{"docs":{},"需":{"docs":{},"要":{"docs":{},"重":{"docs":{},"调":{"docs":{},"大":{"docs":{},"小":{"docs":{},"变":{"docs":{},"得":{"docs":{},"容":{"docs":{},"易":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"割":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"回":{"docs":{},"收":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"声":{"docs":{},"*":{"docs":{},"*":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"是":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"收":{"docs":{},"集":{"docs":{},"使":{"docs":{},"用":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"并":{"docs":{},"行":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"如":{"docs":{},"何":{"docs":{},"工":{"docs":{},"作":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"肩":{"docs":{},"负":{"docs":{},"着":{"docs":{},"活":{"docs":{},"跃":{"docs":{},"对":{"docs":{},"象":{"docs":{},"初":{"docs":{},"始":{"docs":{},"标":{"docs":{},"记":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{},"在":{"docs":{},"日":{"docs":{},"志":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"被":{"docs":{},"标":{"docs":{},"为":{"docs":{},"*":{"docs":{},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"被":{"docs":{},"标":{"docs":{},"为":{"docs":{},"浅":{"docs":{},"绿":{"docs":{},"色":{"docs":{},"，":{"docs":{},"年":{"docs":{},"老":{"docs":{},"代":{"docs":{},"被":{"docs":{},"标":{"docs":{},"记":{"docs":{},"为":{"docs":{},"蓝":{"docs":{},"色":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"已":{"docs":{},"经":{"docs":{},"运":{"docs":{},"行":{"docs":{},"了":{"docs":{},"一":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"c":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"小":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"的":{"docs":{},"设":{"docs":{},"置":{"docs":{},"很":{"docs":{},"关":{"docs":{},"键":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"老":{"docs":{},"代":{"docs":{},"大":{"docs":{},"小":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"强":{"docs":{},"引":{"docs":{},"用":{"docs":{},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"制":{"docs":{},"清":{"docs":{},"空":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}},"打":{"docs":{},"开":{"docs":{},"此":{"docs":{},"开":{"docs":{},"关":{"docs":{},"后":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0033613445378151263}}}}}}}}}},"印":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"的":{"docs":{},"堆":{"docs":{},"栈":{"docs":{},"日":{"docs":{},"志":{"docs":{},"中":{"docs":{},"查":{"docs":{},"定":{"docs":{},"位":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"堆":{"docs":{},"栈":{"docs":{},"信":{"docs":{},"息":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"担":{"docs":{},"保":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"则":{"docs":{},"会":{"docs":{},"触":{"docs":{},"发":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}},"控":{"docs":{},"制":{"docs":{},"最":{"docs":{},"大":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"将":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"内":{"docs":{},"存":{"docs":{},"回":{"docs":{},"收":{"docs":{},"时":{"docs":{},"间":{"docs":{},"不":{"docs":{},"超":{"docs":{},"过":{"docs":{},"设":{"docs":{},"定":{"docs":{},"值":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"元":{"docs":{},"空":{"docs":{},"间":{"docs":{},"大":{"docs":{},"小":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"收":{"docs":{},"集":{"docs":{},"不":{"docs":{},"能":{"docs":{},"像":{"docs":{},"其":{"docs":{},"它":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"那":{"docs":{},"样":{"docs":{},"等":{"docs":{},"待":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"快":{"docs":{},"满":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"再":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}},"器":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.012605042016806723}},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}},"其":{"docs":{},"中":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"也":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"会":{"docs":{},"再":{"docs":{},"次":{"docs":{},"进":{"docs":{},"入":{"docs":{},"重":{"docs":{},"新":{"docs":{},"设":{"docs":{},"置":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"，":{"docs":{},"等":{"docs":{},"待":{"docs":{},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"时":{"docs":{},"机":{"docs":{},"的":{"docs":{},"到":{"docs":{},"来":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"其":{"docs":{},"实":{"docs":{},"是":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"具":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"工":{"docs":{},"作":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"占":{"docs":{},"用":{"docs":{},"百":{"docs":{},"分":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"这":{"docs":{},"个":{"docs":{},"值":{"docs":{},"设":{"docs":{},"置":{"docs":{},"的":{"docs":{},"太":{"docs":{},"大":{"docs":{},"，":{"docs":{},"导":{"docs":{},"致":{"docs":{},"预":{"docs":{},"留":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"不":{"docs":{},"够":{"docs":{},"存":{"docs":{},"放":{"docs":{},"浮":{"docs":{},"动":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"用":{"docs":{},"于":{"docs":{},"精":{"docs":{},"确":{"docs":{},"控":{"docs":{},"制":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}},"搭":{"docs":{},"配":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"收":{"docs":{},"集":{"docs":{},"几":{"docs":{},"十":{"docs":{},"兆":{"docs":{},"甚":{"docs":{},"至":{"docs":{},"一":{"docs":{},"两":{"docs":{},"百":{"docs":{},"兆":{"docs":{},"的":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"时":{"docs":{},"间":{"docs":{},"可":{"docs":{},"以":{"docs":{},"控":{"docs":{},"制":{"docs":{},"在":{"docs":{},"一":{"docs":{},"百":{"docs":{},"多":{"docs":{},"毫":{"docs":{},"秒":{"docs":{},"以":{"docs":{},"内":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"不":{"docs":{},"是":{"docs":{},"太":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"，":{"docs":{},"这":{"docs":{},"点":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"接":{"docs":{},"受":{"docs":{},"的":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"以":{"docs":{},"获":{"docs":{},"取":{"docs":{},"最":{"docs":{},"短":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"时":{"docs":{},"间":{"docs":{},"为":{"docs":{},"目":{"docs":{},"标":{"docs":{},"的":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}},"来":{"docs":{},"替":{"docs":{},"代":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}}},"清":{"docs":{},"理":{"docs":{},"碎":{"docs":{},"片":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"的":{"docs":{},"后":{"docs":{},"备":{"docs":{},"预":{"docs":{},"案":{"docs":{},"，":{"docs":{},"在":{"docs":{},"并":{"docs":{},"发":{"docs":{},"收":{"docs":{},"集":{"docs":{},"发":{"docs":{},"生":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"版":{"docs":{},"本":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"给":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"使":{"docs":{},"用":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"和":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}},"运":{"docs":{},"作":{"docs":{},"大":{"docs":{},"致":{"docs":{},"可":{"docs":{},"划":{"docs":{},"分":{"docs":{},"为":{"docs":{},"以":{"docs":{},"下":{"docs":{},"几":{"docs":{},"个":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}},"组":{"docs":{},"合":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"内":{"docs":{},"存":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0033613445378151263}}}}}}}}}}}},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"运":{"docs":{},"行":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"示":{"docs":{},"意":{"docs":{},"图":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.004201680672268907}}}}}}},"还":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}},"配":{"docs":{},"合":{"docs":{},"工":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"默":{"docs":{},"认":{"docs":{},"开":{"docs":{},"启":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"量":{"docs":{},"与":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"它":{"docs":{},"能":{"docs":{},"与":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"如":{"docs":{},"果":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"；":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"以":{"docs":{},"外":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"分":{"docs":{},"代":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"算":{"docs":{},"法":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"到":{"docs":{},"消":{"docs":{},"息":{"docs":{},"后":{"docs":{},"。":{"docs":{},"b":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},"，":{"docs":{},"a":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}},"b":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}},"消":{"docs":{},"息":{"docs":{},"没":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}},"明":{"docs":{},"显":{"docs":{},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"分":{"docs":{},"配":{"docs":{},"成":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}},"模":{"docs":{},"式":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}},"、":{"docs":{},"c":{"docs":{},"m":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}},"下":{"docs":{},"与":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"的":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"用":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"首":{"docs":{},"选":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"，":{"docs":{},"除":{"docs":{},"了":{"docs":{},"性":{"docs":{},"能":{"docs":{},"原":{"docs":{},"因":{"docs":{},"外":{"docs":{},"，":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"除":{"docs":{},"了":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"配":{"docs":{},"置":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"在":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"模":{"docs":{},"式":{"docs":{},"下":{"docs":{},"，":{"docs":{},"分":{"docs":{},"配":{"docs":{},"给":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"管":{"docs":{},"理":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"一":{"docs":{},"般":{"docs":{},"来":{"docs":{},"说":{"docs":{},"不":{"docs":{},"会":{"docs":{},"很":{"docs":{},"大":{"docs":{},"。":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"它":{"docs":{},"有":{"docs":{},"两":{"docs":{},"大":{"docs":{},"用":{"docs":{},"途":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}},"是":{"docs":{},"系":{"docs":{},"统":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"配":{"docs":{},"置":{"docs":{},"模":{"docs":{},"式":{"docs":{},"。":{"docs":{},"在":{"docs":{},"该":{"docs":{},"模":{"docs":{},"式":{"docs":{},"下":{"docs":{},"，":{"docs":{},"系":{"docs":{},"统":{"docs":{},"缺":{"docs":{},"少":{"docs":{},"了":{"docs":{},"显":{"docs":{},"示":{"docs":{},"设":{"docs":{},"备":{"docs":{},"、":{"docs":{},"键":{"docs":{},"盘":{"docs":{},"或":{"docs":{},"鼠":{"docs":{},"标":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"期":{"docs":{},"望":{"docs":{},"某":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"如":{"docs":{},"果":{"docs":{},"该":{"docs":{},"类":{"docs":{},"是":{"docs":{},"可":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"情":{"docs":{},"况":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"略":{"docs":{},"有":{"docs":{},"不":{"docs":{},"同":{"docs":{},"。":{"docs":{},"此":{"docs":{},"时":{"docs":{},"对":{"docs":{},"第":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}},"毫":{"docs":{},"秒":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"片":{"docs":{},"段":{"docs":{},"内":{"docs":{},"，":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}},"清":{"docs":{},"理":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"除":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0025210084033613447}},"之":{"docs":{},"后":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"导":{"docs":{},"致":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"碎":{"docs":{},"片":{"docs":{},"，":{"docs":{},"往":{"docs":{},"往":{"docs":{},"出":{"docs":{},"现":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"空":{"docs":{},"间":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"，":{"docs":{},"但":{"docs":{},"无":{"docs":{},"法":{"docs":{},"找":{"docs":{},"到":{"docs":{},"足":{"docs":{},"够":{"docs":{},"大":{"docs":{},"连":{"docs":{},"续":{"docs":{},"空":{"docs":{},"间":{"docs":{},"来":{"docs":{},"分":{"docs":{},"配":{"docs":{},"当":{"docs":{},"前":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"不":{"docs":{},"得":{"docs":{},"不":{"docs":{},"提":{"docs":{},"前":{"docs":{},"触":{"docs":{},"发":{"docs":{},"一":{"docs":{},"次":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"阶":{"docs":{},"段":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"到":{"docs":{},"大":{"docs":{},"量":{"docs":{},"内":{"docs":{},"存":{"docs":{},"被":{"docs":{},"释":{"docs":{},"放":{"docs":{},"。":{"docs":{},"你":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"注":{"docs":{},"意":{"docs":{},"到":{"docs":{},"没":{"docs":{},"有":{"docs":{},"进":{"docs":{},"行":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"环":{"docs":{},"境":{"docs":{},"下":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}}},"时":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"空":{"docs":{},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{},"被":{"docs":{},"清":{"docs":{},"除":{"docs":{},"和":{"docs":{},"回":{"docs":{},"收":{"docs":{},"掉":{"docs":{},"。":{"docs":{},"所":{"docs":{},"有":{"docs":{},"区":{"docs":{},"域":{"docs":{},"的":{"docs":{},"活":{"docs":{},"性":{"docs":{},"在":{"docs":{},"此":{"docs":{},"时":{"docs":{},"计":{"docs":{},"算":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}},"间":{"docs":{},"上":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"清":{"docs":{},"理":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"和":{"docs":{},"两":{"docs":{},"块":{"docs":{},"较":{"docs":{},"小":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"块":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}},"就":{"docs":{},"不":{"docs":{},"够":{"docs":{},"用":{"docs":{},"了":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"进":{"docs":{},"行":{"docs":{},"分":{"docs":{},"配":{"docs":{},"担":{"docs":{},"保":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"借":{"docs":{},"用":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"存":{"docs":{},"储":{"docs":{},"放":{"docs":{},"不":{"docs":{},"下":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"合":{"docs":{},"：":{"docs":{},"整":{"docs":{},"体":{"docs":{},"来":{"docs":{},"看":{"docs":{},"是":{"docs":{},"基":{"docs":{},"于":{"docs":{},"“":{"docs":{},"标":{"docs":{},"记":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"的":{"docs":{},"一":{"docs":{},"半":{"docs":{},"，":{"docs":{},"则":{"docs":{},"年":{"docs":{},"龄":{"docs":{},"大":{"docs":{},"于":{"docs":{},"或":{"docs":{},"等":{"docs":{},"于":{"docs":{},"该":{"docs":{},"年":{"docs":{},"龄":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"进":{"docs":{},"入":{"docs":{},"老":{"docs":{},"年":{"docs":{},"代":{"docs":{},"，":{"docs":{},"无":{"docs":{},"需":{"docs":{},"等":{"docs":{},"到":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"出":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"人":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}},"筛":{"docs":{},"选":{"docs":{},"回":{"docs":{},"收":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}},"经":{"docs":{},"常":{"docs":{},"出":{"docs":{},"现":{"docs":{},"大":{"docs":{},"对":{"docs":{},"象":{"docs":{},"会":{"docs":{},"提":{"docs":{},"前":{"docs":{},"触":{"docs":{},"发":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"以":{"docs":{},"获":{"docs":{},"取":{"docs":{},"足":{"docs":{},"够":{"docs":{},"的":{"docs":{},"连":{"docs":{},"续":{"docs":{},"空":{"docs":{},"间":{"docs":{},"分":{"docs":{},"配":{"docs":{},"给":{"docs":{},"大":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"给":{"docs":{},"对":{"docs":{},"象":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"引":{"docs":{},"用":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"，":{"docs":{},"当":{"docs":{},"对":{"docs":{},"象":{"docs":{},"增":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"引":{"docs":{},"用":{"docs":{},"时":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"加":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"可":{"docs":{},"以":{"docs":{},"正":{"docs":{},"常":{"docs":{},"编":{"docs":{},"译":{"docs":{},"通":{"docs":{},"过":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}},"了":{"docs":{},"三":{"docs":{},"种":{"docs":{},"选":{"docs":{},"择":{"docs":{},"：":{"docs":{},"串":{"docs":{},"行":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"、":{"docs":{},"并":{"docs":{},"行":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"、":{"docs":{},"并":{"docs":{},"发":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}},"缩":{"docs":{},"短":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"时":{"docs":{},"间":{"docs":{},"是":{"docs":{},"以":{"docs":{},"牺":{"docs":{},"牲":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"和":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"空":{"docs":{},"间":{"docs":{},"来":{"docs":{},"换":{"docs":{},"取":{"docs":{},"的":{"docs":{},"：":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"空":{"docs":{},"间":{"docs":{},"变":{"docs":{},"小":{"docs":{},"，":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"变":{"docs":{},"得":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"，":{"docs":{},"导":{"docs":{},"致":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"下":{"docs":{},"降":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"让":{"docs":{},"所":{"docs":{},"有":{"docs":{},"存":{"docs":{},"活":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"都":{"docs":{},"向":{"docs":{},"一":{"docs":{},"端":{"docs":{},"移":{"docs":{},"动":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"直":{"docs":{},"接":{"docs":{},"清":{"docs":{},"理":{"docs":{},"掉":{"docs":{},"端":{"docs":{},"边":{"docs":{},"界":{"docs":{},"以":{"docs":{},"外":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"诞":{"docs":{},"生":{"docs":{},"以":{"docs":{},"前":{"docs":{},"）":{"docs":{},"中":{"docs":{},"与":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}},"详":{"docs":{},"解":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0016806722689075631}}},"细":{"docs":{},"参":{"docs":{},"数":{"docs":{},"说":{"docs":{},"明":{"docs":{},"请":{"docs":{},"参":{"docs":{},"考":{"docs":{},"官":{"docs":{},"方":{"docs":{},"文":{"docs":{},"档":{"docs":{},"：":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}},"软":{"docs":{},"引":{"docs":{},"用":{"docs":{},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}},"选":{"docs":{},"择":{"docs":{},"活":{"docs":{},"性":{"docs":{},"最":{"docs":{},"低":{"docs":{},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"区":{"docs":{},"域":{"docs":{},"能":{"docs":{},"够":{"docs":{},"以":{"docs":{},"最":{"docs":{},"快":{"docs":{},"的":{"docs":{},"速":{"docs":{},"度":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"这":{"docs":{},"些":{"docs":{},"区":{"docs":{},"域":{"docs":{},"会":{"docs":{},"在":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{},"在":{"docs":{},"日":{"docs":{},"志":{"docs":{},"中":{"docs":{},"被":{"docs":{},"指":{"docs":{},"示":{"docs":{},"为":{"docs":{},"[":{"docs":{},"g":{"docs":{},"c":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"配":{"docs":{},"合":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}},"置":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0015113350125944584}},"，":{"docs":{},"来":{"docs":{},"限":{"docs":{},"制":{"docs":{},"使":{"docs":{},"用":{"docs":{},"内":{"docs":{},"存":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"完":{"docs":{},"成":{"docs":{},"后":{"docs":{},"，":{"docs":{},"可":{"docs":{},"按":{"docs":{},"照":{"docs":{},"一":{"docs":{},"下":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"进":{"docs":{},"行":{"docs":{},"：":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}},"阶":{"docs":{},"段":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"、":{"docs":{},"让":{"docs":{},"对":{"docs":{},"象":{"docs":{},"在":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"多":{"docs":{},"存":{"docs":{},"活":{"docs":{},"一":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"以":{"docs":{},"及":{"docs":{},"不":{"docs":{},"要":{"docs":{},"创":{"docs":{},"建":{"docs":{},"过":{"docs":{},"大":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"及":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-gc.html":{"ref":"javacore/jvm/jvm-gc.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"\\":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"\\":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}},"\\":{"docs":{},"d":{"docs":{},"{":{"2":{"docs":{},"}":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804}},"$":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}},";":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}},"docs":{}}}},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}},"准":{"docs":{},"备":{"docs":{},"（":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}},"从":{"docs":{},"内":{"docs":{},"存":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"中":{"docs":{},"读":{"docs":{},"取":{"docs":{},"内":{"docs":{},"容":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"卸":{"docs":{},"载":{"docs":{},"（":{"docs":{},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"）":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}},"名":{"docs":{},"称":{"docs":{},"索":{"docs":{},"引":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}}},"和":{"docs":{},"传":{"docs":{},"入":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"描":{"docs":{},"述":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}},"符":{"docs":{},"索":{"docs":{},"引":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.002789400278940028}}}}}}},"格":{"docs":{},"式":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}},"符":{"docs":{},"号":{"docs":{},"引":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}},"以":{"docs":{},"一":{"docs":{},"组":{"docs":{},"符":{"docs":{},"号":{"docs":{},"来":{"docs":{},"描":{"docs":{},"述":{"docs":{},"所":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"目":{"docs":{},"标":{"docs":{},"，":{"docs":{},"符":{"docs":{},"号":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"任":{"docs":{},"何":{"docs":{},"形":{"docs":{},"式":{"docs":{},"的":{"docs":{},"字":{"docs":{},"面":{"docs":{},"量":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"时":{"docs":{},"能":{"docs":{},"无":{"docs":{},"歧":{"docs":{},"义":{"docs":{},"地":{"docs":{},"定":{"docs":{},"位":{"docs":{},"到":{"docs":{},"目":{"docs":{},"标":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"验":{"docs":{},"证":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"（":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}},"紧":{"docs":{},"接":{"docs":{},"着":{"docs":{},"魔":{"docs":{},"数":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}},"语":{"docs":{},"言":{"docs":{},"规":{"docs":{},"范":{"docs":{},"的":{"docs":{},"要":{"docs":{},"求":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}},"输":{"docs":{},"出":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445}},"结":{"docs":{},"果":{"docs":{},"是":{"docs":{},"父":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}},":":{"4":{"5":{"docs":{},"c":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"docs":{}},"docs":{}}}},"内":{"docs":{},"容":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"存":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}},"指":{"docs":{},"定":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"系":{"docs":{},"统":{"docs":{},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"等":{"docs":{},"同":{"docs":{},"于":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}},"流":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0035211267605633804}}},"重":{"docs":{},"定":{"docs":{},"向":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}},"：":{"docs":{},"结":{"docs":{},"果":{"docs":{},"就":{"docs":{},"是":{"docs":{},"出":{"docs":{},"现":{"docs":{},"如":{"docs":{},"下":{"docs":{},"异":{"docs":{},"常":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}},"入":{"docs":{},"输":{"docs":{},"出":{"docs":{},"流":{"docs":{},"i":{"docs":{},"o":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285}}}}}}}}},"遇":{"docs":{},"到":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}},"项":{"docs":{},"数":{"docs":{},"据":{"docs":{},"来":{"docs":{},"确":{"docs":{},"定":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{},"继":{"docs":{},"承":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}},"验":{"docs":{},"证":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"是":{"docs":{},"否":{"docs":{},"符":{"docs":{},"合":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}},"是":{"docs":{},"链":{"docs":{},"接":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"步":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"目":{"docs":{},"标":{"docs":{},"是":{"docs":{},"确":{"docs":{},"保":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}}}}}}}}}}}}}}},"魔":{"docs":{},"数":{"docs":{},"与":{"docs":{"javacore/jvm/jvm-class-loader.html":{"ref":"javacore/jvm/jvm-class-loader.html","tf":0.001394700139470014}}}}},"$":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0020151133501259445},"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.018779342723004695}}},"—":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}},"信":{"docs":{},"息":{"docs":{},"的":{"docs":{},"，":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}},"列":{"docs":{},"就":{"docs":{},"是":{"docs":{},"各":{"docs":{},"个":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"出":{"docs":{},"全":{"docs":{},"部":{"docs":{},"名":{"docs":{},"称":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}}},"文":{"docs":{},"件":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"完":{"docs":{},"整":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}}}}}}}}}}},"功":{"docs":{},"能":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"指":{"docs":{},"定":{"docs":{},"如":{"docs":{},"下":{"docs":{},"参":{"docs":{},"数":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}},"口":{"docs":{},"令":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"只":{"docs":{},"能":{"docs":{},"查":{"docs":{},"看":{"docs":{},"到":{"docs":{},"显":{"docs":{},"示":{"docs":{},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"想":{"docs":{},"要":{"docs":{},"查":{"docs":{},"看":{"docs":{},"未":{"docs":{},"被":{"docs":{},"显":{"docs":{},"示":{"docs":{},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"值":{"docs":{},"就":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"命":{"docs":{},"令":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}},"格":{"docs":{},"式":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.003022670025188917}}}}},"篇":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"会":{"docs":{},"首":{"docs":{},"先":{"docs":{},"调":{"docs":{},"用":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}},"官":{"docs":{},"方":{"docs":{},"推":{"docs":{},"荐":{"docs":{},"年":{"docs":{},"轻":{"docs":{},"代":{"docs":{},"占":{"docs":{},"整":{"docs":{},"个":{"docs":{},"堆":{"docs":{},"的":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"一":{"docs":{},"定":{"docs":{},"需":{"docs":{},"要":{"docs":{},"实":{"docs":{},"现":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}},"主":{"docs":{},"要":{"docs":{},"体":{"docs":{},"现":{"docs":{},"在":{"docs":{},"以":{"docs":{},"下":{"docs":{},"方":{"docs":{},"面":{"docs":{},"：":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}},"存":{"docs":{},"在":{"docs":{},"许":{"docs":{},"多":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"很":{"docs":{},"多":{"docs":{},"人":{"docs":{},"更":{"docs":{},"愿":{"docs":{},"意":{"docs":{},"使":{"docs":{},"用":{"docs":{},"优":{"docs":{},"秀":{"docs":{},"的":{"docs":{},"第":{"docs":{},"三":{"docs":{},"方":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"工":{"docs":{},"具":{"docs":{},"来":{"docs":{},"替":{"docs":{},"代":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"性":{"docs":{},"能":{"docs":{},"不":{"docs":{},"高":{"docs":{},"，":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"相":{"docs":{},"对":{"docs":{},"于":{"docs":{},"一":{"docs":{},"些":{"docs":{},"优":{"docs":{},"秀":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"工":{"docs":{},"具":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"要":{"docs":{},"大":{"docs":{},"不":{"docs":{},"少":{"docs":{},"，":{"docs":{},"这":{"docs":{},"大":{"docs":{},"大":{"docs":{},"影":{"docs":{},"响":{"docs":{},"存":{"docs":{},"储":{"docs":{},"和":{"docs":{},"传":{"docs":{},"输":{"docs":{},"的":{"docs":{},"效":{"docs":{},"率":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"关":{"docs":{},"注":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}},"无":{"docs":{},"法":{"docs":{},"跨":{"docs":{},"语":{"docs":{},"言":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}},"网":{"docs":{},"进":{"docs":{},"行":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}},"往":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"中":{"docs":{},"加":{"docs":{},"入":{"3":{"0":{"docs":{},"w":{"docs":{},"内":{"docs":{},"容":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"4":{"0":{"docs":{},"w":{"docs":{},"内":{"docs":{},"容":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"快":{"docs":{},"照":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"速":{"docs":{},"重":{"docs":{},"传":{"docs":{},"机":{"docs":{},"制":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"另":{"docs":{},"外":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"丢":{"docs":{},"包":{"docs":{},"评":{"docs":{},"定":{"docs":{},"标":{"docs":{},"准":{"docs":{},"，":{"docs":{},"即":{"docs":{},"如":{"docs":{},"果":{"docs":{},"连":{"docs":{},"续":{"docs":{},"收":{"docs":{},"到":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"j":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"，":{"docs":{},"一":{"docs":{},"共":{"docs":{},"输":{"docs":{},"出":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"持":{"docs":{},"久":{"docs":{},"代":{"docs":{},"一":{"docs":{},"般":{"docs":{},"固":{"docs":{},"定":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}},"大":{"docs":{},"小":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"性":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}},"放":{"docs":{},"在":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"一":{"docs":{},"个":{"docs":{},"报":{"docs":{},"文":{"docs":{},"里":{"docs":{},"发":{"docs":{},"送":{"docs":{},"给":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"。":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}},"日":{"docs":{},"志":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0025188916876574307}},"文":{"docs":{},"件":{"docs":{},"名":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}},"构":{"docs":{},"成":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"的":{"docs":{},"格":{"docs":{},"式":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}},"显":{"docs":{},"示":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"在":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}},"堆":{"docs":{},"中":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"统":{"docs":{},"计":{"docs":{},"信":{"docs":{},"息":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}},"物":{"docs":{},"理":{"docs":{},"连":{"docs":{},"接":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"层":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"（":{"docs":{},"p":{"docs":{},"h":{"docs":{},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"统":{"docs":{},"计":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"：":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}},"一":{"docs":{},"的":{"docs":{},"管":{"docs":{},"理":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}},"足":{"docs":{},"够":{"docs":{},"。":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}},"路":{"docs":{},"径":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}},"较":{"docs":{},"高":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"些":{"docs":{},"还":{"docs":{},"不":{"docs":{},"高":{"docs":{},"，":{"docs":{},"无":{"docs":{},"法":{"docs":{},"直":{"docs":{},"接":{"docs":{},"定":{"docs":{},"位":{"docs":{},"到":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"类":{"docs":{},"。":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"辅":{"docs":{},"助":{"docs":{},"配":{"docs":{},"置":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}},"索":{"docs":{},"引":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}},"的":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"域":{"docs":{},"记":{"docs":{},"录":{"docs":{},"着":{"docs":{},"主":{"docs":{},"键":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}},"过":{"docs":{},"高":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"查":{"docs":{},"找":{"docs":{},"响":{"docs":{},"应":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"定":{"docs":{},"位":{"docs":{},"都":{"docs":{},"是":{"docs":{},"用":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0005037783375314861}}}}}}}}}}}}}}}}}}}}}}}},"远":{"docs":{},"程":{"docs":{"javacore/jvm/jvm-performance.html":{"ref":"javacore/jvm/jvm-performance.html","tf":0.0010075566750629723}}}},"地":{"docs":{},"址":{"docs":{},"；":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":0.011235955056179775}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":5.002680965147453}},"和":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}},"示":{"docs":{},"例":{"docs":{},"：":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}},"工":{"docs":{},"具":{"docs":{"javacore/io/io.html":{"ref":"javacore/io/io.html","tf":0.014285714285714285},"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0017873100983020554}}}},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"字":{"docs":{},"节":{"docs":{},"序":{"docs":{},"列":{"docs":{},"持":{"docs":{},"久":{"docs":{},"化":{"docs":{},"—":{"docs":{},"—":{"docs":{},"保":{"docs":{},"存":{"docs":{},"在":{"docs":{},"内":{"docs":{},"存":{"docs":{},"、":{"docs":{},"文":{"docs":{},"件":{"docs":{},"、":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"中":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"将":{"docs":{},"对":{"docs":{},"象":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}},"用":{"docs":{},"途":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}},"的":{"docs":{},"高":{"docs":{},"级":{"docs":{},"认":{"docs":{},"识":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}},"（":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"）":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}},"'":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"'":{"docs":{},")":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.0017605633802816902}}}}},"'":{"docs":{},"'":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}},"}":{"docs":{},"'":{"docs":{},";":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}},"姓":{"docs":{},"名":{"docs":{},"：":{"docs":{},"\"":{"docs":{"javacore/io/Java常用IO类.html":{"ref":"javacore/io/Java常用IO类.html","tf":0.00528169014084507}}}}}},"压":{"docs":{},"缩":{"docs":{},"一":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}},"目":{"docs":{},"录":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"输":{"docs":{},"出":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}},"追":{"docs":{},"加":{"docs":{},"内":{"docs":{},"容":{"docs":{},"方":{"docs":{},"式":{"docs":{"javacore/io/Java流操作.html":{"ref":"javacore/io/Java流操作.html","tf":0.0007558578987150416}}}}}}}},"、":{"docs":{},"x":{"docs":{},"m":{"docs":{},"l":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}},"世":{"docs":{},"界":{"docs":{},"的":{"docs":{},"无":{"docs":{},"数":{"docs":{},"类":{"docs":{},"中":{"docs":{},"看":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"段":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}}},"再":{"docs":{},"次":{"docs":{},"做":{"docs":{},"一":{"docs":{},"些":{"docs":{},"改":{"docs":{},"动":{"docs":{},"，":{"docs":{},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"，":{"docs":{},"则":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}}}}}}}}},"形":{"docs":{},"式":{"docs":{},"）":{"docs":{},"。":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}},"核":{"docs":{},"心":{"docs":{},"技":{"docs":{},"术":{"docs":{},"（":{"docs":{},"卷":{"docs":{"javacore/io/Java序列化.html":{"ref":"javacore/io/Java序列化.html","tf":0.0008936550491510277}}}}}}}},"网":{"docs":{},"络":{"docs":{},"编":{"docs":{},"程":{"docs":{"javacore/io/Java网络编程.html":{"ref":"javacore/io/Java网络编程.html","tf":5.01123595505618}}}},"层":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"针":{"docs":{},"对":{"docs":{},"的":{"docs":{},"还":{"docs":{},"是":{"docs":{},"主":{"docs":{},"机":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"传":{"docs":{},"输":{"docs":{},"服":{"docs":{},"务":{"docs":{},"，":{"docs":{},"而":{"docs":{},"主":{"docs":{},"机":{"docs":{},"之":{"docs":{},"间":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"很":{"docs":{},"多":{"docs":{},"链":{"docs":{},"路":{"docs":{},"，":{"docs":{},"数":{"docs":{},"据":{"docs":{},"链":{"docs":{},"路":{"docs":{},"层":{"docs":{},"（":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}},"通":{"docs":{},"信":{"docs":{"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":10}},"面":{"docs":{},"经":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}},"~":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}},"❓":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.01440922190201729},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.01440922190201729},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.01440922190201729}}},"四":{"docs":{},"次":{"docs":{},"挥":{"docs":{},"手":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}},"负":{"docs":{},"责":{"docs":{},"断":{"docs":{},"开":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"向":{"docs":{},"服":{"docs":{},"务":{"docs":{},"端":{"docs":{},"发":{"docs":{},"送":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"一":{"docs":{},"个":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},"带":{"docs":{},"有":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}},"带":{"docs":{},"有":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}},"建":{"docs":{},"立":{"docs":{},"连":{"docs":{},"接":{"docs":{},"前":{"docs":{},"两":{"docs":{},"次":{"docs":{},"握":{"docs":{},"手":{"docs":{},"的":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}},"议":{"docs":{},"使":{"docs":{},"用":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}},"报":{"docs":{},"文":{"docs":{},"中":{"docs":{},"选":{"docs":{},"项":{"docs":{},"字":{"docs":{},"段":{"docs":{},"的":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}},"后":{"docs":{},"，":{"docs":{},"把":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}},"时":{"docs":{},"，":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"表":{"docs":{},"示":{"docs":{},"对":{"docs":{},"方":{"docs":{},"不":{"docs":{},"再":{"docs":{},"发":{"docs":{},"送":{"docs":{},"数":{"docs":{},"据":{"docs":{},"了":{"docs":{},"但":{"docs":{},"是":{"docs":{},"还":{"docs":{},"能":{"docs":{},"接":{"docs":{},"收":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"而":{"docs":{},"自":{"docs":{},"己":{"docs":{},"也":{"docs":{},"未":{"docs":{},"必":{"docs":{},"全":{"docs":{},"部":{"docs":{},"数":{"docs":{},"据":{"docs":{},"都":{"docs":{},"发":{"docs":{},"送":{"docs":{},"给":{"docs":{},"对":{"docs":{},"方":{"docs":{},"了":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"己":{"docs":{},"方":{"docs":{},"可":{"docs":{},"以":{"docs":{},"立":{"docs":{},"即":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"发":{"docs":{},"送":{"docs":{},"一":{"docs":{},"些":{"docs":{},"数":{"docs":{},"据":{"docs":{},"给":{"docs":{},"对":{"docs":{},"方":{"docs":{},"后":{"docs":{},"，":{"docs":{},"再":{"docs":{},"发":{"docs":{},"送":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"给":{"docs":{},"对":{"docs":{},"方":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"同":{"docs":{},"意":{"docs":{},"现":{"docs":{},"在":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"连":{"docs":{},"接":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"己":{"docs":{},"方":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}}}}}}}}},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}},"原":{"docs":{},"理":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}},"是":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}},"确":{"docs":{},"认":{"docs":{},"包":{"docs":{},"和":{"docs":{},"自":{"docs":{},"动":{"docs":{},"重":{"docs":{},"传":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}}}}}},"认":{"docs":{},"为":{"docs":{},"：":{"docs":{},"a":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.005763688760806916},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.005763688760806916},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.005763688760806916}}},"b":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}}}},"�":{"docs":{},"�":{"docs":{"javaweb/javaee.html":{"ref":"javaweb/javaee.html","tf":0.002881844380403458},"javaweb/distributed/distributed.html":{"ref":"javaweb/distributed/distributed.html","tf":0.002881844380403458},"javaweb/network-interview.html":{"ref":"javaweb/network-interview.html","tf":0.002881844380403458}}}},"…":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}},"冗":{"docs":{},"余":{"docs":{},"：":{"docs":{},"存":{"docs":{},"储":{"docs":{},"两":{"docs":{},"倍":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"冗":{"docs":{},"余":{"docs":{},"降":{"docs":{},"低":{"docs":{},"了":{"docs":{},"性":{"docs":{},"能":{"docs":{},"，":{"docs":{},"但":{"docs":{},"提":{"docs":{},"高":{"docs":{},"了":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"。":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"含":{"docs":{},"义":{"docs":{},"：":{"docs":{},"建":{"docs":{},"立":{"docs":{},"一":{"docs":{},"个":{"docs":{},"和":{"docs":{},"主":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"完":{"docs":{},"全":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"环":{"docs":{},"境":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}},"增":{"docs":{},"加":{"docs":{},"冗":{"docs":{},"余":{"docs":{},"，":{"docs":{},"提":{"docs":{},"高":{"docs":{},"可":{"docs":{},"用":{"docs":{},"性":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}},"外":{"docs":{},"键":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}},"好":{"docs":{},"处":{"docs":{},"：":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}},"术":{"docs":{},"语":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.011494252873563218}}}},"涉":{"docs":{},"及":{"docs":{},"到":{"docs":{},"三":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"数":{"1":{"docs":{},".":{"docs":{},"需":{"docs":{},"要":{"docs":{},"读":{"docs":{},"写":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}},"docs":{}}}}}}}}},"索":{"docs":{},"引":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}},"列":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"：":{"docs":{},"选":{"docs":{},"择":{"docs":{},"性":{"docs":{},"强":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"列":{"docs":{},"放":{"docs":{},"在":{"docs":{},"前":{"docs":{},"面":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"对":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"表":{"docs":{},"中":{"docs":{},"一":{"docs":{},"列":{"docs":{},"或":{"docs":{},"多":{"docs":{},"列":{"docs":{},"的":{"docs":{},"值":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"结":{"docs":{},"构":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"优":{"docs":{},"化":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}},"聚":{"docs":{},"集":{"docs":{},"所":{"docs":{},"以":{"docs":{},"和":{"docs":{},"非":{"docs":{},"聚":{"docs":{},"集":{"docs":{},"索":{"docs":{},"引":{"docs":{},"区":{"docs":{},"别":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}},"索":{"docs":{},"引":{"docs":{},"和":{"docs":{},"非":{"docs":{},"聚":{"docs":{},"集":{"docs":{},"索":{"docs":{},"引":{"docs":{},"区":{"docs":{},"别":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}},"，":{"docs":{},"数":{"docs":{},"据":{"docs":{},"按":{"docs":{},"索":{"docs":{},"引":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"存":{"docs":{},"储":{"docs":{},"真":{"docs":{},"实":{"docs":{},"的":{"docs":{},"物":{"docs":{},"理":{"docs":{},"数":{"docs":{},"据":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"视":{"docs":{},"图":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}},"防":{"docs":{},"止":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"注":{"docs":{},"入":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.017241379310344827}}}}}}}}},"隔":{"docs":{},"离":{"docs":{},"性":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}},"）":{"docs":{},"的":{"docs":{},"语":{"docs":{},"句":{"docs":{},"给":{"docs":{},"替":{"docs":{},"换":{"docs":{},"掉":{"docs":{},"来":{"docs":{},"防":{"docs":{},"止":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"注":{"docs":{},"入":{"docs":{"database/database.html":{"ref":"database/database.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}},"上":{"docs":{},"传":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"分":{"docs":{},"支":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"网":{"docs":{},"址":{"docs":{},"访":{"docs":{},"问":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.014084507042253521}},"/":{"docs":{},"*":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}},"书":{"docs":{},"写":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}},"别":{"docs":{},"忘":{"docs":{},"了":{"docs":{},"在":{"docs":{},"提":{"docs":{},"交":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"掉":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"文":{"docs":{},"件":{"docs":{},"夹":{"docs":{},"，":{"docs":{},"不":{"docs":{},"然":{"docs":{},"每":{"docs":{},"次":{"docs":{},"提":{"docs":{},"交":{"docs":{},"拉":{"docs":{},"取":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"会":{"docs":{},"很":{"docs":{},"痛":{"docs":{},"苦":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"是":{"docs":{},"推":{"docs":{},"荐":{"docs":{},"安":{"docs":{},"装":{"docs":{},"的":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"目":{"docs":{},"前":{"docs":{},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"正":{"docs":{},"式":{"docs":{},"列":{"docs":{},"入":{"docs":{},"标":{"docs":{},"准":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"而":{"docs":{},"右":{"docs":{},"边":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"最":{"docs":{},"新":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"该":{"docs":{},"版":{"docs":{},"本":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"新":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"，":{"docs":{},"还":{"docs":{},"未":{"docs":{},"被":{"docs":{},"完":{"docs":{},"全":{"docs":{},"列":{"docs":{},"入":{"docs":{},"标":{"docs":{},"准":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"以":{"docs":{},"后":{"docs":{},"会":{"docs":{},"有":{"docs":{},"所":{"docs":{},"变":{"docs":{},"动":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"建":{"docs":{},"议":{"docs":{},"大":{"docs":{},"家":{"docs":{},"安":{"docs":{},"装":{"docs":{},"最":{"docs":{},"新":{"docs":{},"的":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"效":{"docs":{},"果":{"docs":{},"：":{"docs":{},"默":{"docs":{},"认":{"docs":{},"只":{"docs":{},"在":{"docs":{},"目":{"docs":{},"录":{"docs":{},"导":{"docs":{},"航":{"docs":{},"中":{"docs":{},"显":{"docs":{},"示":{"docs":{},"章":{"docs":{},"的":{"docs":{},"标":{"docs":{},"题":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"会":{"docs":{},"显":{"docs":{},"示":{"docs":{},"小":{"docs":{},"节":{"docs":{},"的":{"docs":{},"标":{"docs":{},"题":{"docs":{},"，":{"docs":{},"点":{"docs":{},"击":{"docs":{},"每":{"docs":{},"一":{"docs":{},"章":{"docs":{},"或":{"docs":{},"者":{"docs":{},"每":{"docs":{},"一":{"docs":{},"节":{"docs":{},"会":{"docs":{},"显":{"docs":{},"示":{"docs":{},"当":{"docs":{},"前":{"docs":{},"章":{"docs":{},"或":{"docs":{},"节":{"docs":{},"的":{"docs":{},"子":{"docs":{},"目":{"docs":{},"录":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"同":{"docs":{},"时":{"docs":{},"会":{"docs":{},"收":{"docs":{},"起":{"docs":{},"其":{"docs":{},"它":{"docs":{},"之":{"docs":{},"前":{"docs":{},"展":{"docs":{},"开":{"docs":{},"的":{"docs":{},"章":{"docs":{},"节":{"docs":{},"。":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"淘":{"docs":{},"宝":{"docs":{},"源":{"docs":{},"：":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}},"稳":{"docs":{},"定":{"docs":{},"版":{"docs":{},"进":{"docs":{},"行":{"docs":{},"开":{"docs":{},"发":{"docs":{},"。":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}}}}}},"端":{"docs":{},"口":{"docs":{},"。":{"docs":{"怎么用Git写书.html":{"ref":"怎么用Git写书.html","tf":0.004694835680751174}}}}}},"length":33288},"corpusTokens":["!=","!compareandsetwaitstatus(h,","!thread.currentthread().isinterrupted())","\"","\"%x\\n\"","\");","\",","\".class\";","\";","\"==\"运算符用来比较两个变量的值是否相等。也就是说，该运算符用于比较变量对应的内存中所存储的数值是否相同，要比较两个基本类型的数据或两个引用变量是否相等，只能使用“==”运算符。","\"[name","\"\\natom","\"\\nperson","\"]","\"]\";","\"a","\"a\");","\"abc\";","\"b\");","\"c\");","\"catalina","\"compilerthread0\"","\"countthread\");","\"d\");","\"d:/text.dat\";","\"d:\\\\object.txt\";","\"d:\\\\order.txt\";","\"d:\\\\test.txt\";","\"d:\\\\zipdemo.zip\";","\"finalizer\"","\"hello","\"hello\";","\"helloworld\";","\"lisi","\"low","\"main\"","\"mldn_unzip.txt\");","\"mythread\");","\"name:","\"name='\"","\"person{\"","\"pollintervalretryschedulerthread\"","\"printthread\");","\"r\");//","\"refer","\"rw\");//","\"signal","\"test.txt\");","\"thread","\"utf","\"vm","\"wangwu","\"write_\"","\"zhangsan\";","\"个元素\");","\"围巾\"};","\"在运行。\");","\"姓名：\"","\"张三\",","\"得到了锁\");","\"手套\",","\"执行完毕\");","\"正在执行\");","\"毫秒。\");","\"线程","\"线程\");","\"线程a\").start();","\"线程a\");","\"线程b\").start();","\"线程b\");","\"线程c\");","\"线程，休眠\"","\"；年龄：\"","#","####","$","%cpu","%cpu(s):","%mem","%。如果每次回收有多于","&","&&","'\\''","'\\n')","'publish","'}';","(!compareandsetwaitstatus(h,","(!onlyifabs","(!onlyifabsent)","(!tryacquire(arg)","(!tryacquire(arg))","((bytesnumread","((e","((e.hash","((ek","((f","((fh","((k","((line","((newcap","((p","((receiv","((tab","((temp","((treebin)f).puttreeval(hash,","((treenode)e).split(this,","((treenode)first).gettreenode(hash,","((treenode)p).puttreeval(this,","()","()）不同，不需要显式的调用父类的构造器。虚拟机会自动保证在子类的","(++size","(0)","(0.0mb)","(1.25mb)","(1.7351913452148438mb)","(20.0mb)","(3.2665634155273438mb)","(3.7486572265625mb)","(46.11457824707031mb)","(5.1263427734375mb)","(5.1875mb)","(5.608436584472656mb)","(53.375mb)","(57.452308654785156mb)","(59.1875mb)","(7.2604217529296875mb)","(8.875mb)","(80.0mb)","(84.0mb)","(;;)","(a","(a.compareandset(expect,","(accessord","(addifundercorepoolsize(null))//注意传进去的参数是nul","(and","(asr.compareandset(init_ref,","(b","(bincount","(c","(castabat(tab,","(char)","(classdata","(classnotfoundexcept","(cmp","(command","(compar","(comparable)","(compareandset(current,","(compareandsethead(new","(compareandsettail(pred,","(compareandsettail(t,","(cpr","(e","(e)","(e.hash","(e.next","(ek","(eldest)","(elementdata","(evict","(except","(executionexcept","(f","(f)","(failed)","(fh","(file.isdirectory())","(first","(first.hash","(float)newcap","(getclassloadinglock(name))","(h","(hibernateexcept","(hitail","(instance)","(int","(int)(default_load_factor","(integ","(interrupted)","(interruptedexcept","(ioexcept","(key","(last","(linkedhashmap.entry)e,","(lotail","(map","(math.random()","(maxprocessmemori","(mincapac","(mixed)]。所以年轻代和年老代在同一时间被回收。","(n","(nanostimeout","(newcap","(newcapac","(newthr","(node","(node[]","(node[])new","(nummov","(object","(object[])","(oldcap","(oldcapac","(oldtab","(oldval","(on","(p","(p.color","(p.hash","(p.left","(p.parent","(p==null","(parent","(parking)","(pred","(pred.waitstatu","(queue)","(queue.size()","(r","(replac","(resolve)","(retries++","(run","(s","(scan.hasnext(\"^\\\\d{4}","(scan.hasnextfloat())","(scan.hasnextint())","(seg","(session)","(shouldparkafterfailedacquire(p,","(singleton.class)","(str.equalsignorecase(\"exit\"))","(string","(string)","(system.currenttimemillis()","(t","(t)e.value;","(t.waitstatu","(tab","(tabat(tab,","(thi","(this.eden.size()","(thread.interrupted())","(threadstacksize)","(true)","(tryacquireshared(arg)","(tryrelease(arg))","(tryreleaseshared(arg))","(v","(w","(workercountof(c)","(young)(init","(youngest)","(此时gitbook的根目录下的node_modules文件夹中已经有了该插件了)","(计算ssize时进行移位操作的次数)log(ssize)","(运行用户代码时间",");","*","**注意：**写作此文章时，收集极大对象时还没有被优化。因此，你应该避免创建这个大小的对象。","**注意：**区域没有必要像旧的收集器一样是保持连续的。","**（1）初始标记阶段**","**（2）g1","**（3）g1","**（4）g1","**（5）g1","*/","+","++bincount)","++modcount;","++n;","+=",",",",cap",".","...","./","./jmap",".75f,","/","/*","/**","//","//reentrantlock加锁，保证线程安全","//之所以用32是因为concurrenthashmap里的hash()方法输出的最大数是32位的","//加锁","//否则，将除要删除元素之外的其他元素拷贝到新副本中，并切换引用","//在新副本上执行添加操作","//如果要删除的是列表末端数据，拷贝前len","//将_book中的子文件全部移到外层，并删除_book","//将原容器引用指向新副本","//拷贝原容器，长度为原容器长度加一","//注意传进去的参数是null","//清空一下分支","//然后将master分支下的_book静态页面文件内容全部复制到gh","//获取","//解锁","//这时候gh","//释放","/home/xxx/dump.hprof","/。","0","0)","0))","0);","0,","0,重新进入阻塞状态。","0.0","0.0%","0.021t","0.0668480","0.0f;","0.1","0.3","0.398","0.4","0.6763541","0.75)，则会重新","0.75f,","0.75f;","0.75，但是在数据量过大或者运气不佳的情况下，还是会存在一些队列长度过长的情况，如果还是采用单向列表方式，那么查询某个节点的时间复杂度为","0.75：","0000","00:02:10","05t10:43:18.093+0800:","05t10:43:18.160+0800:","07","0;","0l;","0。","0。然后各自加了","0，导致无法对它们进行回收。","0，当有任务来之后，就会创建一个线程去执行任务，当线程池中的线程数目达到","0，表示每次进入","1","1!\");","1\");","1\",","1#comment","1)","1))","1));","1);","1)]","1)，也就是旧容量的","1)，则表示需要扩容，此时调用helptransfer()方法进行扩容；","1)，目的：混合原始哈希码的高位和低位，以此来加大低位的随机性。而且混合后的低位掺杂了高位的部分特征，这样高位的信息也被变相保留下来。","1,","1,0,","1.","1.1.","1.2.","1.3.","1.4","1.4.","1.5","1.5.","1.6.","1.7","1.7.","1.7/1.8扩容区别","1.7结构","1.8","1.8.","1.8初始化concurrenthashmap","1.8区别?","1.8结构","1.hashmap非线程安全","1.jdk1.8的实现降低锁的粒度，jdk1.7版本锁的粒度是基于segment的，包含多个hashentry，而jdk1.8锁的粒度就是hashentry（首节点）","1.list","1.不可变性：","1.为了维护hashcode()方法的equals协定，该协定指出：相等的对象必须具有相等的散列码（hashcode）；而两个hashcode()返回的结果相等，两个对象的equals()方法不一定相等。","1.使用","1.同步","1.因为粒度降低了，在相对而言的低粒度加锁方式，synchronized并不比reentrantlock差，在粗粒度加锁中reentrantlock可能通过condition来控制各个低粒度的边界，更加的灵活，而在低粒度中，condition的优势就没有了","1.存储结构","1.底层数据结构","1.所有非叶子结点至多拥有两个儿子（left和right）；","1.数据库有个bin","1.概览","1.监控","1.继承的父类不同","1.若桶中链表元素个数大于等于8时，链表转换成树结构；若桶中链表元素个数小于等于6时，树结构还原成链表。因为红黑树的平均查找长度是log(n)，长度为8的时候，平均查找长度为3，如果继续使用链表，平均查找长度为8/2=4，这才有转换为树的必要。链表长度如果是小于等于6，6/2=3，虽然速度也很快的，但是转化为树结构和生成树的时间并不会太短。","1/10。调小这个参数将增大","10","10%","10)","10.","100","100%","100)));","1000)).start();","10642","10738k","10;","10gb","10mb/s，所以在进行并发的时候回考虑资源的限制。硬件资源限制有带宽的上传/下载速度、硬盘的读写速度和","10。","10，i","11","11014","11315","11589","11，","12","120304","12379","12379,","123;","123。","12545","1262","128m","13.19,","13.6","1310720","136447k","147186k","14:20:09","14:47","15","15(0x1111)","159:08.40","16","16);","16)，主要是从速度、功效、质量来考虑的，这么做可以在","16;","16;。理想情况下concurrenthashmap的真正的并发访问量能够达到concurrencylevel，因为有concurrencylevel个segment，假如有concurrencylevel个线程需要访问map，并且需要访问的数据都恰好分别落在不同的segment中，则这些线程能够无竞争地自由访问（因为他们不需要竞争同一把锁），达到同时访问的效果。这也是为什么这个参数起名为“并发级别”的原因。","16bit","17","17.0","17592186044415","18);","180","1819480","187:52.59","187:52.78","187:53.36","187:54.79","187:55.08","187:55.25","187:55.61","187:55.76","1;","1];","1a","1bit","1bit(红色)，因此新的","1gb","1l;","1mb/s,系统启动","1m，最大","1st","1s），将可能出现超时错误。","1};","1、做数据的热备，作为后备数据库，主数据库服务器故障后，可切换到从数据库继续工作，避免数据丢失。","1。","1。但实际情况并非总是如此理想，虽然","1。和","1。引用计数为","1个数据到新副本上，再切换引用","1个线程正在进行扩容。","1则进行初始化。","1就表示还有内容，可以继续读取","1的值是所有二进制位全为1，这种情况下，index的结果等同于hashcode后几位的值。只要输入的hashcode本身分布均匀，hash算法的结果就是均匀的。","1）","1，","1，之后为节点","1，因此尝试次数为","1，如果是","1，尽管增加了两次。","1，引用失效时计数器减","1，直到计数器的值和设置的值相等，等待的所有线程才会继续执行。","1，线程","1，表示正在进行初始化操作；","1．object类中equals方法比较的是两个对象的引用地址，只有对象的引用地址指向同一个地址时，才认为这两个地址是相等的，否则这两个对象就不相等。","2","2\");","2\",","2));","2);","2*原数组长度+1","2,","2,j=a，合并一下","2.","2.1","2.1.","2.10.","2.2","2.2.","2.3.","2.4.","2.5.","2.6.","2.7.","2.8.","2.9.","2.concurrenthashmap将整个hash桶进行了分段segment，每个segment上都有锁","2.jdk1.8版本的数据结构变得更加简单，使得操作也更加清晰流畅，因为已经使用synchronized来进行同步，所以不需要分段锁的概念，也就不需要segment这种数据结构了，由于粒度的降低，实现的复杂度也增加了","2.jvm的开发团队从来都没有放弃synchronized，而且基于jvm的synchronized优化空间更大，使用内嵌的关键字比使用api更加自然","2.set","2.size操作","2.分析监控结果后决定是否需要优化","2.如果不重写hashcode()，就会造成相等对象，不同的hashcode();在hashmap中就会存储两个值一样的对象。导致混淆。","2.如果有两个对象，他们的属性是相同的，但是地址不同，这样使用equals()比较得出的结果是不相等的，而我们需要的是这两个对象相等，因此默认的equals()方法是不符合我们的要求的，这个时候我们就需要对equals()方法进行重写以满足我们的预期结果。","2.实现线程安全的方式","2.已经重写了equals()和hashcode()方法","2.序列化","2.我们的目标就是把主数据库的bin","2.所有结点存储一个关键字；","2.把","2.线程安全性不同","2.读写分离，使数据库能支撑更大的并发。部分报表sql语句非常的慢，导致锁表，影响前台服务。如果前台使用master，报表使用slave，那么报表sql将不会造成前台锁，保证了前台速度。","2.还有选择6和8，中间有个差值7可以有效防止链表和树频繁转换。假设一下，如果设计成链表个数超过8则链表转换成树结构，链表个数小于8则树结构转换成链表，如果一个hashmap不停的插入、删除元素，链表个数在8左右徘徊，就会频繁的发生树转链表、链表转树，效率会很低。","2.进行比较的旧值","20","2000","2000)).start();","2000m","2016","20447232","20971520","21711","21742","2249069246763182397l;","23","23);","23353","24","24064.0","24868","25.395:","25.462:","2500","25816","26112.0","27.299g","274931k","278036","28920","2:12.46","2:20.55","2:56,","2:8,一个","2;","2b－3a。","2gb","2l;","2mb/s,某个资源的下载速度为","2、4","2。","2。这个修改对跑在右边","2的n次方大于等于concurrenthashmaplevel","2秒处理文件a","2秒处理文件b","2）","2，","2，retri","2，依次类推。","3","3,","3.","3.1.","3.2.","3.3.","3.4","3.4.","3.6","3.9","3.concurrenthashmap让锁的粒度更精细，并发性能更好。","3.jdk1.8使用红黑树来优化链表，基于长度很长的链表的遍历是一个很漫长的过程，而红黑树的遍历效率是很快的，代替一定阈值的链表，这样形成一个最佳拍档","3.queue","3.在java的集合框架中需要用到equals()方法进行查找对象，如果集合中存放的是自定义类型，并且没有重写equals()方法，则会调用object父类中的equals()方法按照地址比较，往往会出现错误的结果，此时我们应该根据业务需求重写equals()方法。","3.在大量的数据操作下，对于jvm的内存压力，基于api的reentrantlock会开销更多的内存，虽然不是瓶颈，但是也是一个选择依据","3.扩容","3.拟写入的新值","3.是否提供contains方法","3.让其在从数据的relay","3.设置","3.进行读或写操作","3.非叶子结点的左指针指向小于其关键字的子树，右指针指向大于其关键字的子树","3/8。使用","30),","30,","30.3f,","3000)).start();","30;","31","31),","31,","31;","32","32)};","320","32505008","32783044","32;","32m，蓝色区域保持年老代对象，绿色区域保持年轻代对象。","3425240","36.80634834397007%","371093k","388518.3","3930752","3;","3。","3）","3，并分别写回内存。最终的值并不是期望的","3；","4","4.","4.1.","4.2.","4.3.","4.4.","4.5.","4.6.","4.key和value是否允许null值","4.关闭流","4.分析结果","4.删除元素","40","4000","4032576","4096;","42724.7","434176.0","4497428","45","46","48354640","48:58.60","4]","4bit","5","5.","5.1.","5.2.","5.两个遍历方式的内部实现上不同","5.如果结果令人满意，将参数应用到所有服务器上并结束","50","50%或者更大的对象。它们被保存在一个连续的区域集合里。最后，最后一个类型的区域就是堆空间里没有使用的区域。","50.5f};","51","51.8","52","52.1","524288.0","53.1","53.7","5375360","54.4","54.7","5439488","54ee","54ee，下面会用到。","55967744","564224.0","5692\"","57.761608714788736%","5880872","5:54.10","5;","5。","5。然而由于两个线程是交叉执行的，两个线程从内存中读出的初始值都是","5秒读取文件a","5秒读取文件b","5，而是最后写回内存的那个线程的值，上面例子中最后写回内存的是线程","6","6.","6.1","6.1.","6.2.","6.3.","6.417","6.5","6.815","6.哈希值的使用不同","60243112","611","62062592","64","64m","64m。使用","65536)来做到。","6562.5","6735","6795","6797","6798","6799","6800","6801","6802","6803","6804","6807","6808","6974","6991","6:32.06","6:55.48","7","7.","7.0","7.1.","7.76,","7.82","7.内部实现使用的数组初始化和扩容方式不同，","70","70.1","7172","7362","7613104","76274.5","7:42.72","8","8\");","8(默认值)的列表，jdk1.8","8)，则使用红黑树来替换链表，从而提高速度。","8.","8.1.","8.4","83886080","85411k","86.39733629427693%","88080384","8:00.32","8:1，保证了内存的利用率达到","8，则两个","9","9.","9.1.","9.2.","9.3.","9.4.","9.5.","90","90.4","9146","9306112","97.06831451706046%",":",":bell:",":point_right:",":x:",";","=","==",">",">0k(274944k)]",">10738k(274944k)]",">140379k(302592k)]",">140379k(577536k)",">147186k(450048k),",">85376k(171008k)],",">=",">>",">>>",">next","?","@notthreadsaf","@overrid","@safevararg","@suppresswarnings(\"unchecked\")","@threadsaf","[\"","[0x00000000..0x00000000]","[0x00000000..0xfb5fd798]","[0x00007f3ae08e3000]","[0x00007f94c6eda000]","[0xfbeed000..0xfbeeddb8]","[0xfbf4a000..0xfbf4aa38]","[1,10]，一般来说，高优先级的线程在运行时会具有优先权。可以通过","[3,","[]","[args]","[count]","[dumpfile]","[full","[gc","[hostid]","[interval]","[option]","[options]","[paroldgen:","[pspermgen:","[psyounggen:","[root@chanc","[server","[times:","[xxxx](chapter1/section1.1.md)","[xxxx](chapter1/section1.2.md)","[xxxx](chapter2/section2.1.md)","[xxxx](chapter2/section2.2.md)","[书籍路径]","[电子书名称](readme.md)","[第一章](chapter1/readme.md)","[第二章](chapter2/readme.md)","[输出路径]","\\\\d{2}","\\\\d{2}$\"))","\\\\d{2}$\");","\\lib","\\lib\\ext","\\。","^","_book","_book/*","a\").start();","a)","a++;","a++之前","a++就不会被执行。按照上面的写法，a!=expect","a++操作怎么办，没关系，可以采用","a++操作，这实际上是一种非阻塞算法。","a,","a.befor","a:","a;","a[index];","aba","aba问题：一个线程one从内存位置v中取出a，这时候另一个线程two也从内存中取出a，并且two进行了一些操作变成了b，然后two又将v位置的数据变成a，这时候线程one进行cas操作发现内存中仍然是a，然后one操作成功","aba问题：因为cas需要在操作值的时候检查下值有没有发生变化，如果没有发生变化则更新，但是如果一个值原来是a，变成了b，又变成了a，那么使用cas进行检查时会发现它的值没有发生变化，但是实际上却变化了。aba问题的解决思路就是使用版本号。在变量前面追加上版本号，每次变量更新的时候把版本号加一，那么a－b－a","abortpolicy，表示无法处理新任务时抛出异常。以下是","abortpolicy：直接抛出异常。","abstract","abstractcollect","abstractcollection，abstractcollect","abstractexecutorservic","abstractexecutorservice：executorservic","abstractlist","abstractmap","abstractmap。它和","abstractmap，且实现了","abstractmap，但它继承于","abstractmap，但没实现","abstractmap，实现了","abstractownablesynchron","abstractownablesynchronize。","abstractqueu","abstractqueuedsynchron","abstractsequentiallist","abstractset","abstractset，所以有","access","accessord","accessorder;","accur","ack","acknowledg","ack。","ack，发送方就认为这个","ack，等待一定的时间，超时之后就认为这个数据包丢失，就会重新发送。这个等待时间被称为","acquir","acquire()","acquire(int","acquireinterrupt","acquireinterruptibly(int","acquirequeu","acquirequeued(addwaiter(node.exclusive),","acquirequeued(fin","acquirequeued。","acquirequeued。由于","acquireshar","acquireshared(int","acquiresharedinterrupt","active)","ad","add","add(","add()方法就是一个临界区,它会产生竞态条件。在临界区中使用适当的同步就可以避免竞态条件。","add()方法，我们无法知道操作系统何时会在两个线程之间切换。jvm","add(e)","add(long","addcount(1l,","addifundercorepoolsize(null);","address","address);","address;","addwait","addwaiter()和","addwaiter(nod","addwaiter(node.exclusive);","addwaiter(node.shared);","addwaiter，再调用","addwork","add、remove、iterator、clear、s","advertis","afternodeaccess()","afternodeaccess(e);","afternodeaccess(nod","afternodeinsertion()","afternodeinsertion(boolean","afternodeinsertion(evict);","ag","age)","age);","age,","age:","age;","age=\"","age=30,","algorithms.html","algorithms）","allocation.","alreadi","alway","analysi","anlysi","api。其它","appclassloader（sun.misc.launcher\\$appclassloader）实现的。由于这个类加载器是","applet。","applic","aq","aqs。那么为什么要这样呢?because:锁面向的是使用用户，而同步器面向的则是线程控制，那么在锁的实现中聚合同步器而不是直接继承","aqs源码","aqs要点","aqs）。","aqs，而是定义了一个","aqs，非阻塞数据结构和原子变量类（java.util.concurrent.atom","arg","arg)","arg))","arg,","arg[])","args)","args[])","arguments)","armessag","armessage.compareandset(message,","armessage.get()","armessage.lazyset(\"thread","armessage;","arperson","arperson.get().tostring());","arperson.getandset(new","arperson.set(new","arperson;","arr","array","array,","array.aslist(arr);","array;","arrayblockingqueu","arrayblockingqueue。静态工厂方法","arrayblockingqueue，我们可以在构造的时候指定以下三个参数：","arrayblockingqueue：基于数组的先进先出队列，此队列创建时必须指定大小；","arrayblockingqueue：是一个基于数组结构的有界阻塞队列，此队列按","arrayli","arraylist","arraylist();","arraylist<>();","arraylist、hashmap、linkedlist","arraylist。","arraylist原理","arraylist定义：","arraylist是一个数组队列，相当于动态数组。与java中的数组相比，arrraylist的容量可以动态增长。","arraylist要点","arraylist：基于动态数组实现，支持随机访问。","arrays.aslist(1,2,3);","arrays.copyof()","arrays.copyof(elementdata,","arrays.copyof(elements,","aslist()","aslist(t...","asr","asr.getreference());","asr.getstamp();","async","atom","atomicboolean","atomicbooleanarray","atomicinteg","atomicinteger(0);","atomicintegerarray","atomicintegerarray(10);","atomicintegerarraydemo","atomicintegerdemo","atomicintegerfieldupdat","atomiclong","atomiclongarray","atomiclongfieldupdat","atomicmarkablerefer","atomicrefer","atomicreference(message);","atomicreference(person);","atomicreferencearray","atomicreferencedemo","atomicreferencefieldupdat","atomicstampedrefer","atomicstampedreference<>(init_ref,","atomicstampedreferencedemo","attach","auto","average:","avoid","await","await()","await(long","a时，cas通过原子方式用新值b来更新v的值，否则不会执行任何操作","a，但实际中也可能是线程","a，变成了","a，要修改的新值","a，那么使用","a－b－a","b","b\");","b+树","b+树叶子节点data域记录完整的数据记录，这种叫做聚簇索引","b+树和b树区别","b+树所有叶子节点形成有序链表，便于范围查询","b+树所有查询都要查找到叶子节点，查询性能稳定。","b+树索引","b.after","b/","b16","b:","b;","b[]","balanc","bao","baos.tobytearray();","baos.write(buffer,","barrier","barrier1","barrier1,","barrier1;","barrier1act","barrier1action);","barrier2","barrier2)","barrier2);","barrier2;","barrier2act","barrier2action);","barrieraction)","barrieraction。","barrierrunnable1","barrierrunnable2","base","basecount","befor","before。","behaviour","bi","bin","bin]#","bincount","bincount);","binlog线程：负责将主服务器上的数据更改写入二进制日志中","bins)，在","bis.close();","bis.read())","bit","bit）限制；","black)","block","blockingqueu","blockingqueue,","blockingqueue，也是一个阻塞队列。","blockingqueue，通常可以取下面三种类型：","block，因为它是无界队列（tak","bo","book.json(如果没有则新建)中添加插件配置，如图","boolean","bos.close();","bos.tostring();","bos.write(character.tolowercase(c));","br","br.close();","br.readline())","break;","break、continue以及return有什么区别","brokenbarrierexcept","brokenbarrierexception,","bt","bucket","buf","buf);","buf.append(c);","buf.readline();","buffer","bufferedread","bufferedreader(isr);","bufferedreader(new","bufferedreaderdemo","buffers","build","byte","byte[(int)","byte[1024];","byte[8];","byte[]","byte[buffersize];","bytearrayinputstream","bytearrayinputstream(str.getbytes());","bytearrayoutputstream","bytearrayoutputstream();","bytearraystreamdemo","bytecod","bytesnumread);","bytesnumread;","byte、integer、long","b。","b。如果没有采用合适的同步机制，线程间的交叉执行情况就无法预料。","b。当且仅当预期值","b树","b树和b+树","b，又变成了","b，否则什么都不做。","b，当前只把","c","c++","c/c++有什么异同","c/c++的堆栈","c;","c[]","c[len]","ca","cach","cache.get(1);","cache.put(1,","cache.put(2,","cache.put(3,","cache.put(4,","cachedthreadpool","cachedthreadpooldemo","call","call()","callabl","callableandfuturedemo","callerrunspolicy：只用调用者所在线程来运行任务。","cancel","cancel()","cancelacquire(node);","cancelled(作废)，因此应该从队列中移除.","cancelled（1）","cap","capac","capacity)，就要","capacity;","case","cas。不推荐在复杂操作中引入","cas思想和实现原理？","cas算法","cas通过调用jni的代码实现的。jni:java","cas（compar","cas，会使程序可读性变差，且难以测试，同时会出现","catch","cd","ceil","chang","chapter","char","char[1024];","char[]","check","checkout","children","children.","class","class.","classdata","classdata,","classdata.length);","classes)","classload","classloader）","classname)","classname.replace('.',","classnametopath(classname);","classnametopath(str","classnotfoundexcept","classnotfoundexception();","classnotfoundexception(name);","classnotfoundexception，此时尝试自己去加载。","classpath","class）与接口（interface）有什么异同","class，使","clear","cli","client","clone()","clone()，能被克隆。","cloneabl","cloneable,","cloneable，所以支持克隆。","close","close()关闭链接","cm","cmp","cmp;","cmpxchg）；反之，如果程序是在单处理器上运行，就省略lock前缀。","cms。","cms（concurr","cms，年老代对象就地释放。它们不会被来回移动。这个空间不会被压缩除非发生","code","code，这样hashmap就可以定位到我们指定的key上。重载equals()是为了向hashmap表明当前对象和key上所保存的对象是相等的，这样我们才真正地获得了这个key所对应的这个键值对。","collect","collections.synchronizedlist();","collections.synchronizedlist(list);","collections.synchronizedmap","collections.synchronizedxxxx","collection之list","collection之queu","collection之set","collection，二者提供的方法完全相同。","collection，只是行为略有不同：set","collector","collis","command","command)","command),","commit","compar","comparator;","compare(key,","compareandset","compareandset()","compareandset(int","compareandsetwaitstatu","compareandsetwaitstatus(pred,","compareandswapint","compareandswaplong","compareandswapobject","compat","compil","concurr","concurrency/benefits.html","concurrency/java","concurrency/non","concurrencylevel","concurrencylevel主要用来初始化segments、segmentshift和segmentmask等；而initialcapacity和loadfactor则主要用来初始化每个segment分段。","concurrencylevel表示并发级别，这个值用来确定segment的个数，segment的个数是大于等于concurrencylevel的第一个2的n次方的数。比如，如果concurrencylevel为12，13，14，15，16这些数，则segment的数目为16(2的4次方)。默认值为stat","concurrent/atomicinteger.html","concurrent/atomicintegerarray.html","concurrent/atomicreference.html","concurrent/atomicstampedreference.html","concurrentcach","concurrentcache(int","concurrenthashmao","concurrenthashmap","concurrenthashmap,","concurrenthashmap1.7分段数组+链表","concurrenthashmap1.8数组+链表/红黑二叉树","concurrenthashmap1.8的工作原理？","concurrenthashmap<>();","concurrenthashmap<>(size);","concurrenthashmap?","concurrenthashmapdemo","concurrenthashmap中包含一个table数组，其类型是一个node数组；而node是一个继承自map.entry的链表，而当这个链表结构中的数据大于8，则将数据结构升级为treebin类型的红黑树结构。","concurrenthashmap内部使用segment数组，每个segment类似于hashtable，在“写”线程或者部分特殊的“读”线程中锁住的是某个segment对象，其它的线程能够并发执行其它的segment对象。","concurrenthashmap和hashmap区别","concurrenthashmap和hashtable区别","concurrenthashmap在1.8版本摒弃了segment（锁段）的概念，而是启用了一种全新的cas算法的方式实现，nod","concurrenthashmap就是多线程编程中可以使用的一种高性能的线程安全hashmap方案。","concurrenthashmap所使用的锁分段技术，首先将数据分成一段一段的存储，然后给每一段数据配一把锁，当一个线程占用锁访问其中一个段数据的时候，其他段的数据也能被其他线程访问。能够实现真正的并发访问。","concurrenthashmap的工作原理？","concurrenthashmap线程安全","concurrentlinkeddequ","concurrentlinkedqueu","concurrentmap,","concurrentmodificationexcept","concurrentmodificationexception。","concurrentmodificationexception，因为它们在数组的快照上工作，并且无论后续的修改（2,4）如何，都会像迭代器创建时那样完全返回元素。","concurrentskiplistmap","concurrentskiplistset","concurrhashmap","condit","conditions。","condition（","condition）：当两个线程竞争同一资源时，如果对资源的访问顺序敏感，就称存在竞态条件。","condition，简单介绍如下：","config","configur","configuration:","connect","connectionhold","connectionholder.get();","consciou","consum","consumer(\"消费者a\").start();","consumer(\"消费者b\").start();","consumer(str","containsvalu","continu","continue;","control","copi","copyonwriteaarraylist","copyonwritearraylist","copyonwritearraylist<>();","copyonwritearraylist<>();copyonwritearraylist","copyonwritearraylistdemo","copyonwritearraylist，因此本质上是由","copyonwritearrayset","copyonwritearrayset，阅读这篇文章了解如何避免","core","corepools","corepoolsize,","corepoolsize：线程池的基本线程数。这个参数跟后面讲述的线程池的实现原理有非常大的关系。在创建了线程池后，默认情况下，线程池中并没有任何线程，而是等待有任务到来才创建线程去执行任务，除非调用了","corepoolsize：默认情况下，在创建了线程池后，线程池中的线程数为","count","count)","count,","count.","count.get());","count.incrementandget();","count;","count=\"","countdown()","countdownlatch","countdownlatch(2);","countdownlatch(int","countdownlatchdemo","countdownlatch源码","countdownlatch示例","countdownlatch要点","counter","countthread","countthread.interrupt();","countthread.start();","count。每次执行","count，表示需要等待的事件数量。countdown","cpr","cpr.compare(key,","cpu","cpu。","cpu。其中一些","creat","createmap","createmap(t,","createmap(thread","createnewfil","createnewfille()","ctl.get();","current","cycle()","cycle();","cyclicbarri","cyclicbarrier(2,","cyclicbarrier(int","cyclicbarrierdemo02","cyclicbarrierrunn","cyclicbarrierrunnable(barrier1,","cyclicbarrierrunnable(cyclicbarri","cyclicbarrier源码","cyclicbarrier示例","cyclicbarrier要点","d","d:\\codes\\zp\\java\\database\\docs\\redis\\分布式锁.md","daemon","data\");","datagram","datagrampacket：数据包类","datagramsocket：通信类","datagram：使用","datainputstream","dataoutputstream","dataoutputstream(new","datasource.getconnection()建立链接，必须通过","datastreamdemo","date","days,","dcom.sun.management.jmxremote.authenticate=fals","dcom.sun.management.jmxremote.port","dcom.sun.management.jmxremote.port=18888","dcom.sun.management.jmxremote.ssl=fals","dcom.sun.management.jmxremote=tru","dd\").parse(str);","dd）：\");","deadlock.html","debug","debugg","default","default_concurrency_level","default_initial_capac","default_initial_capacity)","default_initial_capacity);","default_initial_capacity;","default_load_factor","defaultcapacity_empty_elementdata)","defaultwriteobject()","defineclass()","defineclass(name,","delay()","delay();","deleg","delet","delete()","deleteentry(entri","deleteentry(p);","demo","demo.get(thread.currentthread())).start();","demo.insert(thread.currentthread())).start();","demo01(str","dequ","deque,","descendingiter","descendingset","deseri","deserialize(filename);","deserialize(str","detected.","detector\"","dictionary(dictionari","directbytebuff","dirpath,","discardoldestpolicy：丢弃队列里最近的一个任务，并执行当前任务。","discardpolicy：不处理，丢弃掉。","dispatcher\"","displac","djava.awt.headless=tru","djava.compiler=non","djava.rmi.server.hostnam","djava.rmi.server.hostname=127.0.0.1","dn","do","doacquireinterrupt","doacquireinterruptibly(arg);","doacquireinterruptibly(int","doacquirenano","doacquirenanos(arg,","doacquirenanos(int","doacquireshar","doacquireshared(int","done!\");","doreleaseshar","doreleaseshared()","doreleaseshared();","dosomething();","dosomething1();","dosomething2();","doubl","doubli","drivermanager.getconnection(db_url);","dsun.rmi.dgc.client.gcinterval=600000","dsun.rmi.dgc.server.gcinterval=600000","due","dummy)","dump","dump.hprof","dump:live,format=b,file=dump.hprof","dump）是一个用来检查","dump）来消除导致异常的原因。","dump，jhat","e","e)","e){","e.key)","e.next)","e.next;","e.printstacktrace();","e.val","e.val;","e.valu","e.value;","e;","ec","eden","eden;","eden、survivor、old","eden、survivor、年老代空间的逻辑表述形式。","ef","ek;","eldest","eldest)","element","element()","elementdata","elementdata(index);","elementdata,","elementdata.length","elementdata.length;","elementdata;","elementdata[","elementdata[size++]","elements.","elements.length;","email;","email，如下：","empti","enq","enq()完成对同步队列的头结点初始化工作以及","enq()，同时","enq(fin","enq(node);","ensurecapacityinternal()","ensurecapacityinternal(int","ensurecapacityinternal(s","ensureexplicitcapacity(int","ensureexplicitcapacity(mincapacity);","entrant","entri","entries.","entry(hash,","entry(键值对)；每一个","entry.getname());","entry<>(key,","entry[]数组类型，","entryset()。请注意，abstractmap","entryset;","enum","enumer","enumset","enumset>","enum、array","equals()","equals()方法确定键值对。如果发生碰撞的时候，hashmap","ergonomics）。","eu","evict","evict)","ex)","examin","exampl","exceed","except","exception{","exclus","exec","execut","execute()","execute()方法不同，它能够返回任务执行的结果，去看","execute()方法，只不过它利用了","execute(runn","executionexcept","executor","executor(runn","executor.shutdown();","executor.submit(harreturnvaluetask);","executors.newcachedthreadpool","executors.newcachedthreadpool();","executors.newfixedthreadpool()使用了这个队列。","executors.newfixedthreadpool(100);","executors.newfixedthreadpool(3);","executors.newfixedthreadpool(5);","executors.newfixedthreadpool(thread_count);","executors.newscheduledthreadpool(5);","executors.newsinglethreadexecutor();","executorservic","executorservice.awaittermination(30,","executorservice.awaittermination(60,","executorservice.shutdown();","executorservice：是一个比","executor，executorservice，scheduledexecutorservice，threadfactori","executor，其方法签名为","executor，即只创建唯一的工作者线程来执行任务，它只会用唯一的工作线程来执行任务，保证所有任务按照指定顺序(fifo,","executor：一个接口，其定义了一个接收","exist","exists.","expect","expect)","expect,","expectedmodcount","expect，替换","extclassloader(sun.misc.launcher\\$extclassloader)实现的。它负责将","extend","externaliz","externalizable。","externalizedemo01","externalizedemo02","f","f)","f);","f.createnewfile();","f.delete();","f.hash)","f.length()];","f.list();","f.listfiles();","f.mkdir();","f;","f;;","facotr","factor","factor)定义的容量，怎么办？","fail","failur","failure。浮动垃圾是指并发清除阶段由于用户线程继续运行而产生的垃圾，这部分垃圾只能到下一次","failure，这时虚拟机将临时启用","fair)","fairsync","fals","false);","false,","false;","false。","false。也就是说，这个方法无论如何都会立即返回，获取不到锁时不会一直等待。","false。如果如果一开始拿到锁或者在等待期间内拿到了锁，则返回","false，在这里为","false，如果需要让它为","false，此时维护的是插入顺序。","false，重新进入外部方法","faq","fast","femal","few","fgc","fgct","fh;","fifo","fifo。","fifo（先进先出）原则对元素进行排序。","file","file(\"d:\"","file(dirpath);","file(filename);","file(filepath));","file(filepath);","file(zipfilepath);","file.\");","file.listfiles();","file.separ","file.separatorchar","file.separatorchar)","fileinputstream","fileinputstream(f));","fileinputstream(f);","fileinputstream(file);","fileinputstream(path);","fileinputstream(zipfile));","filenam","filename)","fileouputstream","fileoutputstream","fileoutputstream(\"d:\\\\test.txt\");","fileoutputstream(f));","fileoutputstream(f);","fileoutputstream(f,","fileoutputstream(new","fileoutputstream(outputfile);","fileoutputstream(zipfile));","filepath","filepath)","filepath,","fileread","filereader(f);","files[]","filestreamdemo","filesystemclassload","filesystemclassloader(str","filewrit","filewriter(f);","filewriter(f,","filo。","fin","final","finalize()","finalize()。","finalizerinfo","final、finally和finalize有什么区别","find","findbootstrapclassornull(name);","findclass","findclass()","findclass(name);","findclass(str","findloadedclass(name);","first","first(g1)","first,","first.key)","first.key;","first.next)","first;","firstvalue)","firstvalue);","first。","first），是面向服务器应用的垃圾回收器。","fix","fixafterdeletion(p);","fixafterdeletion(replacement);","fixafterdeletion.","fixedthreadpool","fixedthreadpooldemo","fixup","flag","float","floor","flush","flush），从而提高","flush），从而提高cpu的执行效率。","folder.\");","for(int","for(str","foreach","found","found,","free","free,","free.","ft","full","fullgc","fullgc。","futur","future.get();","futuretask","futuretask<>(callable);","futuretask？","future？","future？什么是","g","g1","g1回收年老代详细步骤","g1回收年轻代详细步骤","g1回收机制","g1收集器","g1（garbag","garbag","gc","gct","gcutil","gc。","gc。如果经过","gc。而","gc「译」","gc的一些概念，比如强弱软引用，finalize方法等，这些可以准备下。","gc），便会报","gc，从而增加","gc，其触发条件非常简单，当","gc，可采用的方法为增大永久代空间或转为使用","gc，就是对象在","gc，尽管这次","gc，虽然只是建议而非一定，但很多情况下它会触发","gc，调优时应尽量做到让对象在","gc：发生在年轻代上，因为年轻代对象存活时间很短，因此","gc：发生在老年代上，老年代对象和年轻代的相反，其存活时间长，因此","gender","gener","generation）","get","get()","get();","get()方法或者","get()方法是用来获取","get(elements,","get(getarray(),","get(int","get(k","get(long","get(object","get(object[]","get(thread","get:","getage()","getarray();","getarray/setarray.","getclassdata(name);","getclassdata(str","getconnection()","getentry(key);","getentry(object","getentryusingcomparator(key);","getidlewaittime();","getinstance()","getlog().info(\"thread","getmap()","getmap(t);","getname()","getnode(hash(key),","getnode(int","getpis()","getpos()","getsession()","getsessionfactory().opensession();","getsystemclassloader()","get操作","get操作？","get，它调用","gh","git","gitbook","gitbook根目录","gitbook源文件发布到gh","gitbook目录折叠","github，在托管电子书的仓库建一个","go","go上不允许函数重载，必须具有方法和函数的唯一名称。java允许函数重载。","go就是值传递，所以它是通过指针来完成引用传递","go语言的继承通过匿名组合完成：基类以struct的方式定义，子类只需要把基类作为成员放在子类的定义中，支持多继承。","grep","grep，如下：","grow()","grow(int","grow(mincapacity);","h","h&(length","h))","h.waitstatu","h.waitstatus;","h;","hackthejava","hand","handl","handlepromotionfailur","handler\"","handler)","handler：饱和策略。当队列和线程池都满了，说明线程池处于饱和状态，那么必须采取一种策略处理提交的新任务。这个策略默认情况下是","happen","hash","hash(object","hash))","hash);","hash)，从而获得","hash,","hash1(key)；","hash2(h1高几位)，通过h2能够确定该元素的放在哪个segment；","hash3(h1)，通过h3能够确定该元素放置在哪个hashentry。","hash;","hash])","hashcod","hashcode()","hashcode()做","hashcode()方法的返回值和equals()方法的关系如下：","hashcode()的都有什么作用？","hashcode()的高","hashcode()进行","hashentri","hashentry[]","hashentry{","hashentry节点都是volatile类型的，volatile类型的变量可以保证其在多线程之间的可见性，因此可以被多个线程同时读，从而不用加锁。","hashing，并计算下标(","hashmap","hashmap();","hashmap(int","hashmap(map","hashmap<>();","hashmap、hashtable、treemap和weakhashmap有什么区别","hashmap、vector","hashmap。","hashmap。采用分段锁实现高效并发。","hashmap中默认的数组大小为16，加载因子0.75。并且每次自动扩展或手动初始化时，长度必须是2的幂。","hashmap中，如果要比较key是否相等，要同时使用这两个函数！","hashmap为什么是线程不安全的？","hashmap使用一个容量更大的数组来代替旧的数组，transfer（）方法将原有entry数组里的元素拷贝到新的entry数组里，扩容之后，原数组中的数据必须重新计算其在新数组中的位置，并放进去，这就是resize。","hashmap把hashtable的contains方法去掉了，改成containsvalue和containskey","hashmap是基于hashing的原理，我们使用put(key,","hashmap是线程不安全的，在并发环境下，可能会形成环状链表（扩容时可能造成，具体原因自行百度google或查看源码分析），导致get操作时，cpu空转","hashmap的工作原理？","hashmap的扩容resize()？","hashmap类","hashmap长度为什么等于2的幂？","hashmap默认容量为16，要求底层数组的容量一定要为2的整数次幂，扩容时将容量变为原来的2倍","hashmap（jdk7","hashmap，因此具有和","hashmap，它实际上是通过","hashmap，并且重新调用","hashmap：基于哈希表实现。","hashmap？他有什么特点？","hashset","hashset(int","hashset：基于哈希表实现，支持快速查找，但不支持有序性操作。并且失去了元素的插入顺序信息，也就是说使用iterator遍历hashset得到的结果是不确定的。","hashtabl","hashtable、hashmap都使用了","hashtable不允许，hashmap允许","hashtable则保留了contains，containsvalue和containskey三个方法，其中contains和containsvalue功能相同。","hashtable和hashmap的区别","hashtable数组+链表","hashtable的参数？","hashtable的所有操作都会锁住整个对象，虽然能够保证线程安全，但是性能较差；","hashtable的扩容","hashtable直接使用对象的hashcode、hashmap重新计算hash值，而且用于代替求模","hashtable线程安全的策略实现代价却太大了，简单粗暴，get/put所有相关操作都是synchronized的，这相当于给整个哈希表加了一把大锁，多线程访问时候，只要有一个线程访问或操作该对象，那其他线程只能阻塞，相当于将所有的操作串行化，在竞争激烈的并发场景中性能就会非常差。","hashtable继承自dictionary类，而hashmap继承自abstractmap类。但二者都实现了map接口。","hashtable默认容量为11，不要求底层数组的容量一定要为2的整数次幂，扩容时将容量变为原来的2倍加1，","hashtable，除了它是不同步的并且允许为空值。）这个类不保序；特别是，它的元素顺序可能会随着时间的推移变化。","hashtable：","hash算法计算方式改变：","hash，只需要看看原来的","hash，然后再计算","hash，然后确定","having、where、避免临时表、避免使用in","having、避免distinct耗费时间的排序操作,模糊匹配，临时表，减少重复工作","head","head)","head;","headless","headset","heap","heapdump","help","helptransfer(tab,","hessian","hi,","hidden","high","higher","hihead","hihead;","histo","hitail","hitail.next","host);","hostid","hostnam","hotspot","hp","http","http/html","http://ju.outofmemory.cn/entry/353762","http://localhost:4000","http://tutorials.jenkov.com/java","http://www.blogjava.net/jiangshachina/archive/2012/02/13/369898.html","http://www.cnblogs.com/chengxiao/p/6881974.html","http://www.cnblogs.com/dolphin0520/p/3920397.html","http://www.cnblogs.com/dolphin0520/p/3923167.html","http://www.cnblogs.com/dolphin0520/p/3933404.html","http://www.cnblogs.com/skywang12345/p/3308807.html","http://www.codenuclear.com/seri","http://www.hollischuang.com/archives/1140","http://www.importnew.com/14958.html","http://www.javarticles.com/2012/06/copyonwritearraylist.html","http://yourusername.github.io/bookname。","https://agapple.iteye.com/blog/859052","https://blog.csdn.net/ls5718/article/details/52563959","https://blog.csdn.net/shimiso/article/details/8964414","https://blog.csdn.net/u010425776/article/details/54890215","https://blog.csdn.net/u012403290/article/details/64910926?locationnum=11&fps=1","https://blog.csdn.net/wangxiaotongfan/article/details/52074160","https://blog.csdn.net/xiangwanpeng/article/details/54972952","https://blog.csdn.net/yaosiming2011/article/details/44280797","https://coolshell.cn/articles/9606.html/com","https://docs.oracle.com/javase/8/docs/api/index.html","https://my.oschina.net/feichexia/blog/196575","https://my.oschina.net/hosee/blog/675884","https://registry.npm.taobao.org/","https://stackoverflow.com/questions/27406200/visualvm","https://t.hao0.me/java/2016/04/01/aqs.html","https://www.cnblogs.com/leesf456/p/5547853.html","https://www.cnblogs.com/mobin/p/5436482.html","https://www.cnblogs.com/qifengshi/p/6831055.html","https://www.cnblogs.com/skywang12345/p/3308556.html","https://www.cnblogs.com/xrq730/p/5020760.html","https://www.jianshu.com/p/473e14d5ab2d","https://www.jianshu.com/p/c0642afe03e0","https://www.jianshu.com/p/f6730d5784ad","https://www.journaldev.com/1037/java","https://www.logicbig.com/tutorials/cor","https://www.zhihu.com/question/33515481","https://zhuanlan.zhihu.com/p/27134110","hugecapacity(mincapacity);","hung","i)","i);","i++;","i,","i;","i=0;","i=0;i","i=0;i10)","id","id%机器数”，计算得到一个机器编号，然后由对应编号的机器处理这个数据，对于软件资源受限，可以使用资源池来复用如使用连接池将数据库和","id,","id@]remot","idl","id，以后该线程在进入该同步块的时候，不需要再次使用","id，用这个","id：","id：查询的标识符","if(!halted.get())","if(a.compareandset(expect,a+1))","if(a==b)","if(instance==null)","ignore)","ij=2a，然后用","ij。从","implement","import","imposs","improv","in","in)","in.close();","in.defaultreadobject();","in.read())","in.readint();","in.readobject();","in;","increase()","increment","incrementandget()","index","index)","index));","index);","index+1","index+1,","index,","index;","index，并对","index，把节点再放到新的","index；","inetaddress","inetaddress.getbyaddress(byte[]","inetaddress.getbyname(str","inetaddress：用于表示网络上的硬件资源，即","inf/lib","info)，用于实时查看和调整虚拟机运行参数。","infrastructureexcept","infrastructureexception(ex);","init","init_ref","initi","initialcapac","initialcapacity)","initialcapacity);","initialcapacity,","initialcapacity表示新创建的这个concurrenthashmap的初始容量，也就是上面的结构图中的entry数量。默认值为stat","initialvalue()","initialvalue();","initialvalue()是一个","inittable();","input","input(filepath);","input(str","input.close();","input.getnextentry();","input.read())","input.read(bytes);","input1(str","inputstream","inputstreamread","inputstreamreader(is,","inputstreamreader(new","inputstreamreader(system.in));","inputstreamreaderdemo","inputstream（输入）","ins.read(buffer))","insert","insert(thread","instal","instanc","instance;","instanceof","instanceof有什么作用","instatnc","instatnce;","int","int++并不是一个原子操作，所以当一个线程读取它的值并加","int[]，string.class","integ","intege[]","integer.max_value;","integer.max_value；","interfac","interface)是什么？对比同步它有什么优势？","interger.max_value）,","interger这样的wrapper类适合作为键？？","intern()。这部分常量也会被放入运行时常量池。","internal,","interrupt","interrupt()","interrupted;","interruptedexcept","interruptedexception();","interruptedexception,","interruptedexception;","interruptedexception。","interrupted）。","interruptexception，或者调用","invalidclassexcept","invalidclassexception。","invok","io","ioexcept","ioexception,","io。它也可以是网络的","io面经","io，或者用户输入。通常情况下，网络和磁盘的","ip","is:","isal","isalive()","isdaemon()","isinterrupt","isn't","isr","istermina","item","item;","items;","item。其中，prev","iter","iterable接口，其中的iterator()方法能够产生一个iterator对象，通过这个对象就可以迭代遍历collection中的元素。","iterator。而由于历史原因，hashtable还使用了enumeration的方式","j","j);","j,","jack,","jackson、gson、fastjson","jam","jar","jar、ear、war","jar，用不上的","java","java.ext.dir","java.io","java.io.*;","java.io.bufferedreader;","java.io.inputstreamreader;","java.io.ioexception;","java.io.ioexception{","java.io.notserializableexception:","java.io.objectinputstream","java.io.objectoutputstream","java.io.serializ","java.lang.class","java.lang.classload","java.lang.classloader，用于加载文件系统上的类。它首先根据类的全名在文件系统上查找类的字节代码文件（.class","java.lang.invoke.methodhandl","java.lang.object","java.lang.object.wait(n","java.lang.object.wait(object.java:474)","java.lang.object。","java.lang.outofmemoryerror:","java.lang.outofmemoryerror。为避免以上原因引起的","java.lang.outofmemoryerror，为避免以上原因引起的","java.lang.ref.finalizer$finalizerthread.run(finalizer.java:159)","java.lang.ref.reference$lock)","java.lang.ref.reference$referencehandler.run(reference.java:116)","java.lang.ref.referencequeue$lock)","java.lang.ref.referencequeue.remove(referencequeue.java:116)","java.lang.ref.referencequeue.remove(referencequeue.java:132)","java.lang.reflect","java.lang.reflect.proxi","java.lang.thread.run(thread.java:745)","java.lang.thread.st","java.lang.thread.state:","java.uitl.concurrent.threadpoolexecutor","java.util.arraylist.add(arraylist.java:440)","java.util.arraylist.ensurecapacityinternal(arraylist.java:208)","java.util.arraylist.ensureexplicitcapacity(arraylist.java:216)","java.util.arraylist.grow(arraylist.java:242)","java.util.arrays#aslist()","java.util.arrays.copyof(arrays.java:2219)","java.util.arrays.copyof(arrays.java:2245)","java.util.concurr","java.util.concurrent.blockingqueu","java.util.concurrent.executor","java.util.concurrent.linkedblockingqueue.poll(linkedblockingqueue.java:467)","java.util.concurrent.locks.abstractqueuedsynchronizer$conditionobject)","java.util.concurrent.locks.abstractqueuedsynchronizer$conditionobject.awaitnanos(abstractqueuedsynchronizer.java:2082)","java.util.concurrent.locks.locksupport.parknanos(locksupport.java:226)","java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)","java.util.concurrent.threadpoolexecutor.gettask(threadpoolexecutor.java:1068)","java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1130)","java.util.hashmap","java.util.zip.*;","java/","java1.5","java_opts=\"","javae","javaheapspace(integ","java不支持多重继承，但是java语言引入了接口的概念，可以同时实现多个接口。由于接口也具有多态特性，因此在java语言中可以通过实现多个接口来实现与c++语言中多重继承类似的目的。","java与c++都是面向对象语言，都使用了面向对象思想（封装，继承，多态）","java中cas操作通过jni本地方法实现，在jvm中程序会根据当前处理器的类型来决定是否为cmpxchg指令添加lock前缀。如果程序是在多处理器上运行，就为cmpxchg指令加上lock前缀（lock","java中所有的类默认都继承自object类，而object类中提供了一个clone()方法。这个方法的作用是返回一个object对象的复制。这个复制函数返回的是一个新的对象，而不是一个引用。","java中数组是不是对象","java中的clone方法有什么作用","java中直接支持数组这种数据结构，除此之外还有通过数组结构延伸arraylist.class","java为纯面向对象语言","java为纯面向对象语言，所有代码（包括函数、变量等）必须在类中实现，","java为解释型语言，其运行过程为：java为解释型语言，程序源代码经过java编译器编译成字节码，然后由jvm解释执行。","java传递的值为栈中的值（值传递+引用传递）。其中：值传递是对基本型变量而言的,传递的是该变量的一个副本,改变副本不影响原变量.","java和","java和go的区别","java基本概念","java基础特性","java实现原子操作：循环使用cas实现原子操作","java容器collection之list","java容器collection之queu","java容器collection之set","java容器map","java容器之map","java常用io类","java并发编程","java序列化","java执行速度比c/c++慢，但是java能够块平台，而c/c++不能","java提供了哪些基本数据类型","java提供了很多内置的类库。提供了对多线程的支持，提供了对网络通信的支持，最重要的是提供了垃圾回收器。","java本地接口，允许java与其他语言交互。","java正则","java流操作","java的继承通过extends关键字完成，不支持多继承。","java网络编程","java虚拟机","java虚拟机启动时选定区域大小。java虚拟机通常会指定2000个左右的大小相等、每个大小范围在1到32m的区域。","java虚拟机面经","java语言提供了垃圾回收器来实现垃圾的自动回收，java语言中虽然没有析构函数，但却引入了一个finalize()方法，当垃圾回收期将要释放无用对象的内存时，会首先调用该对象的finalize()方法，因此，开放人员不需要关心也不需要知道对象所占的内存空间何时会被释放。","java语言有哪些优点：","java高级特性","java默认允许多态。而go没有。","java）","java，并且这些内存无法省下，那么就无法进行","jconsol","jdk","jdk1.5","jdk1.5，java.util.concurrent.atom","jdk1.7","jdk1.7用的是头插法，而jdk1.8及之后使用的都是尾插法，","jdk1.7的concurrenthashmap的get操作是不加锁的，因为在每个segment中定义的hashentry数组和在每个hashentry中定义的value和next","jdk1.8","jdk1.8。","jdk1.8中的concurrenthashmap中还包含一个重要属性sizectl，其是一个控制标识符，不同的值代表不同的意思：","jdk1.8为什么使用内置锁synchronized来代替重入锁reentrantlock?","jdk1.8优化","jdk1.8的concurrenthashmap中保存元素的个数的记录方法也有不同，首先在添加和删除元素时，会通过cas操作更新concurrenthashmap的basecount属性值来统计元素个数。但是cas操作可能会失败，因此，concurrenthashmap又定义了一个countercell数组来记录cas操作失败时的元素个数。","jdk1.8的hashmap的优化？","jdk6","jdk7","jdk8","jdk8的新特性","jdk8：hashmap","jep","jhat","jhat(jvm","jinfo","jinfo(jvm","jmap","jmm","jmm。","jmm。jmm","jmx","jni","jni（jni:java","join","join()","join()方法的区别","jp","jps(jvm","json","jsp","jstack","jstat","jstat(jvm","juc","juc）中提供了几个非常有用的并发容器。","juc）中提供了几个非常有用的并发工具类。","jvm","jvmmemori","jvmmemory，而是系统中剩下的内存：","jvm内存","jvm（4）：jvm","k","k)","k,","k.compareto(p.key);","k.compareto(t.key);","k.hashcode())","k/v","k;","keepalivetim","keepalivetime,","keepalivetime：线程活动保持时间。线程池的工作线程空闲后，保持存活的时间。所以如果任务很多，并且每个任务执行的时间比较短，可以调大这个时间，提高线程的利用率。","key","key)","key))","key);","key,","key.equals()方法去链表或树中去查找对应的节点","key.equals(ek))))","key.equals(k))))","key.equals(k)去查找对应的","key.equals(k)查找，o(logn)；","key.equals(k)查找，o(n)。","key.hashcode())","key/valu","key;","keys.equals()在链中找。","keyset()","key通过一次hash运算得到一个hash值。(这个hash运算下文详说)","key：使用的索引","kib","l","larg","last","last.aft","last;","last。","latch","latch.await();","latch.countdown();","layer）不参与具体的传输，它提供包括访问验证和会话管理在内的建立和维护应用之间通信的机制。","layer）为两台主机中进程间的通信提供通用的数据传输服务。","layer）为分组交换网上的不同主机提供通信服务。在发送数据时，网络层把运输层产生的报文段或用户数据报封装成分组或包进行传送。","layer）只接收和发送一串比特(bit)流，不考虑信息的意义和信息结构。","layer）就是为同一链路的主机提供数据传输服务。数据链路层把网络层传下来的分组封装成帧。","layer）是为在应用过程之间传送的信息提供表示方法的服务，它关心的只是发出信息的语法与语义。表示层要完成某些特定的功能，主要有不同数据编码格式的转换，提供数据压缩、解压缩服务，对数据进行加密、解密。","layer）通过应用进程间的交互来完成特定网络应用。应用层协议定义的是应用进程间通信和交互的规则。","leak）还是内存溢出（memori","len","len));","len);","len++;","length()方法是针对字符串而言的","length属性与length()方法有什么区别","lfp","lib","lifo,","limit","line;","lines”的更小的内存块中缓存被更新。一个或者多个缓存行可能被读到缓存，一个或者多个缓存行可能再被刷新回主存。","link","linkedblockingdequ","linkedblockingqueu","linkedblockingqueue，静态工厂方法","linkedblockingqueue：一个基于链表结构的阻塞队列，此队列按","linkedblockingqueue：基于链表的先进先出队列，如果创建时没有指定此队列大小，则默认为","linkedhashmap","linkedhashmap.entri","linkedhashmap<>(initialcapacity,","linkedhashmap：使用双向链表来维护元素的顺序，顺序为插入顺序或者最近最少使用（lru）顺序。","linkedhashset","linkedhashset()","linkedhashset(int","linkedhashset：具有hashset的查找效果，且内部使用双向链表维护元素的插入顺序。","linkedlist","linkedlist原理","linkedlist要点","linkedlist：可以用它来实现双向队列。","linkedlist：基于双向链表实现，只能顺序访问，但是可以快速地在链表中间插入和删除元素。不仅如此，linkedlist还可以用做栈、队列和双向队列。","linux","list","list()","list():","list)","list){","list,","list.","list.add(\"a\");","list.add(\"b\");","list.add(index,","list.remove(index);","list;","listen","listfil","listfiles()","listfiles():","lists[]","livelock.html","llegalthreadstateexcept","load","loadclass()","loadclass(name,","loadclass(str","loader","loadfactor","loadfactor)","loadfactor);","loadfactor,","loadfactor;","loadfactor表示负载因子，就是当concurrenthashmap中的元素个数大于loadfactor","local","lock","lock()","lock();","lock.lock();","lock.lockinterruptibly()","lock.trylock(timeout)，避免锁一直不能释放","lock.trylock(timeout,timeunit)","lock.unlock","lock.unlock();","lock;","locking.","lockinterruptibly()","locksupport.park()","locksupport.park(this);","locksupport.parknanos(this,","locksupport.parknanos(timeout)","locksupport.parkuntil(timeout)","lock、readwritelock","lock重新进入锁。对于synchronized而言,也是一个可重入锁。可重入锁的一个好处是可一定程度避免死锁。","lock，必须主动去释放锁，并且在发生异常时，不会自动释放锁。因此一般来说，使用","log","log二进制文件，记录了所有sql语句。","log文件的sql语句复制过来。","log重做日志文件中再执行一次这些sql语句即可。","log）中","lohead","lohead;","long","long_query怎么解决","longterm;","longterm。eden","looksupport.park","looksupport.park()方法使得线程阻塞","loop","lotail","lotail.next","lower","lru","lrucach","lrucache()","lrucache<>();","lvmid","m","m)","m;","main","main()","main(fin","main(str","main(string[]","maintain","make","male","male,","map","map,","map.entri","map.get(key));","map.getentry(this);","map.keyset())","map.set(this,","map;","map。","map。使用跳表实现高效并发。","map之面试问题集","map架构","map（实际上是一个","map，hashset","map，看一下","mark","mark)*","mask","master","mat(memori","math.max(default_capacity,","math类中round、ceil和floor方法的功能各是什么","max_entri","max_entries;","max_scan_retri","maxheapfreeratio","maxheaps","maximum_capacity)","maximumpoolsize,","maximumpoolsize，如果还有任务到来就会采取任务拒绝策略，通常有以下四种策略","maximumpoolsize：线程池允许创建的最大线程数。如果缓存队列满了，并且已创建的线程数小于最大线程数，则线程池会再创建新的线程执行任务。值得注意的是如果使用了无界的任务队列这个参数就没什么效果。","maximumpoolsize：线程池允许创建的最大线程数。如果队列满了，并且已创建的线程数小于最大线程数，则线程池会再创建新的线程执行任务。值得注意的是如果使用了无界的任务队列这个参数就没什么效果。","maxnews","maxperms","maxprocessmemori","maxtenuringthreshold","mb","mem","mem:","memori","memory）中，每个线程都有一个私有的本地内存（loc","memory），本地内存中存储了该线程以读/写共享变量的副本。","messag","message.concat(\"","message;","meta","metaspace)中，元数据并不在虚拟机中，使用的是本地的内存。使用","metaspace（元数据）区替代。","method","method)","mincapac","mincapacity)","mincapacity);","minheapfreeratio","minor","mkdir","mkdir()","mkdirs()，当父路径不存在时，会连同上级目录都一并创建。","mm","modcount","modcount!!","modcount++;","modcount;","mode","mode)","mode);","model.html","model）。该模型要求除了顶层的启动类加载器外，其余的类加载器都应有自己的父类加载器。这里类加载器之间的父子关系一般通过组合（composition）关系来实现，而不是通过继承（inheritance）的关系实现。","model），以下简称","model，简称","modif","monitor","monitoring)，是用于监视虚拟机运行时状态信息的命令，它可以显示出虚拟机进程中的类装载、内存、垃圾收集、jit","move","moved)","mp","mss","mt","mt1","mt1.start();","mt2","mt2.start();","multi","mutat","mv","myapp","myapp.jar","myapp：","mybatis下注入防范：mybatis是支持定制化sql、存储过程以及高级映射的优秀的持久层框架，几乎避免了所有的jdbc代码和手动设置参数以及获取结果集。","myrun1","myrun1());","myrun2","myrun2());","mysql高并发","mytask","mytask();","mythread","mythread(\"runn","mythread(\"线程a\",","mythread(),","mythread();","mythread(str","n","n,","n;","name","name)","name,","name:","name;","names[]","nanostimeout)","nanostimeout);","nativ","navigablemap","navigableset","navigableset,","netweaver）可以选择把程序安装到数据库中来完成程序代码在集群间的分发。","new","newcachedthreadpool","newcap","newcap,","newcapac","newcapacity);","newcondition();","newel","newelements,","newelements[len]","newfixedthreadpool","newnode(hash,","newratio","newschedulethreadpool","newsinglethreadexecutor","newsiz","newstr","newtab","newtab,","newtab;","newtab[e.hash","newtab[j","newtab[j]","newthr","new、getstatic、putstatic、invokestat","next","next()方法将抛出","next)","next))","next)对象。","next,","next;","ni","ni,","nid","nid=0x2","nid=0x3","nid=0x4","nid=0x45cd","nid=0x5","nid=0x54e","nid=0x6","nid=0x7","nid=0x8","nio","node","node()))","node();","node(hash,","node(thread.currentthread(),","node)","node))","node,","node.","node.predecessor();","node.prev","node.propagate))","node.signal)","node.signal);","node.signal,","node.thread","node.waitstatus;","node;","node[]","node[newcap];","non","nonfairsync","notempti","notempty;","notful","notfull;","notifi","notify()","notify()。","notify()和","notify()方法。同样的，当一个线程需要调用对象的","notify()方法时，它会释放这个对象的锁，以便其他在等待的线程就可以得到这个对象锁。由于所有的这些方法都需要线程持有对象的锁，这样就只能通过同步来实现，所以他们只能在同步方法或者同步块中被调用。","notifyal","notifyall()","notifyall()必须在同步方法或者同步块中被调用？","notifyall()被定义在","notify。","notserializableexcept","now","now;","npm","npm），而如果没有或报错，则你需要去","null","null)","null)))","null);","null,","null;","nullpointerexception();","nullpointerexception。","null。","null），peek","null，即与队列断开，无任何引用方便","null，并且","null，插入第一个节点","null，说明当前节点是第一个加入队列的节点","num","number","number），它的唯一作用是确定这个文件是否为一个能被虚拟机接收的","nummov","nummoved);","nums[]","n时，则表示有n","o","o(1)+o(logn)了，这样在","o(1)+o(n)。因此，当碰撞很厉害的时候","o(logn)的","o(logn)，可以改进性能。","o(n)；因此，对于个数超过","o[]","obj","obj,","obj[])","object","object();","object.wait()","object.wait()。","object.wait()，我找了下我的代码，定位到下面的代码：","object.wait(timeout)","object[]","object[len","objecta","objecta.inst","objecta;","objectb","objectb.inst","objectb;","objectinputstream","objectinputstream(in);","objectinputstream(input);","objectoutputstream","objectoutputstream(out);","objects;","objectstream","object。","obtain","oc","odps、hadoop","offer","offer(e)","offer(e,","offload","oi","ois.close();","ois.readobject();","ok","old","oldcap","oldcap)","oldcap);","oldcap]","oldcapac","oldsiz","oldtab","oldtab.length;","oldtab;","oldtab[j]","oldtab[j])","oldthr","oldthr;","oldval","oldval;","oldvalu","oldvalue;","omitstacktraceinfastthrow","on","onlyifabsent)","onlyifabsent,","oo","oom","oom();","oom.javaheapspace(sum1);","oom.javaheapspace(sum2);","oom.memorytotal();","oos.close();","oos.writeobject(new","oos.writeobject(obj);","openlist","option","options，这里仅列举常用参数。","oracl","order","order.","org.apache.catalina.startup.bootstrap","org.apache.tomcat.util.threads.taskqueue.poll(taskqueue.java:32)","org.apache.tomcat.util.threads.taskqueue.poll(taskqueue.java:86)","org.apache.tomcat.util.threads.taskthread$wrappingrunnable.run(taskthread.java:61)","origin","orphan","os","osgi","osi","ou","out","out)","out.close();","out.connect(in);","out.defaultwriteobject();","out.flush();","out.write(\"hello","out.write(bytes);","out.write(receive);","out.write(str);","out.write(temp);","out.writeint(age);","out.writeobject(name);","outofmemori","outofmemory(oom)分析","outofmemoryerror","outofmemoryerror:","outofmemoryerror:java","outofmemoryerror:permgen","outofmemoryerror:un","outofmemoryerror：","outofmemoryerror：un","output(filepath);","output(str","output1(str","output2(str","output:","outputfil","outputstream","outputstreamwrit","outputstreamwriter(new","outputstreamwriterdemo","outputstream（输出）。","overflow","overflow;","overflow）。","overhead","p","p)","p.after","p.after;","p.befor","p.before,","p.key","p.key)","p.left","p.next","p.next)","p.parent","p.parent.left","p.parent.left)","p.parent.right","p.parent.right)","p.parent;","p.right","p.right);","p.right;","p.val","p.val;","p.valu","p.value);","p.value;","p;","page","pages'","pages分支","pages分支下","pages分支下就是全部的静态页面文件了，接下来就是提交到远程gh","pages分支，然后复制到这个目录下，然后推送、","parallel","parent","parent);","parent.loadclass(name,","parent;","park","parkandcheckinterrupt","parkandcheckinterrupt()","parkandcheckinterrupt())","parnew","parti","parties)","parties,","path","paus","pc","peek","peek()","per);","per[]","perform","period","perm","perman","permgen","permit","permits)","permits,","permit。","permit，如果没有就等待；而","permit，并且默认为非公平模式","permit，第二个参数设置是否为公平模式。所谓公平，是指等待久的优先获取许可","permsiz","permstat","pers.qingqian.study.seven.oom.javaheapspace(oom.java:36)","pers.qingqian.study.seven.oom.main(oom.java:26)","person","person(\"jack\",","person(\"phillip\",","person(\"thread","person(\"tom\",","person(\"张三\",","person(\"李四\",","person(\"王五\",","person()","person()\");","person(str","person.getinstance());","person.setage(person.getage()","person.setname(\"thread","person.tostring());","person;","person{name='jack',","pf","phantom","phantomrefer","phantomreference(obj);","pi","pid","pipe","pipedinputstream","pipedinputstream();","pipedoutputstream","pipedoutputstream();","pipedread","pipedreader();","pipedstreamdemo","pipedwrit","pipedwriter();","pipedwriter，前两种面向字节，而后两种面向字符。","pipelin","pipeline）,使","pipeline）,使cpu不会消耗过多的执行资源，延迟的时间取决于具体实现的版本，在一些处理器上延迟时间是零。第二它可以避免在退出循环的时候因内存顺序冲突（memori","pis.close();","pis.read(b);","pis;","place","pleas","plugin","po","point","poll()","poll(time,","poll,","pollfirst","pollintervalretryschedulerthread","polllast","polltaskschedulerthreadstate.idlewaiting;","pos.close();","pos.write(str.getbytes());","pos;","possibl","pr","pre","pred","pred,","pred.next","pred.prev;","pred.waitstatus;","pred;","present","present。","preserv","prestartallcorethreads()","prestartallcorethreads()或者","prestartallcorethreads()：初始化所有核心线程","prestartcorethread()","prestartcorethread()方法，从这","prestartcorethread()：初始化一个核心线程；","prev;","previou","prices[]","print","print(in),","print(pipedread","printf","printstream","printstream(bos);","printstream(os);","printstream(out);","printstreamdemo","printthread","printthread.start();","prio=10","priorityblockingqueu","priorityblockingqueue：一个具有优先级的无限阻塞队列。","priorityqueu","priorityqueue<>(queue_size);","priorityqueue：基于堆结构实现，可以用它来实现优先队列。","privat","process","process），在一个进程里可以创建多个线程，这些线程都拥有各自的计数器、堆栈和局部变量等属性，并且能够访问共享的内存变量。","produc","producer(\"生产者a\").start();","producer(\"生产者b\").start();","producer(str","propag","propagate（","proper","protect","protocol），即传输控制协议，它是一种面向连接的、可靠的、基于字节流的传输层通信协议。","proxygenerator.generateproxyclass","ps","ps.close();","ps.print(\"hello","ps.printf(\"姓名：%s；年龄：%d\",","ps.println(\"world!!!\");","psyounggen","ptr","pts/3","pu","public","public。","push","put","put(e)","put(k","put,","put:","putindex;","putlock","putlock.newcondition();","putval(hash(key),","putval(int","putval(k","put、get","put操作","put操作是要加锁的。","put操作？","put的时候导致的多线程数据不一致","put）。在设置初始容量时，应考虑映射中的条目数量及其负载因子，以尽量减少重新运行操作的次数。如果初始容量大于最大入口数除以负载因子，则不会发生重新刷新操作。","q","queue","queue.notifyall();","queue.offer(1);","queue.poll();","queue.size()","queue.wait();","queue;","queue_siz","queue_size)","queue。tabl","r","r);","race","randmoaccess","random","random().nextint(100);","random();","randomaccess","randomaccess,","randomaccessfil","randomaccessfile(f,","randomaccessfiledemo01","randomaccessfiledemo02","rangecheck(index);","rdf","rdf.close();","rdf.seek(0);","rdf.skipbytes(12);","rdf.writebytes(name);","rdf.writeint(age);","re","read","reader","reader.close();","reader.read(c);","readerandwriterdemo","reader（输入）","readexternal()","readexternal()。这两个方法在序列化和反序列化过程中会被自动调用，以便执行一些特殊操作。当使用该接口时，序列化的细节需要由程序员去完成。如上所示的代码，由于","readexternal(objectinput","readi","readlock();","readme.md","readobject","readobject()","readobject(filepath);","readobject(objectinputstream","readobject(str","readresolve()","readserialdata","readtask","readtask(list","readwritelock","readwritelock)都是基于","ready，还不允许将这部分数据发出。上图中的","real=0.07","real=0.68","receiv","receive()","receive();","receive);","recheck","reentrantlock","reentrantlock()","reentrantlock();","reentrantlock(boolean","reentrantlock)。当需要","reentrantlock+segment+hashentri","reentrantlockdemo","reentrantlockdemo();","reentrantlock、","reentrantlock、reentrantreadwritelock、semaphor","reentrantlock而言,","reentrantlock而言，其是独享锁。但是对于","reentrantlock而言，通过构造函数指定该锁是否是公平锁，默认是非公平锁。非公平锁的优点在于吞吐量比公平锁大。","reentrantlock（seg","reentrantlock，并发度与","reentrantreadwritelock","reentrantreadwritelock();","reentrantreadwritelockdemo","reentrantreadwritelockdemo();","reentrantreadwritelock源码","reentrantreadwritelock示例","reentrantreadwritelock要点","ref_getstatic,","ref_invokestat","ref_putstatic,","refer","reference.get()","referencecountinggc","referencecountinggc();","referencequeu","referencequeue(queue)队列中。","references:","references）","reference）","region","regions)*。这些区域被设计成保持标准区域大小的","region。","region。通过使用","region，时间是用户可控制的，而且停顿用户线程将大幅度提高收集效率。","registri","rejectedexecutionexcept","rejectedexecutionhandl","releas","release()","release(int","releaseshar","releaseshared(int","rememb","remov","remove()","remove()用来移除当前线程中变量的副本。","remove(int","remove(object","removeeldestentry()","removeeldestentry(first))","removeeldestentry(map.entri","removenode(hash(key),","remove操作？","remove等操作，可以减少并发冲突，对","replac","replacement.par","replacement;","request","reservedosmemori","reservedosmemory)","reset()","resiz","resize()","resize()).length;","resize();","resize。","resize。在","resize而引起死循环.（条件竞争）。扩容的的时候可能会形成环形链表，","resize，然而又因为我们使用的是","resolve)","resolveclass(c);","resort","result","result.","result;","retri","retries_before_lock","retries_before_lock)","return","return;","rf","rm","rmi","rmi(远程方法调用)","root","root;","root@ubuntu:/#","rootdir","rootdir)","rootdir;","rows：使用的行数","rt.jar","rt.jar，名字不符合的类库即使放在","rthread.start();","rto","rto(retransmiss","run","run()","run()方法，它的行为就会和普通的方法一样。","runnabl","runnable()","runnabledemo","runnable，并且根据线程调度，它将得到执行。","running,","runstat","runtime.getruntime().availableprocessors()","rw","rwl","rwl.readlock().lock();","s","s)","s.acquire();","s.defaultwriteobject();","s.getpos().connect(r.getpis());","s.key;","s.release();","s.value;","s.writeint(size);","s0c","s0u","s1c","s1u","s;","sake","same","sap","sca","scan","scan.next(\"^\\\\d{4}","scan.nextfloat();","scan.nextint();","scanner","scanner(system.in);","scannerdemo","scaveng","scheduledexecutorservic","scheduledexecutorservice：一个可定时调度任务的接口。","scheduledthreadpool","scheduledthreadpool.schedule(()","scheduledthreadpool.scheduleatfixedrate(","scheduledthreadpooldemo","scheduledthreadpoolexecutor","scheduledthreadpoolexecutor：scheduledexecutorservic","scheduler)和时间分片(tim","schedulerthreadst","secs]","sections）：导致竞态条件发生的代码区称作临界区。","seek()","seg","seg.count;","seg.modcount;","segement","segment","segment[]","segmentat(segments,","segmentmask","segmentmask)","segments;","segmentshift","segmentshift)","segment。","segment下面包含很多个hashentry列表数组。对于一个key，需要经过三次（为什么要hash三次下文会详细讲解）hash操作，才能最终定位这个元素的位置，这三次hash分别为：","segment是一种可重入锁reentrantlock","segment的结构和hashmap类似，是一种数组和链表结构。","segment继承自","segment，它即类似于","segment，它继承自重入锁","select","select_type：使用select的类型","self","selfinterrupt();","semaphor","semaphore(10);","semaphore(int","semaphoredemo","semaphore提供了","semaphore源码","semaphore的重要方法：","semaphore示例","semaphore要点","send","send()","send();","seq","serial","serializ","serializable，它增添了两个方法：writeexternal()","serializable，所以支持序列化。","serializable，支持序列化。","serialize(filename);","serialize(str","serializedemo01","serializedemo02","serializedemo03","serializedemo04","serializedemo05","serialversionuid","serialversionuid。","serialversionuid，则序列化运行时将基于该类的各个方面计算该类的默认","serialversionuid？","serv","server","serversocket：服务器端类","serve。","servic","session","set","set()","set()方法，就会对","set()用来设置当前线程中变量的副本。","set(t","set,","set>","seta()","setage(int","setarray(arrays.copyof(elements,","setarray(newelements);","setb()","setb();","setcorepoolsize：设置核心池大小","setdaemon()","setdaemon、isdaemon","setflag()","sethead","sethead(nod","sethead(node);","setheadandpropagate(node,","setinitialvalu","setinitialvalue()","setinitialvalue();","setinitialvalue()。","setmaximumpoolsize()，","setmaximumpoolsize：设置线程池最大能创建的线程数目大小","setname()、","setname(str","setname、getnam","setpriority、getprior","set。它由","set架构","set，get","set，在做可达性分析的时候就可以避免全堆扫描。","set，它内部包含了一个","set，用来记录该","sex","sex)","sex.male));","sex.male);","sex:","sex;","sex=\"","sex=male}","sf","share","shouldparkafterfailedacquir","shouldparkafterfailedacquire(nod","shouldparkafterfailedacquire，直至","shr","shutdown","shutdown()","shutdown()和","shutdown()方法，则线程池处于","shutdown()：不会立即终止线程池，而是要等所有任务缓存队列中的任务都执行完后才终止，但再也不会接受新的任务","shutdown)","shutdownnow","shutdownnow()","shutdownnow()方法，则线程池处于","shutdownnow()，其中：","shutdownnow()：立即终止线程池，并尝试打断正在执行的任务，并且清空任务缓存队列，返回尚未执行的任务","shutdownnow。","si,","siglock.wait(timeuntilcontinue)","siglock.wait(timeuntilcontinue);","signal","signal。","signal（","signal，表示当前线程阻塞。","signifi","simpledateformat(\"yyyi","singlethreadexecutordemo","singleton","singleton()","singleton();","size","size()","size()方法是针对泛型集合而言的，用于查看泛型中有多少个元素","size)","size,","size;","size]","size。","size只能获取int范围内的concurrenthashmap元素个数；而如果hash表中的数据过多，超过了int类型的最大值，则推荐使用mappingcount()方法获取其元素个数。","size操作","size操作？","size的时候，插入了多个数据），要解决这个问题，jdk1.7版本用两种方案","sleep()","sleep()、yield()、join()","sleep()和","sleeping,","slice的容量","slicing)？","slot","slots）。当然将","slots）来自动做一些清除工作，否则如果不清除的话容易产生内存无法释放的问题：valu","socket","sockets：使用","socket：客户端类","softrefer","softreference(obj);","sortedmap","sortedmap，navigablemap","sortedset","space","space:","space，这个区域称为年老代。gc","special","speed()方法将key的hash值进行再hash，让hash值的高位也参与hash运算，从而减少哈希冲突。然后再查询对应的value值。","spinfortimeoutthreshold)","split","spliter","spread(key.hashcode());","sql语句优化","sshift","sshift(计算ssize时进行移位操作的次数)","sshift;","sshift，例如concurrencylevel等于16，则sshift等于4，则segmentshift为28。hash值是一个32位的整数，将其向右移动28位就变成这个样子：","ssize","ssize(segments数组的长度)","st","stack","stackoverflowerror","stale","stamp","stamp,","start","start()","starvation.html","state","state;","state，用来表示同步状态。aq","static","static代码块","static关键字主要有两种作用：第一，为某特定数据类型或对象分配单一的存储空间，而与创建对象的个数无关。第二，实现某个方法或属性与类而不是对象关联在一起，也就是说，在不创建对象的情况下就可以通过类来直接调用方法或使用类的属性。","static关键字有哪些作用","static内部类","static成员变量","static成员方法","statist","statu","still","stop","stopped,","stop，然后尝试停止所有的正在执行或暂停任务的线程，并返回等待执行任务的列表，而","store","str","str);","str.getbytes();","str[]","strictfp有什么作用","strictli","string","string(b,","string(bytes));","string(c,","string(input(filepath)));","string[]","stringbuff","stringbuffer();","stringbuffer：","stringbuilder：如果是在单线程下操作大量数据，应优先使用stringbuilder。（效率最高）","string、stringbuffer、stringbuilder和stringtokenizer有什么区别","string是不可变的，也是final的","string：","stub","studynot","stuff","sub","submit","submit()","submit()方法的实现，会发现它实际上还是调用的","subset","successfully.","successor'","successor(p);","successor.","sum","sum(countercell)","sum){","sum1=300000;","sum2=400000;","sum;","summary.md，readme.md","summary.md，执行","sun.misc.unsafe.park(n","sun.tools.jps.jp","super(16,","super(initialcapacity,","super(max_entries,","super(name);","superclass","superclass[10];","superclass[]","supplier)","survior","survitor","survivor","survivorratio","survivor。hotspot","survivor。在回收时，将","swap:","swap（比较与交换），是一种有名的无锁算法。","swap），字面意思为比较并交换。ca","swap，比较交换）：cas有三个操作数，内存值v、预期值a、要修改的新值b，当且仅当a和v相等时才会将v修改为b，否则什么都不做。","sweep","sweep），mark","switching)？","sy,","syn","syn/ack","sync","sync;","synchon","synchron","synchronized(siglock)","synchronized+cas+hashentry+红黑树","synchronizeddemo01","synchronizeddemo02","synchronizeddemo03","synchronizeddemo04","synchronizeddemo04();","synchronized。","synchronized。数据结构沿用了与它同时期的hashmap版本的思想，底层依然由数组+链表+红黑树的方式思想。","synchronized，它在多处理器开发中保证了共享变量的“可见性”。","synchronized，解决了以上的缺陷：","synchronousqueu","synchronousqueue：一个不存储元素的阻塞队列。每个插入操作必须等到另一个线程调用移除操作，否则插入操作一直处于阻塞状态，吞吐量通常要高于","synchronousqueue：这个队列比较特殊，它不会保存提交的任务，而是将直接新建一个线程来执行新来的任务。","synlist","sys=0.02,","sys=0.08,","sysprop","system","system.arraycopy()","system.arraycopy(elementdata,","system.arraycopy(elements,","system.currenttimemillis();","system.err","system.err.print(\"此处有误\");","system.gc()","system.gc()。","system.getproperties()","system.in","system.in.read())","system.in;","system.out","system.out.print(\"请输入内容：\");","system.out.print(\"输入小数：\");","system.out.print(\"输入整数：\");","system.out.print(\"输入日期（yyyi","system.out.print(\"退出\");","system.out.print((char)","system.out.print(i);","system.out.println(\"1、进入run()方法\");","system.out.println(\"2、已经完成了休眠\");","system.out.println(\"2个子线程已经执行完毕\");","system.out.println(\"3、休眠被终止\");","system.out.println(\"4、run()方法正常结束\");","system.out.println(\"\\n\"","system.out.println(\"\\nnow","system.out.println(\"atom","system.out.println(\"barrieract","system.out.println(\"cal","system.out.println(\"count","system.out.println(\"fin","system.out.println(\"main","system.out.println(\"max_prior","system.out.println(\"messag","system.out.println(\"min_prior","system.out.println(\"norm_prior","system.out.println(\"sav","system.out.println(\"主方法的优先级：\"","system.out.println(\"人生若只如初见，何事秋风悲画扇\");","system.out.println(\"代码执行之后","system.out.println(\"内容为：\"","system.out.println(\"内容为：\\n\"","system.out.println(\"写操作线程开始执行\");","system.out.println(\"初始对象为：\"","system.out.println(\"压缩实体名称：\"","system.out.println(\"压缩文件的名称：\"","system.out.println(\"子线程\"","system.out.println(\"小数数据：\"","system.out.println(\"往arraylist中加入30w内容\");","system.out.println(\"往arraylist中加入40w内容\");","system.out.println(\"接收的内容为：\"","system.out.println(\"整数数据：\"","system.out.println(\"文件字符数为：\"","system.out.println(\"新的对象为：\"","system.out.println(\"等待2个子线程执行完毕...\");","system.out.println(\"线程","system.out.println(\"线程开始执行之前","system.out.println(\"线程开始执行之后","system.out.println(\"继续执行主线程\");","system.out.println(\"读入数据的长度：\"","system.out.println(\"读操作线程开始执行\");","system.out.println(\"输入的不是小数！\");","system.out.println(\"输入的不是整数！\");","system.out.println(\"输入的内容为：\"","system.out.println(\"输入的日期格式错误！\");","system.out.println(\"队列满，等待有空余空间\");","system.out.println(\"队列空，等待数据\");","system.out.println(bos);","system.out.println(cache.keyset());","system.out.println(constclass.helloworld);","system.out.println(date);","system.out.println(future.get());","system.out.println(item);","system.out.println(key","system.out.println(line);","system.out.println(new","system.out.println(newstr);","system.out.println(obj","system.out.println(obj);","system.out.println(str);","system.out.println(sub.b);","system.out.println(subclass.value);","system.out.println(this.getname()","system.out.println(this.nam","system.out.println(thread.currentthread().getname()","system.out.println(thread.getname()","system.seterr(ps);","system.setout(ps);","systemerrdemo","systemindemo","systemoutdemo","t","t,","t.interrupt();","t.isalive());","t.isdaemon());","t.join();","t.key);","t.next","t.prev)","t.right;","t.setdaemon(true);","t.setname(\"线程","t.setvalue(value);","t.start();","t.threadloc","t1","t1.join();","t1.setpriority(thread.min_priority);","t1.start();","t2","t2.join();","t2.setpriority(thread.max_priority);","t2.start();","t3","t3.setpriority(thread.norm_priority);","t3.start();","t;","tab","tab,","tab.length)","tab;","tab[(n","tab[i","tab[i]","tabat(tab,","tabl","table)","table,","table;","table;;)","table[3]为首节点，table[3]","table，","tail","tail)","tail;","tailset","take()","take,","takeindex;","takelock","takelock.newcondition();","target","task","tcp","tcp/udp","tcp（transmiss","tcp，用户数据报协议","tcp？","temp","temp;","termin","terminated()","test","this.ag","this.age;","this.barrier1","this.barrier1.await();","this.barrier2","this.barrier2.await();","this.count","this.eden","this.eden.clear();","this.eden.get(k);","this.eden.put(k,","this.in","this.index","this.list","this.lock;","this.longterm","this.longterm.get(k);","this.longterm.putall(this.eden);","this.nam","this.rootdir","this.segments;","this.sex","this.sex;","this.siz","this.tim","this与supper有什么区别","this，即为调用","thread","thread\"","thread(()","thread(barrierrunnable1).start();","thread(barrierrunnable2).start();","thread(future).start();","thread(mt).start();","thread(mt);","thread(mt,","thread(new","thread(one,","thread(r).start();","thread(s)","thread(s).start();","thread(t).run();","thread(t,","thread(two,","thread)","thread)。当工作者线程在繁忙地处理任务的时候，窗口线程可以自由地响应其他用户的请求。当工作者线程完成任务的时候，它发送信号给窗口线程。窗口线程便可以更新应用程序窗口，并显示任务的结果。对用户而言，这种具有工作者线程设计的程序显得响应速度更快。","thread)，然后立刻返回去监听。而工作者线程则能够处理这个请求并发送一个回复给客户端。这种设计如下所述：","thread,","thread.currentthread().getname()","thread.currentthread().getname(),","thread.currentthread().getpriority());","thread.currentthread();","thread.interrupted();","thread.isal","thread.join","thread.join()","thread.join(timeout)","thread.max_priority);","thread.min_priority);","thread.norm_priority);","thread.setdaemon(true)","thread.setpriority(thread.max_priority)","thread.sleep","thread.sleep()","thread.sleep(1000);","thread.sleep(1000);//","thread.sleep(10000);","thread.sleep(2000);","thread.sleep(3000);","thread.sleep(500);","thread.sleep(math.abs((int)","thread.sleep(sleeptime)","thread.sleep(this.time);","thread.start","thread.start()","thread.start()方法。","thread.yield","thread.yield()","thread02","thread02(\"线程a","thread02(\"线程b","thread02(str","thread;","thread_count","threadalivedemo","threadb.interrupt()","threaddaemondemo","threaddemo02","threadfactori","threadfactory,","threadfactory：创建线程的工厂。可以通过线程工厂给每个创建出来的线程设置更有意义的名字。","threading/thread","threadinterruptdemo","threadjoindemo","threadloc","threadlocal()","threadlocal();","threadlocal.threadlocalmap","threadlocalmap","threadlocalmap(this,","threadlocalmap.entri","threadlocalmap。","threadlocals。","threadlocals，这个","threadlocal，很多地方叫做线程本地变量，也有些地方叫做线程本地存储，其实意思差不多。可能很多朋友都知道","threadnamedemo","threadpool","threadpool.shutdown();","threadpoolexecutor","threadpoolexecutor(int","threadpoolexecutor.abortpolicy:丢弃任务并抛出","threadpoolexecutor.callerrunspolicy：由调用线程处理该任务","threadpoolexecutor.discardoldestpolicy：丢弃队列最前面的任务，然后重新尝试执行任务（重复此过程）","threadpoolexecutor.discardpolicy：也是丢弃任务，但是不抛出异常。","threadpoolexecutor：线程池，可以通过调用","threadprioritydemo","threads:","threadsess","threadsession.get();","threadsession.set(s);","threadsleepdemo","threadspool.execute(new","threadstacks","threadstopdemo03","threadwaitnotifydemo02","threadyielddemo","thread。","thread）是在后台执行并且不会阻止","thread）相反的，叫用户线程（us","thread），也就是非守护线程。","threshold","threshold)","threshold;","thrift、protobuf","throw","thrown","ticket","tid","tid,","tid:","tid=0x00007f3b05013800","tid=0x00007f950043e000","tid=0x08134878","tid=0x081370f0","tid=0x08137ca0","tid=0x08142f08","tid=0x08143c58","tid=0x081465f8","tid=0x08147768","tidi","time","time)","time+","time,","time;","timed_wait","timeout)，即重传超时时间。","timeout,","timeoutexcept","timeunit","timeunit.seconds);","timeunit.seconds.sleep(1);","timeuntilcontinu","todo","toggl","tom,","tomcat","tool)打开。","tool)，是与","tool)，显示指定系统内所有的","top","tostring()","total,","trace","transient","transient，如下所示：","traversing)。","tree","treebin)","treeify_threshold","treeify_threshold)","treeify_threshold)，就把链表转换成红黑树；","treeifybin(tab,","treemap","treemap.keyset().iterator();","treemap<>();","treemapdemo","treemap，它实际上是通过","treemap：基于红黑树实现。","treenode)","treeset","treeset:","treeset。它是有序的","tri","true","true);","true/false，取决于具体的操作）；","true;","true。","true。当所有的任务都已关闭后,才表示线程池关闭成功，这时调用","true。至于我们应该调用哪一种方法来关闭线程池，应该由提交到线程池的任务特性决定，通常调用","true，也包括使用","true，则会将该节点移到链表尾部。也就是说指定为","true，则通过解锁一个或多个线程来实现。这个方法可以用来实现","true，开启","true，需要继承","true；如果失败（即锁已被其他线程获取），则返回","tryacquir","tryacquire(arg)","tryacquire(arg))","tryacquirenano","tryacquirenanos(int","tryacquireshared(arg);","tryacquiresharednano","trylock()","trylock();","trylock(long","tryreleas","tryreleaseshar","tutorial/java","two","two.cancel();","two进行取消，使countthread能够感知on为false而结束","type","type：连接使用了哪种类别","u","udp","unabl","unbound","under","undergo","unit)","unit,","unit：参数","unlink.","unlock()","unlock();","unparksuccessor","unparksuccessor(h);","unparksuccessor(nod","unparksuccessor。）","unsafe.compareandswapint(this,","unserializedemo","unsynchron","up","updat","update)","update);","update)类似：","update操作来实现悲观锁，获取select的行锁","update，compareandswapint","url","url(\"http://www.baidu.com\");","url.openstream();","url：统一资源定位符；","us","us,","usage:","used,","usegcoverheadlimit","user","user,","user=0.17","user=1.75","usual","util","v","v)","v);","v;","valu","value(保证","value)","value))","value);","value){","value)。","value)存储对象到hashmap中，使用get(key)从hashmap中获取对象。","value)映射。","value)映射，而且键和值都可以是","value,","value;","valueoffset,","values()。","values:","value值","value即可。","value，存到","value；失败，返回","vector","vector();","vector、hashtable、stack，与之相对应的","vector、stack、hasht","vector，因为同步操作完全可以由程序员自己来控制；","vector，虽然能保证每一个时刻只能有一个线程访问它，但是不排除这种可能：","vector：和arraylist类似，但它是线程安全的。","verbose:gc","version","version）。","version）；第","via","violation）而引起","violation）而引起cpu流水线被清空（cpu","virt","visibility.","visual","vm","void","volatil","volatile。","volatile是一个类型修饰符，它是被用来修饰被不同线程访问和修改的变量。被volatile类型定义的变量，系统每次用到它时都是直接从对应的内存当中提取，而不会利用缓存，在使用了volatile修饰成员变量后，所有线程在任何时候所看到的变量的值都是相同的。","volatile有什么作用","volatile，java","volatile；","vs.","v，旧的预期值","w","wa,","wait","wait()","wait())也处于永久等待完成的对象，因为其他线程总是被持续地获得唤醒。","wait(),","wait()、notify()","wait()和","wait()方法的时候，这个线程必须拥有该对象的锁，接着它就会释放这个对象锁并进入等待状态直到其他线程调用这个对象上的","wait()，notify()等方法用于等待对象的锁或者通知其他线程对象的监视器可用。在","wait...","wait/notify/notifyal","waiting...\");","waiting）","waitstatu","waitstatus;","waittim","wait、notify、notifyal","weakhashmap","weakhashmap<>(size);","weakhashmap。","weakhashmap，保证了不常使用的对象容易被回收。","weakhashmap，将键值对添加到","weakrefer","weakreference(obj);","weakreference。threadlocalmap","weakreference，主要用来实现缓存。","weakreference，并且使用","web","webservic","weight","wf","while(!flag)","while(serv","while(true)","win:","window","window，又叫","window，这个字段是接收端告诉发送端自己还有多少缓冲区可以接收数据。于是发送端就可以根据这个接收端的处理能力来发送数据，而不会导致接收端处理不过来。","within","withinitial(suppli","word","word。然后线程尝试将对象","work","worker","workercount，从而防止在不应该的情况下添加线程。","worker（在另一个线程上调用）也是“活动的”时，它们会尝试将该资源交给其他工作者并等待为它完成。如果最初我们让两名工作人员都活跃起来，他们将会面临活锁问题。","workqueu","workqueue,","workqueue，它用来存放等待执行的任务。","workqueue：任务队列。用于保存等待执行的任务的阻塞队列。","world","world!!!\";","world!!!\\r\\n\";","world!!\");","world\\r\\n\";","world暂停。为下一次年轻代垃圾回收计算eden和survivor的大小。保留审计信息有助于计算大小。类似目标暂停时间的事情会被考虑在内。","write","writeexternal()","writeexternal(objectoutput","writeint()","writelock();","writeobject()","writeobject(filepath,","writeobject(java.io.objectoutputstream","writeobject(objectoutputstream","writeobject(str","writer","writer。","writer（输出）。","writeserialdata","writetask","writetask(list","ws","ws,","wthread","wthread.start();","x","xbootclasspath","xdebug","xloggc:","xloggc:$catalina_home/logs/gc.log","xm","xmn","xmn800m","xmn）、eden","xms,","xms2000m","xms=1m","xms和","xms，即为","xmx","xmx2000m","xmx=2m","xmx参数通常是必须的，所以newratio的值将对","xmx和","xnoagent","xnoclassgc","xrunjdwp:transport=dt_socket,address=28888,server=y,suspend=n","xss","xss=512m","xx:","xx:+heapdumponoutofmemoryerror","xx:+printgcdetail","xx:+printgctimestamp","xx:+serialgc","xx:+useadaptivesizepolicy，这是一个开关参数，打开参数后，就不需要手工指定年轻代的大小（","xx:+usecmscompactatfullcollect","xx:+useconcmarksweepgc","xx:+useg1gc","xx:+useparallelgc","xx:+useparalleloldgc","xx:+useparnewgc","xx:+useserialgc","xx:cmsfullgcsbeforecompact","xx:cmsinitiatingoccupancyfract","xx:disableexplicitgc","xx:gctimeratio","xx:maxgcpausemilli","xx:maxmetaspaces","xx:maxnews","xx:maxperms","xx:maxpermsize=256m","xx:maxpermsize参数来进行设置，但是要记住，只有当出现outofmemoryerror错误时你才需要去设置永久代内存。","xx:maxtenuringthreshold","xx:maxtenuringthreshold=15","xx:maxtenuringthreshold=15\"","xx:metaspaces","xx:newratio","xx:newratio。","xx:newsiz","xx:parallelcmsthread","xx:parallelgcthread","xx:permsiz","xx:permsize=64m","xx:permsize和","xx:pretenuresizethreshold）等细节参数了，虚拟机会根据当前系统的运行情况收集性能监控信息，动态调整这些参数以提供最合适的停顿时间或者最大的吞吐量，这种方式称为","xx:pretenuresizethreshold，大于此值的对象直接在老年代分配，避免在","xx:survivorratio","xx:survivorratio=4","xx:survivorratio）、晋升老年代对象年龄（","xxxx，然后再用这个值与segmentmask做&运算，也就是取最后四位的值。这个值确定segment的索引。","y","ygc","ygct","yield","yield()","yield()方法是静态的？","young","z\".split(\"","zero","zip","zip_file_path","zipentri","zipentry(file.getname()));","zipfil","zipfile(file);","zipfile.getentry(\"mldn.txt\");","zipfile.getinputstream(entry);","zipfile.getname());","zipfilepath)","zipfilepath,","zipinputstream","zipinputstream(new","zipout","zipout.close();","zipout.putnextentry(new","zipout.setcomment(\"thi","zipout.write(temp);","zipoutputstream","zipoutputstream(new","zipstreamdemo","zombi","{","{\"衬衣\",","{1,2,3};","{3,","{98.3f,","{new","{}","{};","|","||","}","}).start();","});","};","~","​","–>","—","“==”、equals和hashcode有什么区别","“标记","“读","…","❓","、xml","。","。索引的叶节点就是数据节点","一、java容器概述","一、概览","一个map有4个segment，标记为s1，s2，s3，s4，现在我们要获取map的size。","一个原来长度两倍的","一个守护线程创建的子线程依然是守护线程。","一个对象可能包含方法，这些方法可能包含本地变量。这些本地变量仍然存放在线程栈上，即使这些方法所属的对象存放在堆上。","一个对象的成员变量可能随着这个对象自身存放在堆上。不管这个成员变量是原始类型还是引用类型。","一个新对象的方式来创建强引用。","一个更好的方案是给这些线程设置优先级，让一个（或几个）线程回退，剩下的线程就像没发生死锁一样继续保持着它们需要的锁。如果赋予这些线程的优先级是固定不变的，同一批线程总是会拥有更高的优先级。为避免这个问题，可以在死锁发生的时候设置随机的优先级。","一个本地变量也可能是指向一个对象的一个引用。在这种情况下，引用（这个本地变量）存放在线程栈上，但是对象本身存放在堆上。","一个本地变量也有可能是一个对象的引用，这种情况下，这个本地引用会被存储到栈中，但是对象本身仍然存储在堆区。","一个本地变量可能是原始类型，在这种情况下，它总是在线程栈上。","一个本地变量如果是原始类型，那么它会被完全存储到栈区。","一个现代计算机通常由两个或者多个","一个程序至少有一个进程，一个进程至少有一个线程。","一个类加载器首先将类加载请求传送到父类加载器，只有当父类加载器无法完成类加载请求时才尝试加载。","一个线程池管理了一组工作线程，同时它还包括了一个用于放置等待执行的任务的队列。","一个线程的失败或者挂起不应该影响其他线程的失败或挂起的算法。","一个计算机还包含一个主存。所有的","一份，然后在新副本上执行写操作，之后再切换引用。当然此过程是要加锁的。","一定得了解针对堆的垃圾回收机制，具体而言，可以画个图，说下年轻代年老代等。","一旦一个共享变量（类的成员变量、类的静态成员变量）被","一样的快速查找特性。","一样，weakhashmap","一样，一个","一次i/o读入一块，一块的大小就是b+树叶子节点的大小，每次读入一个完整的节点，所以是一个树高","一次只有一个线程能够在同步于同一个监视器对象的","一次年轻代垃圾收集之后，eden","一次扩容后是容量为","一致性","一般包含以下内容：","一般将","一般情况下，比锁性能更高。因为","一般设为","一般都会分开发送，从而导致多了一次。","三、容器中的设计模式","三个参数","三次hash","三次握手","三次握手完成，客户端与服务端已建立双向连接。","三次握手负责建立","三种创建线程方式对比","上一个线程可能同时（并发）执行。","上下文切换","上下文切换是存储和恢复","上例中","上图示意了这种情形。跑在左边","上场了，它用来输出进程","上的一个线程将这个共享对象读到","上的其它线程是不可见的，因为修改后的","上的时间不得超过","上的线程都是不可见的。这种方式可能导致每个线程拥有这个共享对象的私有拷贝，每个拷贝停留在不同的","上花费过多的时间（超过","上限","上面已经提到，java","上面的代码就是一个可重入锁的一个特点，如果不是可重入锁的话，setb","上面讲的独享锁/共享锁就是一种广义的说法，互斥锁/读写锁就是具体的实现。互斥锁在","下一个","下一个调整大小的值（容量*加载因子）。","下一次写入操作的位置","下一次读取操作的位置","下一步终于轮到","下图展示的类加载器之间的层次关系，称为类加载器的双亲委派模型（parent","下的","下面是一个重复创建内存的示例：","下面的几个","不一致，会抛出","不为空，就设置键值对；为空，再创建","不仅能生成","不会消耗过多的执行资源，延迟的时间取决于具体实现的版本，在一些处理器上延迟时间是零。第二它可以避免在退出循环的时候因内存顺序冲突（memori","不会造成线程的阻塞；synchron","不保证所有过期","不允许","不变类和线程安全类","不变，低","不可变性还有其他的优点如线程安全。","不可能在非叶子结点命中；非叶子节点作为一个索引","不可能实现","不同于","不同的是，countdownlatch","不安全的示例","不属于同一个片段的节点可以并发操作，大大提高了性能","不接受","不是并发安全的。","不是我们需要的，则通过","不是线程安全的。","不确定自己发消息是否没问题，所以就需要第三次握手。","不能响应中断。","不能重用。","不要认为所有的应用都可以分配给","不要认为所有的应用都可以分配给守护线程来进行服务，比如读写操作或者计算逻辑。","不足：","不输出类名、jar","不过","不过cas操作也存在一些缺点：1.","不适合内存敏感以及对实时性要求很高的场景。","不通点：","不需要","与","与c/c++语言相比，java语言中没有指针的概念","与发送方发送的","与守护线程（daemon","与类的构造函数（或者说实例构造器","与红黑树的比较：为什么使用b+树实现索引","且小于","世界的无数类中看到这个字段。","两个对象出现循环引用的情况下，此时引用计数器永远不为","两个类相等：类本身相等，并且使用同一个类加载器进行加载。这是因为每一个类加载器都拥有一个独立的类名称空间。","两个线程分别加了","两个虚拟机参数来指定一个程序的","两种，collect","个功能：","个区域。最小","个垃圾收集器，连线表示垃圾收集器可以配合使用。","个字节存储的是","个字节已经发送并确认。","个字节是主版本号（major","个字节是次版本号（minor","个字节称为魔数（magic","个字节，意味着有","个已发送的字节得到了确认。","个操作数，内存值","个方法中的任意方法：","个方法的名字就可以看出，是预创建线程的意思，即在没有任务到来之前就创建","个条件：","个构造方法","个构造方法：","个步骤：比较","个特征来建立的。","个状态值的含义：","个线程去下载资源，下载速度不会变成","个线程或者一个线程。默认情况下，在创建了线程池后，线程池中的线程数为","个线程正在运行，尝试使用给定命令作为第一个任务启动一个新线程。对","个许可","个阶段。","个阶段的顺序是确定的，类的加载过程必须按照这种顺序按部就班地开始。而解析过程在某些情况下可以在初始化阶段之后再开始，这是为了支持","个）元素；","中","中。","中。readobject()","中。这阶段需要停顿线程，但是可并行执行。","中一个类只能对应一个类对象，所以同时只允许一个线程执行同一个类中的静态同步方法。","中不能使用","中主要做了","中也支持数组这种数据结构，因为是值传递，所以如何在其他方法中真实的修改数据呢","中使用","中使用反斜杠表示目录的分隔符","中使用正斜杠表示目录的分隔符","中保存了全部的键值对，而","中保存被","中元素按照插入顺序保存（fifo）。","中典型的消息传递方式就是","中删除的步骤了。","中包含三个元素：prev,","中可以有一个缓存层就可以了。","中声明的方法，在","中存储的元素是按照插入顺序保存的。","中存储的元素是按照插入顺序保存的原理。","中存储的元素是无序的。","中存储的元素是有序的。排序规则是自然顺序或比较器（comparator）中提供的顺序规则。","中存储的内容是键值对(key","中守护线程的总结","中完成。","中定义","中定义了","中对应的缓存行无效。","中并没有对其进行重写，这个方法也是用来向线程池提交任务的，但是它和","中当前操作元素的一个虚拟值","中当前操作元素的一个虚拟值。","中当前操作元素的一个虚拟值。treeset","中得到了应用。","中成功返回，或者在调用","中所有元素都必须是指定枚举类型的枚举值。","中所有的过期","中提供了三个常用于","中提供了几种具有代表性的线程池，这些线程池是基于","中提供了另一个序列化接口","中提供的具有代表性的线程池实例。","中提供的静态成员","中断状态是线程的一个标识位，而中断操作是一种简便的线程间交互方式，而这种交互方式最适合用来取消或停止任务。","中断线程","中断线程执行","中断规则：当一个线程在另一个线程上调用","中新加入了","中最大堆大小有三方面限制：","中有","中有哪些锁？","中用来被list实现，为list提供快速访问功能的。在","中的","中的jmap命令来创建。在创建文件的过程中，所有","中的使用，就是利用各种锁。乐观锁在","中的使用，是无锁编程，常常采用的是","中的元素。","中的元素是无序的。","中的元素是有序的。","中的元素根据自然顺序或","中的元素都被当成","中的具体实现就是readwritelock","中的具体实现就是reentrantlock","中的内容是“有序的键值对”！","中的内容是排序的唯一值，排序的方法是通过比较器(comparator)。","中的内容是排序的键值对，排序的方法是通过比较器(comparator)。","中的回收价值和成本进行排序，根据用户所期望的","中的大部分","中的方法都是","中的方法（具体实现完全基于","中的每一个元素本质上都是一个","中的每一个对象都可以作为锁。","中的流操作分为两类：","中的流操作类，常常是以输入、输出两种形式成对提供。","中的线程优先级如何控制","中的线程优先级的范围是","中的线程共享属于该进程的堆。这就是为什么几个线程可以访问同一个对象。线程共享堆并拥有自己的堆栈空间。这是一个线程如何调用一个方法以及它的局部变量是如何保持线程安全的。但是堆不是线程安全的并且为了线程安全必须进行同步。","中的绝大部分函数，为","中的缓存大得多。","中的网络支持：","中的设计，其基本结构如图所示：","中的重要方法","中的键值对个数。","中的键值对数","中碰撞冲突的元素超过某个限制(默认是","中线程优先级一一对应。","中给出了两种列出文件夹内容的方法：","中维护了一个","中被","中被引入。executor","中被自动移除。更精确地说，对于一个给定的键，其映射的存在并不阻止垃圾回收器对该键的丢弃，这就使该键成为可终止的，被终止，然后被回收。某个键被终止时，它对应的键值对也就从映射中有效地移除了。","中要求的年龄。","中试图定义一种","中读取字节流数据。","中运行的每个线程都拥有自己的线程栈，线程栈包含了当前线程执行的方法调用相关信息，我们也把它称作调用栈。随着代码的不断执行，调用栈会不断变化。","中还存活着的对象一次性复制到另一块","中采用了红黑树的结构，那么查询的时间复杂度可以降低到","中，concurrenthashmap","中，利用红黑树替换链表，这样复杂度就变成了","中，同步容器主要包括","中，如果一个","中，如果编写另外一个","中，如果获取队列元素但是队列为空时，会阻塞，等待队列中有元素再返回；如果添加元素时，如果队列已满，那么等到队列可以放入新元素时再放入。","中，就是用了","中，年龄就增加","中，当某个键不再正常使用时，会被从","中，我们即可以通过元素的序号快速获取元素对象；这就是快速随机访问。","中，所有线程在运行前都会保持在就绪状态，那么此时，哪个线程优先级高，哪个线程就有可能被先执行。","中，所有线程在运行前都会保持在就绪状态，那么此时，哪个线程优先级高，哪个线程就有可能被先执行。可以通过","中，描述了这个问题：","中，摒弃了锁分段机制，改为利用","中，流操作的一般流程如下：","中，程序可以编译通过。因为双亲委派模型的存在，所以在","中，而不常用的对象放入","中，自旋锁是指尝试获取锁的线程不会立即阻塞，而是采用循环的方式去尝试获取锁，这样的好处是减少线程上下文切换的消耗，缺点是循环会消耗","中，读操作不同步，因为它们在内部数组的快照上工作，所以多个迭代器可以同时遍历而不会相互阻塞（1,2,4）。","串行","串行/并行/并发","串行垃圾回收器","串行收集器","串行收集器是","串行收集器是最基本、发展历史最悠久的收集器。","串行收集器采用单线程","临界区（critic","为","为一个对象设置虚引用关联的唯一目的就是能在这个对象被收集器回收时收到一个系统通知。","为了便于说明，假设客户端为","为了修正在并发标记期间因用户程序继续运作而导致标记产生变动的那一部分标记记录，虚拟机将这段时间对象变化记录在线程的","为了在新的线程中执行我们的代码，必须使用","为了解决这个问题，必须保证增加操作是原子的，在","为什么","为什么java中在重写equals()方法后必须对hashcode()方法进行重写和hashcode()方法)","为什么java中在重写equals()方法后必须对hashcode()方法进行重写？","为什么jdk1.8中hashmap链表长度超过8会转成树结构？？","为什么string,","为什么用","为什么用concurrenthashmap?","为什么线程通信的方法","为什么要用守护线程","为什么要用线程池？","为什么要重写equals()方法？","为使用的线程数量","为原来的","为变量副本（即","为变量在每个线程中都创建了一个副本，那么每个线程可以访问自己内部的副本变量。","为只写；rw","为只读；w","为对象定义年龄计数器，对象在","为当前","为新生代的大小，permsiz","为新生代空间中的","为每个序列化类产生的版本标识。它可以用来保证在反序列时，发送方发送的和接受方接收的是可兼容的对象。如果接收方接收的类的","为永久代的初始大小，maxperms","为永久代的最大空间。","为程序中所有的操作定义了一个偏序关系，称之为","为空。当通过","为空则创建","为空，当通过","为节点","为读写。","为释放很小空间占用大量时间时抛出；一般是因为堆太小，导致异常的原因，没有足够的内存。","主从复制","主从数据库负责各自的读和写，极大程度缓解了锁的争用","主动引用","主索引","主要不足是只使用了内存的一半。","主要协议：http、dns、smtp、telnet、ftp、snmp","主要协议：ip。","主要协议：ppp、csma/cd","主要协议：tcp、udp。","主要方法：","主要是对常量池的回收和对类的卸载。","主要是针对年轻代进行内存回收比较频繁，耗时短；full","主要的类有","主键","主键是唯一的，数据库表只能包含一个主键","举例：","举例：行锁，表锁，读锁和写锁，synchron","之前已经提过，在获取","之前我们可以使用同步技术来做到这一点。到","之前执行。","之前执行，并且操作","之前执行，那么操作","之前的","之前的实现中是用链表解决冲突的，在产生碰撞的情况下，进行","之前设置，否则会抛出","之前，hotspot","之前，虚拟机先检查老年代最大可用的连续空间是否大于年轻代所有对象总空间，如果条件成立的话，那么","之前，那么在线程中操作","之后,a++就不会被执行，如果我们还是想执行","之后可以使用","之后散列的很均匀，那么","之后能均匀的分布在数组中。如果","之后输入同步块/方法或重新输入同步块/方法。","之后，get","之后，取消了永久代，用","之后，因为","之间）上来看是基于“复制”算法实现的，这意味着运行期间不会产生内存空间碎片。","乐观锁/悲观锁","乐观锁与悲观锁不是指具体的什么类型的锁，而是指看待并发同步的角度。悲观锁认为对于同一个数据的并发操作，一定是会发生修改的，哪怕没有修改，也会认为修改。因此对于同一个数据的并发操作，悲观锁采取加锁的形式。悲观的认为，不加锁的并发操作一定会出问题。乐观锁则认为对于同一个数据的并发操作，是不会发生修改的。在更新数据的时候，会采用尝试更新，不断重新的方式更新数据。乐观的认为，不加锁的并发操作是没有事情的。","乐观锁：","乐观锁：认为数据一般情况下不会造成冲突，所以在数据进行提交更新的时候，才会正式对数据的冲突与否进行检测，如果发现冲突了，则让用户返回错误的信息。让用户决定如何去做。","也不允许传递","也不能被迭代，因为根本就没有元素可以拿来迭代的。","也做了同样的事情。现在","也做了同样的事情，但是往一个不同的","也可以使用","也可以使用以下方式调用","也可以等待积累有足够多的字节后再构成报文段发送出去。","也可以解决，而且可以不加锁。","也可以设置间隔固定时间来打印：","也同样适合大尺寸堆内存的垃圾收集，官方推荐使用","也就是说，实际上，linkedhashset","也是一个同步容器，它的方法也用","也是一个散列表，它存储的内容也是键值对(key","也是一个散列表，它存储的内容是键值对(key","也是关注最短停顿时间的垃圾回收器。g1","也是键值对的接口)，而且也实现","书写","了。","事件，所有应用线程都会因此操作暂停。","事件：初始标记和重新标记。当年老代达到特定的占用比例时，cm","事实上，主要的实现已经在","事实上，我们常用的","二、容器中的设计模式","二、容器框架","于随后获得这个锁的线程的操作。","互斥锁/读写锁","五个值","五层协议分层是一种折中方案，在现实中更为流行。","交错执行会发生什么：","产生的碎片过多，导致无法存放浮动垃圾，jvm","什么时候会使用","什么是","什么是concurrenthashmap?","什么是hashmao","什么是hashmap？","什么是hashtabl","什么是mysql","什么是上下文切换？","什么是不可变类","什么是分段锁技术？","什么是原子操作？有哪些原子类？","什么是原子操作？有哪些原子类？原子类的实现原理是什么？","什么是反射机制","什么是同步容器？有哪些常见同步容器？它们是如何实现线程安全的？同步容器真的线程安全吗？","什么是守护线程","什么是守护线程？为什么要用守护线程？如何创建守护线程？","什么是并发容器的实现？","什么是构造函数","什么是死锁","什么是死锁(deadlock)？如何分析和避免死锁？","什么是活锁？","什么是滑动窗口？","什么是线程","什么是线程安全？","什么是线程池？","什么是线程池？如何创建一个","什么是线程调度器(thread","什么是线程？","什么是继承","什么是资源限制","什么是进程","什么是进程？","什么是进程？什么是线程？进程和线程的区别？","什么是阻塞队列？如何使用阻塞队列来实现生产者","仅能使用在变量级别；synchron","仅能实现变量的修改可见性，不能保证原子性；而","仍然回收不了，那么虚拟机会抛出","从","从arraylist的定义，不难看出arraylist的一些基本特性：","从hashmap中get元素时，首先计算key的hashcode，找到数组中对应位置的某一元素，然后通过key的equals方法在对应位置的链表中找到需要的元素。","从上面的描述我们可以看出，悲观锁适合写操作非常多的场景，乐观锁适合读操作非常多的场景，不加锁会带来大量的性能提升。悲观锁在","从使用方面来说","从内存方面来说","从内存获取","从库i/o线程：负责从主服务器上读取二进制日志，并写入从服务器的重放日志（replay","从库sql线程：负责读取重放日志并重放其中的sql语句","从应用程序启动到采样时","从应用程序启动到采样时发生","从执行一个线程切换到执行另一个线程时，cpu","从数据库读取，这种场景相对少见，例如有些中间件服务器（如","从服务器可以使用myisam，提升查询性能以及节约系统开销","从概念方面来说","从磁盘中读取文件的时候，大部分的","从网络中获取，这种场景最典型的应用是","从而得到","从而检查系统中运行的","从表到里学习","从该结果，一方面可以看出","从输出结果可以看出，age","从键盘接收数据","从队列取走一个元素，队列当前有：\"","他的名字就可以看出是一个可重入锁，其名字是re","代替即可。","代码块时，这个线程便获得了该对象的锁，其他线程暂时无法访问这个方法，只有等待这个方法执行完毕或者代码块执行完毕，这个线程才会释放该对象的锁，其他线程才能执行这个方法或者代码块。","代码如何确保处理器执行","以","以上","以上代码和","以上是","以下几个就是控制并发用的同步器","以下是使用","以下是各状态的说明，以及状态间的联系：","以下是抽象类","以下的输出结果不确定","以下静态工厂方法来创建线程池并返回一个","以前使用","以及","以及之前版本（parallel","以只读的方式打开文件","以后把原本放在永久代的字符串常量池移出,","以后的字节为第","以后，目录里会有这两个文件","任务后返回了一个","任务执行的核心方法是","任务拒绝策略","任务是并行的，我们必须等待它返回的结果。futur","任务的执行","任务的状态和得到","任务缓存队列及排队策略","休眠指定的时间","优先级)执行。如果这个线程异常结束，会有另一个取代它，保证顺序执行。单工作线程最大的特点是可保证顺序地执行各个任务，并且在任意给定的时间不会有多个线程是活动的。","优先级更高，因为","优先级更高，因为程序中所有的","优先级最低","优先获取锁，再进行业务处理，一锁二查三更新","优化","优化。","优化。如果分析结果显示运行","优化上，但如果运行","优化之前，你需要考虑为什么你需要分配这么大的内存空间，如果你分配了","优化了。在进行","优化将是很有必要的。","优化数据访问","优化时最常用的参数是","优化的两个目标：","优化的基本原则是：将不同的","优化的结果令人满意，就可以将参数应用到所有服务器上，并停止","优化的过程","优化的过程和大多数常见的提升性能的过程相似，下面是笔者使用的流程：","优化需要考虑的","优化，那么你需要选择一个","优点","优点：","会一定格式将数据输入、输出。","会产生大量不连续的内存碎片，导致无法给大对象分配内存。","会出现","会去处理第一个文件。记住，在等待磁盘读取文件的时候，cpu","会在","会在操作中会被删除，而","会对整个堆内存进行回城，耗时长，因此一般尽量减少","会根据当前","会继续执行","会让这个线程去执行","会话层","会话层（session","会频繁执行，执行的速度一般也会比较快。","传给","传输层","传输层（transport","传输的数据包保证以原始顺序到达目的地，且数据包不被损坏。为了实现这点，tcp","传递性：如果操作","传递的值。","但是","但是他的具体结构类似arrraylist.class","但是在并发容器中不会出现这个问题。","但是速度慢，","但是，","但是，sleep()","但是，volatil","但是，如果你已经分配了大约","位字节为基础单位的二进制流。","位实现的：(h","位异或低","位置上，复制的代价很高。","位置，并进一步调用","位置，进一步存储，hashmap","低。","低停顿时间是以牺牲吞吐量为代价的，导致","作为","作为构建锁或者其他同步组件的基础框架，有必要好好了解一下其原理。","作为测试你应该知道的","作为起始点进行搜索，能够到达到的对象都是存活的，不可达的对象可被回收。","作为键值。","作用：","作用：aqs，abstractqueuedsynchronizer，即队列同步器。它是构建锁或者其他同步组件的基础框架（如","作用：concurrenthashmap","作用：copyonwrit","作用：字面意思为信号量。semaphor","作用：字面意思为递减计数锁。它允许一个或多个线程等待，直到在其他线程中执行的一组操作完成。","作用：字面意思循环栅栏。它可以让一组线程等待至某个状态之后再全部同时执行。叫做循环是因为当所有等待线程都被释放以后，cyclicbarri","你可以在互联网上搜索","你可以将电子书提交到","你吃饭吃到一半，电话来了，你一直到吃完了以后才去接，这就说明你不支持并发也不支持并行。","你吃饭吃到一半，电话来了，你一边打电话一边吃饭，这说明你支持并行。","你吃饭吃到一半，电话来了，你停了下来接了电话，接完后继续吃饭，这说明你支持并发。","你知道","你需要监控","使对象只被软引用关联","使得","使用","使用expalin分析","使用hibernate框架的sql注入防范","使用preparedstatement（预处理执行语句），它内置了处理sql注入的能力，可以对sql语句进行查询参数化，只要使用setstring方法传值即可","使用unsafe的方式从segment数组中获取该索引对应的segment对象。","使用了","使用了这个队列。","使用分段锁机制来实现并发更新操作，核心类为","使用协程","使用命令动态查看","使用处理异步任务。通常我们不需要使用","使用复制算法的","使用它的目的是：当","使用更广泛的子类接口，其提供了生命周期管理的方法，以及可跟踪一个或多个异步任务执行状况返回","使用最少线程","使用的是启动类加载器，而","使用的是应用程序类加载器。正因为","使用辅助索引进行查找，先获取主键值，再到主索引进行查找","使用锁，而不是同步块。","使用默认机制，在序列化对象时，不仅会序列化当前对象本身，还会对其父类的字段以及该对象引用的其它对象也进行序列化。同样地，这些其它对象引用的另外对象也将被序列化，以此类推。所以，如果一个对象包含的成员变量是容器类对象，而这些容器所含有的元素也是容器类对象，那么这个序列化的过程就会较复杂，开销也较大。","使用（using）","例如","例如lconcurrencylevel等于16，则ssize=16,sshift=4，则segmentshift为28,。segmentmask=15;hash值是一个32位的整数，将其向右移动28位就变成这个样子：0000","例子","例子，了解如何创建一个周期任务。","例子，学习如何使用它。","例子：","依然存活，将移动到","保存","保存对象","保存数据，采用","保存的键值对的数量。","保存缓存的","保留的操作系统内存","保证了","保证了不同线程对这个变量进行操作时的可见性，即一个线程修改了某个变量的值，这新值对其他线程来说是立即可见的。","保证数据的唯一性","信息的，class","修改不一致。","修改为","修改了对象！\");","修改后的版本写回到主存中取，修改后的值仅会被原值大","修饰、已在编译期把结果放入常量池的静态字段除外）的时候；以及调用一个类的静态方法的时候。","修饰。那么，这些方法每次只允许一个线程调用执行。","修饰之后，那么就具备了两层语义：","修饰的变量，准备阶段为类变量分配内存并设置初始值，使用的是方法区的内存。","修饰的方法或代码块，只能被一个线程访问。如果这个线程被阻塞，其他线程也只能等待。","修饰的方法，每次只允许一个线程执行，其他试图访问这个方法的线程只能等待。显然，这种方式比没有使用","倍","倍)。获取对象时，我们将","倍)，所以，元素的位置要么是在原位置，要么是在原位置再移动","倍。","倍空间，而","倍，之后重新计算","倍，那么","值。尽管这样，还是建议在每一个序列化的类中显式指定","值为","值传递与引用传递有哪些区别","值元素。","值往往用作其他用途，比如用于方法的返回值代表操作失败）。","值得注意的是，从文件中获取的","值新增的那个","值的元素。","值的时间，而且同时，由于新增的","值的（并发包中的容器类好像都不支持插入","值还没变为","值进一步计算下标，如下图所示：","值选择初始化","值，例如下面的类变量","值，则新插入节点","值，因为","值，通信双方商定通信的最大报文长度。如果应用层交付下来的数据过大，就会对数据分段，然后发送；否则通过滑动窗口来控制通信双发的数据。","假若此时","假设应用名称为","偏向锁/轻量级锁/重量级锁","偏向锁是指一段同步代码一直被一个线程所访问，那么该线程会自动获取锁。降低获取锁的代价。","偏向锁：大多数情况下，锁不仅不存在多线程竞争，而且总是同一个线程多次获取，为了让线程获得锁的代价更低引入偏向锁。当某一线程访问同步块时，会在对象头和栈帧中的琐记录里存储锁偏向的线程","做了一个异或。","做了修改，增加了一个字段","做处理","做自动删除（set","停顿时间","停顿时间是因为","停顿时间越短就越适合需要与用户交互的程序，良好的响应速度能提升用户体验；","停顿是时间来制定回收计划。此阶段其实也可以做到与用户程序一起并发执行，但是因为只回收一部分","允许","允许多个线程同时对其执行读操作，但是只允许一个线程对其执行写操作。","元数据验证","元素的时候，并不是对整个","先扩容后插入","先插入后扩容","先检查类是否已经加载过，如果没有则让父类加载器去加载。","先检测自己电脑是否安装了node","先调用","全局信息的时候，就需要获取所有的分段锁才能统计。分段锁的设计目的是细化锁的粒度，当操作不需要更新整个数组的时候，就仅仅针对数组中的一项进行加锁操作。","全局安装","公平锁/非公平锁","公平锁。","公平锁是指多个线程按照申请锁的顺序来获取锁。","公平锁版本。","共享内存","共享对象可见性","共享锁","共享锁又称","共享锁是指该锁可被多个线程所持有。","关于","关于更多的gitbook插件，读者可以参考插件网站。","关键字","关键字strictfp是strict","关键字。volatil","关键字会阻止其它线程获取当前对象的监控锁，这样就使得当前对象中被","关键字保护的代码块无法被其它线程访问，也就无法并发执行。更重要的是，synchron","关键字修饰方法以保证方法线程安全的容器。","关键字修饰的变量有两层含义：","关键字修饰，从而保证了当有一个线程执行方法时，其他线程被阻塞。","关键字做对象所属关系判定结果为","关键字可以保证直接从主存中读取一个变量，如果这个变量被修改后，总是会被写回到主存中去。","关键字和没有加入","关键字实例化对象的时候；读取或设置一个类的静态字段（被","关键字时所生成的汇编代码发现，加入","关键字时，会多出一个","关键字来标记一个方法或者代码块，当某个线程调用该对象的","关键字解析","关键字，还是使用","关键词：basics、seri","关键词：file、randomaccessfile、system、scann","关键词：http、dns、ftp、telnet、dhcp","关键词：inputstream、outputstream、reader、writ","关键词：ip、icmp、arp、路由","关键词：udp、tcp、滑动窗口、拥塞控制、三次握手","关键词：url、inetaddress","关键词：点对点信道、广播信道、ppp、csma/cd、局域网、以太网、mac、适配器、集线器、网桥、交换机","关键词：调制、解调、数字信号、模拟信号、通信媒介、信道复用","关闭","关闭流","关闭线程池","关闭输入流","关闭输出流","其中","其中[option]、[hostid]参数也可以不写。","其中二进制字节流可以从以下方式中获取：","其为0时，表示hash表还未初始化","其他内容略","其他情况下，则直接向node中插入一个新node节点，此时需要对这个node链表或红黑树通过synchronized加锁。","其他收集器都是以关注停顿时间为目标，而并行收集器是以关注吞吐量（throughput）为目标的垃圾收集器。","其度量标准是缩短由于垃圾啊收集引起的停顿时间或者完全消除因垃圾收集所引起的停顿，避免应用运行时发生抖动。","具体代码的实现如下：","具体而言，在java语言中，static主要有4种使用情况：成员变量，成员方法，代码块和内部类。","具备如下特点：","具有动态扩容特性，因此保存元素的数组不一定都会被使用，那么就没必要全部进行序列化。arraylist","具有四种强度不同的引用类型。","具有较好的安全性和健壮性。安全性是指java运行环境不允许java程序访问当前浏览器上下文以外的内容。健壮性是指java提供很多编译时的类型检查和异常处理。","典型场景：使用同步容器做迭代操作时，如果不对外部做同步，就可能出现","典型设备：二层交换机、网桥、网卡。","典型设备：光纤、同轴电缆、双绞线、中继器和集线器。","典型设备：网关、路由器。","典型配置","内内存的基础。cpu","内存中的对象和数据的内存文件。该文件可以通过执行","内存分配与回收策略","内存分配策略","内存创建一个","内存占用","内存占用：在写操作时需要复制一个新的数组，使得内存占用为原来的两倍左右；","内存是如何与它“联手”工作的。","内存模型","内存模型与硬件内存架构之间存在差异。硬件内存架构没有区分线程栈和堆。对于硬件，所有的线程栈和堆都分布在主内中。部分线程栈和堆可能有时候会出现在","内存模型与线程","内存模型即","内存模型如何与它协同工作也是非常重要的。这部分描述了通用的硬件内存架构，下面的部分将会描述","内存模型如何和内存交互不是那么重要。只要知道","内存模型并没有限制执行引擎使用处理器的特定寄存器或缓存来和主存进行交互，也没有限制即使编译器进行调整代码执行顺序这类优化措施。","内存模型把","内存模型有一些不同。理解内存模型架构以及","内存模型结构","内存模型（java","内存泄漏常见几个情况：","内存泄漏并非指内存在物理上的消失，而是应用程序分配某段内存后，由于设计错误，失去了对该段内存的控制，因而造成了内存的浪费。","内存泄漏是指由于疏忽或错误造成程序未能释放已经不再使用的内存的情况。","内存泄漏随着被执行的次数越多","内存泄露","内存溢出时输出堆快照文件","内存给","内存规范中的唯一地址定位","内存越多，那么你能用来创建的系统线程的内存就会越少，越容易发生","内存配置","内存问题","内的任务。由于","内置了一个微型的","内部原理","内部有一个","内部的寄存器中。如下图所示：","内部类和外部模块等的引用","内部维护了一个双向链表，用来维护插入顺序或者","再次做一些改动，代码如下：","再次进行反序列化，则会抛出","冗余：存储两倍数据，冗余降低了性能，但提高了数据的安全性。","写”线程、“写","写”线程之间存在互斥关系。","写入","写入不一致。最后的修改操作会覆盖先前的修改","写操作","写操作。","写操作后创建的迭代器将能够看到修改的结构（6,7）。","写操作在一个复制的数组上进行，读操作还是在原始数组中进行，读写分离，互不影响。","写操作结束之后需要把原始数组指向新的复制数组。","写操作需要加锁，防止并发写入时导致写入数据丢失。","写时复制集合返回的迭代器不会抛出","写的内存语义。","写的内存语义，因此","冲突检测和数据更新","冲突，可以采用开放地址法和链地址法来解决问题。hashmap","决定一个线程对共享变量的写入何时对另一个线程可见。","决定了顺序，默认为","准备从内存bytearrayinputstream中读取内容","准备（preparation）","减","减少","减少上下文切换的方法","减少服务器扫描的行数：使用索引来覆盖查询","减少请求的数据量","几乎一致，不再赘述。","凡事有利有弊，引入多线程除了带来的好处以外，也产生了一些问题：","出生并经过","函数库直接分配堆外内存，然后通过一个存储在","函数重载。","分代和分区","分代收集","分别是双链表的头节点和尾节点。","分别转换为","分层；五层协议分层；tcp/ip","分布式技术","分支，将本地编译好的电子书文件（项目根目录下的","分析","分析死锁，我们需要查看","分段锁","分段锁其实是一种锁的设计，并不是具体的一种锁，对于concurrenthashmap而言，其并发的实现就是通过分段锁的形式来实现高效的并发操作。我们以concurrenthashmap来说一下分段锁的含义以及设计思想，concurrenthashmap中的分段锁称为","分组和排序时，加快速度","分配","分配给堆内存的空间已经用满了。","分钟），则该工作线程将自动终止。终止后，如果你又提交了新的任务，则线程池重新创建一个工作线程。","列出全部名称，返回一个字符串数组。","列出全部文件","列出完整的路径，返回一个","列就是各个","则","则会删除","则可以使用在变量、方法、和类级别的。","则可以保证变量的修改可见性和原子性","则是动态数组的实际大小。","则是锁定当前变量，只有当前线程可以访问该变量，其他线程被阻塞住。","则是非线程安全的。","则用于在执行插入、删除操作时，保证这个方法在当前线程释放锁之前，其他线程不能访问。","则相对复杂，有以下条件：","则表示过期，程序内部称为","则表示链表中的实例。node","创建","创建一个git仓库，然后就愉快的拉取","创建一个单线程化的","创建一个可缓存线程池，如果线程池长度超过处理需要，可灵活回收空闲线程，若无可回收，则新建线程。","创建一个指定工作线程数量的线程池。每当提交一个任务就创建一个工作线程，如果工作线程数量达到线程池初始的最大数，则将提交的任务存入到池队列中。","创建一个目录，进入","创建一个线程池，可以安排任务在给定延迟后运行，或定期执行。","创建并启动新线程。","创建索引和维护索引需要时间成本","创建索引和维护索引需要空间成本","创建线程主要有三种方式：","创建线程有哪些方式？这些方法各自利弊是什么？","创建线程的三种方式及其对比","初始值一般为","初始值为","初始化","初始化concurrenthashmap","初始化segment分段","初始化加载因子","初始化固定数量的","初始化容量","初始化容量；以","初始化时机","初始化时，如果sizectl的值为0，则创建默认容量的table；否则创建大小为sizectl的table；","初始化电子书","初始化电子书目录","初始化计数器","初始化阶段才真正开始执行类中的定义的","初始化（initialization）","初始堆大小,xmx","初始堆空间","初始时，在","初始标记","初始标记是一个短暂暂停的、可达对象被标记的阶段。","初始标记：仅仅只是标记一下","删除会失败。","删除掉，多个应用公共的","删除操作","删除操作同理，将除要删除元素之外的其他元素拷贝到新副本中，然后切换引用，将原容器引用指向新副本。同属写操作，需要加锁。","判断","判断value是否为null，如果为null，直接抛出异常。","判断同步状态释放是否成功","判断尾指针是否为","判断是否启动","判断是否是文件夹","判断线程是否启动","判断输入的是否是小数","判断输入的是否是整数","利用","利用率不够高。","利用率的提升。而且每个线程只需要记录一个文件，因此这种方式也很容易编程实现。","别忘了在提交的时候忽略掉module文件夹，不然每次提交拉取的时候会很痛苦....","到","到一个寄存器","到它的","前对象锁的线程。","前缀指令。","前缀指令。lock","前缀指令实际上相当于一个内存屏障（也成内存栅栏），内存屏障会提供","前缀有两个特性","前缀索引：对于varchar类型的列，使用前缀索引","前驱节点","功能，需要指定如下参数：","加","加快表与表之间的连接","加载、验证、准备、初始化和卸载这","加载因子为","加载因子是散列表在其容量自动扩容之前被允许的最大饱和量。当哈希表中的","加载是类加载的一个阶段，注意不要混淆。","加载该类的","加载过程完成以下三件事：","加载（loading）","加锁","加锁。","加锁之后，便是将这个node节点所在的链表转换为treebin结构的红黑树。","动态数组。","包。","包中唯一对文件本身进行操作的类。它可以对文件、目录进行增删查操作。","包中引入了","包中提供的","包中的基础类都是使用这种模式来实现的，而","包中的相关锁(常用的有","包中的类），这些","包中的高层类又是依赖于这些基础类来实现的。从整体来看，concurr","包使用","包含两个重要的成员：first","包含了两个重要的元素：","包得以实现的基石。如果我们仔细分析","包提供了","包的实现","包的实现示意图如下：","包的方法对类进行反射调用的时候，如果类没有进行初始化，则需要先触发其初始化。","包的源代码实现，会发现一个通用化的实现模式：","包读取，这很常见，最终成为日后","包里提供了一个类","包（即","包，向客户端发送一个","包，并将确认序号设置为收到序号加","包，用来关闭客户端到服务端的数据传送。","包，确认序号为收到的序号加","区。年老代一个连续的空间。就地完成对象收集。除非有","区。所有达到他们的年龄阈值的对象会晋升到年老代。","区上，少数情况下也可能直接分配在老年代中。","区与一个","区中相同年龄所有对象大小的总和大于","区主要用于存放","区之间的大量内存复制。","区分配，当","区占整个年轻代的","区呆长一点，减少进入年老代的对象。去掉救助空间的想法是让大部分不能马上回收的数据尽快进入年老代，加快年老代的回收频率，减少年老代暴涨的可能性，这个是通过将","区和","区和两个","区和其中一个","区和救助空间","区域。另外，有第四种类型的区域叫做*极大区域(humong","区域。如果达到晋升总阈值，对象会晋升到年老代区域。","区复制活跃对象到另一个","区或者年老代区域。","区的内存比","区的大小比值，默认是","区的比例（","区的比值为","区空间不够时，发起","区空间满时，就将触发一次","区被创建后会直接被传入老年代。老年代","区被创建，随后被转移到","区被清空。","区，在此之后剩余的对象会被转入老年代。也有一些对象由于占用内存过大，在","区，让对象尽量在","千分之一微秒)。","千分之一毫秒)和毫微秒(nanoseconds,","协程：在单线程中实现多任务调度，并在单线程中维持多个任务的切换","协议分层。","协议实现网络通信。","协议实现网络通信；","单","单线程意味着复杂度更低、占用内存更少，垃圾回收效率高；但同时也意味着不能有效利用多核优势。事实上，串行收集器特别适合堆内存不高、单核甚至双核","卖票：ticket","占用程度已经超过了","即","即为远程","即使设置了线程的优先级，也无法保证高优先级的线程一定先执行。","即当元素个数超过容量长度的0.75倍时，","卸载（unloading）","压缩一个文件","压缩一个目录","压缩输出","原因：","原因：jdk6","原因：jvm","原因：传入的参数与系统的sql拼接成了合法的sql而导致的","原因：线程过多","原因：这是因为","原因：这是因为线程优先级依赖于操作系统的支持，然而，不同的操作系统支持的线程优先级并不相同，不能很好的和","原子变量比锁的粒度更细，量级更轻，并且对于在多处理器系统上实现高性能的并发代码来说是非常关键的。","原子变量类","原子变量类相当于一种泛化的","原子性","原子操作是指一个不受其他操作影响的操作任务单元。原子操作是在多线程环境下避免数据不一致必须的手段。","原子操作进行加锁和解锁，只需要简单的测试一下对象头中的","原子更新基本类型","原子更新字段类","原子更新布尔类型。","原子更新布尔类型数组的元素。","原子更新带有标记位的引用类型。可以原子更新一个布尔类型的标记位和应用类型。","原子更新带有版本号的引用类型。该类将整型数值与引用关联起来，可用于原子的更新数据和数据的版本号，可以解决使用","原子更新引用类型","原子更新引用类型。","原子更新引用类型数组的元素。","原子更新引用类型里的字段。","原子更新数组","原子更新整型。","原子更新整型数组里的元素。","原子更新整型的字段的更新器。","原子更新长整型。","原子更新长整型字段的更新器。","原子更新长整型数组里的元素。","原子类(atom","原子类在内部使用现代","原子类的实现原理是什么？","原理","原理：","原理：aq","原理：countdownlatch","原理：cyclicbarri","原理：jdk6","原理：semaphor","原理：利用数据库对特殊标识符的解析强行从页面向后台传入","原索引","原索引+oldcap","原索引+oldcap放到bucket里","原索引放到bucket里","原语，保证线程间的数据是可见的（共享的）。","去做了。仅仅异或一下，既减少了系统的开销，也不会造成的因为高位没有参与下标的计算(tabl","去处理已经读取完的文件。其结果就是，磁盘总是在繁忙地读取不同的文件到内存中。这会带来磁盘和","去遍历。","去除了c++语言中难易理解，容易混淆的特性。例如头文件，指针","参数","参数。如若不然，你还需要分析输出日志并检查分配的内存，然后需要通过不断调整","参数后就可以开始收集数据，请在收集至少","参数并分析它们的区别。","参数应用到两个及以上的服务器上然后比较它们的性能，然后将那些被证明可以提高性能或减少","参数所指定的路径中的，并且是虚拟机识别的（仅按照文件名识别，如","参数来控制是否对类进行卸载。","参数来让虚拟机出现","参数来设置线程数。","参数的值","参数说明","参数调优案例","参数，输出所有","参数：","参考","参考资料","参考资料：","参考阅读：java","参考阅读：sleep()，wait()，yield()和","参考阅读：volatil","参考阅读：全面理解","参考阅读：深入理解","参考阅读：进程和线程关系及区别","又称为幽灵引用或者幻影引用。一个对象是否有虚引用的存在，完全不会对其生存时间构成影响，也无法通过虚引用取得一个对象实例。","及以前的永久代空间不足","及以前，hotspot","及定位分析","及更高版本中使用的","双亲委派模型","双向连接。","双向链表实现的双端阻塞队列。","双链表。","反之，hashcode()方法的返回值不相等，一等能推出equals()方法的返回值也不相等，而hashcode()方法的返回值相等，equals()方法的返回值则可能相等，也可能不相等。","反之，则先调用","反序列化","反序列化是将字节流转换为对象。","反序列化（deserialize）","发同步消息。b","发同步消息和确认消息。a","发消息、收消息都没问题。但是，此时","发消息、收消息都没问题；b","发消息没问题。","发消息没问题；b","发现它的方式同内存溢出，可再加个实时观察","发生两次","发生在虚拟机将符号引用转换为直接引用的时候，对类自身以外（常量池中的各种符号引用）的信息进行匹配性校验。","发确认消息。b","发送后继信号并确保传播。","取出内容","取得当前线程。","取消","变为","变量","变量。","变量上，两个线程执行结束后","变量为键值，以","变量修饰符使用恰当的话，它比","变量来控制是否需要停止任务并终止该线程。","变量来统计该","变量用来保证线程之间的可见性；","变量的值修改为","变量的值应该等于","变量的写入操作必须在对该变量的读操作之前执行。","变量的读/写和","变量表示","变量规则：对","变量调用","变量，valu","变量，能够支持原子的和有条件的读","变量，随后","口令","口令只能查看到显示指定的参数，如果想要查看未被显示指定的参数的值就要使用","另外一个可以避免死锁的方法是在尝试获取锁的时候加一个超时时间，这也就意味着在尝试获取锁的过程中若超过了这个时限该线程则放弃对该锁请求。若一个线程没有在给定的时限内成功获得所有需要的锁，则会进行回退并释放所有已经获得的锁，然后等待一段随机的时间再重试。这段随机的等待时间让其它线程有机会尝试获取相同的这些锁，并且让该应用在没有获得锁的时候可以继续运行(译者注：加锁超时后可以先继续运行干点其它事情，再回头来重复之前加锁的逻辑)。","另外，如果通过增加老年代内存来降低","另外，若使用","只是将线程池的状态设置成","只有在构建","只有在等待，那么对线程","只能保证一个共享变量的原子操作","只能保证一个共享变量的原子操作。","只能保证一个共享变量的原子操作。当对一个共享变量执行操作时，我们可以使用循环cas的方式来保证原子操作，但是对多个共享变量操作时，循环cas就无法保证操作的原子性，这个时候就可以用锁，或者有一个取巧的办法，就是把多个共享变量合并成一个共享变量来操作。比如有两个共享变量i＝2,j=a，合并一下ij=2a，然后用cas来操作ij。从java1.5开始jdk提供了atomicreference类来保证引用对象之间的原子性，你可以把多个变量放在一个对象里来进行cas操作。","只能是非公平锁。","只要被执行到就会产生内存溢出。","只要调用了这两个关闭方法的其中一个，isshutdown","只返回必要的列","可以。但是如果直接调用","可以作为互拆锁使用","可以使用","可以使锁更公平可以使线程在等待锁的时候响应中断可以让线程尝试获取锁，并在无法获取锁的时候立即返回或者等待一段时间可以在不同的范围，以不同的顺序获取和释放锁阅读更多关于锁的例子","可以保证在同一个时刻，只有一个线程可以执行某个方法或者某个代码块。","可以响应中断","可以在两个线程间进行通信。","可以完成输入数据操作，并对数据进行验证。","可以实现线程之间的通信。把这些特性整合在一起，就形成了整个","可以对方法的一部分进行同步。","可以将","可以手动释放锁（synchron","可以把数组类型转换为list类型。","可以指定用一个集合来初始化，将此集合中的元素在构造方法期间就先添加到队列中。","可以用","可以用于实现资源池，如数据库连接池。","可以用于将任何一种容器变成有界阻塞容器。","可以用于方便的创建线程池。","可以用博客园的此编辑器，添加图片后发布出来，然后再编辑的时候，就可以看到图片的链接，直接复制到本地编辑器就可以","可以直接从","可以直接对年轻代和永久代一起回收。","可以直接调用","可以看到","可以看到这个方法大概的作用就是：高","可以确认是安全的；如果不成立的话虚拟机会查看","可以被重用。","可以视为","可以认为是随机的，因此","可以设置","可以设置超时时间，避免一致等待","可以选择以下几个阻塞队列。","可以选择公平锁或非公平锁两种模式","可以通过","可序列化类实现","可指定或者是2的倍数","可能不会被当前线程执行，可能造成死锁。","可能会造成线程的阻塞。","可能做一些事情","可能出现","可能的几个取值。","可能还有一个","可见性的意思是当一个线程修改一个共享变量时，另外一个线程能读到这个修改的值。","可达性分析算法","可运行（runnable）","可重入锁","可重入锁又名递归锁，是指在同一个线程在外层方法获取锁的时候，在进入内层方法会自动获取锁。","可非常有可能存在内存泄漏。","可靠是指","可靠的","可预测的停顿：能让使用者明确指定在一个长度为","同hashmap一样，segment包含一个hashentry数组，数组中的每一个hashentry既是一个键值对，也是一个链表的头节点。","同时具有","同时执行同一个","同时，volatil","同时，我们也可以发现，当数组长度为15的时候，hashcode的值会与14（1110）进行“与”，那么最后一位永远是0，而0001，0011，0101，1001，1011，0111，1101这几个位置永远都不能存放元素了，显然不符合hash算法均匀分布的原则，空间浪费相当大，更糟的是这种情况中，数组可以使用的位置比数组长度小了很多，这意味着进一步增加了碰撞的几率，减慢了查询的效率！","同时，配合以","同步","同步代码块","同步和异步","同步块。一个同步块可以保证在同一时刻仅有一个线程可以进入代码的临界区。同步块还可以保证代码块中所有被访问的变量将会从主存中读入，当线程退出同步代码块时，所有被更新的变量都会被刷新回主存中去，不管这个变量是否被声明为","同步块是更好的选择。","同步块构造器用括号将对象括起来。在上例中，使用了","同步块，其他线程仍然不能访问共享数据。","同步实例方法","同步容器","同步容器中的所有自带方法都是线程安全的。但是，对这些集合类的复合操作无法保证其线程安全性。需要客户端通过主动加锁来保证。","同步容器之所以说是线程安全的，是因为它们的方法被","同步容器和并发容器","同步容器是指","同步容器的同步原理就是在方法上用","同步容器的缺陷","同步容器真的一定安全吗？","同步就像是打电话，不挂电话，通话不会结束。","同步方法和同步块，哪个更好？","同步机制完全依赖于此","同步状态","同步队列","同步队列来完成同步状态的管理，当有线程获取锁失败后，就被添加到队列末尾。","同步静态方法","名和传入","名称索引","后的结果进行","后的默认年轻代收集器。","后空间仍然不足，则抛出","后继节点","后进入年老代","后面的元素都复制到","后，可以使用","后，就会把到达的任务放到缓存队列当中。","后，得到数组下标，把数据放在对应下标元素的链表上。","后，来一次带压缩的（默认为","后，默认序列化机制就会忽略该字段。","后；","向","向线程池提交任务","向这个segment对象中put值，这个put操作也基本是一样的步骤（通过&运算获取hashentry的索引，然后set）。","向队列取中插入一个元素，队列当前有：\"","吞吐量","吞吐量优先","吞吐量低","吞吐量关注在特定的时间周期内一个应用的工作量的最大值。对关注吞吐量的应用来说长暂停时间是可以接受的。由于高吞吐量的应用关注的基准在更长周期时间上，所以快速响应时间不在考虑之内。","否则不会压缩。","含义：建立一个和主数据库完全一样的数据库环境","启动","启动和终止线程","启动时传递给","启动时得","启动时显示指定的","启动类加载器（bootstrap","启动线程","命令","命令实际上会首先调用","命令格式：","命令篇","命令，找到","和","和hashmap类似，但它是线程安全的，这意味着同一时刻多个线程可以同时写入hashtable并且不会导致数据不一致。它是遗留类，不应该去使用它。","和hashmap类似，但它是线程安全的，这意味着同一时刻多个线程可以同时写入hashtable并且不会导致数据不一致。它是遗留类，不应该去使用它。现在可以使用concurrenthashmap来支持线程安全，并且concurrenthashmap的效率会更高，因为concurrenthashmap引入了分段锁。","和低","和使用过的那一块","和内存值","和内存的","和硬件内存架构之间的桥接","和第","和高","哈希表为解决","哈希表的\"key","响应中断的特性是如何实现的？答案就在","响应速度优先","唤醒一个正在","唤醒所有正在","唯一的构造方法：","四次挥手","四次挥手负责断开","回写寄存器值(2)到内存.","回写寄存器值(3)到内存.","回收。实际代码中，threadlocalmap","回收前后年轻代的内存变化；paroldgen","回收前后永久区的内存变化。young","回收前后老年代的内存变化；pspermgen","回收器选择","回收年老代详细步骤","回收年轻代详细步骤","回收日志:","回收时。在","回收时，系统可以检测到该","回收机制","回收的弱键。实现步骤是：","回收的键值对。","回收的键值对；同步它们，就是删除","回收该弱键时，这个弱键也同时会被添加到","回调方法完成时，线程池处于","因为","因为jdk1.7是用单链表进行的纵向延伸，当采用头插法就是能够提高插入的效率，但是也会容易出现逆序且环形链表死循环问题。但是在jdk1.8之后是因为加入了红黑树，使用尾插法能够避免出现逆序且链表死循环的问题。","因为它不会锁住整个对象（当然你也可以让它锁住整个对象）。同步方法会锁住整个对象，哪怕这个类中有多个不相关联的同步块，这通常会导致他们停止执行并需要等待获得这个对象上的锁。","因为方法区主要存放永久代对象，而永久代对象的回收率比年轻代差很多，因此在方法区上进行回收性价比不高。","因为无法把数据行存放在两个不同的地方，所以一个表只能有一个聚簇索引","因为自定义的类的hashcode()方法继承于object类，其hashcode码为默认的内存地址，这样即便有相同含义的两个对象，比较也是不相等的。hashmap中的比较key是这样的，先求出key的hashcode(),比较其值是否相等，若相等再比较equals(),若相等则认为他们是相等的。若equals()不相等则认为他们不相等。如果只重写hashcode()不重写equals()方法，当比较equals()时只是看他们是否为同一对象（即进行内存地址的比较）,所以必定要两个方法一起重写。hashmap用来判断key是否相等的方法，其实是调用了hashset判断加入元素","因此为了保证线程安全，必须在方法调用端做额外的同步措施，如下面所示：","因此元素在重新计算","因此在","因此，concurrenthashmap中元素的个数则通过如下方式获得：元素总数","因此，你需要把老年代的大小设置成一个“合适”的值。","因此，我们在扩充","因此，设计者想了一个顾全大局的方法(综合考虑了速度、作用、质量)，就是把高","因被","图形化编辑管理工具","图片中的颜色表明了哪个区域被关联上什么角色。活跃对象从一个区域疏散（复制、移动）到另一个区域。区域被设计为并行的方式收集，可以暂停或者不暂停所有的其它用户线程。","图片使用","在","在java中java.util.concurrent.atomic包下面的原子变量类就是使用了乐观锁的一种实现方式cas实现的","在java语言中，","在java语言中，基本数据类型在床底参数是都是按值传递，而包装类型在传递参数时是按引用传递。","在jdk1.7之前，concurrenthashmap是通过分段锁机制来实现的，所以其最大并发度受segment的个数限制。因此，在jdk1.8中，concurrenthashmap的实现原理摒弃了这种设计，而是选择了与hashmap类似的数组+链表+红黑树的方式实现，而加锁则采用cas和synchronized实现。","在jdk1.8的时候直接用了jdk1.7的时候计算的规律，也就是扩容前的原始位置+扩容的大小值=jdk1.8的计算方式，而不再是jdk1.7的那种与计算的方法。但是这种方式就相当于只需要判断hash值的新增参与运算的位是0还是1就直接迅速计算出了扩容后的储存方式。","在下面的章节中，你将会看到上述每一步所做的具体工作。","在主程序运行期间不会对年老区进行清理，默认是","在之前阶段没有被标记的对象会被就地释放。不进行压缩操作。","在事务完成以后，该事务所对数据库做的更改会持久保存在数据库中，并不会被回滚","在事务开始之前，和在事务执行完成后，数据库的完整性约束没有被破坏","在任意位置添加删除元素更快；","在使用","在共享内存模型中，必须显示指定某个方法或某段代码在线程间互斥地执行。","在内存中生成一个代表这个类的","在内部定义了一个","在写操作的同时允许读操作，大大提高了读操作的性能，因此很适合读多写少的应用场景。","在准备阶段，类变量已经赋过一次系统要求的初始值，而在初始化阶段，根据程序员通过程序制定的主观计划去初始化类变量和其它资源。","在初始化的时候我们说过segmentshift的值等于32","在前面我们多次提到了任务缓存队列，即","在单个进程中运行，jvm","在单线程应用程序中，如果你想编写程序手动处理上面所提到的读取和处理的顺序，你必须记录每个文件读取和处理的状态。相反，你可以启动两个线程，每个线程处理一个文件的读取和操作。线程会在等待磁盘读取文件的过程中被阻塞。在等待的时候，其他的线程能够使用","在单线程里实现多任务的调度，并在单线程里维持多个任务间的切换。","在发生","在同一程序中运行多个线程本身不会导致问题，问题在于多个线程访问了相同的资源。如：同一内存区（变量，数组，或对象）、系统（数据库，web","在后台运算而不需要太多交互的任务","在多线程下put操作时,产生哈希碰撞，最后的写入操作会覆盖先前的写入操作","在多线程中，什么是上下文切换(context","在大量使用反射、动态代理、cglib","在实际中如果需要线程池创建之后立即创建线程，可以通过以下两个方法办到：","在实际使用线程池的场景中，我们往往不是直接使用","在容器中设置相关参数打印","在寄存器上执行操作的速度远大于在主存上执行的速度。这是因为","在对","在并发编程中，将代码执行速度加快的原则是将代码中串行执行的部分变成并发执行，但是如果将某段串行的代码并发执行，因为受限于资源，仍然在串行执行，这时候程序不仅不会加快执行，反而会更慢，因为增加了上下文切换和资源调度的时间。","在并发迭代访问时会抛出","在并行迭代算法中非常有用。","在当前线程中保存的变量副本。","在当前线程里面，如果要使用副本变量，就可以通过","在打印的堆栈日志文件中，tid","在执行","在扩容后插入的过程中，存储在linkedlist中的元素的次序会反过来，因为移动到新的bucket位置的时候，hashmap并不会将元素放在linkedlist的尾部，而是放在头部，这是为了避免尾部遍历(tail","在操作","在整个过程中耗时最长的并发标记和并发清除过程中，收集器线程都可以与用户线程一起工作，不需要进行停顿。","在方法调用中，实参会把它的值传递给形参，形参只是用实参的值初始化一个临时的存储单元，因此形参与实参虽然有着相同的值，但是却有着不同的存储单元，因此对形参的改变不会影响实参的值。","在无锁的情况下实现原子操作，但要明确应用场合，非常简单的操作且又不想引入锁可以考虑使用","在某一时刻运行一个线程是没有问题的。这意味着，如果你的","在树中","在根目录(即与summary.md同级的目录)下的配置文件","在检查","在每个线程","在注重吞吐量以及","在消息传递模型中，由于发送消息必须在接收消息之前，因此同步是隐式进行的。","在现实应用中，有些时候不能使用默认序列化机制。比如，希望在序列化过程中忽略掉敏感数据，或者简化序列化过程。下面将介绍若干影响序列化的方法。","在理解了","在线程操作中，可以使用","在网络上传送对象的字节序列。","在被","在计算机内存(ram)中的工作方式。jmm","在设置完","在设计","在资源限制情况下进行并发编程，根据不同的资源限制调整程序的并发度。","在超时时间内，当前线程成功获取了锁；","在这方面就是一个数组的view,","在这里简单解释一下，理想情况下，在随机哈希代码下，桶中的节点频率遵循泊松分布，文中给出了桶长度k的频率表。由频率表可以看出，桶的长度超过8的概率非常非常小。所以作者应该是根据概率统计而选择了8作为阀值，由此可见，这个选择是非常严谨和科学的。","在这里采用了","在进行序列化或者迭代等操作时，需要比较操作前后","在链表中","地址；","场景：","场景：cyclicbarri","场景：在","块中或者在调用","块中进行，以保证锁一定被被释放，防止死锁的发生。","块中进行，并且将释放锁的操作放在","块）中的语句合并产生的，编译器收集的顺序由语句在源文件中出现的顺序决定。特别注意的是，静态语句块只能访问到定义在它之前的类变量，定义在它之后的类变量只能赋值，不能访问。例如以下代码：","垃圾回收器","垃圾回收器组合","垃圾回收时间以及回收所获得的空间（这两个值是通过过去回收的经验获得），并维护一个优先列表，每次根据允许的收集时间，优先回收价值最大的","垃圾收集","垃圾收集器","垃圾收集器入门","垃圾收集器既可以回收年轻代内存，也可以回收老年代内存。而其他垃圾收集器只能针对特定代的内存进行回收。","垃圾收集器流畅运行所需要的内存数量。","垃圾收集器的性能指标主要有两点：","垃圾收集性能","垃圾收集时间)","垃圾收集算法","域也为","域设置为","基于b树和叶子节点顺序访问指针进行实现","基于动态数组实现，linkedlist","基于双向链表实现。由于是双向链表，那么它的顺序访问会非常高效，而随机访问效率比较低。","基于双向链表实现；","基于双链表实现，不存在容量限制；","基于哈希表的","基于字节流的","基于数组实现，存在容量限制，当元素数超过最大容量时，会自动扩容；linkedlist","基于红黑树实现。","基于红黑树实现，支持有序性操作，例如根据一个范围查找元素的操作。但是查找效率不如hashset，hashset查找的时间复杂度为o(1)，treeset则为o(logn)。","基于进入和退出","基本数据类型和引用类型","基本类型与运算","基本类型：使用时需要赋具体值，判断时使用==号。","基本类型：变量名指向具体的数值。","基本类型：变量在声明之后，java就会立即分配给他内存空间","基本节点，存储key，","堆","堆\"），现代的垃圾收集器基本都是采用分代收集算法，该算法的思想是针对不同的对象采取不同的垃圾回收算法，因此虚拟机把","堆一样不需要连续的内存，并且可以动态扩展，动态扩展失败一样会抛出","堆上包含在","堆不需要连续内存，并且可以动态增加其内存，增加失败会抛出","堆中(元空间","堆中。（实例化不是类加载的一个过程，类加载发生在所有实例化操作之前，并且类加载只进行一次，实例化可以进行多次）","堆中不存在该类的任何实例。","堆中来回复制数据。","堆内存大小","堆内存大小，第一个参数设置初始值，第二个参数设置最大值。","堆内存最大限制","堆分为年轻代和老年代。","堆分成以下三块：","堆到文件，format","堆区","堆区包含了","堆和","堆和方法区进行。","堆和永久代的详细信息，如当前使用率、当前使用的是哪种收集器等。","堆大小设置","堆快照（heap","堆空间分配**","堆空间初始值。","堆空间是一个被分成许多固定大小区域的内存块。","堆空间是一块单独的内存空间被分割成多个区域。","堆空间最大值。","堆空间溢出","堆空间被分割成大约","堆被分为年轻代、老年代和永久代，其它收集器进行收集的范围都是整个年轻代或者老生代，而","堆详细信息","堆里的","增加冗余，提高可用性","声明randomaccessfile类的对象","声明为静态（static）的","声明或者同步的情况下共享一个对象，一个线程更新这个共享对象可能对其它线程来说是不接见的。","处理vscode中md文件的乱码问题，可以手动生成md文件。不用系统自动生成，这样可以避免乱码","处理中断异常","处理器实现原子操作：使用总线锁保证原子性，使用缓存锁保证原子性（修改内存地址，缓存一致性机制：阻止同时修改由2个以上的处理器缓存的内存区域数据）","处理无法执行任务异常","复制","复制_book文件下的所有文件，切换到","复制代码","复制算法","外键","多","多个用户访问数据库时，数据库为每一个用户开启一个事务，事务之间互不干扰。","多个线程互相等待对方释放锁。","多态","多态。","多态的实现机制是什么","多线程和并发基础面试问答","多线程夺命连环问","多线程的优点","多线程的风险","多线程竞争锁时，会引起上下文切换，所以多线程处理数据时，可以用一些办法来避免使用锁，如将数据的","多线程面试题集","大","大多数情况下，对象在年轻代","大对象是指需要连续内存空间的对象，最典型的大对象是那种很长的字符串以及数组。","大小。","大小的内存并且出现了outofmemoryerror，那你就应该执行堆快照（heap","失败，继续自旋","头指针的后继节点","头里有一个字段叫","好处：","如","如上图所示，三次握手流程如下：","如上图所示，四次挥手流程如下：","如下所示：","如何保证线程安全","如何减少上下文切换？","如何分析","如何创建守护线程","如何合理的规划一次","如何确保线程安全？","如何获取父类的类名","如何解决资源限制的问题","如何解决资源限制问题：可以使用集群并行执行程序，既然单机的资源有限，那么可以让程序在多机上运行，比如使用","如何让正在运行的线程暂停一段时间？","如何这两个步骤的原子性呢？","如何避免死锁？","如图所示：两个线程想要通过一个","如文本字符串、声明为","如果","如果tab[i]不为空并且hash值为moved，说明该链表正在进行transfer操作，返回扩容完成后的table。","如果table不为空，且key对应的node节点也不为空，但node头结点的hash值为moved(","如果table不为空，但没有找到key对应的node节点，则直接调用castabat()方法插入一个新节点，此时不用加锁；","如果table为空，初始化；否则，根据hash值计算得到数组索引i，如果tab[i]为空，直接新建节点node即可。注：tab[i]实质为链表或者红黑树的首节点。","如果table表为空，则首先进行初始化操作，初始化之后再次进入循环获取node节点的位置；","如果x.equals(y)返回true，即两个对象根据equals方法比较是相等的，那么调用者两个对象中任意一个对象的hashcode()方法都必须产生同样的整数结果。如果x.equals(y)返回false，即两个对象根据equals()方法比较是不相等的，那么x和y的hashcode()方法的返回值有可能相等，也有可能不相等。","如果一个字段被声明成","如果一个类没有自己定义equlas()方法，它默认的equal()方法(从object类继承的)就是使用\"==\"运算符，也是在比较两个变量指向的对象是否是同一对象，此时使用equlas()方法和使用“==”运算符会得到相同的结果。若比较的是两个独立的对象，则总返回false。如果编写的类希望能够比较该类创建的两个实例对象的内容是否相同，那么必须覆盖equlas()方法。由开发人员自己编写代码来决定在什么情况下即可认为连个对象的内容是相同的。","如果一个请求需要占用大量的时间来处理，在这段时间内新的客户端就无法发送请求给服务端。只有服务器在监听的时候，请求才能被接收。另一种设计是，监听线程把请求传递给工作者线程(worker","如果不使用这个命令，还可以使用","如果不关闭流，则缓冲区的内容是无法输出的","如果不指定","如果不是","如果不计算维护","如果不重写equals，那么比较的将是对象的引用是否指向同一块内存地址，重写之后目的是为了比较两个对象的value值是否相等。","如果两个或者更多的线程共享一个对象，多个线程在这个共享对象上更新变量，就有可能发生","如果两个或者更多的线程在没有正确的使用","如果仅仅只是让某个类实现","如果任务排队失败，那么我们尝试添加一个新的线程。如果失败了，说明线程池已经关闭了，或者已经饱和了，所以拒绝这个任务。","如果任务排队成功，仍然需要仔细检查是否应该添加一个线程（因为现有的线程自上次检查以来已经死亡）或者自从进入方法后，线程池就关闭了。所以我们重新检查状态，如果有必要的话，在线程池停止状态时回滚队列，如果没有线程的话，就开始一个新的线程。","如果你决定要进行","如果写操作的时候队列是满的，那么等待","如果发现空区域(“x”标示的)，在重新标记阶段它们会被马上清除掉。当然，决定活性的审计信息也在此时被计算。","如果发送者没有收到正确的响应，它将重新发送数据包。如果多次超时，连接就会断开。","如果可序列化类没有显式声明","如果在链表中找到值为key的节点e，直接设置e.v","如果失败或状态由于等待线程而改变也是正常的。","如果头指针变化，break","如果少于","如果尝试的次数超过","如果开启","如果当前table的长度大于64，则使用cas获取指定的node节点，然后对该节点通过synchronized加锁，由于只对一个node节点加锁，因此该操作并不影响其他node节点的操作，因此极大的提高了concurrenthashmap的并发效率。","如果当前书籍写完了，想要发布到自己的网站的话，也可以使用命令输出成html文件使用","如果当前节点是队列中第一个节点，并且成功获取同步状态，即可以获得独占式锁","如果当前节点有左右孩子节点，使用后继节点替换要删除的节点","如果想在不关闭流时，将缓冲区内容输出，可以使用","如果成功打印出版本号，说明你本地具备了","如果成功获取同步状态，则结束方法，直接返回；","如果是写操作，它会导致其他","如果是在多线程下操作大量数据，应优先使用stringbuffer。（线程安全）在一个字符串需要经常被修改时使用。","如果有冲突，则通过","如果有比较器，使用比较器进行比较","如果根节点为","如果检测出死锁，有两种处理手段：","如果没有找到值为key的节点，直接新建node并加入链表即可。","如果没碰撞直接放到","如果状态为负值（即可能需要信号），请尝试清除信号。","如果现在是使用","如果现在运行的","如果碰撞了，以链表的形式存在","如果碰撞导致链表过长(大于等于","如果类变量是常量，那么会按照表达式来进行初始化，而不是赋值为","如果线程请求的栈深度大于虚拟机所允许的最大深度，将抛出","如果能确保所有的线程都是按照相同的顺序获得锁，那么死锁就不会发生。","如果节点已经存在就替换","如果节点数>＝8，那么转换链表结构为红黑树结构。","如果虚拟机在扩展栈时无法申请到足够的内存空间，则抛出","如果要操作的数据量比较小，应优先使用string类","如果要解决这个问题，可以使用","如果许多映射要存储在","如果读操作的时候队列是空的，那么等待","如果调用了","如果调用到本地方法的话，可以显示","如果超过了负载因子(默认","如果还是产生了频繁的碰撞，会发生什么问题呢？作者注释说，他们使用树来处理频繁的碰撞(we","如果这些增加操作被顺序的执行，变量","如果通过减小老年代内存来减少","如果采用","如果长时间不成功，会给","如果长时间没有往线程池中提交任务，即如果工作线程空闲了指定的时间（默认为","如果队列为空，这个时候读操作的线程进入到读线程队列排队，等待写线程写入新的元素，然后唤醒读线程队列的第一个等待线程。","如果队列已满，这个时候写操作的线程进入到写线程队列排队，等待读线程将队列元素移除，然后唤醒写线程队列的第一个等待线程。","如果首节点为treebin类型，说明为红黑树结构，执行puttreeval操作。","姓名：\"","子类不仅可以有父类的属性和方法，还可以有自己的属性和方法","子类的实例，即创建了线程对象。","字段。然后再调用","字段写入到","字段在","字段声明为","字段必须是","字段数据类型（基本类型、对象、数组）","字段没有被序列化。","字段用于","字段的名称和描述符","字段表用于描述接口或者类中声明的变量。字段包括类级变量以及实例级变量，但不包括在方法内部声明的局部变量。包含的信息如下：","字段表集合","字段访问标志","字段进行序列化，但要忽略掉","字段，你可以在","字段，如下代码所示：","字段，直接采用","字符串与数组","字符串创建与存储的机制是什么","字符串长度为8","字符流","字符流主要操作字符类型数据，一个字符占两个字节。主要类是","字符流和字节流","字符流和字节流的区别","字符流操作时使用了缓冲区，并在关闭字符流时会强制将缓冲区内容输出","字节为第","字节流","字节流主要操作字节类型数据（byte）。主要类是","字节流主要操作字节类型数据（byte）；字符流主要操作字符类型数据，一个字符占两个字节。","字节流在操作时本身不会用到缓冲区（内存），而是对文件本身直接操作的；字符流在操作时使用了缓冲区，通过缓冲区再操作文件。","字节码验证","字面意为可重入锁。","字面意思为写入时复制。copyonwritearraylist","字面量","存储和获取对象。存储对象时，我们将","存储着","存储着对象的集合，而","存储着键值对（两个对象）的映射表。","存储结构","存储，而","存在aba问题，其解决思路是使用版本号；2.","存放在","存放在堆上的对象可以被所有持有对这个对象引用的线程访问。当一个线程可以访问一个对象时，它也可以访问这个对象的成员变量。如果两个线程同时调用同一个对象上的同一个方法，它们将会都访问这个对象的成员变量，但是每一个线程都拥有这个本地变量的私有拷贝。","学习并发编程，免不了大量接触一些术语。其中，有些术语经常容易被混淆或分不清它们的差异，这里汇总一下。","它会强制将对缓存的修改操作立即写入主存；","它保存了添加到","它是","它是轮询任务的空闲等待代码，上面的","它有pre，len","它的优势有：","它的实现与arraylist类似，但是使用了synchronized进行同步","它确保指令重排序时不会把其后面的指令排到内存屏障之前的位置，也不会把前面的指令排到内存屏障的后面；即在执行到内存屏障这句指令时，在它前面的操作已经全部完成；","它适用于由大小已知的记录组成的文件，所以我们可以使用","守护线程","守护线程的优先级比较低，用于为系统中的其它对象和线程提供服务。典型的应用就是垃圾回收器。","守护线程（daemon","安全地终止线程有两种方法：","安全性问题","安全示例","安全问题","安装node","安装环境","官方推荐年轻代占整个堆的","官方的序列化一定需要实现","官方的序列化主要体现在以下方面：","官方的序列化存在许多问题，因此，很多人更愿意使用优秀的第三方序列化工具来替代","官方的序列化性能不高，序列化后的数据相对于一些优秀的序列化的工具，还是要大不少，这大大影响存储和传输的效率。","官方的序列化需要关注","官方的序列无法跨语言使用。","官网进行","定义","定义一个字符串，全部由大写字母组成","定义了","定义保存路径","定义压缩文件名称","定义如下：","定义要压缩的文件","定义要压缩的文件夹","定义，该值为","定义：","定位hashentri","定位hashentry：(((tab.length","定位segment：(((h","定位步骤：","定时等待（time","实体来实现","实例。","实例中，使用足够大的容量创建映射将允许映射存储的效率高于根据需要执行自动重新散列以增长表。请注意，使用多个具有相同","实例化","实例化runnable子类对象","实例化thread对象","实例化对象","实例化时，默认为覆盖原文件内容方式；如果添加true参数，则变为对原文件追加内容的方式。","实例化线程对象","实例化输出流","实例化，意味着所有的数据都会输出到文件中","实例变量不会在这阶段分配内存，它将会在对象实例化时随着对象一起分配在","实例可以被","实例方法同步是同步在拥有该方法的对象上。这样，每个实例其方法同步都同步在不同的对象上，即该方法所属的实例。只有一个线程能够在实例方法同步块中运行。如果有多个实例存在，那么一个线程一次可以在一个实例同步块中执行操作。一个实例一个线程。","实例最后的解析结果为","实例），treeset","实例，这个构造方法中，初始化了","实战","实战：找出某","实现","实现cas最重要的一点，就是比较和交换操作的一致性，否则就会产生歧义。","实现。","实现上类似，最主要的差别是","实现了","实现了双亲委派模型的逻辑，因此自定义类加载器一般不去重写它，而是通过重写","实现原理","实现同步的基础是：java","实现并发同步的原理就是，读操作和写操作都需要获取到","实现的。","实现的。hashset","实现的。treeset","实现的一个","实现类的加载动作。在","实现类的实例，使用","实现类的实例，并以此实例作为","实现类的实例，并依此实例作为","实现超时等待的效果","实现，longterm","实现，对待这些方法需要特别处理。","实现：版本号和cas算法","实行流量控制和拥塞控制。这些确保措施会导致延迟，而且通常导致传输效率比","实际上就是一个单向链表。","实际上就是一个数组，和","实际上是一个单向链表，即","实际上，weakhashmap","实际上，这些区域被映射成","客户端向服务端发送","客户端向服务端发送一个","客户端向服务端发送带有","客户端向服务端发送带有带有","容器","容器主要包括","容器概述","容器里有多把锁，每一把锁用于锁容器其中一部分数据，那么当多线程访问容器里不同数据段的数据时，线程间就不会存在锁竞争，从而可以有效的提高并发访问效率","容量是哈希表中桶的数量，初始容量就是哈希表创建时的容量。","对","对上述","对于","对于synchronized而言，也是一种非公平锁。由于其并不像reentrantlock是通过","对于一个key，先进行一次hash操作，得到hash值h1，也即h1","对于一个对象的成员变量，不管它是原始类型还是包装类型，都会被存储到堆区。","对于一个对象的成员方法，这些方法中包含本地变量，仍需要存储在栈区，即使它们所属的对象在堆区。","对于不同类中的静态同步方法，一个线程可以执行每个类中的静态同步方法而无需等待。不管类中的那个静态同步方法被调用，一个类只能由一个线程同时执行。","对于同步代码块，锁就是","对于同步方法块，锁是","对于数据库锁，加锁和解锁必须在一个数据库连接中里，否则会出现解锁失败的情况。","对于普通同步方法，锁就是实例对象","对于普通同步方法，锁是当前实例对象。","对于特定的资源，readwritelock","对于硬件资源限制，可以考虑使用集群并行执行程序。","对于软件资源限制，可以考虑使用资源池将资源复用。","对于静态同步方法，锁就是当前类的","对于静态同步方法，锁是当前类的","对元素进行排序，使用红黑树","对变量的写操作不依赖于当前值","对字节码描述的信息进行语义分析，以保证其描述的信息符合","对应的","对应的对象即使不再使用，但由于被","对插入操作、移除操作、获取元素操作提供了四种不同的方法用于不同的场景中使用：","对象","对象。","对象与","对象中任何一个字段都没有被序列化。另一方面，如果细心的话，还可以发现这此次序列化过程调用了","对象为我们解决了这个问题。在线程池提交","对象作为","对象作为这块内存的引用进行操作。这样能在一些场景中显著提高性能，因为避免了在","对象同时创建一个操作系统线程，而这个系统线程的内存用的不是","对象封装了该","对象序列化，在保存对象时，会把其状态保存为一组字节，在未来，再将这些字节组装成对象。必须注意地是，对象序列化保存的是对象的”状态”，即它的成员变量。由此可知，对象序列化不会关注类中的静态变量。","对象才是真正的线程对象。","对象数组。","对象数组，用于存放元素","对象时就指定大概的容量大小，减少扩容操作的次数。","对象时，如果要写入的文件不存在，系统将自行创建。","对象来实现方法同步和代码块同步","对象死了吗","对象没有在任何地方被引用，也就无法在任何地方通过反射访问该类方法。","对象的","对象的内存分配，也就是在堆上分配。主要分配在年轻代的","对象的引用对象所在的","对象的方法","对象绑定到流对象上","对象绑定到流对象上。","对象设置为","对象访问共享公共资源的情况，但是当他们看到另一个","对象输入流","对象输出流","对象，作为方法区这个类的各种数据的访问入口。","对象，使用它我们可以知道","对象，该","对这块区域进行垃圾回收的主要目标是对常量池的回收和对类的卸载，但是一般比较难实现。","导出","导致饥饿问题的原因","封装","将","将一个单线程应用程序变成多线程应用程序的另一个常见的目的是实现一个响应更快的应用程序。设想一个服务器应用，它在某一个端口监听进来的请求。当一个请求到来时，它去处理这个请求，然后再返回去监听。","将下标为","将使用自旋锁。","将内存划分为大小相等的两块，每次只使用其中一块，当这一块内存用完了就将还存活的对象复制到另一块上面，然后再把使用过的内存空间进行一次清理。","将占用一个序号。","将原先","将在操作","将姓名写入文件之中","将字符变为小写","将它们编译为相应的机器指令；在不支持","将寄存器中的值写回内存","将寄存器中的值增加","将寄存器的值加","将对象的属性进行私有化，只提供公共的get和set方法","将屏障重置为初始状态","将年龄写入文件之中","将当前线程构建成","将当前节点插入队列尾部","将当前节点通过","将得到hash值向右按位移动segmentshift位，然后再与segmentmask做&运算得到segment的索引j。","将得到的h1的高几位进行第二次hash，得到hash值h2，也即h2","将得到的h1进行第三次hash，得到hash值h3，也即h3","将整个hashmap分成几个小的map，每个segment都是一个锁；与hashtable相比，这么设计的目的是对于put,","将节点插入到同步队列中","将节点状态由","将虚拟机每次垃圾回收的信息写到日志文件中，文件名由","将记录从一处转移到另一处，然后读取或者修改记录。","将读写锁分离，从而使读写操作分开，有效提高并发性。","将输出流和输入流进行连接，否则在使用时会抛出ioexcept","将这个字节流所代表的静态存储结构转化为方法区的运行时存储结构。","将进入老年代的对象数量降到最低","将需要回收的对象进行标记，然后清理掉被标记的对象。","小拓展","小时后再进行结果分析。如果你足够幸运，你可能会找到系统的最佳","小结","尝试使用定时锁","尝试次数使用","尝试获取共享锁失败，调用","就会发生这样的变化：","就会变成","就会变成1a","就会将最近最久未使用的数据移除。","就会报这部分内存溢出了，需要加大内存分配，一般","就使用了","就可以很好的隔离二者所关注的事情。","就可以把它划分短一些再传送。如果应用程序一次只发送一个字节，tcp","就好了，是","就对应了前面的","就已经有了具体的实现，在","就很简单了。大致思路如下：","就无法保证操作的原子性，这个时候就可以用锁，或者有一个取巧的办法，就是把多个共享变量合并成一个共享变量来操作。比如有两个共享变量","就是","就是加载因子。","就是用来存储实际的变量副本的，key","就是用来存储实际的变量副本的，键值为当前","就用这些代替了锁定。","就相当于对length取模，而且在速度、效率上比直接取模要快得多","就餐时，1、3、5","就默认为当前主机或服务器。","尽量少用锁","尾指针为","属于","属性和方法","属性表集合","属性计数器","属性集合","岁，增加到一定年龄则移动到老年代中。","工作线程的创建数量几乎没有限制（其实也有限制的,数目为","工具可以用来获得","工具还可以附属到正在运行的","左边的版本是推荐安装的稳定版本，也就是目前已经被正式列入标准的版本，而右边的版本是当前最新的版本，该版本包含了一些新的特性，还未被完全列入标准，可能以后会有所变动。这里建议大家安装最新的","已分配内存","已分配内存中的剩余空间","已发送但尚未得到确认的字节。发送方在确认之前，不认为这些数据已经被处理。上图中的","已发送但尚未确认","已发送已确认","已经被回收。","已经被增在了两个，每个","已经调用了","带来非常大的执行开销。如果","常用","常用方法","常见复合操作如下：","常见子类：","常见的同步容器有","常量在编译阶段会存入调用类的常量池中，本质上并没有直接引用到定义常量的类，因此不会触发定义常量的类的初始化。","常量池","常量池主要存放两类常量：","常量池之后，紧接着的两个字节代表访问标志，这个标志用于识别一些类或者接口的访问信息，包括：这个","平台无关性。java为解释型语言，程序源代码经过java编译器编译成字节码，然后由jvm解释执行。","平衡树查找复杂度等于树高，红黑树的树高太高而引起i/o操作频繁，导致效率低下","年老代大小","年轻代","年轻代/老年代","年轻代使用：复制算法","年轻代内存是由一组非连续的区域组成。这使得需要重调大小变得容易。","年轻代分割成一个","年轻代回收的尾声**","年轻代垃圾回收是","年轻代垃圾收集使用多线程并行回收。","年轻代垃圾收集如何工作","年轻代垃圾收集肩负着活跃对象初始标记的任务。在日志文件中被标为*gc","年轻代大小","年轻代的设置很关键。","年轻代被标为浅绿色，年老代被标记为蓝色。如果你的应用已经运行了一段时间，cm","并不是原对象本身","并不是将这段代码视为单条指令来执行的，而是按照下面的顺序：","并不能完全避免内存泄露对象，最安全的办法仍然是调用","并且","并且覆盖这个方法的实现，这在实现","并发","并发一定比串行更快吗？","并发之","并发包下的","并发可见性（volatile）","并发和并行","并发容器","并发容器支持并发的遍历和并发的更新。","并发工具类","并发执行一定比串行执行快吗？","并发指的是用户线程和","并发收集","并发术语","并发机制的底层实现","并发机制的底层实现原理","并发标记","并发标记寻找活跃对象在应用连续执行时。","并发标记扫描垃圾回收器","并发标记清除收集器","并发标记清除收集器是以获取最短停顿时间为目标。","并发标记：进行","并发清除","并发清除：回收在标记阶段被鉴定为不可达的对象。不需要停顿。","并发的关键是你有处理多个任务的能力，不一定要同时。","并发简介","并发编程实战","并发编程实战：第","并发编程的挑战","并发编程的艺术","并发编程的艺术：第","并发编程领域两个关键问题：线程间通信和线程间同步","并发编程：callable、futur","并发编程：countdownlatch、cyclicbarri","并发编程：synchron","并发编程：volatil","并发编程：同步容器","并发编程：深入剖析","并发编程：线程池的使用","并发编程：线程间协作的两种方式：wait、notify、notifyal","并发队列","并发（多线程）编程的好处是什么？","并行","并行垃圾回收器","并行收集器","并行收集器与串行收集器工作模式相似，都是","并行收集器是","并行的关键是你有同时处理多个任务的能力。","序列化","序列化可以将对象的字节序列持久化——保存在内存、文件、数据库中。","序列化和反序列化","序列化和反序列化示例：","序列化工具","序列化是将对象转换为字节流。","序列化用途","序列化的高级认识","序列化（serialize）","应无条件传播。","应用","应用创建的所有对象信息，不管对象是哪个线程创建的，其中的对象包括原始类型的封装类（如","应用场景：","应用层","应用层（applic","应用的远程","应用程序的线程堆栈信息。","应用程序的线程转储。我们需要找出那些状态为","应用程序类加载器（applic","应用程序都是由以上三种类加载器相互配合进行加载的，如果有必要，还可以加入自己定义的类加载器。","应用，即由","应该注意的是aslist()","应该被增加两次，然后原值+2","延迟","建立连接前两次握手的","建立连接的时候，","建议使用","开启","开启后，年轻代使用","开启选项：","开始","开始工作，采用单线程方式回收空间并整理内存。","开始执行。","开始（new）","开辟byte数组","异常","异常、堆内存溢出、oom","异常。","异常。这是因为：在序列化操作过程中会对类型进行检查，如果不满足序列化类型要求，就会抛出异常。","异常处理","异常，关于这个异常将会在后续文章中讲述。","异常；","异或了一下。设计者还解释到因为现在大多数的","异步则是相反，调用在发出之后，这个调用就直接返回了，所以没有返回结果。换句话说，当一个异步过程调用发出后，调用者不会立刻得到结果。而是在调用发出后，被调用者通过状态、通知来通知调用者，或通过回调函数处理这个调用。","异步就像是发短信，发完短信后，就可以做其他事，短信来了，手机会提醒。","引用。","引用传递一般是对于对象型变量而言的,传递的是该对象地址的一个副本,","引用类型","引用类型：使用时可以赋null，判断时使用equals方法。","引用类型：变量名指向内存数据对象的内存地址","引用类型：它以特殊的方式（类似c指针）向对象实体（具体的值），这类变量声明时不会分配内存，只是存储了一个内存地址","引用计数算法","引申","引申：浅复制和深复制有什么区别","引起的停顿时间或内存消耗，垃圾收集器能支撑应用达到的最高性能指标。","强制清空缓冲区","强引用：使用","当","当一个对象可被回收时，如果需要执行该对象的","当一个对象被创建时，它首先进入新生代，之后有可能被转移到老年代中。新生代存放着大量的生命很短的对象，因此新生代在三个区域中垃圾回收的频率最高。为了更高效地进行垃圾回收，把新生代继续划分成以下三个空间：","当一个线程请求锁失败时，这个线程可以遍历锁的关系图看看是否有死锁发生。","当一个线程运行时，另一个线程可以直接通过","当一个线程需要调用对象的","当一个节点被访问时，如果","当上述参数从小变大时，threadpoolexecutor","当下一次我们需要操作","当且仅当","当任务到达时，任务可以不需要等到线程创建就能立即执行。","当作双端队列使用。","当使用","当创建线程池后，初始时，线程池处于","当初始化一个类的时候，如果发现其父类还没有进行过初始化，则需要先触发其父类的初始化。","当前变量在寄存器（工作内存）中的值是不确定的，需要从主存中读取；","当前对象锁的线程，并让它拿到对象锁。","当前线程在超时时间内被中断；","当前节点为","当前节点的前驱节点是头结点并且成功获得同步状态时，节点出队即该节点引用的线程获得锁，否则，当不满足条件时就会调用","当前节点能否获取独占式锁","当发起一个线程的创建时，虚拟机会在","当多个线程需要相同的一些锁，但是按照不同的顺序加锁，死锁就很容易发生。","当对一个共享变量执行操作时，我们可以使用循环","当对象和变量被存放在计算机中各种不同的内存区域中时，就可能会出现一些具体的问题。主要包括如下两个方面：","当成功释放同步状态之后即","当我们使用","当我们往hashmap中put元素的时候，先根据key的hash值得到这个元素在数组中的位置（即下标），如果下标对应的链表为空，则直接把键值对作为链表头节点，如果不为空，发生哈希冲突，则equals方法在对应位置的链表中找到需要的元素，有就把value替换，没有那么在同一个位子上的元素将以链表的形式存放，新加入的放在链头，最先加入的放在链尾。（jdk1.7之所以放在头节点，是因为hashmap的发明者认为后插入的entry被查找的可能性更大。）","当接收方收到乱序片段时，需要重复发送","当某个字段被声明为","当某个线程在某个时刻执行这句时：","当某个线程调用了","当某弱键不再被其它对象引用，并被","当正常输出请求不被响应时，强制输出线程堆栈","当然也可以发布到gitbook，然而这个网站访问有点慢","当然也可以根据应用场景需要来实现","当然你可能使用任何对象作为键，只要它遵守了equals()和hashcode()方法的定义规则，并且当对象插入到map中之后将不会再改变了。如果这个自定义对象时不可变的，那么它已经满足了作为键的条件，因为当它创建之后就已经不能改变了。","当然我们还有更加优秀的一些序列化和反序列化的工具，根据不同的使用场景可以自行选择！","当然，synchronousqueu","当父类加载器加载失败时抛出","当用","当程序程序中使用了大量的","当线程池为空时，则线程池处于","当线程池和队列都为空时，则线程池处于","当线程池的任务缓存队列已满并且线程池中的线程数目达到","当线程请求的栈深度超过最大值，会抛出","当线程间是可以共享资源时，线程间通信是协调它们的重要的手段。object","当虚拟机启动时，用户需要指定一个要执行的主类（包含","当该节点的前驱节点是头结点且成功获取同步状态","当读，写和检查共享变量时出现","当超过限制的时候会","形式）。","往arraylist中加入30w内容","往arraylist中加入40w内容","很大的时候，能够比较理想的解决这个问题，在","很大，o(n)的速度显然是影响速度的。","很少执行，而且执行速度会比","很显然，node","很相似，但是","得到","得到一个压缩实体","得到一个压缩实体的输入流","得到一个线程安全的","得到此线程的管道输入流","得到此线程的管道输出流","得到进程","循环","循环时间长开销大","循环时间长开销大。自旋cas如果长时间不成功，会给cpu带来非常大的执行开销。如果jvm能支持处理器提供的pause指令那么效率会有一定的提升，pause指令有两个作用，第一它可以延迟流水线执行指令（d","循环时间长，开销大；3.","必需要知道网络实际的数据处理带宽或是数据处理速度，这样才不会引起网络拥塞，导致丢包。","必需要解决的可靠传输以及包乱序（reordering）的问题，所以，tcp","必须具备以下","必须在","必须在同步方法或者同步块中被调用？","必须在操作","必须放在","快照","快速重传机制","快速重传机制，实现了另外的一种丢包评定标准，即如果连续收到","怎么理解呢？例如我们从","怎么用git写书","怎样计算key在数组中的位置(hash算法)？根据hashcode计算数组下标？","思想：","性能产生重要的影响。","性能定义","性能调优","性能问题","总共需要12秒","总共需要14秒","总的说来，cpu","总结","总结如下：","悲观锁:","悲观锁:就是对数据的冲突采取一种悲观的态度，也就是说假设数据肯定会冲突，所以在数据开始读取的时候就把数据锁定住。【数据锁定：数据将暂时不会得到修改】","悲观锁和乐观锁","情况下，jmap","情况，一共输出","想获取某个锁时，假若此时线程","想象一下，一个应用程序需要从本地文件系统中读取和处理文件的情景。比方说，从磁盘读取一个文件需要","想象一下，共享对象被初始化在主存中。跑在","想象一下，如果线程","想象下线程","想象这样一个例子：两个人在狭窄的走廊里相遇，二者都很礼貌，试图移到旁边让对方先通过。但是他们最终在没有取得任何进展的情况下左右摇摆，因为他们都在同一时间向相同的方向移动。","慢很多。","慢查询","慢的多。","成功，返回","我们不妨做一个小尝试：将","我们也可以使用","我们仍然通过采取阅读源码的方式来学习底层具体是怎么实现的，该方法会调用","我们可以使用","我们可以使用自定义的对象作为键吗？？","我们可以找出哪些线程已经拥有了它的对象锁。","我们可以通过调用线程池的","我们将","我们常常做这样的操作","我们当然希望这个hashmap里面的元素位置尽量的分布均匀些，尽量使得每个位置上的元素数量只有一个，那么当我们用hash算法求得这个位置的时候，马上就可以知道对应位置的元素就是我们要的，而不用再去遍历链表","我们来举个例子：","我们来基于","我们现在可以回答开始的几个问题，加深对","或","或者","或者导致","或者年老代区域。","或者自己搭个服务器集群，不同的机器处理不同的数据，可以通过“数据","或者被","所以","所以对引用对象进行操作会同时改变原对象.一般认为,java内的传递都是值传递.","所以，我觉得有必要反向理解，知道什么是线程不安全，那么就能定义线程安全的边界了。","所以，长度16或者其他2的幂，length","所具有的","所希望的比例，那么就会发生","所引用导致无法被","所有关键字都出现在叶子结点的链表中。且链表中的关键字恰好是有序的；","所有原始类型的本地变量都存放在线程栈上，因此对其它线程不可见。一个线程可能向另一个线程传递一个原始类型变量的拷贝，但是它不能共享这个原始类型变量自身。","所有对象实例都在这里分配内存。","所有的写操作都是同步的。他们在备份数组（3）的副本上工作。写操作完成后，后备阵列将被替换为复制的阵列，并释放锁定。支持数组变得易变，所以替换数组的调用是原子（5）。","所有的数据就全部都在bytearrayoutputstream中","所用的时间（单位秒）。","所谓同步，就是在发出一个调用时，在没有得到结果之前，该调用就不返回。但是一旦调用返回，就得到返回值了。","所需时间越多","手工设置线程名称","才继续执行","才能晋升老年代，如果在","打印","打印的堆栈日志中查定位：","打印线程堆栈信息","打开此开关后，使用","执行","执行写时复制操作，需要使用可重入锁加锁","执行方法的默认实现。","执行时可能会出现数组越界错误。","执行时间的参数应用于最终的工作服务器上。","执行结果：","执行队列、java","执行，i","扩充为","扩容后不是重新计算所有元素在数组的位置：","扩容增量：","扩容操作需要调用","扩展为","扩展类加载器（extens","扩展阅读：java","扩展阅读：传输控制协议","扩展阅读：域名系统","扩展阅读：计算机网络之应用层","扩展阅读：计算机网络之数据链路层","扩展阅读：计算机网络之物理层","扩展阅读：计算机网络之网络层","扩展阅读：超文本传输协议","把","把内存分成了两部分：线程栈区和堆区","把写缓冲区的所有数据刷新到内存中","把原数组整个复制到新数组中，因此最好在创建","把年轻代和老年代划分成多个大小相等的独立区域（region），年轻代和永久代不再物理隔离。","把应用程序看成是一连串的无结构的字节流。tcp","把每个","抛出异常；","报文中选项字段的","报文后，把","报文时，仅仅表示对方不再发送数据了但是还能接收数据，而自己也未必全部数据都发送给对方了，所以己方可以立即关闭，也可以发送一些数据给对方后，再发送","报文给对方来表示同意现在关闭连接，因此，己方","抽象类","抽象类定义如下：","抽象类（abstract","担保失败，则会触发","括号里配置的对象","括号里配置的对象。","拿出","持久代一般固定大小为","持久代大小","持久性","指不考虑","指令有两个作用，第一它可以延迟流水线执行指令（de","指令来实现同步。这些指令通常比锁更快。","指令的操作。","指令那么效率会有一定的提升，paus","指令，同时借助","指定","指定原来数组的首地址值","指定文件名","指定服务监听端口。","指定独占锁是公平锁还是非公平锁。非公平锁的吞吐量比较高，公平锁可以保证每次都是等待最久的线程获取到锁；","指定要操作的文件","指定输出格式，live","指定，文件格式是平文件，内容和","指明是活着的对象，file","指的是一个进程的最大内存","指的是标记","指针回到文件的开头","指针进行访问。","按照","按照二叉树搜索的方式进行搜索，搜到返回","按照顺序加锁是一种有效的死锁预防机制。但是，这种方式需要你事先知道所有可能会用到的锁(译者注：并对这些锁做适当的排序)，但总有些时候是无法预知的。","排序元素，吞吐量通常要高于","接口","接口(lock","接口。","接口中不可以使用静态语句块，但仍然有类变量初始化的赋值操作，因此接口与类一样都会生成","接口中的骨干方法。","接口之后，基于","接口优于继承","接口使用泛型去定义它的返回类型。executor","接口可以控制序列化和反序列化的细节。它有一个替代方法：实现","接口和","接口在","接口定义","接口定义如下：","接口定义：","接口实现。该实现提供了所有可选的","接口很相似，但它可以返回一个对象或者抛出一个异常。","接口所需的工作。","接口新扩展的方法：","接口是","接口构造线程的步骤：","接口比同步方法和同步块提供了更具扩展性的锁操作。他们允许更灵活的结构，可以具有完全不同的性质，并且可以支持多个相关类的条件对象。","接口的一些方法并保持原来基础的实现是，它就变得非常有用。我们可以仅仅继承于它并重写我们需要的方法。阅读","接口的实现。","接口的实现用于创建线程池。线程池例子展现了如何创建和使用线程池，或者阅读","接口的实现类，并实现","接口的实现类，并重写该接口的","接口的实现，存储键值对时，它可以接收","接口的序列化。","接口的替代方法","接口的类。","接口的类必须要提供一个无参的构造方法，且它的访问权限为","接口的线程有返回值。","接口的线程没有返回值；而使用","接口的线程没有返回值；而实现","接口的聚合对象。","接口的骨干实现，以最大限度地减少实现","接口的默认序列化机制就会失效。","接口自定义策略。如记录日志或持久化不能处理的任务。","接口获取数据只建立一个连接。","接口，vector","接口，但是如果你将其当做","接口，即提供了随机访问功能。randmoaccess","接口，即能将","接口，即覆盖了函数","接口，否则将抛出","接口，因此支持随机访问。","接口，它和","接口，并添加","接口，所以它是一个读写锁。","接口，而没有其它任何处理的话，那么就会使用默认序列化机制。","接口，能对它进行队列操作。","接口，这意味着","接口；因此，hashmap","接口；因此，hashtabl","接口；因此，treemap","接收","接收小数","接收整数","接收每一个内容","控制元空间大小。","控制最大垃圾收集停顿时间，收集器将尽可能保证内存回收时间不超过设定值。","描述","描述符索引","提交任务，但是","提交循环即可了。","提交版本必须大于记录当前版本才能执行更新","提供了","提供了一个","提供了两个方法，用于线程池的关闭，分别是","提供了动态调整线程池容量大小的方法：setcorepoolsize()和","提供了对web应用开发的支持","提供了特殊的指令，可以自动更新共享数据，而且能够检测到其他线程的干扰，而","提供了非常方便的打印功能。","提供的。关于分代","提供的四种策略。","提供的顺序排序。","提供缓存功能","提高响应速度","提高性能的原因","提高查询速度","提高线程的可管理性","插件名称：toggl","插入元素后，判断对应的node结构是否需要改变结构，如果需要则调用treeifybin()方法将node链表升级为红黑树结构；","搭配使用，用来分析","搭配：如果要插入（put）一个元素，需要获取","搭配：如果要获取（take）一个元素，需要获取","操作","操作。","操作参数","操作失败时使用内置锁","操作失败的重试","操作将节点插入队列尾部","操作将节点插入队列尾部，直到成功为止。","操作时先尝试不加锁，如果连续两次不加锁操作得到的结果一致，那么可以认为这个结果是正确的。","操作时，需要遍历所有","操作来支持更高的并发度，在","操作系统下的","操作结果都会直接刷到主存中，从而保证了操作的内存可见性，同时也使得先获得这个锁的线程的所有操作，都","操作编译为底层提供的最有效方法。在支持","操作，如果成功就返回结果，否则重试直到成功为止。","操作，并允许使用空值和空键。","操作，当想要非阻塞地完成某一操作也可以考虑","操作，每次从内存中读取数据然后将此数据和+1","操作，然后再通过","操作，直到成功为止","操作？","支持序列化。","支持序列化，能通过序列化去传输。","支持的","支持随机访问，所以访问速度更快；linkedlist","收到消息后。b","收到消息后，a","收到消息后，b","收消息没问题。","收集不能像其它收集器那样等待老年代快满的时候再回收。","收集器","收集器。","收集器。其中","收集器也是使用","收集器以外，其他分代","收集器会再次进入重新设置阶段，等待下一次垃圾收集时机的到来。","收集器其实是","收集器具有以下缺点：","收集器工作的内存占用百分，如果这个值设置的太大，导致预留的内存不够存放浮动垃圾，就会出现","收集器提供了两个参数用于精确控制吞吐量，分别是：","收集器搭配使用。","收集器收集几十兆甚至一两百兆的年轻代停顿时间可以控制在一百多毫秒以内，只要不是太频繁，这点停顿是可以接受的。","收集器是一种以获取最短停顿时间为目标的收集器。","收集器来替代","收集器清理碎片。","收集器的后备预案，在并发收集发生","收集器的多线程版本。","收集器的老年代版本，也是给","收集器的老年代版本，使用多线程和","收集器的运作大致可划分为以下几个步骤：","收集器组合来进行内存回收。","收集器要进行","收集器运行步骤如下：","收集器运行示意图","收集器还提供了一个参数","收集器配合工作。","收集器默认开启的线程数量与","收集器，只有它能与","收集器，如果","收集器；老年代使用","收集算法","改","放在","放在一个报文里发送给客户端。","效果：默认只在目录导航中显示章的标题，而不会显示小节的标题，点击每一章或者每一节会显示当前章或节的子目录，如果有的话，但是同时会收起其它之前展开的章节。","散列表的加载因子","数字的长度为4","数据不一致：读操作不能读取实时性的数据，因为部分写操作的数据还未同步到读数组中。","数据包的序列号和校验码","数据单元：ip","数据单元：帧（frame）。","数据单元：报文段（segment）或用户数据报。","数据单元：报文（message）。","数据单元：比特流。","数据库","数据库事务的四个特性","数据库优化","数据库范式","数据库连接","数据库连接池的作用","数据报（packet）。","数据流中最早的字节已经发送并得到确认。这些数据是站在发送端的角度来看的。上图中的","数据结构","数据结构变化：","数据链路层","数相当于一个屏障，当","数组+链表+红黑树，当链表的深度达到8的时候，也就是默认阈值，就会自动扩容把链表转成红黑树的数据结构来把时间复杂度从o（n）变成o（logn）提高了效率","数组。","数组中的。","数组中的每个队列长度主要为","数组元素作为锁，从而实现了对每一行数据进行加锁，进一步减少并发冲突的概率。","数组实现的阻塞队列。","数组提供了length属性来获取数组的长度","数组方式读取出来，而且长度必须和写入时的固定大小相匹配。","数组＋单向链表的数据结构，变更为","数组＋单向链表＋红黑树的结构。对于","数组，数组中的每个元素既是一个链表；同时又是一个","数组，用于保存","数量的线程在等待时会跳闸，并且在跳闸时不执行预定义的动作。","数量的线程在等待时会跳闸，并且在跳闸时执行给定的动作","数量相同，可以使用","数量相等。","数量超过负载因子和当前容量的乘积时，散列表就会被重新映射（即重建内部数据结构），一般散列表大约是存储桶数量的两倍。","整个","整个事务要么全部完成，要么全部不完成，不可能停滞在中间某个环节。事务在中间某个过程中发生错误，会被回滚到开始的状态","整个堆大小","整体的过程就是这样子的，利用","整理","整理”","整理”算法实现的收集器，从局部（两个","整理，在回收的同时还会对内存进行压缩。并行收集器适合对吞吐量要求远远高于延迟要求的场景，并且在满足最差延时的情况下，并行收集器将提供最佳的吞吐量。","文件。","文件中的常量池（编译器生成的各种字面量和符号引用）会在类加载后被放入这个区域。","文件中记录的大小不一定都相同，只要能够确定哪些记录有多大以及它们在文件中的位置即可。","文件复制到本地或其他机器上进行分析。","文件是一组以","文件本质上就是一张表，由下表中的数据项组成。","文件格式的规范，并且能被当前版本的虚拟机处理。","文件格式验证","文件生成对应的","文件由类索引、父类索引和接口索引集合这","文件的","文件的头","文件的字节流中包含的信息符合当前虚拟机的要求，并且不会危害虚拟机自身的安全。","文件的版本","文件的版本号：第","文件输入流","文件输出流","文件），然后读取该文件内容，最后通过","文件，jstack","文件，还可以查询","文章","新增错误类型，当","新容量=旧容量2；默认旧容量=160.75=12","新建","新生代内存大小","新生代和老年代的内存比","新生代空间初始值。","新生代空间大小","新生代空间大小。","新生代空间最大值。","新生代（young","新的位置=旧的位置","方式可以让线程有返回值。","方式声明","方式达到超时等待获取锁的效果，该方法会在三种情况下才会返回：","方式，只是暂停时并行地进行垃圾收集。并行收集器年轻代采用复制算法，老年代采用标记","方式，经过","方法","方法、isassignablefrom()","方法、isinstance()","方法。","方法。但接口与类不同的是，执行接口的","方法。只有当父接口中定义的变量使用时，父接口才会初始化。另外，接口的实现类在初始化时也一样不会执行接口的","方法。同样的，当一个线程需要调用对象的","方法。在该方法中直接返回","方法。序列化和反序列化过程中会自动回调这两个方法。","方法。执行步骤如下：","方法不会","方法不会释放“锁标志”，也就是说如果有","方法不能中断正在运行过程中的线程，只能中断阻塞过程中的线程。因此当通过","方法不需要先执行父接口的","方法与","方法中。","方法中会先调用","方法中断其运行状态。","方法中断的。因为本身在前面的文章中讲过单独调用","方法中是死循环，会再一次执行","方法中有耗时的操作，就可能造成多个线程阻塞，在实际过程中此种阻塞很隐蔽。","方法么？","方法之后，count","方法以独占模式发布。如果","方法会使当前线程转入","方法会启动线程，然后","方法会返回","方法会阻塞住直到任务完成。而使用","方法作用是唤醒","方法作用是首先检查当前引用是否等于预期引用，并且当前标志是否等于预期标志，如果全部相等，则以原子方式将该引用和该标志的值设置为给定的更新值。","方法修改。","方法先执行，也就意味着父类中定义的静态语句块要优于子类的变量赋值操作。例如以下代码：","方法具有以下特点：","方法内执行。","方法则会阻塞一段时间后立即返回，这时有可能任务没有执行完。","方法创建一个新文件。","方法判断线程是否为守护线程。","方法区","方法区中的常量引用的对象","方法区中类静态属性引用的对象","方法区和运行时常量池溢出","方法区的回收","方法即可实现休眠。","方法可以实现序列化；","方法可以用于线程间通信关于资源的锁的状态。","方法可以获取一个","方法可以让当前正在执行的线程暂停，但它不会阻塞该线程，它只是将该线程从","方法可以释放一个","方法和","方法在","方法在多线程环境下被正确的加锁和同步，如果多个线程同时初始化一个类，只会有一个线程执行这个类的","方法在执行的同时会创建一个栈帧用于存储局部变量表、操作数栈、常量池引用等信息。每一个方法从调用直至执行完成的过程，就对应着一个栈帧在","方法在队列为空的时候会阻塞）。","方法大致的思路为：","方法完毕。如果在一个类的","方法实现，在节点多于","方法实际上是","方法对于类或接口不是必须的，如果一个类中不包含静态语句块，也没有对类变量的赋值操作，编译器可以不为该类生成","方法将一个线程的操作暂时让给其他线程执行。","方法将作为线程执行体，并且有返回值。","方法将处理","方法就会返回","方法已经执行结束。因此虚拟机中第一个执行","方法或者","方法或者访问","方法执行结束，或者因异常退出了","方法时，因为目前的","方法时，它会释放这个对象的锁，以便其他在等待的线程就可以得到这个对象锁。","方法时，它调用","方法是在","方法是类似的，区别仅在于这个方法在获取不到锁时会等待一定的时间，在时间期限之内如果还获取不到锁，就返回","方法是线程的执行体。","方法是静态的","方法是静态（static）的？","方法显示地将","方法暂停之后，只有优先级与当前线程相同，或者优先级比当前线程更高的处于就绪状态的线程才会获得执行的机会。","方法有什么区别？为什么","方法有缺陷，已废弃。","方法未作任何处理，那么该序列化行为将不会保存/读取任何一个字段。这也就是为什么输出结果中所有字段的值均为空。","方法来中断线程，所以无法响应中断的任务可能永远无法终止。但是它们存在一定的区别，shutdownnow","方法来保证容量足够，如果不够时，需要使用","方法来关闭线程池，它们的原理是遍历线程池中的工作线程，然后逐个调用线程的","方法来创建","方法来启动该线程。","方法来把这些字节代码转换成","方法来提交任务，它会返回一个","方法来构造同步的","方法来获取返回值，get","方法来获得子线程执行结束后的返回值","方法来获得子线程执行结束后的返回值。","方法来遍历实现","方法比较特殊，当通过这个方法去获取锁时，如果线程正在等待获取锁，则这个线程能够响应中断，即中断线程的等待状态。也就使说，当两个线程同时通过","方法没有返回值，所以无法判断任务是否被线程池执行成功。","方法添加新的等待节点。*/","方法用于实现反序列化。","方法略","方法的作用是使用","方法的作用是将当前线程插入等待同步队列的队尾。","方法的作用是尝试获取锁，如果成功，则返回","方法的作用是获取锁。如果锁已被其他线程获取，则进行等待。","方法的作用是调用","方法的作用是通过自旋（死循环），不断尝试为等待队列中线程获取独占锁。","方法的作用是通过自旋（死循环），不断尝试利用","方法的作用是释放锁。","方法的区别","方法的参数，只输出","方法的名称和描述符","方法的实例本身。在同步构造器中用括号括起来的对象叫做监视器对象。上述代码使用监视器对象同步，同步实例方法使用调用方法本身的实例作为监视器对象。","方法的实现","方法的对象","方法的方法体同样是该线程的线程执行体。","方法的方法体就代表了线程要完成的任务。因此把","方法的时候，这个线程必须拥有该对象的锁，接着它就会释放这个对象锁并进入等待状态直到其他线程调用这个对象上的","方法的类肯定为","方法的线程会一直阻塞直到计数器为零，或者等待中的线程中断，或者等待超时。","方法的线程会被挂起，它会等待直到","方法的线程处于此状态。","方法的线程状态。此状态意味着，线程已经准备好了，一旦被线程调度器分配了","方法的线程结束后才能继续执行。","方法的语义是只读取不移除，显然，这个方法的语义是不符合","方法的过程。","方法的返回值。","方法的返回值，因此一般称为系统类加载器。它负责加载用户类路径（classpath）上所指定的类库，开发者可以直接使用这个类加载器，如果应用程序中没有自定义过自己的类加载器，一般情况下这个就是程序中默认的类加载器。","方法的返回结果为","方法的那个类），虚拟机会先初始化这个主类；","方法相同。","方法确定了其序列化和反序列化的机制。","方法称为执行体。","方法能够中断线程","方法获取","方法获取某个锁时，如果不能获取到，只有进行等待的情况下，是可以响应中断的。","方法表包含的信息如下：","方法表集合","方法让一个线程强制运行，线程强制运行期间，其他线程无法运行，必须等待此线程完成之后才可以继续执行。","方法让我们可以等待","方法让线程暂停一段时间。","方法设置为队列的头结点，然后将之前的头结点的","方法设置线程为守护线程；可以使用","方法访问下标为","方法访问标志","方法负责启动线程，然后","方法输入的任务是一个","方法运行之前，父类的","方法运行过程如下：","方法返回","方法返回的是","方法进行扩容，新容量的大小为","方法递减计数器，表示有一个事件已经发生。调用","方法逻辑几乎一致，唯一的区别是当","方法需要指定等待的时间，它可以让当前正在执行的线程在指定的时间内暂停执行，进入","方法（在这里这个方法直接返回","方法，","方法，一般是用来在使用时进行重写的，它是一个延迟加载方法，下面会详细说明。","方法，以及","方法，其它线程都会阻塞等待，直到活动线程执行","方法，其实都是基于","方法，则该线程结束生命周期。死亡的线程不可再次复生。","方法，即进行了同步措施。","方法，它的行为就会和普通的方法一样。","方法，就会对","方法，来彻底避免可能的内存泄露。","方法，该","方法，该方法会执行默认的序列化机制，如上节所述，此时会忽略掉","方法，该方法是用来阻塞当前线程的。","方法，那么它们是如何被调用的呢？毫无疑问，是使用反射。详情可见","方法，那么就有可能通过在该方法中让对象重新被引用，从而实现自救。","方面的改进","无法保证操作的原子性。通常来说，使用","无法回收","无法处理浮动垃圾","无法替代","无论是使用","无论是通过引用计算算法判断对象的引用数量，还是通过可达性分析算法判断对象的引用链是否可达，判定对象是否可被回收都与引用有关。","无锁并发编程","无限制的创建线程会引起应用程序内存溢出。所以创建一个线程池是个更好的的解决方案，因为可以限制线程的数量并且可以回收再利用这些线程。利用","既保证了顺序，又保证查找的速度","日志","日志文件名","日志有两种方式：","日志构成：","日志的格式","旧的位置+旧容量","旧的垃圾收集器（串行的：serial，并行的：parallel，并发标记清除：cms）都把堆结构化为三个部分：年轻代、年老代和固定大小的永久代。","时会移除最晚的节点，也就是链表首部节点","时使用。","时具体实现是这样的：","时堆内存的大小","时就会被放到","时开启内存碎片的合并整理，内存整理的过程是无法并发的，空间碎片问题没有了，但是停顿时间不得不变长了。","时当前的浮动垃圾过多导致暂时性的空间不足触发","时才能进行回收。由于浮动垃圾的存在，因此需要预留出一部分内存，意味着","时能够将内存进行回收。","时返回","时都要进行碎片整理）。","时间。","时间。一旦我们创建一个线程并启动它，它的执行便依赖于线程调度器的实现。","时间分片是指将可用的","时间分配给可用的","时间可以基于线程优先级或者线程等待的时间。线程调度并不受到","时间最长的是线程","时间片，就可以运行线程。","时间用于等待磁盘去读取数据。在这段时间里，cpu","时间，cpu","时间，可能会引起","时间，尽快完成程序的运算任务，主要适合在后台运算而不需要太多交互的任务。","时（即线程阻塞时该线程被中断），代码抛出被中断异常。","时，一定要注意控制任务的数量，否则，由于大量线程同时运行，很有会造成系统瘫痪。","时，两步的时间复杂度是","时，会先同步","时，其实散列真正生效的只是低","时，具体的变化如下所示：","时，另外一个线程有可能会读到之前的值，这就会引发错误。","时，后继节点会被挂起，因此在当前节点释放锁或被取消之后必须被唤醒(unparking)其后继结点.","时，如果发现目前的","时，必须在被中断线程检测到","时，该类可以使用键之间的比较顺序来帮助断开关系。","明显的区域可以被分配成","是","是一个","是一个典型且优秀的线程池，它具有线程池提高程序效率和节省创建线程时所耗的开销的优点。但是，在线程池空闲时，即线程池中没有可运行任务时，它不会释放工作线程，还会占用一定的系统资源。","是一个双链表结构。","是一个抽象类，它继承于","是一个抽象类，有两个子类：","是一个散列表，它存储的内容是键值对(key","是一个继承于","是一个耗时并且耗费硬件资源的过程，一般把服务器生成的","是一个队列，它会保存被","是一种关系型数据库，也是数据库管理系统","是一种非阻塞算法，所以其避免了线程被阻塞时的等待时间。","是不一样的:有","是不同步的。可以使用","是同步的，因此开销就比","是否存在指向当前线程的偏向锁。如果测试成功，则表示获得锁，否则检测是否设置有偏向锁，如果没有，则使用","是否已经过期（根据","是否改变，如果改变了需要抛出","是否是守护进程：\"","是否相等。重载hashcode()是为了对同一个key，能得到相同的hash","是唯一实现了","是围绕着在并发过程中如何处理原子性、可见性和有序性这","是垃圾收集的主要区域（\"gc","是基于","是基于单链表实现的阻塞队列，可以当做无界队列也可以当做有界队列来使用。","是基于数组实现的。","是基于数组实现的无界阻塞队列。","是如何为每个线程创建变量的副本的：","是对电子书的简单介绍，summary.md","是对象输入输出流，一般用于对象序列化。","是弱键，即是","是怎么做到的。","是指什么？ca","是映射接口，map","是有序的。以枚举值在","是有序的。它的排序规则是：根据","是有风险的；如果小于，或者","是用于关联","是用来关闭线程池的。","是用来实现","是由编译器自动收集类中所有类变量的赋值动作和静态语句块（static{}","是电子书的目录结构。","是类还是接口；是否定义为","是线程安全的","是线程安全的，为什么还会报这个错？很简单，对于","是线程安全的，而且它支持通过","是继承于","是自定义类加载器，继承自","是虚拟的表，与包含数据的表不一样，视图包含使用时动态检索数据的查询，不包含任何列或数据","是该节点所包含的值。","是该节点的上一个节点，next","是该节点的下一个节点，item","是轻量级的","是通过各种操作来定义的，包括对变量的读写操作，监视器的加锁和释放操作，以及线程的启动和合并操作。","是通过数组","是键值对链表。","是隶属于","是非常有用的。","是非线程安全的。","显示","显示在","显示堆中对象的统计信息","更多示例","更好的编程模型","更好的资源利用","更快的响应时间","更新一个","更新数据时效率低，因为要同时更新索引","更新这个","更有效率的利用多处理器核心","更简单的编程模型","更耗时，因此，减少进入老年代的对象数量可以显著降低","替代方案","最关键的点就是：是否是同时。","最后","最后搭配git一起使用时，只需要在书籍根目录下执行","最后，cm","最后，在重新标记阶段，寻找在之前并发标记阶段中丢失的对象。","最后，调用addcount()方法记录table中元素的数量。","最坏的情况：第三次计算得到的数据更新次数和第二次也不一样，则只能先对所有segment加锁再计算最后解锁。","最大内存","最大可用内存","最大容量时就需要rehash，扩容。默认值为stat","最大的特点是引入分区的思路，弱化了分代的概念，合理利用垃圾收集各个周期的资源，解决了其他收集器甚至","最好的做法是使用","最好说下如果出现了oom异常，该怎么排查？如何看dump文件。","最常见的应用场景为用于解决数据库连接、session","最终会导致内存溢出。","最终标记","最近晋升的对象以深蓝色显示在上图中，绿色的对象是年轻代幸免的还没有晋升到老年代对象。","最近晋升的对象显示为深蓝色。survivor区域显示为绿色。","最重要的是以下用于维护顺序的函数，它们会在","最高的进程的","有","有一个缓冲，当应用程序传送的数据块太长，tcp","有一些方法需要跨段，比如size()和containsvalue()，它们可能需要锁定整个表而不仅仅是某个段，这需要按顺序锁定所有段，操作完毕后，又按顺序释放所有段的锁。这里“按顺序”是很重要的，否则极有可能出现死锁","有一系列的导航方法；如\"获取大于/等于某值的元素\"、“获取小于/等于某值的元素”等等。","有一系列的导航方法；如\"获取大于/等于某对象的键值对\"、“获取小于/等于某对象的键值对”等等。","有三个构造方法，无一例外，都是调用父类","有三种读取方式，体会其差异","有两个构造方法，功能参考下面源码片段中的注释。","有两个重要成员：","有些人可能会问如何设置永久代内存大小，你可以用","有什么不同？","有什么作用，如何使用","有什么作用？","有什么作用？threadloc","有什么作用？它的实现原理是什么？","有什么作用？它的实现原理是什么？同步方法和同步块，哪个更好？","有什么区别？可以直接调用","有其缺陷：","有哪些参数，各自有什么用？","有哪些重传机制，原理是什么？","有四个构造方法，前三个都是基于第四个实现。第四个构造方法定义如下：","有时你不需要同步整个方法，而是同步方法中的一部分。java","服务","服务器和客户端通过","服务器在","服务器的流程如下所述：","服务器，生成","服务器，监听在本地的","服务端为","服务端关闭与客户端的连接，向客户端发送一个","服务端向客户端发送带有","服务端收到这个","未发送而接收方","未发送而接收方已","未同步的示例","未命中","本人java工程师一名，此笔记记录本人掌握的所有知识点，以备复习。","本地方法不是用","本地方法栈","本地方法栈中引用的对象","本地虚拟机进程","本地调用，允许","本文内容基于","本质上segment类就是一个小的hashmap，里面table数组存储了各个节点的数据，继承了reentrantlock,","本质是在告诉","术语","机制的","条件","条件运算：例如若没有则添加等；","条指令的场景是：使用","来代替","来关闭线程池，如果任务不一定要执行完，则可以调用","来减少重复编码。","来创建","来创建文件夹，但是如果要创建的目录的父路径不存在，则无法创建成功。","来删除文件或目录。","来判断任务是否执行成功。","来判断线程是否启动。","来判断，如果为","来完成","来定位。","来定位的。而如果发生死锁之类的问题，一般用","来实现的，通过实现不同的方法，来实现独享或者共享。对于synchronized而言，当然是独享锁。","来实现缓存功能。concurrentcach","来实现虚引用。","来屏蔽各种硬件和操作系统的内存访问差异，以实现让","来控制只序列化数组中有元素填充那部分内容。","来控制堆内存空间大小。","来控制永久代大小。","来操作","来改变触发","来构建。然而这些锁都没有直接来继承","来查看各个线程的调用堆栈，就可以知道没有响应的线程到底在后台做什么事情，或者等待什么资源。","来用的话，那么集合是空的。","来知道他要放在那一个分段中，然后对这个分段进行加锁，所以当多线程","来研究在没有锁的情况下是如何做到数据正确性的。","来禁止","来获取任务执行结果（futur","来解决","来设置、获取线程优先级。","来设置、获取线程名称。","来进行服务，比如读写操作或者计算逻辑。","构造头结点（必须初始化，需要领会双链表的精髓）","构造方法","构造方法、get、set","构造方法。","构造方法中初始化的","构造方法实际上调用的是父类","构造线程","构造线程主要有三种方式","架构","查看","查看同步状态。","查看指定进程的堆信息","查看系统是否有使用大内存的代码或死循环；","查看线程下具体进程信息的命令如下：","查询性能优化","查询时，首先通过tabat()方法找到key对应的node链表或红黑树，然后遍历该结构便可以获取key对应的value值。其中，tabat()方法主要通过unsafe类的getobjectvolatile()方法获取value值，通过volatile读获取value值，可以保证value值的可见性，从而保证其是当前最新的值。","标志的数据包。","标记","标记和清除过程效率都不高；","标记的变量不会被编译器优化；synchron","标记的变量可以被编译器优化。","栈进行动态扩展时如果无法申请到足够内存，会抛出","核心技术（卷","根据","格式的基础。","框架","框架、动态生成","框架中最核心的一个类。","框架创建一个线程池。","框架可以非常方便的创建一个线程池，阅读这篇文章可以了解如何使用","框架同","框架是一个根据一组执行策略调用，调度，执行和控制的异步任务的框架。","框架的一部分，它主要用于实现生产者","框架？","桌面应用也是同样如此。如果你点击一个按钮开始运行一个耗时的任务，这个线程既要执行任务又要更新窗口和按钮，那么在任务执行的过程中，这个应用程序看起来好像没有反应一样。相反，任务可以传递给工作者线程（word","检索并移除最后一个（最大的）元素","检索并移除第一个（最小的）元素","概念","概念：读从库，写主库","概述","模式","模式、cm","模式下与","模式下的虚拟机使用。如果用在","模式下的虚拟机首选年轻代收集器，除了性能原因外，主要是因为除了","模式下的默认收集器。","模式下的默认收集器配置。因为在客户端模式下，分配给虚拟机管理的内存一般来说不会很大。serial","模式下，它有两大用途：","模式时，应该是期望某个类的实例应该是唯一的，但如果该类是可序列化的，那么情况可能会略有不同。此时对第","模式是系统的一种配置模式。在该模式下，系统缺少了显示设备、键盘或鼠标。","模式，如下所示：","次","次幂的位置。","次幂的扩展(指长度扩为原来","次数越多，fgct","次重复","次，就需要对每个","正因为循环引用的存在，因此","正在运行的用户线程无法设置为守护线程，所以","此外，reentrantlock","此方法的调用是建议虚拟机进行","此类加载器负责将存放在","此线程在后台运行","死锁是当线程进入无限期等待状态时发生的情况，因为所请求的锁被另一个线程持有，而另一个线程又等待第一个线程持有的另一个锁。","死锁是指两个以上的线程永远相互阻塞的情况，这种情况产生至少需要两个以上的线程和两个以上的资源。","死锁检测是一个更好的死锁预防机制，它主要是针对那些不可能实现按序加锁并且锁超时也不可行的场景。","死锁（deadlock）","段偏移量","段掩码","每一个","每一个运行在","每个","每个segment守护着一个hashentry数组里的元素,当对hashentry数组的数据进行修改时，必须首先获得它对应的segment锁。","每个节点的左孩子节点的值小于它；右孩子节点的值大于它","每当一个线程获得了锁，会在线程和锁相关的数据结构中（map、graph","每次扩容请求其大小的","每次插入一个元素","每次移走队首元素","比","比在","比如当前线程比较成功后，准备更新共享变量值的时候，这个共享变量值被其他线程更改了，那么cas函数必须返回false。","比较小的时候，也能保证考虑到高低","比较花费","毫秒。","毫秒的时间片段内，消耗在","永久代空间的初始值。","永久代空间的最大值。","永久代（perman","永远无法就餐，只能看着盘中的美食饥饿的等待着。","没有。","没有公有的构造函数，只能通过静态方法来创建实例。","没有响应时，强制生成","没有构造方法，只能通过类中的","没有比较器，使用","没有确认的数据包不会从窗口中移走，定时器在重传时间到期内，每个片段的位置不变。","没有设置为空，回收时","没有超时机制。","没有避免活锁的通用指南，但是在我们改变其他线程也使用的公共对象状态的场景中，例如在上述场景中，我们必须小心","没超过最大值，就扩充为原来的","注意","注意点：","注意：","注意：writeobject()","注意：一般不会直接在服务器上进行分析，因为","注意：使用","注意：当一个线程获取了锁之后，是不会被","注意：未被标记的对象等于死亡对象","注意：要想实现线程安全，那么需要调用","注意：这里的父类和引用对象既然要进行序列化，那么它们当然也要满足序列化要求：被序列化的类必须属于","注：","注：g1","注：randomaccessfil","活跃对象会被疏散（复制、移动）到一个或多个","活跃对象被复制到新的","活跃对象被疏散到","活跃性问题","活锁是一个递归的情况，两个或更多的线程会不断重复一个特定的代码逻辑。预期的逻辑通常为其他线程提供机会继续支持'this'线程。","活锁（livelock）","流操作","流水线被清空（cpu","流程","浅复制：被复制对象的所有变量都含有与原来对象相同的值，而所有对其他对象的引用仍然指向原来的对象。换言之，浅复制仅仅复制所考虑的对象，而不复制它所引用的对象。","消息传递","消耗在","消费者模型？","消费者问题。","涉及到三个操作数1.需要读写的地址","淘宝源：","深入理解","深复制：被复制对象的所有变量都含有与原来对象相同的值，除去那些引用其他对象的变量。那些引用其他对象的变量将指向被复制的新对象，而不再是原有的那些被引用的对象。换言之，深复制把复制的对象所引用的对象都复制了一遍。","添加元素时使用","添加操作","添加此方法","添加的逻辑很简单，先将原容器","清理","清除","清除之后","清除算法。","清除算法导致的空间碎片，往往出现老年代空间剩余，但无法找到足够大连续空间来分配当前对象，不得不提前触发一次","清除阶段之后，你可以看到大量内存被释放。你还可以注意到没有进行压缩操作。","源码","源码实现","源码小结","滑动窗口","滑动窗口原理是什么？","滑动窗口是","满了(超过","然后另外一个线程执行了这句：","然后在当前线程里面，如果要使用副本变量，就可以通过","然后安装gitbook","然后把","然后来看看++i","然后根据输出结果到","然后重置sizectl的值为0.75n，即当前table容量的0.75倍，并返回创建的table，此时初始化hash表完成。","然后，使用","然后，在table中删除元素时，如果元素所在的红黑树节点个数小于6，则会触发红黑树向链表结构转换。","然而，两次增加都是在没有适当的同步下并发执行的。无论是线程","版本","版本号：","版）","物理层","物理层（physic","物理连接","特点","状态","状态。","状态下，收到建立连接请求的","状态后，你需要分析监控结构并决定是否需要进行","状态就直接让到达","状态来表示锁的保留数（详细介绍参见","状态标记量","状态的线程。所以在其他处于非","状态的线程上执行这两个方法是没有意义的。这就是为什么这些方法是静态的。它们可以在当前正在执行的线程中工作，并避免程序员错误的认为可以在其他非运行线程调用这些方法。","状态的线程分配","状态的过程，它使得线程执行能够从中断点恢复执行。上下文切换是多任务操作系统和多线程环境的基本特征。","状态转入","状态，此时线程池不能够接受新的任务，它会等待所有任务执行完毕。","状态，此时线程池不能接受新的任务，并且会去尝试终止正在执行的任务。","状态，然后中断所有没有正在执行任务的线程。","状态，等待调用","状态；","独享锁/共享锁","独享锁是指该锁一次只能被一个线程所持有。","独占锁才能进行操作。","独立的列：索引不能是表达式的一部分","环境下的","环境时在","现代操作系统调度的最小单元是线程，也叫轻量级进程（light","现代的","现代硬件内存模型与","现在可以使用concurrenthashmap来支持线程安全，并且concurrenthashmap的效率会更高，因为concurrenthashmap引入了分段锁。","现在的商业虚拟机都采用这种收集算法来回收年轻代，但是并不是将内存划分为大小相等的两块，而是分为一块较大的","现在的商业虚拟机采用分代收集算法，它根据对象存活周期将内存划分为几块，不同块采用适当的收集算法。","现在等于","生产者、消费者示例：","生成堆快照","生成堆转储快照","生成的","生成目录结构文件，然后编写各个文件夹中生成的文件。","用一个图形化编辑管理工具，方便我们实时编辑查看内容，这里推荐用vscode，又可以编辑markdown，又可以用git，又可以分屏看效果。别忘了在提交的时候忽略掉module文件夹，不然每次提交拉取的时候会很痛苦....","用于关联两个表","用于判断是否需要调整","用于在内存中输入、输出数据。","用于存放元素的数组","用于存放已被加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。","用于控制序列化版本是否兼容。若我们认为修改的可序列化类是向后兼容的，则不修改","用于生成","用于输入、输出文件。","用于输入输出文本文件。","用来定义年龄的阈值。","用来控制同时访问某个特定资源的操作数量，或者同时执行某个指定操作的数量。","用来记录","用自定义类型作为hashmap或hashtable的key需要注意哪些问题","由于","由于所有的这些方法都需要线程持有对象的锁，这样就只能通过同步来实现，所以他们只能在同步方法或者同步块中被调用。","由于接收方","由于父类的","由于被","由于这个类和老版本不兼容，我们需要修改版本号：","由其他文件生成，典型场景是","由此可以看出占用","的","的char[]","的。","的一个内部类。","的一个基础实现，我们可以将它同","的一个实例有两个影响其性能的参数：初始容量和负载因子。","的一个显著优点。","的一些基本特性：","的一种控制网络流量的技术。","的七层体系结构概念清楚，理论完整，但是比较复杂且不实用，所以并不流行。","的三大问题？","的下一个节点。","的下载及安装，如图：","的主要方法：","的主要目标是定义程序中各个变量的访问规则，即在虚拟机中将变量存储到内存和从内存中取出变量这样的底层细节。此处的变量与","的交互是一次一个数据块（大小不等），但","的代理类的二进制字节流。","的代码片段，其中的","的代码逻辑十分相似，区别仅在于自旋的条件以及节点出队的操作有所不同。","的众多缺陷。java","的位置。如果产生碰撞，则利用","的作用则是针对对象的读取，其原理与","的使用和执行成本更低，因为它不会引起线程上下文的切换和调度。","的信息,","的信息、常量、静态变量等数据，当系统中要加载的类、反射的类和调用的方法较多时，永久代可能会被占满，在未配置为采用","的信息，从而可以轻松地知道","的值=\"容量*加载因子\"。","的值。因为不同的","的值为","的值处于一种不定的状态。采用锁可以解决此类问题，但","的值放到寄存器","的值等于","的值被改变了","的值被改变了怎么办？a++还执行吗？出现该问题的原因是在多线程环境下，a","的值还没有被刷新回主存中去。","的值，也就是","的元素。","的元素删除了。","的元素时，基本分两步：","的元素肯定就会出问题了。","的公平性，我们依然可以通过同步结构在线程间实现公平性的提高。","的内容也是“键值对，也不保证次序”。但和","的内容是“键值对，但不保证次序”！","的内部类，也是一个抽象类。","的几种情况","的函数都是同步的，这意味着它是线程安全的。它的key、value都不可以为null。此外，hashtable中的映射不是有序的。","的分布已经很不错了，就算是发生了碰撞也用","的分析结果后，可以在浏览器中查看。","的初始数量可通过构造方法来指定。每次执行","的动态绑定。","的动态语言支持时，如果一个","的包丢失了，立刻进行重传。","的区别","的区别？","的十六进制值","的十六进制值为","的单例对象。我们在","的单向队列。比如","的占用情况自动调整容量(超过","的原子条件更新来实现线程之间的同步；","的原理","的原理吗？equals()和","的原理是什么？","的参数","的参数为泛型的变长参数，不能使用基本类型数组作为参数，只能使用相应的包装类型数组。","的双向链表。它也可以被当作堆栈、队列或双端队列进行操作。","的另一个实现类readwritelock，其读锁是共享锁，其写锁是独享锁。读锁的共享锁可保证并发读是非常高效的，读写，写读","的各个实现类都遵循了这些规则。","的各种状态。","的同步机制几乎完全依赖于sync。使用","的后备预案","的含义：","的唯一性)","的场合。","的场景都需要虚拟机具备类卸载功能，以保证不会出现内存溢出。","的堆栈信息，然后根据线程","的堆看起来应该是这个样子。对象分散在年老代区域里。","的声明中抛出了异常，所以","的处理器上，jvm","的处理速度。软件资源限制有数据库的连接数和","的大小比例默认为","的大小超过了负载因子(load","的大小，","的子类，其中包含了数组的属性和方法。","的完整流程。可以以一幅图来说明：","的定义如下：","的定义，可以得出","的定制化实现。","的实例为公平的锁（fairsync）或不公平锁（nonfairsync）","的实例为非公平锁（nonfairsync）","的实现","的实现不是同步的，这意味着它不是线程安全的。它的key、value都可以为null。此外，hashmap中的映射不是有序的。","的实现中，是通过","的实现也在链表过长时会转换为红黑树。","的实现原理是什么？","的实现吗？为什么要这样实现？","的实现类可以通过继承","的实现类提供了便利。","的实现）的结构，即内部拥有一个","的实现，一个可定时调度任务的线程池。","的实现：","的容器性能要差。","的容量。","的容量为","的容量虽然有初始化大小，但是不限制大小，如果当前容量已满，插入新元素时会自动扩容。","的密钥是降低任何散列表性能的一个可靠方法。为了改善影响，当键是","的对象可被回收。","的对象存活，那么一块","的工作原理吗？","的常量值。","的幂，而计算下标的时候，是这样实现的(使用&位操作，而非%求余)：","的年老代收集","的年轻代**","的年轻代回收做以下总结：","的年轻代收集**","的并发采用的是共享内存模型","的应用场景","的思路是什么呢？","的性能提升一文中有性能测试的结果。","的情况下也会执行","的执行效率。","的执行时间","的执行时间比","的执行有可能会导致","的抽象类，它实现了","的接口。sortedmap","的接口。sortedset","的接口。实际上","的接口。实际上，set","的接口。相比于","的插入操作","的操作，g1","的改动","的数据合并到","的整数）。","的方式来保证原子操作，但是对多个共享变量操作时，循环","的方式设置，默认优先级为","的方式进行收集。当内存不足时，串行","的方法","的方法。","的方法句柄，并且这个方法句柄所对应的类没有进行过初始化，则需要先触发其初始化；","的方法外声明抛出","的方法，通过","的时候做一些其他的事情。这个不一定就是磁盘","的时候才为","的时候，不需要重新计算","的时候，只要不是放在一个分段中，就实现了真正的并行的插入。但是，在统计","的时候，可就是获取","的时候，自动生成","的时间","的时间单位，有","的时间只有","的时间可能因此增加。","的时间达到","的时间间隔","的替换为指向","的最大堆大小，xmn","的有效位，当然容易碰撞了。","的来实现线程调度，所以并没有任何办法使其变成公平锁。","的构造函数将","的构造方法。","的析构函数，用来做关闭外部资源等工作。但是","的查找效率，且内部使用链表维护元素的插入顺序。","的核心方法当然是","的核心方法，通过这个方法可以向线程池提交一个任务，交由线程池去执行。","的核心，通过维护一个","的概念，从而将原来的一整块内存空间划分成多个的小空间，使得每个小空间可以单独进行垃圾回收。这种划分方法带来了很大的灵活性，使得可预测的停顿时间模型成为可能。通过记录每个","的模式即可，以只读的方式打开文件。","的次数","的次数。","的每一个类都有用于线程间通信的基本方法","的每个对象中都有一个锁(monitor，也可以成为监视器)","的比较","的特征的。","的特性是什么？","的特性是：当队列是空的时，从队列中获取或删除元素的操作将会被阻塞，或者当队列是满时，往队列里添加元素的操作会被阻塞。","的状态，jstack","的现代计算机上同时运行多个线程是可能的。每个","的理解：","的监听端口。","的等待过程。由于","的简单总结","的类型为","的类并放到","的类，如果需要序列化，必须实现","的线程中并没有可供任何对象使用的锁和同步器。这就是为什么这些方法是","的线程优先级如何控制？高优先级的","的线程和他们等待的资源。每个资源都有一个唯一的","的线程安全版本。","的线程执行后续任务。","的线程拷贝这个共享对象到它的","的线程数达到屏障数。如果当前线程是最后一个到达的线程，并且在构造函数中提供了非空屏障操作，则当前线程在允许其他线程继续之前运行该操作。如果在屏障动作期间发生异常，那么该异常将在当前线程中传播并且屏障被置于断开状态。","的线程，可以使用","的线程，用","的缓存中特别有用，通过移除最近最久未使用的节点，从而保证缓存空间足够，并且缓存的数据都是热点数据。","的缩写。","的缩写，ack","的缩写，指的是精确浮点，它用来确保浮点数运算的准确性。","的缺陷","的自然顺序或提供的比较器的比较顺序。","的自然顺序进行比较","的节点的","的要点","的触发条件","的计算中，同时不会有太大的开销。","的设置：","的话就会继续执行","的话索引变成“原索引+oldcap”。可以看看下图为","的话索引没变，是","的详细说明。","的读/写和","的读操作是不用加锁的，性能很高。","的调用会自动检查","的调用必须在该线程中执行任何操作之前执行。","的过程中同时有对象要放入老年代，而此时老年代空间不足（有时候“空间不足”是","的过程中，计算下标时，先对","的过程，均匀的把之前的冲突的节点分散到新的","的过程，它在整个回收过程中耗时最长，不需要停顿。","的过程，简单的说就是把","的运行环境（安装","的迭代器","的重要成员如下：","的重要方法，如","的重要方法：","的键值，是非同步的，hashmap","的键是弱键。","的键是弱键。在","的键类型不同，weakhashmap","的阈值，","的队列其实是虚的，其不提供任何空间（一个都没有）来存储元素。数据必须从某个写线程交给某个读线程，而不是写到某个队列中等待被消费。","的静态成员：","的非","的非阻塞算法。其它原子操作都是利用类似的特性完成的。","的频率。你可能会以为减少进入老年代的对象数量意味着把它们留在新生代，事实正好相反，新生代内存的大小是可以调节的。","的频率升高。","的频率，full","的频率，也即增加了间歇性停顿的次数。因此强烈建议能不使用此方法就不要使用，让虚拟机自己去管理它的内存。可通过","监听器","监听器被注册后释放对象时没有删除监听器","监控与调优","监视器锁规则：在监视器锁上的解锁操作必须在同一个监视器锁上的加锁操作之前执行。","目前slice的长度","目录中也不会被加载）类库加载到虚拟机内存中。启动类加载器无法被","目录中的，或者被","目录结构长这样：","目录里的文件","目录，减少重复加载。","目标","直接使用","直接内存","直接命中","直接引用可以是直接指向目标的指针、相对偏移量或是一个能间接定位到目标的句柄。","直接引用（direct","直接设置吞吐量大小的（值为大于","相关内容将在下一篇讲述）。","相关操作系统的数据模型（32","相同时，将内存值","相对来说会比新生代","相当于线程安全的","相比“==”运算符，equlas(object)方法的特殊之处就在于它可以被覆盖，所以可以通过覆盖的方法让它不是比较引用而是比较数据内容，例如string类的equlas方法是用于比较两个独立对象的内容是否相同，即堆中的内容是否相同。","相比于上个方法，这个方法让这些线程等待至一定的时间，如果还有线程没有到达","相比，hashtabl","相较于","看下图，左边两组是数组长度为16（2的4次方），右边两组是数组长度为15。两组的hashcode均为8和9，但是很明显，当它们和1110“与”的时候，产生了相同的结果，也就是说它们会定位到数组中的同一个位置上去，这就产生了碰撞，8和9会被放到同一个链表上，那么查询的时候就需要遍历这个链表，得到8或者9，这样就降低了查询的效率。","看你的插件是否已经生效。","睡眠1秒，main线程对countthread进行中断，使countthread能够感知中断而结束","睡眠1秒，main线程对runn","硬件内存架构","硬链接和软连接","确认包和自动重传","碰撞，hash冲突","示例","示例中","示例中的内部类","示例如下所示：","示例的基础上添加一个","示例：","示例：jmap","示例：接受控制台输入信息","示例：重定向","示意图：","禁止该指令与前面和后面的读写指令重排序","禁止进行指令重排序。","种不同的线程状态，在给定的一个时刻，线程只能处于其中的一个状态。","种具体实现：pipedoutputstream、pipedinputstream、pipedread","种取值。可选的单位有天（days），小时（hours），分钟（minutes），毫秒(milliseconds)，微秒(microseconds,","种场景中的行为称为对一个类进行主动引用。除此之外，所有引用类的方式都不会触发初始化，称为被动引用。被动引用的常见例子包括：","种应用方式：","种状态及切换(透彻讲解)","种状态，级别从低到高为：无锁状态、偏向锁状态、轻量级锁状态和重量级锁状态，这几个状态会随着竞争情况逐渐升级。锁可以升级但不能降级，目的是为了提高获得锁和释放锁的效率","秒\"),","秒。处理两个文件则需要：","秒执行一次\"),","秒，处理一个文件需要","秒，每","秒，甚至大于","秒，那么","秒，那么就不需要把时间浪费在","移动到","程序中创建的所有对象，无论是哪一个对象创建的。这包括原始类型的对象版本。如果一个对象被创建然后赋值给一个局部变量，或者用来作为另一个对象的成员变量，这个对象任然是存放在堆上。","程序中每个","程序中，只要前台有一个线程在运行，则整个","程序中，看到当时运行的","程序代码。初始化阶段即虚拟机执行类构造器","程序呈现","程序响应更快","程序响应更灵敏","程序在各种平台下都能达到一致的内存访问效果。","程序崩溃生成","程序是多线程的，在你的","程序是如何崩溃和在程序何处发生问题。另外，jstack","程序的","程序的基本信息和运行情况。","程序直接引用，用户在编写自定义类加载器时，如果需要把加载请求委派给启动类加载器，直接使用","程序计数器","程序计数器、虚拟机栈和本地方法栈这三个区域属于线程私有的，只存在于线程的生命周期内，线程结束之后也会消失，因此不需要对这三个区域进行垃圾回收。垃圾回收主要是针对","程序设计更简单","程序运行的服务器，","程序都将暂停，因此，不要在系统执行过程中创建该文件。","程序顺序规则：如果程序中操作","稳定版进行开发。","空出第二个人的信息","空的区域被清除和回收掉。所有区域的活性在此时计算。","空间上，最后清理","空间和两块较小的","空间和其中一块","空间就不够用了，此时需要依赖于老年代进行分配担保，也就是借用老年代的空间存储放不下的对象。","空间整合：整体来看是基于“标记","空间的一半，则年龄大于或等于该年龄的对象可以直接进入老年代，无需等到","空间，每次使用","竞争锁，否则偏向锁指向该线程。","竞态条件","竞态条件和临界区","竞态条件（race","章","端口。","符号引用","符号引用以一组符号来描述所引用的目标，符号可以是任何形式的字面量，只要使用时能无歧义地定位到目标即可。","符号引用验证","符号引用（symbol","第1步、使用file类找到一个文件","第2步、通过子类实例化父类对象","第3步、进行写操作","第3步、进行读操作","第4步、关闭输入流","第4步、关闭输出流","第一次挥手","第一次握手","第一次握手，a","第一次计算，不对s1，s2，s3，s4加锁，遍历所有的segment，假设每个segment的大小分别为1，2，3，4，更新操作次数分别为：2，2，3，1，则这次计算可以得到map的总大小为1+2+3+4=10，总共更新操作次数为2+2+3+1=8；","第一步","第一种方案他会使用不加锁的模式去尝试多次计算concurrenthashmap的size，最多三次，比较前后两次计算的结果，结果一致就认为当前没有元素加入，计算的结果是准确的","第一章","第一范式：列的原子性，不能再拆分为列","第七章","第三次挥手","第三次握手","第三次握手，a","第三次计算，不对s1，s2，s3，s4加锁，遍历所有segment，假设每个segment的更新操作次数还是为3，2，3，1，则因为第二次计算和第三次计算得到的map的更新操作的次数是一致的，就能说明第二次计算和第三次计算这段时间内map数据没有被更新，此时可以直接返回第三次计算得到的map的大小。","第三章","第三范式：首先2nf，非主键列必须直接依赖主键，不存在传递依赖","第三部","第九章","第二次挥手","第二次握手","第二次握手，b","第二次计算，不对s1,s2,s3,s4加锁，遍历所有segment，假设这次每个segment的大小变成了2，2，3，4，更新次数分别为3，2，3，1，因为两次计算得到的map更新次数不一致(第一次是8，第二次是9)则可以断定这段时间map数据被更新，则此时应该再试一次；","第二步","第二种方案是如果第一种方案不符合，他就会给每个segment加上锁，然后计算concurrenthashmap的size返回","第二章","第二范式：1nf，没有包含主键的列必须完全依赖于主键","第五章","第八章","第六章","第四次挥手","第四章","等","等。","等写操作的方法需要获取到这个锁","等容器并发地进行迭代修改时，会报","等并发容器。","等待指定时间的状态。一个线程处于定时等待状态，是由于执行了以下方法中的任意方法：","等待状态,这个和","等待状态。一个线程处于等待状态，是由于执行了","等待第一个文件被读取完。然后开始读取第二个文件。当第二文件在被读取的时候，cpu","等待调用","等待锁的线程","等待队列的队头，懒加载。只能通过","等待队列的队尾，懒加载。只能通过","等待（waiting）","等操作之后执行，当","等方式可以做的更好，并且该方法运行代价高昂，不确定性大，无法保证各个对象的调用顺序，因此最好不要使用","等方法中对","等方法中调用。","等方法用于等待对象的锁或者通知其他线程对象的监视器可用。在","等方法）","等等）。不管对象是属于一个成员变量还是方法中的本地变量，它都会被存储在堆区。","等等）将其记下。除此之外，每当有线程请求锁，也需要记录在这个数据结构中。","等读操作的方法需要获取到这个锁","等都是围绕","等集合","等）。","等）对堆快照文件进行分析。","等）或文件。","答案是：不一定。因为有创建线程和线程上下文切换的开销。","答案是：未必。同步容器未必真的安全。在做复合操作时，仍然需要加锁来保护。","答：否。","筛选回收","简介","简言之，进程可视为一个正在运行的程序。","算法","算法。","算法取模分段，不同的线程处理不同段的数据。","算法来更新数据，而不需要加锁。","算法，典型的例子就是原子类，通过","管理","管理着一组虚拟的许可（permit），permit","管理等问题。","管道输入/输出流","管道输入/输出流主要包括了如下","管道输入/输出流和普通的文件输入/输出流或者网络输入/输出流不同之处在于，它主要用于线程之间的数据传输，而传输的媒介为内存。","类","类。","类与类加载器","类中","类中可以通过","类中提供的方法）。","类中提供的静态工厂方法创建的类（由","类中有几个非常重要的方法：","类中的","类中的单例对象并不相等。为了能在单例类中仍然保持序列的特性，可以使用","类中的定义顺序来决定集合元素的顺序。","类中的方法。","类中通过定义","类似","类似，但是","类似，只不过等待一定的时间后","类作进一步的修改，使其能够对","类依赖于","类全名或","类具有","类初始化时机","类加载器","类加载器分类","类加载机制","类加载过程","类加载过程是指加载、验证、准备、解析和初始化这","类去继承","类变量是被","类和接口的全限定名","类在","类型","类型/内存大小","类型/内存大小来找到系统的最佳参数。","类型。","类型其中的任何一种。","类型双链表，通过","类型并且为它设置内存大小。此时如果你有多个服务器，请如上文提到的那样，在每台机器上设置不同的","类型的变量）。","类型的成员变量","类型的装类，它们可以自动的保证对于他们的操作是原子的并且不需要使用同步。可以阅读这篇文章来了解","类型的；referencequeu","类型配置","类型；如果是类的话，是否被声明为","类型；是否定义为","类大致等同于","类定义如下：","类提供","类提供了一些工具方法。","类提供了一些有用的方法去在线程池中执行","类改为如下实现，然后看看运行结果。","类文件结构","类是","类是什么？","类是在运行期间动态加载的。","类是基于优先级堆实现的无界优先级队列。","类是随机读取类，它是一个完全独立的类。","类来保证引用对象之间的原子性，你可以把多个变量放在一个对象里来进行","类来创建软引用。","类来包装","类来实现弱引用。","类构造线程的步骤：","类生命周期","类用于从缓冲区中读取内容，所有的输入字节数据都放在缓冲区中。","类的","类的一部分，这样","类的卸载条件很多，需要满足以下三个条件，并且满足了也不一定会被卸载：","类的子类，并重写该类的","类的完整生命周期包括以下几个阶段：","类的实例。","类的操作中，包括","类的方法","类的无参构造方法。","类的无参构造方法会被调用。由于这个原因，实现","类的静态方法","类索引、父类索引和接口索引集合","类绑定一个文件","类绑定一个文件。","类继承了","类虽然可以实现对文件内容的读写操作，但是比较复杂。所以一般操作文件内容往往会使用字节流或字符流方式。","类进行修改，使其实现","类通过继承","类里？","类随着它的类加载器一起具有一种带有优先级的层次关系，从而使得基础类得到统一。","类默认的加载因子为","类，单当我们打算重写","类，因为实现接口方式更便于扩展类。","类，因为根据开放封闭原则——实现接口更便于扩展；","类，它可以使用","类：","系列(九):如何优化","系列笔记(4)","系统变量所指定路径中的所有类库加载到内存中，开发者可以直接使用扩展类加载器。","系统服务端上的","系统的可用物理内存限制。","系统的可用虚拟内存限制；","系统自动设置线程名称","索引","索引列的顺序：选择性强的索引列放在前面","索引是对数据库表中一列或多列的值进行排序的一种结构","索引的优化","紧接着魔数的","累计起来。","线程","线程\");","线程一定先执行吗","线程一定先执行吗？","线程不安全的示例","线程中","线程中断抛异常","线程为守护线程。","线程之间的共享变量存储在主内存（main","线程之间的通信现在有了下面四种方式：","线程休眠10秒","线程休眠2秒","线程优先级依赖于操作系统的支持，然而，不同的操作系统支持的线程优先级并不相同，不能很好的和","线程优先级控制并不可靠。","线程内存模型确保所有线程看到这个变量的值是一致的。","线程写","线程出现停顿的时候通过","线程号，也就是前面转化的","线程同时运行。","线程启动规则：在线程上对","线程在等待一个本身(在其上调用","线程基础","线程安全。hashmap","线程安全很难定义。我所看到的对于线程安全的定义都太过抽象。","线程安全的","线程安全的无界双端队列。底层采用双向链表。支持","线程安全的无界队列。底层采用单链表。支持","线程安全的有序","线程安全，","线程对共享变量修改的可见性","线程强制运行","线程快照是当前","线程执行","线程数多少才合理","线程数要合理","线程方法","线程是操作系统进行调度的基本单位。","线程是稀缺资源，如果无限制的创建，不仅会消耗系统资源，还会降低系统的稳定性，使用线程池可以进行统一的分配，调优和监控。但是要做到合理的利用线程池，必须对其原理了如指掌。","线程栈","线程栈的大小","线程栈还包含了当前方法的所有本地变量信息。线程中的本地变量对其它线程是不可见的。","线程比进程划分更细，所以执行开销更小，并发性更高","线程比进程划分更细，所以执行开销更小，并发性更高。","线程池","线程池中的线程初始化","线程池容量的动态调整","线程池是一种多线程处理形式，处理过程中将任务添加到队列，然后在创建线程后自动启动这些任务。","线程池状态","线程池的关闭","线程池的具体实现原理，大致从以下几个方面讲解：","线程池？","线程生命周期","线程生命周期中有哪些状态？各状态之间如何切换？","线程用","线程的","线程的休眠","线程的启动方法。","线程的强制执行","线程的执行实体。","线程的礼让","线程的过程。","线程简介","线程结束规则：线程中的任何操作都必须在其他线程检测到该线程已经结束之前执行，或者从","线程耗费的","线程自动释放其占有的对象锁，并等待","线程获取锁失败","线程获取锁失败，线程被封装成","线程获取锁是一个自旋的过程，当且仅当","线程被中断抛出被中断异常","线程被永久堵塞在一个等待进入同步块的状态，因为其他线程总是能在它之前持续地对该同步块进行访问。","线程读这个","线程调度器是一个操作系统服务，它负责为","线程过多","线程运行","线程间同步机制","线程间是如何通信的？","线程间通信","线程间通信机制","线程间通过写","线程面试题","组合和继承有什么区别","终止(terminated)","终止的线程。","终止线程","终结器规则：对象的构造函数必须在启动该对象的终结器之前执行完成。","经常出现大对象会提前触发垃圾收集以获取足够的连续空间分配给大对象。","结束并获取它的执行结果。","结构发生变化的次数。结构发生变化是指添加或者删除至少一个元素的所有操作，或者是调整内部数组的大小，仅仅只是设置元素的值不算结构发生变化。","结构图和流程可以大致说下。","结论：java","结论：你给","结论：由于同步容器不能彻底保证线程安全，且性能不高，所以不建议使用。如果想使用线程安全的容器，可以考虑","给了三种选择：串行收集器、并行收集器、并发收集器。","给变量赋值可以正常编译通过","给对象添加一个引用计数器，当对象增加一个引用时计数器加","统一的管理","统计垃圾回收堆的行为：","继承","继承。","继承了","继承于","继承于abstractmap，实现了map、cloneable、java.io.serializable接口。","继承于dictionary，实现了map、cloneable、java.io.serializable接口。","继承自","维护一个计数器","维护一定数量的连接，减少创建连接的时间","维护一对相关的锁。一个是读锁；一个是写锁。将读写锁分开，有利于提高并发效率。","维护了一个","维护了一个双链表。由双链表的特性可以知道，它是按照元素的插入顺序保存的。所以，这就是","综上所述，就是","综上所述，我们大概可以清楚：serialversionuid","综合","缓存","缓存中。","缓存中。再想象一下，线程","缓存中。它甚至可能将缓存中的部分内容读到它的内部寄存器中，然后在寄存器中执行操作。当","缓存中。然后修改了这个对象。只要","缓存中。现在线程","缓存中一次。","缓存中和","缓存中，然后将","缓存可以在某一时刻将数据局部写到它的内存中，和在某一时刻局部刷新它的内存。它不会再某一时刻读/写整个缓存。通常，在一个被称作“cach","缓存层。实际上，绝大多数的现代","缓存没有被刷新会主存，对象修改后的版本对跑在其它","缓存重复查询的数据","缓存：","编写","编程中的变量有所区别，它包括了实例字段、静态字段和构成数组对象的元素，但不包括局部变量与方法参数，因为后者是线程私有的，不会被共享，自然就不会存在竞争问题。为了获得较好的执行效能，java","编程思想","编程思想（think","编程思想（第","编者序","编译书籍，完成以后会打开一个","编译很可能会生成不同的","编译电子书","编译等运行数据。","缩短停顿时间是以牺牲吞吐量和年轻代空间来换取的：年轻代空间变小，垃圾回收变得频繁，导致吞吐量下降。","缺点","缺点：","缺点：aba问题；改进：版本号","网络层","网络层针对的还是主机之间的数据传输服务，而主机之间可以有很多链路，数据链路层（data","网络层（network","网络编程","网络通信","网络通信面经","老年代","老年代使用：标记","老年代空间不足的常见场景为前文所讲的大对象直接进入老年代、长期存活的对象进入老年代等，当执行","老年代（old","而","而c/c++为编译型语言，源代码经过编译和链接后生成可执行的二进制代码。","而不是","而为","而为正数时这个数值表示初始化或下一次扩容的大小，相当于一个阈值；即如果hash表的实际大小>=sizectl，则进行扩容，默认情况下其是当前concurrenthashmap容量的0.75倍；","而关闭连接时，服务器收到对方的","而其get操作步骤也比较简单，定位seg","而可重入锁","而因程序死循环导致的不断创建对象","而如果sizectl为","而如果sizectl大于等于0，则使用cas操作比较sizectl的值是否是","而导致程序不能工作的时间长度。","而高吞吐量则可以高效率地利用","聚集所以和非聚集索引区别","聚集索引和非聚集索引区别","聚集索引，数据按索引顺序存储，子结点存储真实的物理数据","能否被序列化（transient）","能响应中断，这是相较于","能够在等待","能支持处理器提供的","能直接关联到的对象，速度很快，需要停顿。","自定义类加载器实现","自旋","自旋实现原子操作的更新。","自旋锁","自身的序列化机制。","自适应的调节策略（gc","至此，tcp","至此，可能大部分朋友已经明白了","节使用的","节点存在","若为树，则在树中通过","若为链表，则在链表中通过","若刚才读取到的version值为当前数据库中的version值相等时才更新，否则重试更新操作，直到更新成功。","范围在高位多","获取","获取hash值对应的node节点位置，此时通过一个循环实现。有以下几种情况：","获取共享锁","获取到了锁，而线程","获取可中断的共享锁","获取可中断的独占锁","获取同步状态失败后就会调用","获取堆快照。","获取独占锁","获取超时等待式的共享锁","获取超时等待式的独占锁","获取锁出队","获取锁和释放锁都是自动的），以避免死锁。","获取锁失败，线程进入等待状态等待获取独占式锁","获得当前节点的上一个节点","虚拟机不适用引用计数算法。","虚拟机中的","虚拟机中的方法区是用永久代实现的，永久代中存放的为一些","虚拟机会保证一个类的","虚拟机使用该算法来判断对象是否可被回收，在","虚拟机内每一条线程正在执行的方法堆栈的集合，生成线程快照的主要目的是定位线程出现长时间停顿的原因，如线程间死锁、死循环、请求外部资源导致的长时间等待等。","虚拟机内部划分为线程栈和堆。","虚拟机外部实现，以便让应用程序自己决定如何去获取所需要的类。","虚拟机并不是永远地要求对象的年龄必须达到","虚拟机当前时刻的线程快照。","虚拟机把它当成永久代来进行垃圾回收，jdk","虚拟机控制，所以由应用程序来控制它是更好的选择（也就是说不要让你的程序依赖于线程的优先级）。","虚拟机栈","虚拟机栈中入栈和出栈的过程。","虚拟机栈中引用的对象","虚拟机栈内存大小：","虚拟机栈类似，它们之间的区别只不过是本地方法栈为本地方法服务。","虚拟机的","虚拟机装载类的空间不够，超过","虚拟机规范中并没有强制约束何时进行加载，但是规范严格规定了有且只有下列五种情况必须对类进行初始化（加载、验证、准备都会随着发生）：","虚拟机进程状态信息。","虚拟机里的线程都拥有自己的线程栈。这个线程栈包含了这个线程调用的方法当前执行点相关的信息。一个线程仅能访问自己的线程栈。一个线程创建的本地变量对其它线程不可见，仅自己可见。即使两个线程执行同样的代码，这两个线程任然在在自己的线程栈中的代码来创建本地变量。因此，每个线程拥有每个本地变量的独有版本。","虚拟机：jvm","虚拟机：第","虽然","虽然不是继承于","虽然应用程序和","表来说，最核心的能力在于将","表示","表示双链表中节点的个数，初始为","表示堆空间溢出。","表示层","表示层（present","表示当前线程池的状态，它是一个","表示方法区和运行时常量池溢出。","被","被写回到主存中去。","被初始化为","被动引用","被定义在","被序列化的类必须属于","被弱引用关联的对象一定会被垃圾收集器回收，也就是说它只能存活到下一次垃圾收集发生之前。","被强引用关联的对象不会被垃圾收集器回收。","被软引用关联的对象，只有在内存不够的情况下才会被回收。","被选择的区域已经被回收和压缩到图中显示的深蓝色区和深绿色区中。","要保存的副本变量为","要保证所有的数据包都可以到达，所以，必需要有重传机制。","要删除的节点有一个孩子节点","要大，访问速度更慢。最好使用","要实现这个需求，java中提供了unsafe类，它提供了三个函数，分别用来操作基本类型int和long，以及引用类型object。方法的实现位于unsafe.cpp中","要点","要点：创建线程和线程上下文切换有一定开销。","要长很多，因此，如果在","覆盖","覆盖关系中，调用方法体是根据对象的类型（对象对应存储空间类型）来决定；而重载关系是根据调用时的实参表与形参表来选择方法体的。","覆盖只能由一个方法或只能由一对方法产生关系；重载是多个方法之间的关系。","覆盖是子类和父类之间的关系，是垂直关系；重载是同一个类中方法之间的关系，是水平关系。","覆盖是指派生类函数覆盖基类函数。覆盖一个方法并对其重写，以达到不同的作用。","覆盖索引：覆盖所有要查询的字段的值","覆盖要求参数列表相同；重载要求参数列表不同","观察加入","观察线程","视图","解决方案","解决方案：","解决这个问题你可以使用","解决这个问题可以使用","解决饥饿问题的方法","解析阶段目标是将常量池的符号引用替换为直接引用的过程。","解析（resolution）","解读","计数增加1，有可能触发transfer操作(扩容)。","计算","计算concurrenthashmap的元素大小是一个有趣的问题，因为他是并发操作的，就是在你计算size的时候，他还在并发的插入数据，可能会导致你计算出来的size和你实际的size有相差（在你return","计算hashcode()，就要防止键值改变，如果键值在放入时和获取时返回不同的hashcode的话，那么就不能从hashmap中找到你想要的对象。","计算key的hash值，即调用speed()方法计算hash值；","计算新的","计算机网络分层一般有三种划分体系：osi","计算机网络如何分层？","计算过程是这样的：","认为：a","认为：b","让所有存活的对象都向一端移动，然后直接清理掉端边界以外的内存。","记录正在执行的虚拟机字节码指令的地址（如果正在执行的是本地方法则为空）。","记录的指针，如果成功，那么当前线程获得锁，如果失败，那么使用自旋获得锁。","设备尚未将数据发出","设定最大缓存空间","设短了，会导致可能并没有丢就重发。于是重发的就快，会增加网络拥塞，导致更多的超时，更多的超时导致更多的重发","设置","设置/获取线程优先级","设置/获取线程名称","设置。","设置不允许冒险，那这时也要改为进行一次","设置为","设置为空，a","设置休眠时间","设置值是否允许担保失败，如果允许那么就会继续检查老年代最大可用的连续空间是否大于历次晋升到老年代对象的平均大小，如果大于，将尝试着进行一次","设置停顿标识，待所有线程都进入安全点（safepoint）时，应用线程暂停，串行","设置失败，则说明","设置成","设置成比较大的值（比如","设置死循环，是为了不断尝试","设置示例：","设置线程名称","设置节点状态位为","设计者认为这方法很容易发生碰撞。为什么这么说呢？不妨思考一下，在","设长了，重发就慢，丢了老半天才重发，没有效率，性能差；","访问","访问寄存器的速度远大于主存。","访问标志","访问缓存层的速度快于访问主存的速度，但通常比访问内部寄存器的速度还要慢一点。一些","试想一下如果在做","诞生以前）中与","该区域可能抛出以下异常：","该变量没有包含在具有其他变量的不变式中","该方法既可以让其他同优先级或者高优先级的线程得到执行的机会，也可以让低优先级的线程得到执行机会。","该等待同步的节点处于共享模式","该等待同步的节点处于独占模式","该类对应的","该类所有的实例都已经被回收，也就是","该节点的线程可能由于超时或被中断而处于被取消(作废)状态，一旦处于这个状态，节点状态将一直处于","该节点的线程处于等待条件状态，不会被当作是同步队列上的节点,直到被唤醒(signal)，设置其值为","该表在初次使用时初始化，并根据需要调整大小。分配时，长度总是2的幂。","该链为树","该链为链表","详细参数说明请参考官方文档：java","详解","语言规范的要求。","说下垃圾回收的流程，然后针对性地说下如何在代码中优化内存性能。","说明一下：","说明：syn","说明：即使是单核处理器也支持多线程。cpu","说明：当前节点的上一个节点是头指针，即意味着当前节点是队列中第一个节点。","说的有点抽象，下面会有一个代码的示例。对于","请你解释为什么重写equals还要重写hashcode？","请注意","读”线程之间不存在互斥关系。","读一个共享对象的变量","读内存中的公共状态来隐式进行通信。","读写分离","读写模式，如果文件不存在，会自动创建","读写锁在","读取","读取内容","读取实体为一个文件的压缩包","读取对象","读取时所有的字符串只能按照","读取是直接使用","读取的数字变为字符","读取第一个人的信息","读取第二个人的信息，意味着要空出第一个人的信息","读和","读和写的内存语义来实现线程之间的通信。","读操作","读锁","调优","调优原则","调优总结（5）：典型配置","调优概述","调用","调用之前执行（通过抛出","调用其他语言。）的代码实现的。jvm","调用时","调用线程主体","调用线程对象的","资料","资源。看下面的顺序：","资源敏感的场合，都可以优先考虑","资源限制","资源限制引发的问题","资源限制引来的问题：为了将代码执行速度加快将代码中串行执行的部分变成并发执行，因为资源受限，仍然在串行执行，这时候程序不仅不会加快，反而会变慢，因为增加了上下文切换和资源调度的时间。","资源限制指的是程序的执行速度受限于计算机硬件资源或软件资源，如服务器的带宽只有","资源限制是指在进行并发编程时，程序的执行速度受限于计算机硬件资源或软件资源。","资源，即使没有任何用也会做一些无用功。","超时时间结束，仍未获得锁返回","超时重传机制","超时重传机制是指：发送数据包在一定的时间周期内没有收到相应的","超过尝试次数，则对每个","超过最大值就不再扩充了，就只好随你碰撞去吧","足够。","路径","跳转：根据指定顺序寻找当前元素的下一个（下","跳过第一个人的信息","软引用：使用","轻量级锁是指当锁是偏向锁的时候，被另一个线程所访问，偏向锁就会升级为轻量级锁，其他线程会通过自旋的形式尝试获取锁，不会阻塞，提高性能。","轻量级锁：线程执行同步块之前，会在线程私有的栈帧中开辟用于存储锁记录的空间，称为","较高的线程，但是这些还不高，无法直接定位到具体的类。nid","辅助索引","辅助索引的叶子节点的data域记录着主键的值。","辅助配置","输入输出流io","输出","输出内存中的数据","输出内容相同。","输出指定","输出流","输出系统属性，等同于","输出结果:45cd","输出结果是父类中的静态变量","输出重定向","输出：结果就是出现如下异常信息。","过高","过高的情况下，查找响应的线程，一般定位都是用","运行时常量池","运行时常量池是方法区的一部分。","运行时数据区域","运行时计算生成，这种场景使用得最多得就是动态代理技术，在","运行用户代码时间","返回","返回反序排列的","返回大于或等于指定值的元素中最接近的元素","返回大于指定值的元素中最接近的元素","返回大于指定元素的子集","返回小于或等于指定值的元素中最接近的元素","返回小于指定值的元素中最接近的元素","返回小于指定元素的子集","返回必要的行","返回指定区间的子集","返回最后一个元素","返回特殊值（null","返回用于写操作的锁","返回用于读操作的锁","返回的执行结果。futur","返回第一个元素","返回调用处","还会创建一个内存屏障，内存屏障指令保证了所有","还可以利用一个","还是","还是线程","还有多层缓存，但这些对理解","还有多核。从这一点可以看出，在一个有两个或者多个","还没有调用","这三种锁是指锁的状态，并且是针对synchronized。在","这三种锁的状态是通过对象监视器在对象头中的字段来表明的。","这两点保证了内存屏障效果，","这个hashmap被结构修改的次数结构修改是那些改变hashmap中的映射数量或者修改其内部结构（例如，重新散列）的修改。","这个后缀是为了后续可以直接用","这个命令意思就是每隔","这个应该是","这个弱键的原理呢？大致上就是，通过","这个数组的默认大小为","这个方法使重调区域大小变得很容易，按需把它们调大或调小。","这个类加载器是由","这个类的","这个类，不过它在线程池的实现类","这个虚拟机参数来指定一个程序的","这个设计确实非常的巧妙，既省去了重新计算","这句编译器会提示“非法向前引用”","这四条字节码指令时，如果类没有进行过初始化，则必须先触发其初始化。最常见的生成这","这就是弱键如何被自动从","这张图片相对于上一张图片，滑动窗口偏移了","这是一个stop","这是学习计算机网络知识宏观层面必须要了解的核心点。知道了这些，对于网络的体系结构就基本上了解了。","这是理所当然的，因为","这样可灵活的往线程池中添加线程。","这样在获取变量的值的时候才能直接读取。","这样如果","这种方式，服务端线程迅速地返回去监听。因此，更多的客户端能够发送请求给服务端。这个服务也变得响应更快。","这种机制的重点是","这种类型的线程池特点是：","这篇文章对于基本数据类型和引用类型的内存存储讲述比较生动。","这类频繁自定义","这里用了两个锁，两个","这里的相等，包括类的","进制","进制数字","进制的，所以我们要获取线程的","进程","进程中最耗费","进程和线程","进程和线程关系及区别","进程就不会消失，所以此时可以设置一个守护线程，这样即使","进程挂起。","进程是一个实体，拥有独立的资源；而同一个进程中的多个线程共享进程的资源。","进程是具有一定独立功能的程序关于某个数据集合上的一次运行活动。进程是操作系统进行资源分配的基本单位。","进程结束了，此守护线程依然会继续执行。可以使用","进行","进行了具体的实现，这个方法是","进行了同步处理，而","进行了同步，它实际上是继承于","进行入队操作，核心方法在于","进行初始化，并且以当前","进行加锁，而是先通过","进行原子更新时可能出现的","进行序列化，当读取对象时，会调用被序列化类的无参构造方法去创建一个新的对象；然后再将被保存对象的字段的值分别填充到新对象中。这就是为什么在此次序列化过程中","进行扩容","进行检查时会发现它的值没有发生变化，但是实际上却变化了。aba","进行监控","进行线程赋值，还可能立即创建新的线程来执行任务。","进行读或写操作。","进行输入输出。","远程","连接。","连接复用，或者在调用对方","连接数等。","连接管道","连续输出的时间间隔","连续输出的次数","迭代器模式","迭代：反复访问元素，直到遍历完全部元素；","追加内容方式","适合经常产生冲突的情况","适用于对序列化后的数据要求有良好的可读性（转为","适用于对开发体验敏感，性能有要求的内外部系统。","适用于对性能敏感，对开发体验要求不高的内部系统。","适用场景","适配器模式","选择活性最低的区域，这些区域能够以最快的速度回收。然后这些区域会在年轻代垃圾回收过程中被回收。在日志中被指示为[gc","通俗来讲","通常情况下，当一个","通常，默认加载因子（0.75）在时间和空间成本之间提供了良好的平衡。较高的值会减少空间开销，但会增加查找成本（反映在大部分","通过","通过getobjectvolatile()方法获取指定偏移量上的hashentri","通过get获取hash表中的值时，首先需要获取key值的hash值。而在jdk1.8的concurrenthashmap中通过spread()方法获取。","通过一个双向的","通过一个类的全限定名来获取定义此类的二进制字节流。","通过上面日志分析得出，psyounggen、paroldgen、pspermgen","通过上面的遍历未找到","通过两张图非常明显看出","通过以下代码可知","通过以下技术来保证：","通过子类引用父类的静态字段，不会导致子类初始化。","通过实现","通过对","通过对象输入输出流来实现序列化和反序列化：","通过引入","通过引入锁升级的机制来实现高效synchronized。","通过循环遍历链表获取对应值。","通过数据流和控制流分析，确保程序语义是合法、符合逻辑的。","通过数组定义来引用类，不会触发此类的初始化。该过程会对数组类进行初始化，数组类是一个由虚拟机自动生成的、直接继承自","通过添加","通过给每个线程分配时间切片的算法来循环执行任务，当前任务执行一个时间片后会切换到下一个任务。但是，在切换前会保持上一个任务的状态，以便下次切换回这个任务时，可以再加载这个任务的状态。所以任务从保存到再加载的过程就是一次上下文切换。","通过继承","通过调用","通过重复利用已创建的线程降低线程创建和销毁造成的消耗。","通过链表将产生碰撞冲突的元素组织起来，在","造成死循环.","遇到","避免一个线程同时获取多个锁","避免一个线程在锁内同时占用多个资源，尽量保证每个锁只占用一个资源","避免创建不需要的线程，比如任务很少，但是创建了很多线程来处理，这样会造成大量线程都处于等待状态。","避免嵌套锁，只在需要的地方使用锁和避免无限期等待是避免死锁的通常办法。","避免死锁的方法","避免活锁","那么","那么能创建多少线程呢？这里有一个公式：","那么通过","那么问题就来了，成功过程中需要","部分时间是空闲的。","都不是线程安全的。","都包含一系列的寄存器，它们是","都参与到","都可以用来让一组线程等待其它线程。与","都可以访问主存。主存通常比","都填的是","都是","都是一个","都是由","都是这个","都有一个","都有一定大小的缓存层。cpu","都移动到新的","配合","配置","配置完成后，可按照一下步骤进行：","配置，来限制使用内存：","采取的是分代缓存，经常使用的对象放入","采用上面的写法，在没有锁的情况下实现了","采用了分段锁机制。jdk8","采用了分段锁（segment），每个分段锁维护着几个桶（hashentry），多个线程可以同时访问不同分段锁上的桶，从而使并发度更高（并发度就是segment的个数）。","采用了链地址法。链地址法，简单来说，就是数组加链表的结合。在每个数组元素上都一个链表结构，当数据被","采用并发","采用散列函数，查找速度较快","采用正则表达式将包含有单引号(')、分号(;)、注释符号（","释放","释放共享锁","释放所有锁，回退，并且等待一段随机的时间后重试。这个和简单的加锁超时类似，不一样的是只有死锁已经发生了才回退，而不会是因为加锁的请求超时了。虽然有回退和等待，但是如果有大量的线程竞争同一批锁，它们还是会重复地死锁（编者注：原因同超时类似，不能从根本上减轻竞争）。","释放独占锁","释放锁的时候会唤醒后继节点；","里的第一个节点，直接命中；","里面查找。","里面，threadloc","里面，最终标记阶段需要把","里；","重传机制","重传机制主要有两种：","重写了","重新标记：为了修正并发标记期间因用户程序继续运作而导致标记产生变动的那一部分对象的标记记录，需要停顿。","重点关注：","重要属性","重要方法","重载和覆盖是java多态性的不同表现方式。","重载和覆盖有什么区别","重载和覆盖的区别主要有以下几个方面：","重载和重写","重载是在一个类中多态性的一种表现，是指一个类中定义了多个同名的方法，它们或有不同的参数个数或有不同的参数类型","重量级锁是指当锁为轻量级锁的时候，另一个线程虽然是自旋，但自旋不会一直持续下去，当自旋一定次数的时候，还没有获取到锁，就会进入阻塞，该锁膨胀为重量级锁。重量级锁会让其他申请的线程进入阻塞，性能降低。","针对首个节点进行加锁操作，而不是segment，进一步减少线程冲突","链接（linking）","链表头插。jdk1.8","链表头节点","链表实现的阻塞队列。","链表尾插。","链表尾节点","链表死循环问题","链表长度","锁","锁一共有","锁，但是获取了锁还不够，如果队列此时为空，还需要队列不为空（notempty）这个条件（condition）。","锁，但是获取了锁还不够，如果队列此时已满，还需要队列不是满的（notfull）这个条件（condition）。","错误示例","错误，并触发","键值对\"都是存储在","长度","长度比较小时)，从而引起的碰撞。","问题","问题。","问题。这个类的","问题。那么分析","问题定位","问题的解决思路就是使用版本号。在变量前面追加上版本号，每次变量更新的时候把版本号加一，那么","问题：三次握手有什么用？什么是三次握手？为什么需要三次握手？","问题：为什么需要重传机制？tcp","问题：什么是滑动窗口？滑动窗口原理是什么？","问题：四次挥手有什么用？什么是四次挥手？为什么建立连接是三次握手，关闭连接确是四次挥手呢？","问题：计算机网络如何分层？各层的作用是什么？各层的主要协议、设备分别是什么？","间接地实现了","阅读这篇文章了解如何使用阻塞队列实现生产者","队列中的元素数量","队列容量","队列容量，其限制了队列中最多允许的元素个数；","队列等待","队头","队尾","防止sql注入","阶段被回收、让对象在年轻代多存活一段时间以及不要创建过大的对象及数组。","阻塞和非阻塞","阻塞和非阻塞关注的是程序在等待调用结果（消息，返回值）时的状态.","阻塞状态。线程阻塞的线程状态等待监视器锁定。处于阻塞状态的线程正在等待监视器锁定，以便在调用","阻塞等待此操作，直到成功或者超时指定时间。","阻塞等待此操作，直到这个操作成功；","阻塞调用就像是打电话，通话不结束，不能放下。","阻塞调用是指调用结果返回之前，当前线程会被挂起。调用线程只有在得到结果之后才会返回。","阻塞队列不接受空值，当你尝试向队列中添加空值的时候，它会抛出","阻塞队列的实现都是线程安全的，所有的查询方法都是原子的并且使用了内部锁或者其他形式的并发控制。","阻塞（blocked）","降低","降低资源消耗","限定了存储元素必须是枚举值。","除了可以在","除了在编译期生成的常量，还允许动态生成，例如","除堆栈外，显示关于锁的附加信息","隔离性","集中在互联网站或","集合不允许有重复元素。","集合类都是快速失败的，这就意味着当集合被改变且一个线程在使用迭代器遍历集合的时候，迭代器的","需要保存当前线程的本地数据，程序指针等状态，并加载下一个要执行的线程的本地数据，程序指针等。这个开关被称为“上下文切换”。","需要和","需要在操作值的时候检查下值有没有发生变化，如果没有发生变化则更新，但是如果一个值原来是","需要在缓存层存放一些东西的时候，存放在缓存中的内容通常会被刷新回主存。cpu","需要将结果写回到主存中去时，它会将内部寄存器的值刷新到缓存中，然后在某个时间点将值刷新回主存。","需要强调的是：linkedhashset","需要注意的是，如果删除的是目录，且目录不为空，直接用","需要注意的是，这并不会让线程终止，一旦从休眠中唤醒线程，线程的状态将会被改变为","需要注意的是：threadlocalmap.entri","需要老年代的内存空间作担保，如果出现了","需要读取主存时，它会将主存的部分读到","需要调用","需要通过三次握手、四次挥手原则建立和断开双向连接。","静态常量，可以根据所在操作系统选取对应的分隔符。","静态成员变量跟随着类定义一起也存放在堆上。","静态方法的同步是指同步在该方法所在的类对象上。因为在","静态集合类","非以上状态。","非公平锁是指多个线程获取锁的顺序并不是按照申请锁的顺序，有可能后申请的线程比先申请的线程优先获取锁。有可能，会造成优先级反转或者饥饿现象。","非公平锁版本。","非同步","非常的空闲。它可以做一些别的事情。通过改变操作的顺序，就能够更好的使用","非聚集索引，叶节点仍然是索引节点，只不过有一个指针指向对应的数据块。","非阻塞算法","非阻塞调用就像是发短信，发完短信后，就可以做其他事，短信来了，手机会提醒。","非阻塞调用指在不能立刻得到结果之前，该调用不会阻塞当前线程。","非默认序列化机制","面向对象和面向过程有什么区别","面向对象技术","面向对象有哪些特征","面向服务端应用，将来替换","面向连接是指","面向连接的","面试问题hashmap/hashtable/concurrhashmap","项数据来确定这个类的继承关系。","顺序。","顺序之后，在每次访问一个节点时，会将这个节点移到链表尾部，保证链表尾部是最近访问的节点，那么链表首部就是最近最久未使用的节点。","顺序；","顾名思义，是一个阻塞队列。","饥饿问题最经典的例子就是哲学家问题。如图所示：有五个哲学家用餐，每个人要获得两把叉子才可以就餐。当","饥饿（starvation）","首先会判断sizectl的值，如果其小于0，则说明其正在进行初始化或扩容操作，则不执行任何操作，调用yield()方法使当前线程返回等待状态；","首先会检查hash表的大小是否大于等于min_treeify_capacity，默认值为64，如果小于该值，则表示不需要转化为红黑树结构，直接将hash表扩容即可。","首先对各个","首先将线程池的状态设置成","首先根据","首先毫无疑问，在没有锁的机制下可能需要借助","首先，在table中添加一个元素时，如果添加元素的链表节点个数超过8，则会触发链表向红黑树结构转换。","首先，在每个线程","首先，声明共享变量为","首先，要知道有三种","验证字节流是否符合","验证是链接阶段的第一步，它的目标是确保","验证（verification）","高16位异或低16位，后&(length","高16位异或低16位，然后再h&(length","高优先级的","高优先级线程吞噬所有的低优先级线程的","高的线程打印其","高级特性与最佳实践（第","魔数与","默认为","默认值，从而导致在反序列化时抛出","默认初始化","默认初始容量为","默认加载因子0.75","默认加载因子0.75；以","默认安装","默认序列化机制","默认情况下，创建线程池之后，线程池中是没有线程的，需要提交任务之后才会创建线程。","默认的并发级别为16，也就是说默认创建16个","💡","（1）","（1）cm","（1）g1","（1）三次握手有什么用？","（1）使用","（1）值传递:","（1）加锁顺序","（1）四次挥手有什么用？","（1）堆空间被分割为三块空间","（1）执行","（1）扩大永久代空间","（1）找出","（1）有一个可序列化类","（1）检查程序，看是否有死循环或不必要地重复创建大量对象。有则改之。","（1）超时重传机制","（2）","（2）cm","（2）equals是object类提供的方法之一。每一个java类都继承自object类，所以每一个对象都具有equals这个方法。object类中定义的equlas(object)方法是直接使用“==”运算符比较的两个对象，所以在没有覆盖equlas(object)方法的情况下，equlas(object)与“==”运算符一样，比较的是引用。","（2）jstack","（2）什么是三次握手？","（2）什么是四次挥手？","（2）使用内存分析工具（visualvm、mat、jprofil","（2）加锁时限","（2）年老代收集","（2）并发标记阶段","（2）开发过程中，对","（2）引用传递：在方法调用中，传递的是对象（也可以看作是对象的地址），这时形参与实参的对象所指向同一块存储单元，因此对形参的修改就会影响实参的值。","（2）快速重传机制","（2）扩大堆内存空间","（2）找出该进程内最耗费","（2）清理应用程序中","（3）","（3）hashcode()方法是从object类中继承过来的，它也用来鉴定两个对象是否相等。object类中的hashcode()方法返回对象在内存中地址转换成的一个int值，所以如果没有重写hashcode()方法，任何对象的hashcode()方法都是不想等的。","（3）为什么建立连接是三次握手，关闭连接确是四次挥手呢？","（3）为什么需要三次握手？","（3）使用","（3）定位","（3）年老代收集","（3）年轻代收集","（3）根据分析图，重点是确认内存中的对象是否是必要的，分清究竟是是内存泄漏（memori","（3）死锁检测","（3）重新标记阶段","（4）","（4）复制/清理阶段","（4）年轻代回收之后","（5）","（5）复制/清理阶段之后","（hashmap","（nonblock","（一）加载","（一）对象优先在","（一）工作过程","（一）强引用","（一）调用","（三）准备","（三）实现","（三）弱引用","（三）空间分配担保失败","（三）长期存活的对象进入老年代","（二）大对象直接进入老年代","（二）好处","（二）老年代空间不足","（二）软引用","（二）验证","（五）concurr","（五）初始化","（五）空间分配担保","（先进先出）","（四）jdk","（四）动态对象年龄判定","（四）虚引用","（四）解析","（注意：对于独占模式，如果需要信号，释放就相当于调用头的","）上传到这个分支，然后就可以使用这个网址访问","）的语句给替换掉来防止sql注入","，但接收方根据最近一次关于发送方一次要发送多少字节确认自己有足够空间。发送方会立即尝试发送。上图中的","，写写的过程是互斥的。独享锁与共享锁也是通过","，即内存溢出，是一个常见的","，因为","，是读取操作创建的锁。其他用户可以并发读取数据，但任何事务都不能对数据进行修改（获取数据上的排他锁），直到已释放所有共享锁。","，此时使用","，用于在","，用于设置执行多少次不压缩的","，用指针或者slice。go的指针不能运算。slic","，类似动态数组","，而是使用","，能被克隆。","，那么我们可以通过这个","；","＝","？","？设置参数，开启慢日志功能，得到耗时超过一定时间的sql"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"编者序","keywords":"","body":"StudyNotes\n本人Java工程师一名，此笔记记录本人掌握的所有知识点，以备复习。\n"},"javacore/basics.html":{"url":"javacore/basics.html","title":"Java基础特性","keywords":"","body":"Java基础特性\n\nJava基本概念\nJava语言有哪些优点：\nJava和Go的区别\nJava和 C/C++有什么异同\nJava中的clone方法有什么作用\n\n\n面向对象技术\n面向对象有哪些特征\n重载和覆盖有什么区别\n\n\n关键字\nstatic关键字有哪些作用\nvolatile有什么作用\n\n\n基本类型与运算\n值传递与引用传递有哪些区别\n\n\n字符串与数组\n“==”、equals和hashCode有什么区别\n请你解释为什么重写equals还要重写hashcode？\nString、StringBuffer、StringBuilder和StringTokenizer有什么区别\n\n\n\n​        \nJava基本概念\nJava语言有哪些优点：\n\nJava为纯面向对象语言\n平台无关性。Java为解释型语言，程序源代码经过Java编译器编译成字节码，然后由JVM解释执行。\nJava提供了很多内置的类库。提供了对多线程的支持，提供了对网络通信的支持，最重要的是提供了垃圾回收器。\n提供了对Web应用开发的支持\n具有较好的安全性和健壮性。安全性是指Java运行环境不允许Java程序访问当前浏览器上下文以外的内容。健壮性是指Java提供很多编译时的类型检查和异常处理。\n去除了C++语言中难易理解，容易混淆的特性。例如头文件，指针\n\njava和Go的区别\n\n函数重载。\nGo上不允许函数重载，必须具有方法和函数的唯一名称。java允许函数重载。\n\n多态。\nJava默认允许多态。而Go没有。\n\n继承。\nGo语言的继承通过匿名组合完成：基类以Struct的方式定义，子类只需要把基类作为成员放在子类的定义中，支持多继承。\nJava的继承通过extends关键字完成，不支持多继承。\n\n传递的值。\njava传递的值为栈中的值（值传递+引用传递）。其中：值传递是对基本型变量而言的,传递的是该变量的一个副本,改变副本不影响原变量. 引用传递一般是对于对象型变量而言的,传递的是该对象地址的一个副本, 并不是原对象本身 。 所以对引用对象进行操作会同时改变原对象.一般认为,java内的传递都是值传递.    \ngo就是值传递，所以它是通过指针来完成引用传递\n\n数组。\nJava中直接支持数组这种数据结构，除此之外还有通过数组结构延伸ArrayList.Class int[]，String.Class 的char[] 等。   go 中也支持数组这种数据结构，因为是值传递，所以如何在其他方法中真实的修改数据呢 ，用指针或者Slice。go的指针不能运算。slice 在这方面就是一个数组的view, 但是他的具体结构类似ArrrayList.Class , 它有pre，len ,cap ，类似动态数组\n\n\nptr : 指定原来数组的首地址值\nlen : 目前slice的长度\ncap : slice的容量 可指定或者是2的倍数\n​\nJava和 C/C++有什么异同\nJava与C++都是面向对象语言，都使用了面向对象思想（封装，继承，多态）\n不通点：\n\nJava为解释型语言，其运行过程为：Java为解释型语言，程序源代码经过Java编译器编译成字节码，然后由JVM解释执行。\n而C/C++为编译型语言，源代码经过编译和链接后生成可执行的二进制代码。   java执行速度比C/C++慢，但是java能够块平台，而C/C++不能\n\nJava为纯面向对象语言，所有代码（包括函数、变量等）必须在类中实现，\n\n与C/C++语言相比，Java语言中没有指针的概念\n\nJava不支持多重继承，但是Java语言引入了接口的概念，可以同时实现多个接口。由于接口也具有多态特性，因此在Java语言中可以通过实现多个接口来实现与C++语言中多重继承类似的目的。\n\nJava语言提供了垃圾回收器来实现垃圾的自动回收，Java语言中虽然没有析构函数，但却引入了一个finalize()方法，当垃圾回收期将要释放无用对象的内存时，会首先调用该对象的finalize()方法，因此，开放人员不需要关心也不需要知道对象所占的内存空间何时会被释放。\n\n\n \n什么是构造函数\nJava中的clone方法有什么作用\nJava中所有的类默认都继承自Object类，而Object类中提供了一个clone()方法。这个方法的作用是返回一个Object对象的复制。这个复制函数返回的是一个新的对象，而不是一个引用。\n引申：浅复制和深复制有什么区别\n浅复制：被复制对象的所有变量都含有与原来对象相同的值，而所有对其他对象的引用仍然指向原来的对象。换言之，浅复制仅仅复制所考虑的对象，而不复制它所引用的对象。\n深复制：被复制对象的所有变量都含有与原来对象相同的值，除去那些引用其他对象的变量。那些引用其他对象的变量将指向被复制的新对象，而不再是原有的那些被引用的对象。换言之，深复制把复制的对象所引用的对象都复制了一遍。\n什么是反射机制\n面向对象技术\n面向对象和面向过程有什么区别\n面向对象有哪些特征\n\n封装        将对象的属性进行私有化，只提供公共的get和set方法\n继承        子类不仅可以有父类的属性和方法，还可以有自己的属性和方法\n多态         重载和重写\n\n什么是继承\n组合和继承有什么区别\n多态的实现机制是什么\n重载和覆盖有什么区别\n重载和覆盖是Java多态性的不同表现方式。\n\n重载是在一个类中多态性的一种表现，是指一个类中定义了多个同名的方法，它们或有不同的参数个数或有不同的参数类型\n覆盖是指派生类函数覆盖基类函数。覆盖一个方法并对其重写，以达到不同的作用。\n\n重载和覆盖的区别主要有以下几个方面：\n\n覆盖是子类和父类之间的关系，是垂直关系；重载是同一个类中方法之间的关系，是水平关系。\n覆盖只能由一个方法或只能由一对方法产生关系；重载是多个方法之间的关系。\n覆盖要求参数列表相同；重载要求参数列表不同\n覆盖关系中，调用方法体是根据对象的类型（对象对应存储空间类型）来决定；而重载关系是根据调用时的实参表与形参表来选择方法体的。\n\n抽象类（abstract class）与接口（interface）有什么异同\n如何获取父类的类名\nthis与supper有什么区别\n关键字\nbreak、continue以及return有什么区别\nfinal、finally和finalize有什么区别\nstatic关键字有哪些作用\nstatic关键字主要有两种作用：第一，为某特定数据类型或对象分配单一的存储空间，而与创建对象的个数无关。第二，实现某个方法或属性与类而不是对象关联在一起，也就是说，在不创建对象的情况下就可以通过类来直接调用方法或使用类的属性。\n具体而言，在Java语言中，static主要有4种使用情况：成员变量，成员方法，代码块和内部类。\n\nstatic成员变量\nstatic成员方法\nstatic代码块\nstatic内部类\n\nvolatile有什么作用\nvolatile是一个类型修饰符，它是被用来修饰被不同线程访问和修改的变量。被volatile类型定义的变量，系统每次用到它时都是直接从对应的内存当中提取，而不会利用缓存，在使用了volatile修饰成员变量后，所有线程在任何时候所看到的变量的值都是相同的。\ninstanceof有什么作用\nstrictfp有什么作用\n关键字strictfp是strict float point 的缩写，指的是精确浮点，它用来确保浮点数运算的准确性。\n基本类型与运算\nJava提供了哪些基本数据类型\n什么是不可变类\n值传递与引用传递有哪些区别\n（1）值传递:  在方法调用中，实参会把它的值传递给形参，形参只是用实参的值初始化一个临时的存储单元，因此形参与实参虽然有着相同的值，但是却有着不同的存储单元，因此对形参的改变不会影响实参的值。\n（2）引用传递：在方法调用中，传递的是对象（也可以看作是对象的地址），这时形参与实参的对象所指向同一块存储单元，因此对形参的修改就会影响实参的值。\n在java语言中，基本数据类型在床底参数是都是按值传递，而包装类型在传递参数时是按引用传递。\n\n从概念方面来说\n基本类型：变量名指向具体的数值。\n引用类型：变量名指向内存数据对象的内存地址\n\n\n从内存方面来说\n基本类型：变量在声明之后，Java就会立即分配给他内存空间\n引用类型：它以特殊的方式（类似C指针）向对象实体（具体的值），这类变量声明时不会分配内存，只是存储了一个内存地址\n\n\n从使用方面来说\n基本类型：使用时需要赋具体值，判断时使用==号。\n引用类型：使用时可以赋null，判断时使用equals方法。\n\n\n\n\n:point_right: 扩展阅读：Java 基本数据类型和引用类型\n这篇文章对于基本数据类型和引用类型的内存存储讲述比较生动。\n\nMath类中round、ceil和floor方法的功能各是什么\n字符串与数组\n字符串创建与存储的机制是什么\n“==”、equals和hashCode有什么区别\n（1） \"==\"运算符用来比较两个变量的值是否相等。也就是说，该运算符用于比较变量对应的内存中所存储的数值是否相同，要比较两个基本类型的数据或两个引用变量是否相等，只能使用“==”运算符。\n（2）equals是Object类提供的方法之一。每一个Java类都继承自Object类，所以每一个对象都具有equals这个方法。Object类中定义的equlas(Object)方法是直接使用“==”运算符比较的两个对象，所以在没有覆盖equlas(Object)方法的情况下，equlas(Object)与“==”运算符一样，比较的是引用。\n​      相比“==”运算符，equlas(Object)方法的特殊之处就在于它可以被覆盖，所以可以通过覆盖的方法让它不是比较引用而是比较数据内容，例如String类的equlas方法是用于比较两个独立对象的内容是否相同，即堆中的内容是否相同。\n​      如果一个类没有自己定义equlas()方法，它默认的equal()方法(从Object类继承的)就是使用\"==\"运算符，也是在比较两个变量指向的对象是否是同一对象，此时使用equlas()方法和使用“==”运算符会得到相同的结果。若比较的是两个独立的对象，则总返回false。如果编写的类希望能够比较该类创建的两个实例对象的内容是否相同，那么必须覆盖equlas()方法。由开发人员自己编写代码来决定在什么情况下即可认为连个对象的内容是相同的。\n（3）hashCode()方法是从Object类中继承过来的，它也用来鉴定两个对象是否相等。Object类中的hashCode()方法返回对象在内存中地址转换成的一个int值，所以如果没有重写hashCode()方法，任何对象的hashCode()方法都是不想等的。\n​    hashCode()方法的返回值和equals()方法的关系如下：\n​    如果x.equals(y)返回true，即两个对象根据equals方法比较是相等的，那么调用者两个对象中任意一个对象的hashCode()方法都必须产生同样的整数结果。如果x.equals(y)返回false，即两个对象根据equals()方法比较是不相等的，那么x和y的hashCode()方法的返回值有可能相等，也有可能不相等。\n   反之，hashCode()方法的返回值不相等，一等能推出equals()方法的返回值也不相等，而hashCode()方法的返回值相等，equals()方法的返回值则可能相等，也可能不相等。\n请你解释为什么重写equals还要重写hashcode？\nHashMap中，如果要比较key是否相等，要同时使用这两个函数！\n因为自定义的类的hashcode()方法继承于Object类，其hashcode码为默认的内存地址，这样即便有相同含义的两个对象，比较也是不相等的。HashMap中的比较key是这样的，先求出key的hashcode(),比较其值是否相等，若相等再比较equals(),若相等则认为他们是相等的。若equals()不相等则认为他们不相等。如果只重写hashcode()不重写equals()方法，当比较equals()时只是看他们是否为同一对象（即进行内存地址的比较）,所以必定要两个方法一起重写。HashMap用来判断key是否相等的方法，其实是调用了HashSet判断加入元素 是否相等。重载hashCode()是为了对同一个key，能得到相同的Hash Code，这样HashMap就可以定位到我们指定的key上。重载equals()是为了向HashMap表明当前对象和key上所保存的对象是相等的，这样我们才真正地获得了这个key所对应的这个键值对。\nString、StringBuffer、StringBuilder和StringTokenizer有什么区别\n\nString： 如果要操作的数据量比较小，应优先使用String类\nStringBuilder：如果是在单线程下操作大量数据，应优先使用StringBuilder。（效率最高）\nStringBuffer：  如果是在多线程下操作大量数据，应优先使用StringBuffer。（线程安全）在一个字符串需要经常被修改时使用。\n\nJava中数组是不是对象\nlength属性与length()方法有什么区别\n在java语言中，\n\n数组提供了length属性来获取数组的长度\nlength()方法是针对字符串而言的\nsize()方法是针对泛型集合而言的，用于查看泛型中有多少个元素\n\n异常处理\n"},"javacore/advanced.html":{"url":"javacore/advanced.html","title":"Java高级特性","keywords":"","body":"Java高级特性\nJava正则\nJava JDK8的新特性\n"},"javacore/container/container.html":{"url":"javacore/container/container.html","title":"容器概述","keywords":"","body":"容器\n\n一、概览\nCollection\n1.List\n2.Set\n3.Queue\n\n\nMap\n\n\n二、容器中的设计模式\n迭代器模式\n适配器模式\n\n\n\n一、Java容器概述\n容器主要包括 Collection 和 Map 两种，Collection 存储着对象的集合，而 Map 存储着键值对（两个对象）的映射表。\nCollection\n  \n1.List\n\nArrayList：基于动态数组实现，支持随机访问。\nVector：和ArrayList类似，但它是线程安全的。\nLinkedList：基于双向链表实现，只能顺序访问，但是可以快速地在链表中间插入和删除元素。不仅如此，LinkedList还可以用做栈、队列和双向队列。\n\n2.Set\n\nTreeSet: 基于红黑树实现，支持有序性操作，例如根据一个范围查找元素的操作。但是查找效率不如HashSet，HashSet查找的时间复杂度为O(1)，TreeSet则为O(logN)。\nHashSet：基于哈希表实现，支持快速查找，但不支持有序性操作。并且失去了元素的插入顺序信息，也就是说使用Iterator遍历HashSet得到的结果是不确定的。\nLinkedHashSet：具有HashSet的查找效果，且内部使用双向链表维护元素的插入顺序。\n\n3.Queue\n\nLinkedList：可以用它来实现双向队列。\nPriorityQueue：基于堆结构实现，可以用它来实现优先队列。\n\nMap\n  \n\nTreeMap：基于红黑树实现。\nHashMap：基于哈希表实现。\nHashTable： 和HashMap类似，但它是线程安全的，这意味着同一时刻多个线程可以同时写入HashTable并且不会导致数据不一致。它是遗留类，不应该去使用它。现在可以使用ConcurrentHashMap来支持线程安全，并且ConcurrentHashMap的效率会更高，因为ConcurrentHashMap引入了分段锁。\nLinkedHashMap：使用双向链表来维护元素的顺序，顺序为插入顺序或者最近最少使用（LRU）顺序。\n\n二、容器框架\n\n三、容器中的设计模式\n迭代器模式\n   \nCollection 继承了 Iterable接口，其中的iterator()方法能够产生一个Iterator对象，通过这个对象就可以迭代遍历Collection中的元素。\n从 JDK 1.5 之后可以使用 foreach 方法来遍历实现 Iterable 接口的聚合对象。\nList list = new ArrayList<>();\nlist.add(\"a\");\nlist.add(\"b\");\nfor(String item : list){\n  System.out.println(item);  \n}\n\n适配器模式\njava.util.Arrays#aslist() 可以把数组类型转换为List类型。\n@SafeVarargs\npublic static  List asList(T... a)\n\n应该注意的是asList() 的参数为泛型的变长参数，不能使用基本类型数组作为参数，只能使用相应的包装类型数组。\nIntege[] arr = {1,2,3};\nList list = Array.asList(arr);\n\n也可以使用以下方式调用 asList() :\nList list = Arrays.asList(1,2,3);\n\n \n"},"javacore/container/container-list.html":{"url":"javacore/container/container-list.html","title":"Collection之List","keywords":"","body":"容器\n\nJava容器collection之List\nArrayList 类\nVector 类\nCopyOnWriteArrayList\nLinkedList 类\n\n\n\nJava容器collection之List\nList 概述\nList 接口定义：\npublic interface List extends Collection\n\nList 主要方法：\n\n\n\n\nList 常见子类：\n\nArrayList - 动态数组。\nLinkedList - 双链表。\n\nArrayList 类\nArrayList要点\nArrayList是一个数组队列，相当于动态数组。与Java中的数组相比，ArrrayList的容量可以动态增长。\nArrayList定义：\npublic class ArrayList extends AbstractList\n          implements List, RandomAccess, Cloneable, java.io.Serializable\n\n从ArrayList的定义，不难看出ArrayList的一些基本特性：\n\nArrayList 实现了 List 接口，能对它进行队列操作。\nArrayList 实现了 RandmoAccess 接口，即提供了随机访问功能。RandmoAccess 是 java 中用来被List实现，为List提供快速访问功能的。在 ArrayList 中，我们即可以通过元素的序号快速获取元素对象；这就是快速随机访问。\nArrayList 实现了 Cloneable 接口，即覆盖了函数 clone() ，能被克隆。\nArrayList 实现 java.io.Serializable 接口，这意味着 ArrayList 支持序列化，能通过序列化去传输。\nArrayList 是非线程安全的。\n\nArrayList原理\n1.概览\nArrayLis 包含了两个重要的元素： elementData 和 size。\ntransient Object[] elementData;\nprivate int size;\n\n\nelementData 它保存了添加到 ArrayList 中的元素。 这个数组的默认大小为 10。\nsize 则是动态数组的实际大小。\n\nArrayList 实现了 RandomAccess 接口，因此支持随机访问。 这是理所当然的，因为 ArrayList 是基于数组实现的。\n2.序列化\nArrayList 具有动态扩容特性，因此保存元素的数组不一定都会被使用，那么就没必要全部进行序列化。ArrayList 重写了 writeObject() 和 readObject() 来控制只序列化数组中有元素填充那部分内容。\n3.扩容\n添加元素时使用 ensureCapacityInternal() 方法来保证容量足够，如果不够时，需要使用 grow() 方法进行扩容，新容量的大小为 oldCapacity + (oldCapacity >> 1)，也就是旧容量的 1.5 倍。\n扩容操作需要调用 Arrays.copyOf() 把原数组整个复制到新数组中，因此最好在创建 ArrayList 对象时就指定大概的容量大小，减少扩容操作的次数。\npublic boolean add(E e) {\n    ensureCapacityInternal(size + 1);  // Increments modCount!!\n    elementData[size++] = e;\n    return true;\n}\n\nprivate void ensureCapacityInternal(int minCapacity) {\n    if (elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA) {\n        minCapacity = Math.max(DEFAULT_CAPACITY, minCapacity);\n    }\n\n    ensureExplicitCapacity(minCapacity);\n}\n\nprivate void ensureExplicitCapacity(int minCapacity) {\n    modCount++;\n\n    // overflow-conscious code\n    if (minCapacity - elementData.length > 0)\n        grow(minCapacity);\n}\n\nprivate void grow(int minCapacity) {\n    // overflow-conscious code\n    int oldCapacity = elementData.length;\n    int newCapacity = oldCapacity + (oldCapacity >> 1);\n    if (newCapacity - minCapacity  0)\n        newCapacity = hugeCapacity(minCapacity);\n    // minCapacity is usually close to size, so this is a win:\n    elementData = Arrays.copyOf(elementData, newCapacity);\n}\n\n4.删除元素\n需要调用 System.arraycopy() 将 index+1 后面的元素都复制到 index 位置上，复制的代价很高。\npublic E remove(int index) {\n    rangeCheck(index);\n\n    modCount++;\n    E oldValue = elementData(index);\n\n    int numMoved = size - index - 1;\n    if (numMoved > 0)\n        System.arraycopy(elementData, index+1, elementData, index, numMoved);\n    elementData[--size] = null; // clear to let GC do its work\n\n    return oldValue;\n}\n\n5. Fail-Fast\nmodCount 用来记录 ArrayList 结构发生变化的次数。结构发生变化是指添加或者删除至少一个元素的所有操作，或者是调整内部数组的大小，仅仅只是设置元素的值不算结构发生变化。\n在进行序列化或者迭代等操作时，需要比较操作前后 modCount 是否改变，如果改变了需要抛出 ConcurrentModificationException。\nprivate void writeObject(java.io.ObjectOutputStream s)\n    throws java.io.IOException{\n    // Write out element count, and any hidden stuff\n    int expectedModCount = modCount;\n    s.defaultWriteObject();\n\n    // Write out size as capacity for behavioural compatibility with clone()\n    s.writeInt(size);\n\n    // Write out all elements in the proper order.\n    for (int i=0; i\nVector 类\n\n1.同步    它的实现与ArrayList类似，但是使用了synchronized进行同步\n\n与 ArrayList 的比较\n\nVector 是同步的，因此开销就比 ArrayList 要大，访问速度更慢。最好使用 ArrayList 而不是 Vector，因为同步操作完全可以由程序员自己来控制；\nVector 每次扩容请求其大小的 2 倍空间，而 ArrayList 是 1.5 倍。\n\n\n替代方案\n\n可以使用 Collections.synchronizedList(); 得到一个线程安全的 ArrayList。\nList list = new ArrayList<>();\nList synList = Collections.synchronizedList(list);\n\n\n也可以使用 concurrent 并发包下的 CopyOnWriteArrayList 类。\n\n\nList list = new CopyOnWriteArrayList<>();CopyOnWriteArrayList\n\n\n\nCopyOnWriteArrayList\n读写分离\n写操作在一个复制的数组上进行，读操作还是在原始数组中进行，读写分离，互不影响。\n写操作需要加锁，防止并发写入时导致写入数据丢失。\n写操作结束之后需要把原始数组指向新的复制数组。\npublic boolean add(E e){\n  final ReentrantLock lock = this.lock;\n  lock.lock();\n  try {\n        Object[] elements = getArray();\n        int len = elements.length;\n        Object[] newElements = Arrays.copyOf(elements, len + 1);\n        newElements[len] = e;\n        setArray(newElements);\n        return true;\n   } finally {\n        lock.unlock();\n   }\n}\n\n@SuppressWarnings(\"unchecked\")\nprivate E get(Object[] a, int index) {\n    return (E) a[index];\n}\n读写分离\nCopyOnWriteArrayList 在写操作的同时允许读操作，大大提高了读操作的性能，因此很适合读多写少的应用场景。\n但是 CopyOnWriteArrayList 有其缺陷：\n\n内存占用：在写操作时需要复制一个新的数组，使得内存占用为原来的两倍左右；\n数据不一致：读操作不能读取实时性的数据，因为部分写操作的数据还未同步到读数组中。\n\n所以 CopyOnWriteArrayList 不适合内存敏感以及对实时性要求很高的场景。\nLinkedList 类\nLinkedList要点\nLinkedList 基于双向链表实现。由于是双向链表，那么它的顺序访问会非常高效，而随机访问效率比较低。\nLinkedList 定义：\npublic class LinkedList\n    extends AbstractSequentialList\n    implements List, Deque, Cloneable, java.io.Serializable\n\n从 LinkedList 的定义，可以得出 LinkedList 的一些基本特性：\n\nLinkedList 是一个继承于 AbstractSequentialList 的双向链表。它也可以被当作堆栈、队列或双端队列进行操作。\nLinkedList 实现 List 接口，能对它进行队列操作。\nLinkedList 实现 Deque 接口，即能将 LinkedList 当作双端队列使用。\nLinkedList 实现了 Cloneable 接口，即覆盖了函数 clone()，能被克隆。\nLinkedList 实现 java.io.Serializable 接口，这意味着 LinkedList 支持序列化。\nLinkedList 是非线程安全的。\n\nLinkedList原理\nLinkedList 包含两个重要的成员：first 和 last。\n// 链表长度\ntransient int size = 0;\n\n// 链表头节点\ntransient Node first;\n\n// 链表尾节点\ntransient Node last;\n\n\nsize 表示双链表中节点的个数，初始为 0。\nfirst 和 last 分别是双链表的头节点和尾节点。\n\nNode 则表示链表中的实例。Node 中包含三个元素：prev, next, item。其中，prev 是该节点的上一个节点，next 是该节点的下一个节点，item 是该节点所包含的值。\nprivate static class Node {\n    E item;\n    Node next;\n    Node prev;\n    ...\n}\n\n  \n小结\n\nArrayList 基于动态数组实现，LinkedList 基于双向链表实现；\nArrayList 支持随机访问，所以访问速度更快；LinkedList 在任意位置添加删除元素更快；\nArrayList 基于数组实现，存在容量限制，当元素数超过最大容量时，会自动扩容；LinkedList 基于双链表实现，不存在容量限制；\nArrayList 和 LinkedList 都不是线程安全的。\n\n资料\n\nJava 编程思想（第 4 版）\nhttps://www.cnblogs.com/skywang12345/p/3308556.html\nhttp://www.cnblogs.com/skywang12345/p/3308807.html\n\n \n"},"javacore/container/container-set.html":{"url":"javacore/container/container-set.html","title":"Collection之Set","keywords":"","body":"容器\n\nJava容器collection之Set\nHashSet 类\nTreeSet 类\nLinkedHashSet 类\nEnumSet 类\n\n\n\nJava容器collection之Set\nSet架构\n\n\n\n\n\nSet 继承了 Collection 的接口。实际上 Set 就是 Collection，只是行为略有不同：Set 集合不允许有重复元素。\nSortedSet 继承了 Set 的接口。SortedSet 中的内容是排序的唯一值，排序的方法是通过比较器(Comparator)。\nNavigableSet 继承了 SortedSet 的接口。相比于 NavigableSet 有一系列的导航方法；如\"获取大于/等于某值的元素\"、“获取小于/等于某值的元素”等等。\nAbstractSet 是一个抽象类，它继承于 AbstractCollection，AbstractCollection 实现了 Set 中的绝大部分函数，为 Set 的实现类提供了便利。\nHashSet 类依赖于 HashMap，它实际上是通过 HashMap 实现的。HashSet 中的元素是无序的。\nTreeSet 类依赖于 TreeMap，它实际上是通过 TreeMap 实现的。TreeSet 中的元素是有序的。\nLinkedHashSet 类具有 HashSet 的查找效率，且内部使用链表维护元素的插入顺序。\nEnumSet 中所有元素都必须是指定枚举类型的枚举值。\n\nSet 接口\nSet 接口定义如下：\npublic interface Set extends Collection {}\n\nSet 继承了 Collection 的接口。实际上，Set 就是 Collection，二者提供的方法完全相同。\nSortedSet 接口\nSortedSet 接口定义如下：\npublic interface SortedSet extends Set {}\n\nSortedSet 接口新扩展的方法：\n\ncomparator - 返回 Comparator\nsubSet - 返回指定区间的子集\nheadSet - 返回小于指定元素的子集\ntailSet - 返回大于指定元素的子集\nfirst - 返回第一个元素\nlast - 返回最后一个元素\nspliterator\n\nNavigableSet 接口\nNavigableSet 接口定义如下：\npublic interface NavigableSet extends SortedSet {}\n\nNavigableSet 接口新扩展的方法：\n\nlower - 返回小于指定值的元素中最接近的元素\nhigher - 返回大于指定值的元素中最接近的元素\nfloor - 返回小于或等于指定值的元素中最接近的元素\nceiling - 返回大于或等于指定值的元素中最接近的元素\npollFirst - 检索并移除第一个（最小的）元素\npollLast - 检索并移除最后一个（最大的）元素\ndescendingSet - 返回反序排列的 Set\ndescendingIterator - 返回反序排列的 Set 的迭代器\nsubSet - 返回指定区间的子集\nheadSet - 返回小于指定元素的子集\ntailSet - 返回大于指定元素的子集\n\nAbstractSet 抽象类\nAbstractSet 抽象类定义如下：\npublic abstract class AbstractSet extends AbstractCollection implements Set {}\nAbstractSet 类提供 Set 接口的骨干实现，以最大限度地减少实现 Set 接口所需的工作。\n事实上，主要的实现已经在 AbstractCollection 中完成。\nHashSet 类\n采用散列函数，查找速度较快\nHashSet 类定义如下：\npublic class HashSet\n    extends AbstractSet\n    implements Set, Cloneable, java.io.Serializable {}\n\nHashSet 要点\n\nHashSet 类通过继承 AbstractSet 实现了 Set 接口中的骨干方法。\nHashSet 实现了 Cloneable，所以支持克隆。\nHashSet 实现了 Serializable，所以支持序列化。\nHashSet 中存储的元素是无序的。\nHashSet 允许 null 值的元素。\nHashSet 不是线程安全的。\n\nHashSet 原理\n// HashSet 的核心，通过维护一个 HashMap 实体来实现 HashSet 方法\nprivate transient HashMap map;\n\n// PRESENT 是用于关联 map 中当前操作元素的一个虚拟值\nprivate static final Object PRESENT = new Object();\n}\n\nHashSet 是基于 HashMap 实现的。\nHashSet 中维护了一个 HashMap 对象 map，HashSet 的重要方法，如 add、remove、iterator、clear、size 等都是围绕 map 实现的。\nPRESENT 是用于关联 map 中当前操作元素的一个虚拟值。\nHashSet 类中通过定义 writeObject() 和 readObject() 方法确定了其序列化和反序列化的机制。\nTreeSet 类\n对元素进行排序，使用红黑树\nTreeSet 类定义如下：\npublic class TreeSet extends AbstractSet\n    implements NavigableSet, Cloneable, java.io.Serializable {}\n\nTreeSet 要点\n\nTreeSet 类通过继承 AbstractSet 实现了 NavigableSet 接口中的骨干方法。\nTreeSet 实现了 Cloneable，所以支持克隆。\nTreeSet 实现了 Serializable，所以支持序列化。\nTreeSet 中存储的元素是有序的。排序规则是自然顺序或比较器（Comparator）中提供的顺序规则。\nTreeSet 不是线程安全的。\n\nTreeSet 源码\n// TreeSet 的核心，通过维护一个 NavigableMap 实体来实现 TreeSet 方法\nprivate transient NavigableMap m;\n\n// PRESENT 是用于关联 map 中当前操作元素的一个虚拟值\nprivate static final Object PRESENT = new Object();\n\nTreeSet 是基于 TreeMap 实现的。\nTreeSet 中维护了一个 NavigableMap 对象 map（实际上是一个 TreeMap 实例），TreeSet 的重要方法，如 add、remove、iterator、clear、size 等都是围绕 map 实现的。\nPRESENT 是用于关联 map 中当前操作元素的一个虚拟值。TreeSet 中的元素都被当成 TreeMap 的 key 存储，而 value 都填的是 PRESENT。\nLinkedHashSet 类\n既保证了顺序，又保证查找的速度\nLinkedHashSet 类定义如下：\npublic class LinkedHashSet\n    extends HashSet\n    implements Set, Cloneable, java.io.Serializable {}\n\nLinkedHashSet 要点\n\nLinkedHashSet 类通过继承 HashSet 实现了 Set 接口中的骨干方法。\nLinkedHashSet 实现了 Cloneable，所以支持克隆。\nLinkedHashSet 实现了 Serializable，所以支持序列化。\nLinkedHashSet 中存储的元素是按照插入顺序保存的。\nLinkedHashSet 不是线程安全的。\n\nLinkedHashSet 原理\nLinkedHashSet 有三个构造方法，无一例外，都是调用父类 HashSet 的构造方法。\npublic LinkedHashSet(int initialCapacity, float loadFactor) {\n    super(initialCapacity, loadFactor, true);\n}\npublic LinkedHashSet(int initialCapacity) {\n    super(initialCapacity, .75f, true);\n}\npublic LinkedHashSet() {\n    super(16, .75f, true);\n}\n\n需要强调的是：LinkedHashSet 构造方法实际上调用的是父类 HashSet 的非 public 构造方法。\nHashSet(int initialCapacity, float loadFactor, boolean dummy) {\n    map = new LinkedHashMap<>(initialCapacity, loadFactor);\n}\n\n不同于 HashSet public 构造方法中初始化的 HashMap 实例，这个构造方法中，初始化了 LinkedHashMap 实例。\n也就是说，实际上，LinkedHashSet 维护了一个双链表。由双链表的特性可以知道，它是按照元素的插入顺序保存的。所以，这就是 LinkedHashSet 中存储的元素是按照插入顺序保存的原理。\nEnumSet 类\nEnumSet 类定义如下：\npublic abstract class EnumSet> extends AbstractSet\n    implements Cloneable, java.io.Serializable {}\n\nEnumSet 要点\n\nEnumSet 类继承了 AbstractSet，所以有 Set 接口中的骨干方法。\nEnumSet 实现了 Cloneable，所以支持克隆。\nEnumSet 实现了 Serializable，所以支持序列化。\nEnumSet 通过 > 限定了存储元素必须是枚举值。\nEnumSet 没有构造方法，只能通过类中的 static 方法来创建 EnumSet 对象。\nEnumSet 是有序的。以枚举值在 EnumSet 类中的定义顺序来决定集合元素的顺序。\nEnumSet 不是线程安全的。\n\n资料\n\nJava 编程思想（Thinking in java）\n\n \n"},"javacore/container/container-queue.html":{"url":"javacore/container/container-queue.html","title":"Collection之Queue","keywords":"","body":"容器\n\nJava容器collection之Queue\nQueue 架构\nQueue 接口\nBlockingQueue 接口\nAbstractQueue 抽象类\nPriorityQueue 类\nPriorityBlockingQueue 类\nLinkedBlockingQueue 类\nArrayBlockingQueue 类\nSynchronousQueue\n\n\n\nJava容器collection之Queue\nQueue 架构\n\n\n\n\nQueue 接口\nQueue 接口定义如下：\npublic interface Queue extends Collection {}\n\nBlockingQueue 接口\nBlockingQueue 接口定义如下：\npublic interface BlockingQueue extends Queue {}\n\nBlockingQueue 顾名思义，是一个阻塞队列。\n在 BlockingQueue 中，如果获取队列元素但是队列为空时，会阻塞，等待队列中有元素再返回；如果添加元素时，如果队列已满，那么等到队列可以放入新元素时再放入。\nBlockingQueue 对插入操作、移除操作、获取元素操作提供了四种不同的方法用于不同的场景中使用：\n\n抛出异常；\n返回特殊值（null 或 true/false，取决于具体的操作）；\n阻塞等待此操作，直到这个操作成功；\n阻塞等待此操作，直到成功或者超时指定时间。\n\n总结如下：\n\n\n\n\nThrows exception\nSpecial value\nBlocks\nTimes out\n\n\n\n\nInsert\nadd(e)\noffer(e)\nput(e)\noffer(e, time, unit)\n\n\nRemove\nremove()\npoll()\ntake()\npoll(time, unit)\n\n\nExamine\nelement()\npeek()\nnot applicable\nnot applicable\n\n\n\nBlockingQueue 的各个实现类都遵循了这些规则。\nBlockingQueue 不接受 null 值元素。\nAbstractQueue 抽象类\nAbstractQueue 抽象类定义如下：\npublic abstract class AbstractQueue\n    extends AbstractCollection\n    implements Queue {}\n\nAbstractQueue 类提供 Queue 接口的骨干实现，以最大限度地减少实现 Queue 接口所需的工作。\nPriorityQueue 类\nPriorityQueue 类定义如下：\npublic class PriorityQueue extends AbstractQueue\n    implements java.io.Serializable {}\n\nPriorityQueue 要点\n\nPriorityQueue 实现了 Serializable，支持序列化。\nPriorityQueue 类是基于优先级堆实现的无界优先级队列。\nPriorityQueue 中的元素根据自然顺序或 Comparator 提供的顺序排序。\nPriorityQueue 不接受 null 值元素。\nPriorityQueue 不是线程安全的。\n\nPriorityBlockingQueue 类\nPriorityBlockingQueue 类定义如下：\npublic class PriorityBlockingQueue extends AbstractQueue\n    implements BlockingQueue, java.io.Serializable {}\n\nPriorityBlockingQueue 要点\n\nPriorityBlockingQueue 实现了 BlockingQueue，也是一个阻塞队列。\nPriorityBlockingQueue 实现了 Serializable，支持序列化。\nPriorityBlockingQueue 可以视为 PriorityQueue 的线程安全版本。\nPriorityBlockingQueue 不接受 null 值元素。\nPriorityBlockingQueue 的插入操作 put 方法不会 block，因为它是无界队列（take 方法在队列为空的时候会阻塞）。\n\nPriorityBlockingQueue 原理\nPriorityBlockingQueue 有两个重要成员：\nprivate transient Object[] queue;\nprivate final ReentrantLock lock;\n\n\nqueue 是一个 Object 数组，用于保存 PriorityBlockingQueue 的元素。\n而可重入锁 lock 则用于在执行插入、删除操作时，保证这个方法在当前线程释放锁之前，其他线程不能访问。\n\nPriorityBlockingQueue 的容量虽然有初始化大小，但是不限制大小，如果当前容量已满，插入新元素时会自动扩容。\nLinkedBlockingQueue 类\nLinkedBlockingQueue 类定义如下：\npublic class LinkedBlockingQueue extends AbstractQueue\n        implements BlockingQueue, java.io.Serializable {}\n\nLinkedBlockingQueue 要点\n\nLinkedBlockingQueue 实现了 BlockingQueue，也是一个阻塞队列。\nLinkedBlockingQueue 实现了 Serializable，支持序列化。\nLinkedBlockingQueue 是基于单链表实现的阻塞队列，可以当做无界队列也可以当做有界队列来使用。\nLinkedBlockingQueue 中元素按照插入顺序保存（FIFO）。\n\nLinkedBlockingQueue 原理\n// 队列容量\nprivate final int capacity;\n\n// 队列中的元素数量\nprivate final AtomicInteger count = new AtomicInteger(0);\n\n// 队头\nprivate transient Node head;\n\n// 队尾\nprivate transient Node last;\n\n// take, poll, peek 等读操作的方法需要获取到这个锁\nprivate final ReentrantLock takeLock = new ReentrantLock();\n\n// 如果读操作的时候队列是空的，那么等待 notEmpty 条件\nprivate final Condition notEmpty = takeLock.newCondition();\n\n// put, offer 等写操作的方法需要获取到这个锁\nprivate final ReentrantLock putLock = new ReentrantLock();\n\n// 如果写操作的时候队列是满的，那么等待 notFull 条件\nprivate final Condition notFull = putLock.newCondition();\n\n这里用了两个锁，两个 Condition，简单介绍如下：\n\ntakeLock 和 notEmpty 搭配：如果要获取（take）一个元素，需要获取 takeLock 锁，但是获取了锁还不够，如果队列此时为空，还需要队列不为空（notEmpty）这个条件（Condition）。\nputLock 需要和 notFull 搭配：如果要插入（put）一个元素，需要获取 putLock 锁，但是获取了锁还不够，如果队列此时已满，还需要队列不是满的（notFull）这个条件（Condition）。\n\nArrayBlockingQueue 类\nArrayBlockingQueue 类定义如下：\npublic class ArrayBlockingQueue extends AbstractQueue\n        implements BlockingQueue, java.io.Serializable {}\n\nArrayBlockingQueue 要点\n\nArrayBlockingQueue 实现了 BlockingQueue，也是一个阻塞队列。\nArrayBlockingQueue 实现了 Serializable，支持序列化。\nArrayBlockingQueue 是基于数组实现的无界阻塞队列。\n\nArrayBlockingQueue 原理\nArrayBlockingQueue 的重要成员如下：\n// 用于存放元素的数组\nfinal Object[] items;\n// 下一次读取操作的位置\nint takeIndex;\n// 下一次写入操作的位置\nint putIndex;\n// 队列中的元素数量\nint count;\n\n// 以下几个就是控制并发用的同步器\nfinal ReentrantLock lock;\nprivate final Condition notEmpty;\nprivate final Condition notFull;\n\nArrayBlockingQueue 实现并发同步的原理就是，读操作和写操作都需要获取到 AQS 独占锁才能进行操作。\n\n如果队列为空，这个时候读操作的线程进入到读线程队列排队，等待写线程写入新的元素，然后唤醒读线程队列的第一个等待线程。\n如果队列已满，这个时候写操作的线程进入到写线程队列排队，等待读线程将队列元素移除，然后唤醒写线程队列的第一个等待线程。\n\n对于 ArrayBlockingQueue，我们可以在构造的时候指定以下三个参数：\n\n队列容量，其限制了队列中最多允许的元素个数；\n指定独占锁是公平锁还是非公平锁。非公平锁的吞吐量比较高，公平锁可以保证每次都是等待最久的线程获取到锁；\n可以指定用一个集合来初始化，将此集合中的元素在构造方法期间就先添加到队列中。\n\nSynchronousQueue\nSynchronousQueue 定义如下：\npublic class SynchronousQueue extends AbstractQueue\n    implements BlockingQueue, java.io.Serializable {}\n\n\nSynchronousQueue 这个类，不过它在线程池的实现类 ScheduledThreadPoolExecutor 中得到了应用。\nSynchronousQueue 的队列其实是虚的，其不提供任何空间（一个都没有）来存储元素。数据必须从某个写线程交给某个读线程，而不是写到某个队列中等待被消费。\nSynchronousQueue 中不能使用 peek 方法（在这里这个方法直接返回 null），peek 方法的语义是只读取不移除，显然，这个方法的语义是不符合 SynchronousQueue 的特征的。\nSynchronousQueue 也不能被迭代，因为根本就没有元素可以拿来迭代的。\n虽然 SynchronousQueue 间接地实现了 Collection 接口，但是如果你将其当做 Collection 来用的话，那么集合是空的。\n当然，SynchronousQueue 也不允许传递 null 值的（并发包中的容器类好像都不支持插入 null 值，因为 null 值往往用作其他用途，比如用于方法的返回值代表操作失败）。\n\n资料\n解读 Java 并发队列 BlockingQueue\n \n \n"},"javacore/container/container-map.html":{"url":"javacore/container/container-map.html","title":"Map","keywords":"","body":"容器\n\nJava容器Map\nMap架构\nHashMap类\nConcurrentHashMap\nTreeMap\nWeakHashMap\nHashMap、Hashtable、TreeMap和WeakHashMap有什么区别\n用自定义类型作为HashMap或Hashtable的key需要注意哪些问题\n\n\n\nJava容器之Map\nMap架构\n\n\n\n\n\nMap 是映射接口，Map 中存储的内容是键值对(key-value)。\nAbstractMap 是继承于 Map 的抽象类，它实现了 Map 中的大部分 API。其它 Map 的实现类可以通过继承 AbstractMap 来减少重复编码。\nSortedMap 是继承于 Map 的接口。SortedMap 中的内容是排序的键值对，排序的方法是通过比较器(Comparator)。\nNavigableMap 是继承于 SortedMap 的接口。相比于 SortedMap，NavigableMap 有一系列的导航方法；如\"获取大于/等于某对象的键值对\"、“获取小于/等于某对象的键值对”等等。\nTreeMap 继承于 AbstractMap，且实现了 NavigableMap 接口；因此，TreeMap 中的内容是“有序的键值对”！\nHashMap 继承于 AbstractMap，但没实现 NavigableMap 接口；因此，HashMap 的内容是“键值对，但不保证次序”！\nHashtable 虽然不是继承于 AbstractMap，但它继承于 Dictionary(Dictionary 也是键值对的接口)，而且也实现 Map 接口；因此，Hashtable 的内容也是“键值对，也不保证次序”。但和 HashMap 相比，Hashtable 是线程安全的，而且它支持通过 Enumeration 去遍历。\nWeakHashMap 继承于 AbstractMap。它和 HashMap 的键类型不同，WeakHashMap 的键是弱键。\n\nHashMap类\nHashMap 要点\nHashMap 是一个散列表，它存储的内容是键值对(key-value)映射。\n基于哈希表的 Map 接口实现。该实现提供了所有可选的 Map 操作，并允许使用空值和空键。 （HashMap 类大致等同于 Hashtable，除了它是不同步的并且允许为空值。）这个类不保序；特别是，它的元素顺序可能会随着时间的推移变化。\nHashMap 的一个实例有两个影响其性能的参数：初始容量和负载因子。\n容量是哈希表中桶的数量，初始容量就是哈希表创建时的容量。\n加载因子是散列表在其容量自动扩容之前被允许的最大饱和量。当哈希表中的 entry 数量超过负载因子和当前容量的乘积时，散列表就会被重新映射（即重建内部数据结构），一般散列表大约是存储桶数量的两倍。\n通常，默认加载因子（0.75）在时间和空间成本之间提供了良好的平衡。较高的值会减少空间开销，但会增加查找成本（反映在大部分 HashMap 类的操作中，包括 get 和 put）。在设置初始容量时，应考虑映射中的条目数量及其负载因子，以尽量减少重新运行操作的次数。如果初始容量大于最大入口数除以负载因子，则不会发生重新刷新操作。\n如果许多映射要存储在 HashMap 实例中，使用足够大的容量创建映射将允许映射存储的效率高于根据需要执行自动重新散列以增长表。请注意，使用多个具有相同 hashCode() 的密钥是降低任何散列表性能的一个可靠方法。为了改善影响，当键是 Comparable 时，该类可以使用键之间的比较顺序来帮助断开关系。\nHashMap 不是并发安全的。\nHashMap 源码\nHashMap 定义\npublic class HashMap extends AbstractMap\n    implements Map, Cloneable, Serializable {\n\n    // 该表在初次使用时初始化，并根据需要调整大小。分配时，长度总是2的幂。\n    transient Node[] table;\n    // 保存缓存的 entrySet()。请注意，AbstractMap 字段用于 keySet() 和 values()。\n    transient Set> entrySet;\n    // map 中的键值对数\n    transient int size;\n    // 这个HashMap被结构修改的次数结构修改是那些改变HashMap中的映射数量或者修改其内部结构（例如，重新散列）的修改。\n    transient int modCount;\n    // 下一个调整大小的值（容量*加载因子）。\n    int threshold;\n    // 散列表的加载因子\n    final float loadFactor;\n}\n\n构造方法\npublic HashMap(); // 默认加载因子0.75\npublic HashMap(int initialCapacity); // 默认加载因子0.75；以 initialCapacity 初始化容量\npublic HashMap(int initialCapacity, float loadFactor); // 以 initialCapacity 初始化容量；以 loadFactor 初始化加载因子\npublic HashMap(Map m) // 默认加载因子0.75\n\nput 方法的实现\nput 方法大致的思路为：\n\n对 key 的 hashCode()做 hash，然后再计算 index;\n\n如果没碰撞直接放到 bucket 里；\n\n如果碰撞了，以链表的形式存在 buckets 后；\n\n如果碰撞导致链表过长(大于等于 TREEIFY_THRESHOLD)，就把链表转换成红黑树；\n\n如果节点已经存在就替换 old value(保证 key 的唯一性)\n\n如果 bucket 满了(超过 load factor * current capacity)，就要 resize。\n\n\n具体代码的实现如下：\npublic V put(K key, V value) {\n    return putVal(hash(key), key, value, false, true);\n}\n\nfinal V putVal(int hash, K key, V value, boolean onlyIfAbsent,\n                   boolean evict) {\n    Node[] tab; Node p; int n, i;\n    // tab 为空则创建\n    if ((tab = table) == null || (n = tab.length) == 0)\n        n = (tab = resize()).length;\n    // 计算 index，并对 null 做处理\n    if ((p = tab[i = (n - 1) & hash]) == null)\n        tab[i] = newNode(hash, key, value, null);\n    else {\n        Node e; K k;\n        // 节点存在\n        if (p.hash == hash &&\n            ((k = p.key) == key || (key != null && key.equals(k))))\n            e = p;\n        // 该链为树\n        else if (p instanceof TreeNode)\n            e = ((TreeNode)p).putTreeVal(this, tab, hash, key, value);\n        // 该链为链表\n        else {\n            for (int binCount = 0; ; ++binCount) {\n                if ((e = p.next) == null) {\n                    p.next = newNode(hash, key, value, null);\n                    if (binCount >= TREEIFY_THRESHOLD - 1) // -1 for 1st\n                        treeifyBin(tab, hash);\n                    break;\n                }\n                if (e.hash == hash &&\n                    ((k = e.key) == key || (key != null && key.equals(k))))\n                    break;\n                p = e;\n            }\n        }\n        // 写入\n        if (e != null) { // existing mapping for key\n            V oldValue = e.value;\n            if (!onlyIfAbsent || oldValue == null)\n                e.value = value;\n            afterNodeAccess(e);\n            return oldValue;\n        }\n    }\n    ++modCount;\n    if (++size > threshold)\n        resize();\n    afterNodeInsertion(evict);\n    return null;\n}\n\nget 方法的实现\n在理解了 put 之后，get 就很简单了。大致思路如下：\n\nbucket 里的第一个节点，直接命中；\n\n如果有冲突，则通过 key.equals(k)去查找对应的 entry\n\n若为树，则在树中通过 key.equals(k)查找，O(logn)；\n\n若为链表，则在链表中通过 key.equals(k)查找，O(n)。\n\n\n\n\n具体代码的实现如下：\npublic V get(Object key) {\n    Node e;\n    return (e = getNode(hash(key), key)) == null ? null : e.value;\n}\n\nfinal Node getNode(int hash, Object key) {\n        Node[] tab; Node first, e; int n; K k;\n    if ((tab = table) != null && (n = tab.length) > 0 &&\n        (first = tab[(n - 1) & hash]) != null) {\n        // 直接命中\n        if (first.hash == hash && // always check first node\n            ((k = first.key) == key || (key != null && key.equals(k))))\n            return first;\n        // 未命中\n        if ((e = first.next) != null) {\n            // 在树中 get\n            if (first instanceof TreeNode)\n                return ((TreeNode)first).getTreeNode(hash, key);\n            // 在链表中 get\n            do {\n                if (e.hash == hash &&\n                    ((k = e.key) == key || (key != null && key.equals(k))))\n                    return e;\n            } while ((e = e.next) != null);\n        }\n    }\n    return null;\n}\n\nhash 方法的实现\n在 get 和 put 的过程中，计算下标时，先对 hashCode 进行 hash 操作，然后再通过 hash 值进一步计算下标，如下图所示：\n\n\n\n\n在对 hashCode() 计算 hash 时具体实现是这样的：\nstatic final int hash(Object key) {\n    int h;\n    return (key == null) ? 0 : (h = key.hashCode()) ^ (h >>> 16);\n}\n\n可以看到这个方法大概的作用就是：高 16bit 不变，低 16bit 和高 16bit 做了一个异或。\n在设计 hash 方法时，因为目前的 table 长度 n 为 2 的幂，而计算下标的时候，是这样实现的(使用&位操作，而非%求余)：\n(n - 1) & hash\n\n设计者认为这方法很容易发生碰撞。为什么这么说呢？不妨思考一下，在 n - 1 为 15(0x1111) 时，其实散列真正生效的只是低 4bit 的有效位，当然容易碰撞了。\n因此，设计者想了一个顾全大局的方法(综合考虑了速度、作用、质量)，就是把高 16bit 和低 16bit 异或了一下。设计者还解释到因为现在大多数的 hashCode 的分布已经很不错了，就算是发生了碰撞也用 O(logn)的 tree 去做了。仅仅异或一下，既减少了系统的开销，也不会造成的因为高位没有参与下标的计算(table 长度比较小时)，从而引起的碰撞。\n如果还是产生了频繁的碰撞，会发生什么问题呢？作者注释说，他们使用树来处理频繁的碰撞(we use trees to handle large sets of collisions in bins)，在 JEP-180 中，描述了这个问题：\n\nImprove the performance of java.util.HashMap under high hash-collision conditions by using balanced trees rather than linked lists to store map entries. Implement the same improvement in the LinkedHashMap class.\n\n之前已经提过，在获取 HashMap 的元素时，基本分两步：\n\n首先根据 hashCode()做 hash，然后确定 bucket 的 index；\n\n如果 bucket 的节点的 key 不是我们需要的，则通过 keys.equals()在链中找。\n\n\n在 JDK8 之前的实现中是用链表解决冲突的，在产生碰撞的情况下，进行 get 时，两步的时间复杂度是 O(1)+O(n)。因此，当碰撞很厉害的时候 n 很大，O(n)的速度显然是影响速度的。\n因此在 JDK8 中，利用红黑树替换链表，这样复杂度就变成了 O(1)+O(logn)了，这样在 n 很大的时候，能够比较理想的解决这个问题，在 JDK8：HashMap 的性能提升一文中有性能测试的结果。\nresize 的实现\n当 put 时，如果发现目前的 bucket 占用程度已经超过了 Load Factor 所希望的比例，那么就会发生 resize。在 resize 的过程，简单的说就是把 bucket 扩充为 2 倍，之后重新计算 index，把节点再放到新的 bucket 中。\n当超过限制的时候会 resize，然而又因为我们使用的是 2 次幂的扩展(指长度扩为原来 2 倍)，所以，元素的位置要么是在原位置，要么是在原位置再移动 2 次幂的位置。\n怎么理解呢？例如我们从 16 扩展为 32 时，具体的变化如下所示：\n\n\n\n\n因此元素在重新计算 hash 之后，因为 n 变为 2 倍，那么 n-1 的 mask 范围在高位多 1bit(红色)，因此新的 index 就会发生这样的变化：\n\n\n\n\n因此，我们在扩充 HashMap 的时候，不需要重新计算 hash，只需要看看原来的 hash 值新增的那个 bit 是 1 还是 0 就好了，是 0 的话索引没变，是 1 的话索引变成“原索引+oldCap”。可以看看下图为 16 扩充为 32 的 resize 示意图：\n\n\n\n\n这个设计确实非常的巧妙，既省去了重新计算 hash 值的时间，而且同时，由于新增的 1bit 是 0 还是 1 可以认为是随机的，因此 resize 的过程，均匀的把之前的冲突的节点分散到新的 bucket 了。\nfinal Node[] resize() {\n    Node[] oldTab = table;\n    int oldCap = (oldTab == null) ? 0 : oldTab.length;\n    int oldThr = threshold;\n    int newCap, newThr = 0;\n    if (oldCap > 0) {\n        // 超过最大值就不再扩充了，就只好随你碰撞去吧\n        if (oldCap >= MAXIMUM_CAPACITY) {\n            threshold = Integer.MAX_VALUE;\n            return oldTab;\n        }\n        // 没超过最大值，就扩充为原来的 2 倍\n        else if ((newCap = oldCap = DEFAULT_INITIAL_CAPACITY)\n            newThr = oldThr  0) // initial capacity was placed in threshold\n        newCap = oldThr;\n    else {               // zero initial threshold signifies using defaults\n        newCap = DEFAULT_INITIAL_CAPACITY;\n        newThr = (int)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY);\n    }\n\n    // 计算新的 resize 上限\n    if (newThr == 0) {\n        float ft = (float)newCap * loadFactor;\n        newThr = (newCap [] newTab = (Node[])new Node[newCap];\n    table = newTab;\n    if (oldTab != null) {\n        // 把每个 bucket 都移动到新的 buckets 中\n        for (int j = 0; j  e;\n            if ((e = oldTab[j]) != null) {\n                oldTab[j] = null;\n                if (e.next == null)\n                    newTab[e.hash & (newCap - 1)] = e;\n                else if (e instanceof TreeNode)\n                    ((TreeNode)e).split(this, newTab, j, oldCap);\n                else { // preserve order\n                    Node loHead = null, loTail = null;\n                    Node hiHead = null, hiTail = null;\n                    Node next;\n                    do {\n                        next = e.next;\n                        // 原索引\n                        if ((e.hash & oldCap) == 0) {\n                            if (loTail == null)\n                                loHead = e;\n                            else\n                                loTail.next = e;\n                            loTail = e;\n                        }\n                        // 原索引+oldCap\n                        else {\n                            if (hiTail == null)\n                                hiHead = e;\n                            else\n                                hiTail.next = e;\n                            hiTail = e;\n                        }\n                    } while ((e = next) != null);\n                    // 原索引放到bucket里\n                    if (loTail != null) {\n                        loTail.next = null;\n                        newTab[j] = loHead;\n                    }\n                    // 原索引+oldCap放到bucket里\n                    if (hiTail != null) {\n                        hiTail.next = null;\n                        newTab[j + oldCap] = hiHead;\n                    }\n                }\n            }\n        }\n    }\n    return newTab;\n}\n\n小结\n我们现在可以回答开始的几个问题，加深对 HashMap 的理解：\n\n什么时候会使用 HashMap？他有什么特点？\n是基于 Map 接口的实现，存储键值对时，它可以接收 null 的键值，是非同步的，HashMap 存储着 Entry(hash, key, value, next)对象。\n\n你知道 HashMap 的工作原理吗？\n 通过 hash 的方法，通过 put 和 get 存储和获取对象。存储对象时，我们将 K/V 传给 put 方法时，它调用 hashCode 计算 hash 从而得到 bucket 位置，进一步存储，HashMap 会根据当前 bucket 的占用情况自动调整容量(超过 Load Facotr 则 resize 为原来的 2 倍)。获取对象时，我们将 K 传给 get，它调用 hashCode 计算 hash 从而得到 bucket 位置，并进一步调用 equals()方法确定键值对。如果发生碰撞的时候，Hashmap 通过链表将产生碰撞冲突的元素组织起来，在 Java 8 中，如果一个 bucket 中碰撞冲突的元素超过某个限制(默认是 8)，则使用红黑树来替换链表，从而提高速度。\n\n你知道 get 和 put 的原理吗？equals()和 hashCode()的都有什么作用？\n 通过对 key 的 hashCode()进行 hashing，并计算下标( n-1 & hash)，从而获得 buckets 的位置。如果产生碰撞，则利用 key.equals()方法去链表或树中去查找对应的节点\n\n你知道 hash 的实现吗？为什么要这样实现？\n 在 Java 1.8 的实现中，是通过 hashCode()的高 16 位异或低 16 位实现的：(h = k.hashCode()) ^ (h >>> 16)，主要是从速度、功效、质量来考虑的，这么做可以在 bucket 的 n 比较小的时候，也能保证考虑到高低 bit 都参与到 hash 的计算中，同时不会有太大的开销。\n\n如果 HashMap 的大小超过了负载因子(load factor)定义的容量，怎么办？\n 如果超过了负载因子(默认 0.75)，则会重新 resize 一个原来长度两倍的 HashMap，并且重新调用 hash 方法。\n\n\nConcurrentHashMap\nHashTable 和HashMap类似，但它是线程安全的，这意味着同一时刻多个线程可以同时写入HashTable并且不会导致数据不一致。它是遗留类，不应该去使用它。\n现在可以使用ConcurrentHashMap来支持线程安全，并且ConcurrentHashMap的效率会更高，因为ConcurrentHashMap引入了分段锁。\n1.存储结构\nstatic final class HashEntry{\n  final int hash;\n  final K key;\n  volatile V value;\n  volatile HashEntry next;\n}\n\nConcurrentHashMap 和 HashMap 实现上类似，最主要的差别是 ConcurrentHashMao 采用了分段锁（Segment），每个分段锁维护着几个桶（HashEntry），多个线程可以同时访问不同分段锁上的桶，从而使并发度更高（并发度就是Segment的个数）。\nSegment继承自 ReentrantLock\nstatic final class Segement extends ReentrantLock implements Serializable {\n      private static final long serialVersionUID = 2249069246763182397L;\n\n    static final int MAX_SCAN_RETRIES =\n        Runtime.getRuntime().availableProcessors() > 1 ? 64 : 1;\n\n    transient volatile HashEntry[] table;\n\n    transient int count;\n\n    transient int modCount;\n\n    transient int threshold;\n\n    final float loadFactor;\n}\n\nfinal Segment[] segments;\n\n默认的并发级别为16，也就是说默认创建16个 Segment。\nstatic final int DEFAULT_CONCURRENCY_LEVEL = 16;\n\n  \n2.size操作\n每个 Segment 维护了一个 count 变量来统计该 Segment 中的键值对个数。\n/**\n * The number of elements. Accessed only either within locks\n * or among other volatile reads that maintain visibility.\n */\ntransient int count;\n\n在执行 size 操作时，需要遍历所有 Segment 然后把 count 累计起来。\nConcurrentHashMap 在执行 size 操作时先尝试不加锁，如果连续两次不加锁操作得到的结果一致，那么可以认为这个结果是正确的。\n尝试次数使用 RETRIES_BEFORE_LOCK 定义，该值为 2，retries 初始值为 -1，因此尝试次数为 3。\n如果尝试的次数超过 3 次，就需要对每个 Segment 加锁。\n/**\n * Number of unsynchronized retries in size and containsValue\n * methods before resorting to locking. This is used to avoid\n * unbounded retries if tables undergo continuous modification\n * which would make it impossible to obtain an accurate result.\n */\nstatic final int RETRIES_BEFORE_LOCK = 2;\n\npublic int size() {\n    // Try a few times to get accurate count. On failure due to\n    // continuous async changes in table, resort to locking.\n    final Segment[] segments = this.segments;\n    int size;\n    boolean overflow; // true if size overflows 32 bits\n    long sum;         // sum of modCounts\n    long last = 0L;   // previous sum\n    int retries = -1; // first iteration isn't retry\n    try {\n        for (;;) {\n            // 超过尝试次数，则对每个 Segment 加锁\n            if (retries++ == RETRIES_BEFORE_LOCK) {\n                for (int j = 0; j  seg = segmentAt(segments, j);\n                if (seg != null) {\n                    sum += seg.modCount;\n                    int c = seg.count;\n                    if (c  RETRIES_BEFORE_LOCK) {\n            for (int j = 0; j \n3. JDK 1.8 的改动\nJDK 1.7 使用分段锁机制来实现并发更新操作，核心类为 Segment，它继承自重入锁 ReentrantLock，并发度与 Segment 数量相等。\nJDK 1.8 使用了 CAS 操作来支持更高的并发度，在 CAS 操作失败时使用内置锁 synchronized。\n并且 JDK 1.8 的实现也在链表过长时会转换为红黑树。\nLinkedHashMap\n存储结构\n继承自 HashMap，因此具有和 HashMap 一样的快速查找特性。\npublic class LinkedHashMap extends HashMap implements Map\n\n内部维护了一个双向链表，用来维护插入顺序或者 LRU 顺序。\n/**\n * The head (eldest) of the doubly linked list.\n */\ntransient LinkedHashMap.Entry head;\n\n/**\n * The tail (youngest) of the doubly linked list.\n */\ntransient LinkedHashMap.Entry tail;\n\naccessOrder 决定了顺序，默认为 false，此时维护的是插入顺序。\nfinal boolean accessOrder;\n\nLinkedHashMap 最重要的是以下用于维护顺序的函数，它们会在 put、get 等方法中调用。\nvoid afterNodeAccess(Node p) { }\nvoid afterNodeInsertion(boolean evict) { }\n\nafterNodeAccess()\n当一个节点被访问时，如果 accessOrder 为 true，则会将该节点移到链表尾部。也就是说指定为 LRU 顺序之后，在每次访问一个节点时，会将这个节点移到链表尾部，保证链表尾部是最近访问的节点，那么链表首部就是最近最久未使用的节点。\nvoid afterNodeAccess(Node e) { // move node to last\n    LinkedHashMap.Entry last;\n    if (accessOrder && (last = tail) != e) {\n        LinkedHashMap.Entry p =\n            (LinkedHashMap.Entry)e, b = p.before, a = p.after;\n        p.after = null;\n        if (b == null)\n            head = a;\n        else\n            b.after = a;\n        if (a != null)\n            a.before = b;\n        else\n            last = b;\n        if (last == null)\n            head = p;\n        else {\n            p.before = last;\n            last.after = p;\n        }\n        tail = p;\n        ++modCount;\n    }\n}\n\nafterNodeInsertion()\n在 put 等操作之后执行，当 removeEldestEntry() 方法返回 true 时会移除最晚的节点，也就是链表首部节点 first。\nevict 只有在构建 Map 的时候才为 false，在这里为 true。\nvoid afterNodeInsertion(boolean evict) { // possibly remove eldest\n    LinkedHashMap.Entry first;\n    if (evict && (first = head) != null && removeEldestEntry(first)) {\n        K key = first.key;\n        removeNode(hash(key), key, null, false, true);\n    }\n}\n\nremoveEldestEntry() 默认为 false，如果需要让它为 true，需要继承 LinkedHashMap 并且覆盖这个方法的实现，这在实现 LRU 的缓存中特别有用，通过移除最近最久未使用的节点，从而保证缓存空间足够，并且缓存的数据都是热点数据。\nprotected boolean removeEldestEntry(Map.Entry eldest) {\n    return false;\n}\n\nLRU 缓存\n以下是使用 LinkedHashMap 实现的一个 LRU 缓存：\n\n设定最大缓存空间 MAX_ENTRIES 为 3；\n使用 LinkedHashMap 的构造函数将 accessOrder 设置为 true，开启 LRU 顺序；\n覆盖 removeEldestEntry() 方法实现，在节点多于 MAX_ENTRIES 就会将最近最久未使用的数据移除。\n\nclass LRUCache extends LinkedHashMap {\n    private static final int MAX_ENTRIES = 3;\n\n    protected boolean removeEldestEntry(Map.Entry eldest) {\n        return size() > MAX_ENTRIES;\n    }\n\n    LRUCache() {\n        super(MAX_ENTRIES, 0.75f, true);\n    }\n}\n\npublic static void main(String[] args) {\n    LRUCache cache = new LRUCache<>();\n    cache.put(1, \"a\");\n    cache.put(2, \"b\");\n    cache.put(3, \"c\");\n    cache.get(1);\n    cache.put(4, \"d\");\n    System.out.println(cache.keySet());\n}\n\n[3, 1, 4]\n\nTreeMap\nTreeMap 要点\n\nTreeMap 基于红黑树实现。\nTreeMap 是有序的。它的排序规则是：根据 map 中的 key 的自然顺序或提供的比较器的比较顺序。\nTreeMap 不是并发安全的。\n\nTreeMap 源码\nput 方法\npublic V put(K key, V value) {\n    Entry t = root;\n    // 如果根节点为 null，插入第一个节点\n    if (t == null) {\n        compare(key, key); // type (and possibly null) check\n\n        root = new Entry<>(key, value, null);\n        size = 1;\n        modCount++;\n        return null;\n    }\n    int cmp;\n    Entry parent;\n    // split comparator and comparable paths\n    Comparator cpr = comparator;\n    // 每个节点的左孩子节点的值小于它；右孩子节点的值大于它\n    // 如果有比较器，使用比较器进行比较\n    if (cpr != null) {\n        do {\n            parent = t;\n            cmp = cpr.compare(key, t.key);\n            if (cmp  0)\n                t = t.right;\n            else\n                return t.setValue(value);\n        } while (t != null);\n    }\n    // 没有比较器，使用 key 的自然顺序进行比较\n    else {\n        if (key == null)\n            throw new NullPointerException();\n        @SuppressWarnings(\"unchecked\")\n            Comparable k = (Comparable) key;\n        do {\n            parent = t;\n            cmp = k.compareTo(t.key);\n            if (cmp  0)\n                t = t.right;\n            else\n                return t.setValue(value);\n        } while (t != null);\n    }\n    // 通过上面的遍历未找到 key 值，则新插入节点\n    Entry e = new Entry<>(key, value, parent);\n    if (cmp \nget 方法\npublic V get(Object key) {\n    Entry p = getEntry(key);\n    return (p==null ? null : p.value);\n}\n\nfinal Entry getEntry(Object key) {\n    // Offload comparator-based version for sake of performance\n    if (comparator != null)\n        return getEntryUsingComparator(key);\n    if (key == null)\n        throw new NullPointerException();\n    @SuppressWarnings(\"unchecked\")\n        Comparable k = (Comparable) key;\n    Entry p = root;\n    // 按照二叉树搜索的方式进行搜索，搜到返回\n    while (p != null) {\n        int cmp = k.compareTo(p.key);\n        if (cmp  0)\n            p = p.right;\n        else\n            return p;\n    }\n    return null;\n}\n\nremove 方法\npublic V remove(Object key) {\n    Entry p = getEntry(key);\n    if (p == null)\n        return null;\n\n    V oldValue = p.value;\n    deleteEntry(p);\n    return oldValue;\n}\nprivate void deleteEntry(Entry p) {\n    modCount++;\n    size--;\n\n    // 如果当前节点有左右孩子节点，使用后继节点替换要删除的节点\n    // If strictly internal, copy successor's element to p and then make p\n    // point to successor.\n    if (p.left != null && p.right != null) {\n        Entry s = successor(p);\n        p.key = s.key;\n        p.value = s.value;\n        p = s;\n    } // p has 2 children\n\n    // Start fixup at replacement node, if it exists.\n    Entry replacement = (p.left != null ? p.left : p.right);\n\n    if (replacement != null) { // 要删除的节点有一个孩子节点\n        // Link replacement to parent\n        replacement.parent = p.parent;\n        if (p.parent == null)\n            root = replacement;\n        else if (p == p.parent.left)\n            p.parent.left  = replacement;\n        else\n D:\\codes\\zp\\java\\database\\docs\\redis\\分布式锁.md           p.parent.right = replacement;\n\n        // Null out links so they are OK to use by fixAfterDeletion.\n        p.left = p.right = p.parent = null;\n\n        // Fix replacement\n        if (p.color == BLACK)\n            fixAfterDeletion(replacement);\n    } else if (p.parent == null) { // return if we are the only node.\n        root = null;\n    } else { //  No children. Use self as phantom replacement and unlink.\n        if (p.color == BLACK)\n            fixAfterDeletion(p);\n\n        if (p.parent != null) {\n            if (p == p.parent.left)\n                p.parent.left = null;\n            else if (p == p.parent.right)\n                p.parent.right = null;\n            p.parent = null;\n        }\n    }\n}\n\nTreeMap 示例\npublic class TreeMapDemo {\n\n    private static final String[] chars = \"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\".split(\" \");\n\n    public static void main(String[] args) {\n        TreeMap treeMap = new TreeMap<>();\n        for (int i = 0; i  it = treeMap.keySet().iterator();\n        for (int i = 0; i \nWeakHashMap\nWeakHashMap 的定义如下：\npublic class WeakHashMap\n    extends AbstractMap\n    implements Map {}\n\nWeakHashMap 继承了 AbstractMap，实现了 Map 接口。\n和 HashMap 一样，WeakHashMap 也是一个散列表，它存储的内容也是键值对(key-value)映射，而且键和值都可以是 null。\n不过 WeakHashMap 的键是弱键。在 WeakHashMap 中，当某个键不再正常使用时，会被从 WeakHashMap 中被自动移除。更精确地说，对于一个给定的键，其映射的存在并不阻止垃圾回收器对该键的丢弃，这就使该键成为可终止的，被终止，然后被回收。某个键被终止时，它对应的键值对也就从映射中有效地移除了。\n这个弱键的原理呢？大致上就是，通过 WeakReference 和 ReferenceQueue 实现的。\nWeakHashMap 的 key 是弱键，即是 WeakReference 类型的；ReferenceQueue 是一个队列，它会保存被 GC 回收的弱键。实现步骤是：\n\n新建 WeakHashMap，将键值对添加到 WeakHashMap 中。\n实际上，WeakHashMap 是通过数组 table 保存 Entry(键值对)；每一个 Entry 实际上是一个单向链表，即 Entry 是键值对链表。\n当某弱键不再被其它对象引用，并被 GC 回收时。在 GC 回收该弱键时，这个弱键也同时会被添加到 ReferenceQueue(queue)队列中。\n当下一次我们需要操作 WeakHashMap 时，会先同步 table 和 queue。table 中保存了全部的键值对，而 queue 中保存被 GC 回收的键值对；同步它们，就是删除 table 中被 GC 回收的键值对。\n\n这就是弱键如何被自动从 WeakHashMap 中删除的步骤了。\n和 HashMap 一样，WeakHashMap 是不同步的。可以使用 Collections.synchronizedMap 方法来构造同步的 WeakHashMap。\nHashMap、Hashtable、TreeMap和WeakHashMap有什么区别\n用自定义类型作为HashMap或Hashtable的key需要注意哪些问题\n \n"},"javacore/container/container-map2.html":{"url":"javacore/container/container-map2.html","title":"Map之面试问题集","keywords":"","body":"\nHashMap\n\n什么是HashMao\nHashMap的工作原理？\n怎样计算key在数组中的位置(hash算法)？根据HashCode计算数组下标？\n碰撞，hash冲突\nHashMap的扩容resize()？\nHashMap长度为什么等于2的幂？ ？\nJDK1.8的HashMap的优化？\n为什么JDK1.8中HashMap链表长度超过8会转成树结构？？\nHashMap为什么是线程不安全的？\n为什么String, Interger这样的wrapper类适合作为键？？\n为什么java中在重写equals()方法后必须对hashCode()方法进行重写和hashCode()方法)\n我们可以使用自定义的对象作为键吗？？\n\n\nHashTable\n\n什么是HashTable\nHashTable的参数？\nHashTable的扩容\n\n\nHashTable和HashMap的区别\n\nConcurrHashMap\n\n什么是ConcurrentHashMap?\n\n为什么用ConcurrentHashMap?\n\nJDK1.7 ConcurrentHashMap?\n\n1.7结构\nSegment\n什么是分段锁技术？\n\n\nConcurrentHashMap的工作原理？\n初始化\n三个参数\n初始化ConcurrentHashMap\n初始化Segment分段\n三次hash\n\n\nPut操作？\nGet操作？\nRemove操作？\nsize操作？\n\n\nJDK1.8 ConcurrentHashMap?\n\n1.8结构\nCAS思想和实现原理？\n\n\nConcurrentHashMap1.8的工作原理？\n数据结构\n1.8初始化ConcurrentHashMap\n\n\nPut操作\nGet操作\nsize操作\n\n\nConcurrentHashMap JDK1.7  1.8区别?\n\nJDK1.8为什么使用内置锁synchronized来代替重入锁ReentrantLock?\n\nConcurrentHashMap和HashMap区别\n\nConcurrentHashMap和HashTable区别\n​\n\n\n\n\n面试问题HashMap/HashTable/ConcurrHashMap\nHashMap\n什么是HashMap？\n\n基于哈希表的 Map 接口的实现。\nHashMap 是一个散列表，它存储的内容是键值对(key-value)映射。\nHashMap 继承于AbstractMap，实现了Map、Cloneable、java.io.Serializable接口。\nHashMap 的实现不是同步的，这意味着它不是线程安全的。它的key、value都可以为null。此外，HashMap中的映射不是有序的。\n\nHashMap的工作原理？\n\nHashMap是基于hashing的原理，我们使用put(key, value)存储对象到HashMap中，使用get(key)从HashMap中获取对象。\nPut: 当我们往hashmap中put元素的时候，先根据key的hash值得到这个元素在数组中的位置（即下标），如果下标对应的链表为空，则直接把键值对作为链表头节点，如果不为空，发生哈希冲突，则equals方法在对应位置的链表中找到需要的元素，有就把value替换，没有那么在同一个位子上的元素将以链表的形式存放，新加入的放在链头，最先加入的放在链尾。（JDK1.7之所以放在头节点，是因为HashMap的发明者认为后插入的Entry被查找的可能性更大。）\nGet: 从hashmap中get元素时，首先计算key的hashcode，找到数组中对应位置的某一元素，然后通过key的equals方法在对应位置的链表中找到需要的元素。\n\n\n\n怎样计算key在数组中的位置(hash算法)？根据HashCode计算数组下标？\n\n我们当然希望这个hashmap里面的元素位置尽量的分布均匀些，尽量使得每个位置上的元素数量只有一个，那么当我们用hash算法求得这个位置的时候，马上就可以知道对应位置的元素就是我们要的，而不用再去遍历链表\n\nJDK1.7\n\nh&(length-1) 就相当于对length取模，而且在速度、效率上比直接取模要快得多\n\n\nJDK1.8优化\n\n高16位异或低16位，然后再h&(length-1)，目的：混合原始哈希码的高位和低位，以此来加大低位的随机性。而且混合后的低位掺杂了高位的部分特征，这样高位的信息也被变相保留下来。\n\n\n​\n\n\n\n\n碰撞，hash冲突\n\n哈希表为解决 Hash 冲突，可以采用开放地址法和链地址法来解决问题。HashMap 采用了链地址法。链地址法，简单来说，就是数组加链表的结合。在每个数组元素上都一个链表结构，当数据被 Hash 后，得到数组下标，把数据放在对应下标元素的链表上。\nJDK1.7 链表头插。JDK1.8 链表尾插。\n\nHashMap的扩容resize()？\n\nJDK 1.7 先扩容后插入\n\nhashmap使用一个容量更大的数组来代替旧的数组，transfer（）方法将原有Entry数组里的元素拷贝到新的Entry数组里，扩容之后，原数组中的数据必须重新计算其在新数组中的位置，并放进去，这就是resize。\n新容量=旧容量2；默认旧容量=160.75=12\n在扩容后插入的过程中，存储在LinkedList中的元素的次序会反过来，因为移动到新的bucket位置的时候，HashMap并不会将元素放在LinkedList的尾部，而是放在头部，这是为了避免尾部遍历(tail traversing)。\n\n\nJDK 1.8 先插入后扩容\n\n在JDK1.8的时候直接用了JDK1.7的时候计算的规律，也就是扩容前的原始位置+扩容的大小值=JDK1.8的计算方式，而不再是JDK1.7的那种与计算的方法。但是这种方式就相当于只需要判断Hash值的新增参与运算的位是0还是1就直接迅速计算出了扩容后的储存方式。\n\n\n​\n\n\n\nJDK 1.7/1.8扩容区别\n\n\n​\n\n\n\n\nHashMap长度为什么等于2的幂？ ？\n\nhashmap中默认的数组大小为16，加载因子0.75。并且每次自动扩展或手动初始化时，长度必须是2的幂。\n\n举例：\n\n看下图，左边两组是数组长度为16（2的4次方），右边两组是数组长度为15。两组的hashcode均为8和9，但是很明显，当它们和1110“与”的时候，产生了相同的结果，也就是说它们会定位到数组中的同一个位置上去，这就产生了碰撞，8和9会被放到同一个链表上，那么查询的时候就需要遍历这个链表，得到8或者9，这样就降低了查询的效率。\n\n同时，我们也可以发现，当数组长度为15的时候，hashcode的值会与14（1110）进行“与”，那么最后一位永远是0，而0001，0011，0101，1001，1011，0111，1101这几个位置永远都不能存放元素了，显然不符合Hash算法均匀分布的原则，空间浪费相当大，更糟的是这种情况中，数组可以使用的位置比数组长度小了很多，这意味着进一步增加了碰撞的几率，减慢了查询的效率！\n\n\n​\n\n\n\n所以，长度16或者其他2的幂，Length-1的值是所有二进制位全为1，这种情况下，index的结果等同于HashCode后几位的值。只要输入的HashCode本身分布均匀，Hash算法的结果就是均匀的。\n\n\nJDK1.8的HashMap的优化？\n\n数据结构变化：\n数组+链表+红黑树，当链表的深度达到8的时候，也就是默认阈值，就会自动扩容把链表转成红黑树的数据结构来把时间复杂度从O（N）变成O（logN）提高了效率\n\n\nHash算法计算方式改变：\n高16位异或低16位，后&(length-1)\n\n\n扩容后不是重新计算所有元素在数组的位置：\n新的位置=旧的位置 OR 旧的位置+旧容量\n\n\nJDK1.7用的是头插法，而JDK1.8及之后使用的都是尾插法，\n因为JDK1.7是用单链表进行的纵向延伸，当采用头插法就是能够提高插入的效率，但是也会容易出现逆序且环形链表死循环问题。但是在JDK1.8之后是因为加入了红黑树，使用尾插法能够避免出现逆序且链表死循环的问题。\n\n\n链表死循环问题 https://coolshell.cn/articles/9606.html/comment-page-1#comments\n\n为什么JDK1.8中HashMap链表长度超过8会转成树结构？？\n\n1.若桶中链表元素个数大于等于8时，链表转换成树结构；若桶中链表元素个数小于等于6时，树结构还原成链表。因为红黑树的平均查找长度是log(n)，长度为8的时候，平均查找长度为3，如果继续使用链表，平均查找长度为8/2=4，这才有转换为树的必要。链表长度如果是小于等于6，6/2=3，虽然速度也很快的，但是转化为树结构和生成树的时间并不会太短。\n\n2.还有选择6和8，中间有个差值7可以有效防止链表和树频繁转换。假设一下，如果设计成链表个数超过8则链表转换成树结构，链表个数小于8则树结构转换成链表，如果一个HashMap不停的插入、删除元素，链表个数在8左右徘徊，就会频繁的发生树转链表、链表转树，效率会很低。\n\n\n在这里简单解释一下，理想情况下，在随机哈希代码下，桶中的节点频率遵循泊松分布，文中给出了桶长度k的频率表。由频率表可以看出，桶的长度超过8的概率非常非常小。所以作者应该是根据概率统计而选择了8作为阀值，由此可见，这个选择是非常严谨和科学的。\n\n\n\n​\n\n\nHashMap为什么是线程不安全的？\n\nHashMap resize而引起死循环.（条件竞争）。扩容的的时候可能会形成环形链表， 造成死循环. https://coolshell.cn/articles/9606.html/comment-page-1#comments\nput的时候导致的多线程数据不一致\n在多线程下put操作时,产生哈希碰撞，最后的写入操作会覆盖先前的写入操作----写入不一致。最后的修改操作会覆盖先前的修改---修改不一致。\n\n\n注意：要想实现线程安全，那么需要调用 collections 类的静态方法\n\n为什么String, Interger这样的wrapper类适合作为键？？\n\n1.不可变性： String是不可变的，也是final的\n计算hashCode()，就要防止键值改变，如果键值在放入时和获取时返回不同的hashcode的话，那么就不能从HashMap中找到你想要的对象。\n不可变性还有其他的优点如线程安全。\n\n\n2.已经重写了equals()和hashCode()方法\n为什么要重写equals()方法？\n1．Object类中equals方法比较的是两个对象的引用地址，只有对象的引用地址指向同一个地址时，才认为这两个地址是相等的，否则这两个对象就不相等。\n2.如果有两个对象，他们的属性是相同的，但是地址不同，这样使用equals()比较得出的结果是不相等的，而我们需要的是这两个对象相等，因此默认的equals()方法是不符合我们的要求的，这个时候我们就需要对equals()方法进行重写以满足我们的预期结果。\n3.在java的集合框架中需要用到equals()方法进行查找对象，如果集合中存放的是自定义类型，并且没有重写equals()方法，则会调用Object父类中的equals()方法按照地址比较，往往会出现错误的结果，此时我们应该根据业务需求重写equals()方法。\n如果不重写equals，那么比较的将是对象的引用是否指向同一块内存地址，重写之后目的是为了比较两个对象的value值是否相等。\n\n\n为什么java中在重写equals()方法后必须对hashCode()方法进行重写？\n1.为了维护hashCode()方法的equals协定，该协定指出：相等的对象必须具有相等的散列码（hashCode）；而两个hashCode()返回的结果相等，两个对象的equals()方法不一定相等。\n2.如果不重写hashCode()，就会造成相等对象，不同的hashCode();在hashMap中就会存储两个值一样的对象。导致混淆。\n\n\n\n\n\n我们可以使用自定义的对象作为键吗？？\n\n当然你可能使用任何对象作为键，只要它遵守了equals()和hashCode()方法的定义规则，并且当对象插入到Map中之后将不会再改变了。如果这个自定义对象时不可变的，那么它已经满足了作为键的条件，因为当它创建之后就已经不能改变了。\n\nHashTable\n什么是HashTable\n\nHashtable 也是一个散列表，它存储的内容是键值对(key-value)映射。\nHashtable 继承于Dictionary，实现了Map、Cloneable、java.io.Serializable接口。\nHashtable 的函数都是同步的，这意味着它是线程安全的。它的key、value都不可以为null。此外，Hashtable中的映射不是有序的。\n\nHashTable的参数？\n\n（1） table 是一个 Entry[]数组类型， 而 Entry 实际上就是一个单向链表。 哈希表的\"key-value 键值对\"都是存储在 Entry 数组中的。\n（2） count 是 Hashtable 的大小， 它是 Hashtable 保存的键值对的数量。\n（3） threshold 是 Hashtable 的阈值， 用于判断是否需要调整 Hashtable 的容量。 threshold 的值=\"容量*加载因子\"。\n（4） loadFactor 就是加载因子。\n（5） modCount 是用来实现 fail-fast 机制的\n\nHashTable的扩容\n\n默认初始容量为 11\n线程安全， 但是速度慢， 不允许 key/value 为 null\n加载因子为 0.75： 即当元素个数超过容量长度的0.75倍时， 进行扩容\n扩容增量： 2*原数组长度+1\n如 HashTable 的容量为 11， 一次扩容后是容量为 23\n\n\n\n\n\nHashTable和HashMap的区别\n\n1.继承的父类不同\nHashtable继承自Dictionary类，而HashMap继承自AbstractMap类。但二者都实现了Map接口。\n\n\n2.线程安全性不同\nHashtable 同步-线程安全。HashMap 非同步-不是线程安全的。\n\n\n3.是否提供contains方法\nHashMap把Hashtable的contains方法去掉了，改成containsValue和containsKey\nHashtable则保留了contains，containsValue和containsKey三个方法，其中contains和containsValue功能相同。\n\n\n4.key和value是否允许null值\nHashtable不允许，HashMap允许\n\n\n5.两个遍历方式的内部实现上不同\nHashtable、HashMap都使用了 Iterator。而由于历史原因，Hashtable还使用了Enumeration的方式 。\n\n\n6.哈希值的使用不同\nHashtable直接使用对象的hashCode、HashMap重新计算hash值，而且用于代替求模\n\n\n7.内部实现使用的数组初始化和扩容方式不同，\nHashtable默认容量为11，不要求底层数组的容量一定要为2的整数次幂，扩容时将容量变为原来的2倍加1，\nHashMap默认容量为16，要求底层数组的容量一定要为2的整数次幂，扩容时将容量变为原来的2倍\n\n\n\nConcurrHashMap\n什么是ConcurrentHashMap?\n\nConcurrentHashMap就是多线程编程中可以使用的一种高性能的线程安全HashMap方案。\n\n为什么用ConcurrentHashMap?\n\nHashMap是线程不安全的，在并发环境下，可能会形成环状链表（扩容时可能造成，具体原因自行百度google或查看源码分析），导致get操作时，cpu空转\nHashTable线程安全的策略实现代价却太大了，简单粗暴，get/put所有相关操作都是synchronized的，这相当于给整个哈希表加了一把大锁，多线程访问时候，只要有一个线程访问或操作该对象，那其他线程只能阻塞，相当于将所有的操作串行化，在竞争激烈的并发场景中性能就会非常差。\n\nJDK1.7 ConcurrentHashMap?\n1.7结构\n\n\n​\n\n\nSegment\n\nSegment的结构和HashMap类似，是一种数组和链表结构。\n同HashMap一样，Segment包含一个HashEntry数组，数组中的每一个HashEntry既是一个键值对，也是一个链表的头节点。\n每个Segment守护着一个HashEntry数组里的元素,当对HashEntry数组的数据进行修改时，必须首先获得它对应的Segment锁。\nSegment是一种可重入锁ReentrantLock\n\n什么是分段锁技术？\n\n容器里有多把锁，每一把锁用于锁容器其中一部分数据，那么当多线程访问容器里不同数据段的数据时，线程间就不会存在锁竞争，从而可以有效的提高并发访问效率\n\nConcurrentHashMap的工作原理？\n\nConcurrentHashMap所使用的锁分段技术，首先将数据分成一段一段的存储，然后给每一段数据配一把锁，当一个线程占用锁访问其中一个段数据的时候，其他段的数据也能被其他线程访问。能够实现真正的并发访问。\n有一些方法需要跨段，比如size()和containsValue()，它们可能需要锁定整个表而不仅仅是某个段，这需要按顺序锁定所有段，操作完毕后，又按顺序释放所有段的锁。这里“按顺序”是很重要的，否则极有可能出现死锁\n\n初始化\n\n\n​\n\n\n三个参数\n\ninitialCapacity\ninitialCapacity表示新创建的这个ConcurrentHashMap的初始容量，也就是上面的结构图中的Entry数量。默认值为static final int DEFAULT_INITIAL_CAPACITY = 16;\n\n\nloadFactor\nloadFactor表示负载因子，就是当ConcurrentHashMap中的元素个数大于loadFactor * 最大容量时就需要rehash，扩容。默认值为static final float DEFAULT_LOAD_FACTOR = 0.75f;\n\n\nconcurrencyLevel\nconcurrencyLevel表示并发级别，这个值用来确定Segment的个数，Segment的个数是大于等于concurrencyLevel的第一个2的n次方的数。比如，如果concurrencyLevel为12，13，14，15，16这些数，则Segment的数目为16(2的4次方)。默认值为static final int DEFAULT_CONCURRENCY_LEVEL = 16;。理想情况下ConcurrentHashMap的真正的并发访问量能够达到concurrencyLevel，因为有concurrencyLevel个Segment，假如有concurrencyLevel个线程需要访问Map，并且需要访问的数据都恰好分别落在不同的Segment中，则这些线程能够无竞争地自由访问（因为他们不需要竞争同一把锁），达到同时访问的效果。这也是为什么这个参数起名为“并发级别”的原因。\n\n\nconcurrencyLevel主要用来初始化segments、segmentShift和segmentMask等；而initialCapacity和loadFactor则主要用来初始化每个Segment分段。\n\n初始化ConcurrentHashMap\n\nssize(segments数组的长度) sshift(计算ssize时进行移位操作的次数)\nsegmentShift 段偏移量\nsegmentMask 段掩码\n例子：\n\n初始化Segment分段\n\nssize 2的N次方大于等于ConcurrentHashMapLevel\nsshift (计算ssize时进行移位操作的次数)log(ssize)\nsegmentShift = 32 - sshift; //之所以用32是因为ConcurrentHashMap里的hash()方法输出的最大数是32位的\nsegmentMask = ssize - 1;\n例如LconcurrencyLevel等于16，则ssize=16,sshift=4，则segmentShift为28,。segmentMask=15;hash值是一个32位的整数，将其向右移动28位就变成这个样子：0000 0000 0000 0000 0000 0000 0000 xxxx，然后再用这个值与segmentMask做&运算，也就是取最后四位的值。这个值确定Segment的索引。\n\n三次hash\n\nSegment下面包含很多个HashEntry列表数组。对于一个key，需要经过三次（为什么要hash三次下文会详细讲解）hash操作，才能最终定位这个元素的位置，这三次hash分别为：\n对于一个key，先进行一次hash操作，得到hash值h1，也即h1 = hash1(key)；\n将得到的h1的高几位进行第二次hash，得到hash值h2，也即h2 = hash2(h1高几位)，通过h2能够确定该元素的放在哪个Segment；\n将得到的h1进行第三次hash，得到hash值h3，也即h3 = hash3(h1)，通过h3能够确定该元素放置在哪个HashEntry。\n\n\n\nPut操作？\nput操作是要加锁的。\n\n判断value是否为null，如果为null，直接抛出异常。\nkey通过一次hash运算得到一个hash值。(这个hash运算下文详说)\n将得到hash值向右按位移动segmentShift位，然后再与segmentMask做&运算得到segment的索引j。\n在初始化的时候我们说过segmentShift的值等于32-sshift，例如concurrencyLevel等于16，则sshift等于4，则segmentShift为28。hash值是一个32位的整数，将其向右移动28位就变成这个样子： 0000 0000 0000 0000 0000 0000 0000 xxxx，然后再用这个值与segmentMask做&运算，也就是取最后四位的值。这个值确定Segment的索引。\n使用Unsafe的方式从Segment数组中获取该索引对应的Segment对象。\n向这个Segment对象中put值，这个put操作也基本是一样的步骤（通过&运算获取HashEntry的索引，然后set）。\n\nGet操作？\n\nJDK1.7的ConcurrentHashMap的get操作是不加锁的，因为在每个Segment中定义的HashEntry数组和在每个HashEntry中定义的value和next HashEntry节点都是volatile类型的，volatile类型的变量可以保证其在多线程之间的可见性，因此可以被多个线程同时读，从而不用加锁。\n而其get操作步骤也比较简单，定位Segment –> 定位HashEntry –> 通过getObjectVolatile()方法获取指定偏移量上的HashEntry –> 通过循环遍历链表获取对应值。\n定位Segment：(((h >>> segmentShift) & segmentMask) \n定位HashEntry：(((tab.length - 1) & h)) \n\n\n\nRemove操作？\nsize操作？\n\n计算ConcurrentHashMap的元素大小是一个有趣的问题，因为他是并发操作的，就是在你计算size的时候，他还在并发的插入数据，可能会导致你计算出来的size和你实际的size有相差（在你return size的时候，插入了多个数据），要解决这个问题，JDK1.7版本用两种方案\n第一种方案他会使用不加锁的模式去尝试多次计算ConcurrentHashMap的size，最多三次，比较前后两次计算的结果，结果一致就认为当前没有元素加入，计算的结果是准确的\n第二种方案是如果第一种方案不符合，他就会给每个Segment加上锁，然后计算ConcurrentHashMap的size返回\n举例：\n一个Map有4个Segment，标记为S1，S2，S3，S4，现在我们要获取Map的size。\n计算过程是这样的：\n第一次计算，不对S1，S2，S3，S4加锁，遍历所有的Segment，假设每个Segment的大小分别为1，2，3，4，更新操作次数分别为：2，2，3，1，则这次计算可以得到Map的总大小为1+2+3+4=10，总共更新操作次数为2+2+3+1=8；\n第二次计算，不对S1,S2,S3,S4加锁，遍历所有Segment，假设这次每个Segment的大小变成了2，2，3，4，更新次数分别为3，2，3，1，因为两次计算得到的Map更新次数不一致(第一次是8，第二次是9)则可以断定这段时间Map数据被更新，则此时应该再试一次；\n第三次计算，不对S1，S2，S3，S4加锁，遍历所有Segment，假设每个Segment的更新操作次数还是为3，2，3，1，则因为第二次计算和第三次计算得到的Map的更新操作的次数是一致的，就能说明第二次计算和第三次计算这段时间内Map数据没有被更新，此时可以直接返回第三次计算得到的Map的大小。\n最坏的情况：第三次计算得到的数据更新次数和第二次也不一样，则只能先对所有Segment加锁再计算最后解锁。\n\n\n\n\n\nJDK1.8 ConcurrentHashMap?\n1.8结构\n\nConcurrentHashMap在1.8版本摒弃了Segment（锁段）的概念，而是启用了一种全新的CAS算法的方式实现，Node + CAS + Synchronized。数据结构沿用了与它同时期的HashMap版本的思想，底层依然由数组+链表+红黑树的方式思想。\n\n\n​\n\n\nCAS思想和实现原理？\n\n乐观锁：认为数据一般情况下不会造成冲突，所以在数据进行提交更新的时候，才会正式对数据的冲突与否进行检测，如果发现冲突了，则让用户返回错误的信息。让用户决定如何去做。\n\n悲观锁:就是对数据的冲突采取一种悲观的态度，也就是说假设数据肯定会冲突，所以在数据开始读取的时候就把数据锁定住。【数据锁定：数据将暂时不会得到修改】\n\n思想：\n\nCAS（Compare And Swap，比较交换）：CAS有三个操作数，内存值V、预期值A、要修改的新值B，当且仅当A和V相等时才会将V修改为B，否则什么都不做。\n实现CAS最重要的一点，就是比较和交换操作的一致性，否则就会产生歧义。\n比如当前线程比较成功后，准备更新共享变量值的时候，这个共享变量值被其他线程更改了，那么CAS函数必须返回false。\n\n\n\n\n实现原理\n\nCAS通过调用JNI的代码实现的。JNI:Java Native Interface-JAVA本地接口，允许java与其他语言交互。\n要实现这个需求，java中提供了Unsafe类，它提供了三个函数，分别用来操作基本类型int和long，以及引用类型Object。方法的实现位于unsafe.cpp中\n\npublic final native boolean compareAndSwapObject\n    (Object obj, long valueOffset, Object expect, Object update);\n\n    public final native boolean compareAndSwapInt\n    (Object obj, long valueOffset, int expect, int update);\n\n    public final native boolean compareAndSwapLong\n    (Object obj, long valueOffset, long expect, long update);\n\nJava中CAS操作通过JNI本地方法实现，在JVM中程序会根据当前处理器的类型来决定是否为cmpxchg指令添加lock前缀。如果程序是在多处理器上运行，就为cmpxchg指令加上lock前缀（Lock Cmpxchg）；反之，如果程序是在单处理器上运行，就省略lock前缀。\nlock 前缀有两个特性 1， 禁止该指令与前面和后面的读写指令重排序 2， 把写缓冲区的所有数据刷新到内存中\n这两点保证了内存屏障效果， 保证了 CAS 同时具有 volatile 读和 volatile 写的内存语义。\n\n\n缺点\n\n不过CAS操作也存在一些缺点：1. 存在ABA问题，其解决思路是使用版本号；2. 循环时间长，开销大；3. 只能保证一个共享变量的原子操作。\n\n\n\nConcurrentHashMap1.8的工作原理？\n\n在JDK1.7之前，ConcurrentHashMap是通过分段锁机制来实现的，所以其最大并发度受Segment的个数限制。因此，在JDK1.8中，ConcurrentHashMap的实现原理摒弃了这种设计，而是选择了与HashMap类似的数组+链表+红黑树的方式实现，而加锁则采用CAS和synchronized实现。\n首先，在table中添加一个元素时，如果添加元素的链表节点个数超过8，则会触发链表向红黑树结构转换。\n首先会检查hash表的大小是否大于等于MIN_TREEIFY_CAPACITY，默认值为64，如果小于该值，则表示不需要转化为红黑树结构，直接将hash表扩容即可。\n如果当前table的长度大于64，则使用CAS获取指定的Node节点，然后对该节点通过synchronized加锁，由于只对一个Node节点加锁，因此该操作并不影响其他Node节点的操作，因此极大的提高了ConcurrentHashMap的并发效率。\n加锁之后，便是将这个Node节点所在的链表转换为TreeBin结构的红黑树。\n然后，在table中删除元素时，如果元素所在的红黑树节点个数小于6，则会触发红黑树向链表结构转换。\n\n\n\n数据结构\n\n\n​\n\nConcurrentHashMap中包含一个table数组，其类型是一个Node数组；而Node是一个继承自Map.Entry的链表，而当这个链表结构中的数据大于8，则将数据结构升级为TreeBin类型的红黑树结构。\n\nJDK1.8中的ConcurrentHashMap中还包含一个重要属性sizeCtl，其是一个控制标识符，不同的值代表不同的意思：\n\n其为0时，表示hash表还未初始化\n而为正数时这个数值表示初始化或下一次扩容的大小，相当于一个阈值；即如果hash表的实际大小>=sizeCtl，则进行扩容，默认情况下其是当前ConcurrentHashMap容量的0.75倍；\n而如果sizeCtl为-1，表示正在进行初始化操作；\n而为-N时，则表示有N-1个线程正在进行扩容。\n\n\n\n1.8初始化ConcurrentHashMap\n\n首先会判断sizeCtl的值，如果其小于0，则说明其正在进行初始化或扩容操作，则不执行任何操作，调用yield()方法使当前线程返回等待状态；\n而如果sizeCtl大于等于0，则使用CAS操作比较sizeCtl的值是否是-1，如果是-1则进行初始化。\n初始化时，如果sizeCtl的值为0，则创建默认容量的table；否则创建大小为sizeCtl的table；\n然后重置sizeCtl的值为0.75n，即当前table容量的0.75倍，并返回创建的table，此时初始化hash表完成。\n\n\n\nPut操作\n\n计算key的hash值，即调用speed()方法计算hash值；\n获取hash值对应的Node节点位置，此时通过一个循环实现。有以下几种情况：\n如果table表为空，则首先进行初始化操作，初始化之后再次进入循环获取Node节点的位置；\n如果table不为空，但没有找到key对应的Node节点，则直接调用casTabAt()方法插入一个新节点，此时不用加锁；\n如果table不为空，且key对应的Node节点也不为空，但Node头结点的hash值为MOVED(-1)，则表示需要扩容，此时调用helpTransfer()方法进行扩容；\n其他情况下，则直接向Node中插入一个新Node节点，此时需要对这个Node链表或红黑树通过synchronized加锁。\n\n\n插入元素后，判断对应的Node结构是否需要改变结构，如果需要则调用treeifyBin()方法将Node链表升级为红黑树结构；\n最后，调用addCount()方法记录table中元素的数量。\n\nGet操作\n\n通过get获取hash表中的值时，首先需要获取key值的hash值。而在JDK1.8的ConcurrentHashMap中通过spread()方法获取。\nspeed()方法将key的hash值进行再hash，让hash值的高位也参与hash运算，从而减少哈希冲突。然后再查询对应的value值。\n查询时，首先通过tabAt()方法找到key对应的Node链表或红黑树，然后遍历该结构便可以获取key对应的value值。其中，tabAt()方法主要通过Unsafe类的getObjectVolatile()方法获取value值，通过volatile读获取value值，可以保证value值的可见性，从而保证其是当前最新的值。\n\nsize操作\n\nJDK1.8的ConcurrentHashMap中保存元素的个数的记录方法也有不同，首先在添加和删除元素时，会通过CAS操作更新ConcurrentHashMap的baseCount属性值来统计元素个数。但是CAS操作可能会失败，因此，ConcurrentHashMap又定义了一个CounterCell数组来记录CAS操作失败时的元素个数。\n因此，ConcurrentHashMap中元素的个数则通过如下方式获得：元素总数 = baseCount + sum(CounterCell)\nsize只能获取int范围内的ConcurrentHashMap元素个数；而如果hash表中的数据过多，超过了int类型的最大值，则推荐使用mappingCount()方法获取其元素个数。\n\nConcurrentHashMap JDK1.7 1.8区别?\nJDK 1.7 ReentrantLock+Segment+HashEntry JDK1.8 synchronized+CAS+HashEntry+红黑树\n\n1.JDK1.8的实现降低锁的粒度，JDK1.7版本锁的粒度是基于Segment的，包含多个HashEntry，而JDK1.8锁的粒度就是HashEntry（首节点）\n2.JDK1.8版本的数据结构变得更加简单，使得操作也更加清晰流畅，因为已经使用synchronized来进行同步，所以不需要分段锁的概念，也就不需要Segment这种数据结构了，由于粒度的降低，实现的复杂度也增加了\n3.JDK1.8使用红黑树来优化链表，基于长度很长的链表的遍历是一个很漫长的过程，而红黑树的遍历效率是很快的，代替一定阈值的链表，这样形成一个最佳拍档\n\nJDK1.8为什么使用内置锁synchronized来代替重入锁ReentrantLock?\n\n1.因为粒度降低了，在相对而言的低粒度加锁方式，synchronized并不比ReentrantLock差，在粗粒度加锁中ReentrantLock可能通过Condition来控制各个低粒度的边界，更加的灵活，而在低粒度中，Condition的优势就没有了\n2.JVM的开发团队从来都没有放弃synchronized，而且基于JVM的synchronized优化空间更大，使用内嵌的关键字比使用API更加自然\n3.在大量的数据操作下，对于JVM的内存压力，基于API的ReentrantLock会开销更多的内存，虽然不是瓶颈，但是也是一个选择依据\n\nConcurrentHashMap和HashMap区别\n\n1.HashMap非线程安全 ConcurrentHashMap线程安全\n2.ConcurrentHashMap将整个Hash桶进行了分段segment，每个segment上都有锁\n3.ConcurrentHashMap让锁的粒度更精细，并发性能更好。\n\nConcurrentHashMap和HashTable区别\n\n1.底层数据结构\nConcurrentHashMap1.7分段数组+链表\nConcurrentHashMap1.8数组+链表/红黑二叉树\nHashTable数组+链表\n\n\n2.实现线程安全的方式\nHashtable的所有操作都会锁住整个对象，虽然能够保证线程安全，但是性能较差；\nConcurrentHashMap内部使用Segment数组，每个Segment类似于Hashtable，在“写”线程或者部分特殊的“读”线程中锁住的是某个Segment对象，其它的线程能够并发执行其它的Segment对象。\n\n\n\n"},"javacore/concurrent/Java多线程面试题集.html":{"url":"javacore/concurrent/Java多线程面试题集.html","title":"Java 多线程面试题集","keywords":"","body":"Java 多线程夺命连环问\n\n\n1. 并发简介\n1.1. 什么是进程？什么是线程？进程和线程的区别？\n1.2. 并发（多线程）编程的好处是什么？\n1.3. 并发一定比串行更快吗？\n1.4. 如何让正在运行的线程暂停一段时间？\n1.5. 什么是线程调度器(Thread Scheduler)和时间分片(Time Slicing)？\n1.6. 在多线程中，什么是上下文切换(context-switching)？\n1.7. 如何确保线程安全？\n1.8. 什么是死锁(Deadlock)？如何分析和避免死锁？\n\n\n2. 线程基础\n2.1. Java 线程生命周期中有哪些状态？各状态之间如何切换？\n2.2. 创建线程有哪些方式？这些方法各自利弊是什么？\n2.3. 什么是 Callable 和 Future？什么是 FutureTask？\n2.4. start() 和 run() 有什么区别？可以直接调用 Thread 类的 run() 方法么？\n2.5. sleep()、yield()、join() 方法有什么区别？为什么 sleep() 和 yield() 方法是静态（static）的？\n2.6. Java 的线程优先级如何控制？高优先级的 Java 线程一定先执行吗？\n2.7. 什么是守护线程？为什么要用守护线程？如何创建守护线程？\n2.8. 线程间是如何通信的？\n2.9. 为什么线程通信的方法 wait(), notify() 和 notifyAll() 被定义在 Object 类里？\n2.10. 为什么 wait(), notify() 和 notifyAll() 必须在同步方法或者同步块中被调用？\n\n\n3. 并发机制的底层实现\n3.1. volatile 有什么作用？它的实现原理是什么？\n3.2. synchronized 有什么作用？它的实现原理是什么？同步方法和同步块，哪个更好？\n3.3. volatile 和 synchronized 的区别？\nCAS 是指什么？CAS 的原理是什么？\n3.4. ThreadLocal 有什么作用？ThreadLocal 的实现原理是什么？\n\n\n4. 内存模型\n4.1. 什么是 Java 内存模型\n\n\n5. 同步容器和并发容器\n5.1. 什么是同步容器？有哪些常见同步容器？它们是如何实现线程安全的？同步容器真的线程安全吗？\n5.2. 什么是并发容器的实现？\n\n\n6. 锁\n6.1. 如何避免死锁？\n6.2. Lock 接口(Lock interface)是什么？对比同步它有什么优势？\n6.3. 什么是阻塞队列？如何使用阻塞队列来实现生产者-消费者模型？\n\n\n7. 原子变量类\n7.1. 什么是原子操作？有哪些原子类？原子类的实现原理是什么？\n\n\n8. 并发工具类\n8.1. CyclicBarrier 和 CountDownLatch 有什么不同？\n\n\n9. 线程池\n9.1. 什么是线程池？如何创建一个 Java 线程池？\n9.2. 什么是 Executors 框架？\n9.3. Executors 类是什么？\n9.4. ThreadPoolExecutor 有哪些参数，各自有什么用？\n9.5. 线程数多少才合理\n\n\n10. 资料\n\n\n1. 并发简介\n1.1. 什么是进程？什么是线程？进程和线程的区别？\n\n什么是进程？\n简言之，进程可视为一个正在运行的程序。\n进程是具有一定独立功能的程序关于某个数据集合上的一次运行活动。进程是操作系统进行资源分配的基本单位。\n\n\n什么是线程？\n线程是操作系统进行调度的基本单位。\n\n\n进程 vs. 线程\n一个程序至少有一个进程，一个进程至少有一个线程。\n线程比进程划分更细，所以执行开销更小，并发性更高。\n进程是一个实体，拥有独立的资源；而同一个进程中的多个线程共享进程的资源。\n\n\n\n\n:point_right: 参考阅读：进程和线程关系及区别\n\n1.2. 并发（多线程）编程的好处是什么？\n\n更有效率的利用多处理器核心\n更快的响应时间\n更好的编程模型\n\n1.3. 并发一定比串行更快吗？\n答：否。\n要点：创建线程和线程上下文切换有一定开销。\n说明：即使是单核处理器也支持多线程。CPU 通过给每个线程分配时间切片的算法来循环执行任务，当前任务执行一个时间片后会切换到下一个任务。但是，在切换前会保持上一个任务的状态，以便下次切换回这个任务时，可以再加载这个任务的状态。所以任务从保存到再加载的过程就是一次上下文切换。\n引申\n\n如何减少上下文切换？\n尽量少用锁\nCAS 算法\n线程数要合理\n协程：在单线程中实现多任务调度，并在单线程中维持多个任务的切换\n\n\n\n1.4. 如何让正在运行的线程暂停一段时间？\n我们可以使用 Thread 类的 Sleep() 方法让线程暂停一段时间。\n需要注意的是，这并不会让线程终止，一旦从休眠中唤醒线程，线程的状态将会被改变为 Runnable，并且根据线程调度，它将得到执行。\n1.5. 什么是线程调度器(Thread Scheduler)和时间分片(Time Slicing)？\n线程调度器是一个操作系统服务，它负责为 Runnable 状态的线程分配 CPU 时间。一旦我们创建一个线程并启动它，它的执行便依赖于线程调度器的实现。\n时间分片是指将可用的 CPU 时间分配给可用的 Runnable 线程的过程。\n分配 CPU 时间可以基于线程优先级或者线程等待的时间。线程调度并不受到 Java 虚拟机控制，所以由应用程序来控制它是更好的选择（也就是说不要让你的程序依赖于线程的优先级）。\n1.6. 在多线程中，什么是上下文切换(context-switching)？\n上下文切换是存储和恢复 CPU 状态的过程，它使得线程执行能够从中断点恢复执行。上下文切换是多任务操作系统和多线程环境的基本特征。\n1.7. 如何确保线程安全？\n\n原子类(atomic concurrent classes)\n锁\nvolatile 关键字\n不变类和线程安全类\n\n1.8. 什么是死锁(Deadlock)？如何分析和避免死锁？\n死锁是指两个以上的线程永远相互阻塞的情况，这种情况产生至少需要两个以上的线程和两个以上的资源。\n分析死锁，我们需要查看 Java 应用程序的线程转储。我们需要找出那些状态为 BLOCKED 的线程和他们等待的资源。每个资源都有一个唯一的 id，用这个 id 我们可以找出哪些线程已经拥有了它的对象锁。\n避免嵌套锁，只在需要的地方使用锁和避免无限期等待是避免死锁的通常办法。\n2. 线程基础\n2.1. Java 线程生命周期中有哪些状态？各状态之间如何切换？\n\n  \n\n\njava.lang.Thread.State 中定义了 6 种不同的线程状态，在给定的一个时刻，线程只能处于其中的一个状态。\n以下是各状态的说明，以及状态间的联系：\n\n开始（New） - 还没有调用 start() 方法的线程处于此状态。\n可运行（Runnable） - 已经调用了 start() 方法的线程状态。此状态意味着，线程已经准备好了，一旦被线程调度器分配了 CPU 时间片，就可以运行线程。\n阻塞（Blocked） - 阻塞状态。线程阻塞的线程状态等待监视器锁定。处于阻塞状态的线程正在等待监视器锁定，以便在调用 Object.wait() 之后输入同步块/方法或重新输入同步块/方法。\n等待（Waiting） - 等待状态。一个线程处于等待状态，是由于执行了 3 个方法中的任意方法：\nObject.wait()\nThread.join()\nLockSupport.park()\n\n\n定时等待（Timed waiting） - 等待指定时间的状态。一个线程处于定时等待状态，是由于执行了以下方法中的任意方法：\nThread.sleep(sleeptime)\nObject.wait(timeout)\nThread.join(timeout)\nLockSupport.parkNanos(timeout)\nLockSupport.parkUntil(timeout)\n\n\n终止(Terminated) - 线程 run() 方法执行结束，或者因异常退出了 run() 方法，则该线程结束生命周期。死亡的线程不可再次复生。\n\n\n:point_right: 参考阅读：Java Thread Methods and Thread States\n:point_right: 参考阅读：Java 线程的 5 种状态及切换(透彻讲解)\n\n2.2. 创建线程有哪些方式？这些方法各自利弊是什么？\n创建线程主要有三种方式：\n1. 继承 Thread 类\n\n定义 Thread 类的子类，并重写该类的 run() 方法，该 run() 方法的方法体就代表了线程要完成的任务。因此把 run() 方法称为执行体。\n创建 Thread 子类的实例，即创建了线程对象。\n调用线程对象的 start() 方法来启动该线程。\n\n2. 实现 Runnable 接口\n\n定义 Runnable 接口的实现类，并重写该接口的 run() 方法，该 run() 方法的方法体同样是该线程的线程执行体。\n创建 Runnable 实现类的实例，并以此实例作为 Thread 对象，该 Thread 对象才是真正的线程对象。\n调用线程对象的 start() 方法来启动该线程。\n\n3. 通过 Callable 接口和 Future 接口\n\n创建 Callable 接口的实现类，并实现 call() 方法，该 call() 方法将作为线程执行体，并且有返回值。\n创建 Callable 实现类的实例，使用 FutureTask 类来包装 Callable 对象，该 FutureTask 对象封装了该 Callable 对象的 call() 方法的返回值。\n使用 FutureTask 对象作为 Thread 对象的 target 创建并启动新线程。\n调用 FutureTask 对象的 get() 方法来获得子线程执行结束后的返回值\n\n三种创建线程方式对比\n\n实现 Runnable 接口优于继承 Thread 类，因为根据开放封闭原则——实现接口更便于扩展；\n实现 Runnable 接口的线程没有返回值；而使用 Callable / Future 方式可以让线程有返回值。\n\n\n:point_right: 参考阅读：java 创建线程的三种方式及其对比\n\n2.3. 什么是 Callable 和 Future？什么是 FutureTask？\n什么是 Callable 和 Future？\nJava 5 在 concurrency 包中引入了 Callable 接口，它和 Runnable 接口很相似，但它可以返回一个对象或者抛出一个异常。\nCallable 接口使用泛型去定义它的返回类型。Executors 类提供了一些有用的方法去在线程池中执行 Callable 内的任务。由于 Callable 任务是并行的，我们必须等待它返回的结果。Future 对象为我们解决了这个问题。在线程池提交 Callable 任务后返回了一个 Future 对象，使用它我们可以知道 Callable 任务的状态和得到 Callable 返回的执行结果。Future 提供了 get() 方法让我们可以等待 Callable 结束并获取它的执行结果。\n什么是 FutureTask？\nFutureTask 是 Future 的一个基础实现，我们可以将它同 Executors 使用处理异步任务。通常我们不需要使用 FutureTask 类，单当我们打算重写 Future 接口的一些方法并保持原来基础的实现是，它就变得非常有用。我们可以仅仅继承于它并重写我们需要的方法。阅读 Java FutureTask 例子，学习如何使用它。\n\n:point_right: 参考阅读：Java 并发编程：Callable、Future 和 FutureTask\n\n2.4. start() 和 run() 有什么区别？可以直接调用 Thread 类的 run() 方法么？\n\nrun() 方法是线程的执行体。\nstart() 方法负责启动线程，然后 JVM 会让这个线程去执行 run() 方法。\n\n可以直接调用 Thread 类的 run() 方法么？\n\n可以。但是如果直接调用 Thread 的 run() 方法，它的行为就会和普通的方法一样。\n为了在新的线程中执行我们的代码，必须使用 start() 方法。\n\n2.5. sleep()、yield()、join() 方法有什么区别？为什么 sleep() 和 yield() 方法是静态（static）的？\nyield()\n\nyield() 方法可以让当前正在执行的线程暂停，但它不会阻塞该线程，它只是将该线程从 Running 状态转入 Runnable 状态。\n当某个线程调用了 yield() 方法暂停之后，只有优先级与当前线程相同，或者优先级比当前线程更高的处于就绪状态的线程才会获得执行的机会。\n\nsleep()\n\nsleep() 方法需要指定等待的时间，它可以让当前正在执行的线程在指定的时间内暂停执行，进入 Blocked 状态。\n该方法既可以让其他同优先级或者高优先级的线程得到执行的机会，也可以让低优先级的线程得到执行机会。\n但是，sleep() 方法不会释放“锁标志”，也就是说如果有 synchronized 同步块，其他线程仍然不能访问共享数据。\n\njoin()\n\njoin() 方法会使当前线程转入 Blocked 状态，等待调用 join() 方法的线程结束后才能继续执行。\n\n为什么 sleep() 和 yield() 方法是静态（static）的？\n\nThread 类的 sleep() 和 yield() 方法将处理 Running 状态的线程。所以在其他处于非 Running 状态的线程上执行这两个方法是没有意义的。这就是为什么这些方法是静态的。它们可以在当前正在执行的线程中工作，并避免程序员错误的认为可以在其他非运行线程调用这些方法。\n\n\n:point_right: 参考阅读：Java 线程中 yield 与 join 方法的区别\n:point_right: 参考阅读：sleep()，wait()，yield()和 join()方法的区别\n\n2.6. Java 的线程优先级如何控制？高优先级的 Java 线程一定先执行吗？\nJava 中的线程优先级如何控制\n\nJava 中的线程优先级的范围是 [1,10]，一般来说，高优先级的线程在运行时会具有优先权。可以通过 thread.setPriority(Thread.MAX_PRIORITY) 的方式设置，默认优先级为 5。\n\n高优先级的 Java 线程一定先执行吗\n\n即使设置了线程的优先级，也无法保证高优先级的线程一定先执行。\n原因：这是因为 Java 线程优先级依赖于操作系统的支持，然而，不同的操作系统支持的线程优先级并不相同，不能很好的和 Java 中线程优先级一一对应。\n结论：Java 线程优先级控制并不可靠。\n\n2.7. 什么是守护线程？为什么要用守护线程？如何创建守护线程？\n什么是守护线程\n\n守护线程（Daemon Thread）是在后台执行并且不会阻止 JVM 终止的线程。\n与守护线程（Daemon Thread）相反的，叫用户线程（User Thread），也就是非守护线程。\n\n为什么要用守护线程\n\n守护线程的优先级比较低，用于为系统中的其它对象和线程提供服务。典型的应用就是垃圾回收器。\n\n如何创建守护线程\n\n使用 thread.setDaemon(true) 可以设置 thread 线程为守护线程。\n注意点：\n正在运行的用户线程无法设置为守护线程，所以 thread.setDaemon(true) 必须在 thread.start() 之前设置，否则会抛出 llegalThreadStateException 异常；\n一个守护线程创建的子线程依然是守护线程。\n不要认为所有的应用都可以分配给守护线程来进行服务，比如读写操作或者计算逻辑。\n\n\n\n\n:point_right: 参考阅读：Java 中守护线程的总结\n\n2.8. 线程间是如何通信的？\n当线程间是可以共享资源时，线程间通信是协调它们的重要的手段。Object 类中 wait(), notify() 和 notifyAll() 方法可以用于线程间通信关于资源的锁的状态。\n\n:point_right: 参考阅读：Java 并发编程：线程间协作的两种方式：wait、notify、notifyAll 和 Condition\n\n2.9. 为什么线程通信的方法 wait(), notify() 和 notifyAll() 被定义在 Object 类里？\nJava 的每个对象中都有一个锁(monitor，也可以成为监视器) 并且 wait()、notify() 等方法用于等待对象的锁或者通知其他线程对象的监视器可用。在 Java 的线程中并没有可供任何对象使用的锁和同步器。这就是为什么这些方法是 Object 类的一部分，这样 Java 的每一个类都有用于线程间通信的基本方法\n2.10. 为什么 wait(), notify() 和 notifyAll() 必须在同步方法或者同步块中被调用？\n当一个线程需要调用对象的 wait() 方法的时候，这个线程必须拥有该对象的锁，接着它就会释放这个对象锁并进入等待状态直到其他线程调用这个对象上的 notify() 方法。同样的，当一个线程需要调用对象的 notify() 方法时，它会释放这个对象的锁，以便其他在等待的线程就可以得到这个对象锁。\n由于所有的这些方法都需要线程持有对象的锁，这样就只能通过同步来实现，所以他们只能在同步方法或者同步块中被调用。\n3. 并发机制的底层实现\n3.1. volatile 有什么作用？它的实现原理是什么？\n作用：\n\n被 volatile 关键字修饰的变量有两层含义：\n保证了不同线程对这个变量进行操作时的可见性，即一个线程修改了某个变量的值，这新值对其他线程来说是立即可见的。\n禁止进行指令重排序。\n\n\n\n原理：\n\n观察加入 volatile 关键字和没有加入 volatile 关键字时所生成的汇编代码发现，加入 volatile 关键字时，会多出一个 lock 前缀指令。lock 前缀指令实际上相当于一个内存屏障（也成内存栅栏），内存屏障会提供 3 个功能：\n它确保指令重排序时不会把其后面的指令排到内存屏障之前的位置，也不会把前面的指令排到内存屏障的后面；即在执行到内存屏障这句指令时，在它前面的操作已经全部完成；\n它会强制将对缓存的修改操作立即写入主存；\n如果是写操作，它会导致其他 CPU 中对应的缓存行无效。\n\n\n\n\n:point_right: 参考阅读：Java 并发编程：volatile 关键字解析\n\n3.2. synchronized 有什么作用？它的实现原理是什么？同步方法和同步块，哪个更好？\n作用：\n\n使用 synchronized 关键字来标记一个方法或者代码块，当某个线程调用该对象的 synchronized 方法或者访问 synchronized 代码块时，这个线程便获得了该对象的锁，其他线程暂时无法访问这个方法，只有等待这个方法执行完毕或者代码块执行完毕，这个线程才会释放该对象的锁，其他线程才能执行这个方法或者代码块。\nJVM 基于进入和退出 Monitor 对象来实现方法同步和代码块同步\n对于普通同步方法，锁就是实例对象\n对于静态同步方法，锁就是当前类的 Class 对象\n对于同步代码块，锁就是 Synchonized 括号里配置的对象\n\n\n\n原理：\n\nsynchronized 关键字会阻止其它线程获取当前对象的监控锁，这样就使得当前对象中被 synchronized 关键字保护的代码块无法被其它线程访问，也就无法并发执行。更重要的是，synchronized 还会创建一个内存屏障，内存屏障指令保证了所有 CPU 操作结果都会直接刷到主存中，从而保证了操作的内存可见性，同时也使得先获得这个锁的线程的所有操作，都 happens-before 于随后获得这个锁的线程的操作。\nJDK6 优化\n锁一共有 4 种状态，级别从低到高为：无锁状态、偏向锁状态、轻量级锁状态和重量级锁状态，这几个状态会随着竞争情况逐渐升级。锁可以升级但不能降级，目的是为了提高获得锁和释放锁的效率\n偏向锁：大多数情况下，锁不仅不存在多线程竞争，而且总是同一个线程多次获取，为了让线程获得锁的代价更低引入偏向锁。当某一线程访问同步块时，会在对象头和栈帧中的琐记录里存储锁偏向的线程 ID，以后该线程在进入该同步块的时候，不需要再次使用 CAS 原子操作进行加锁和解锁，只需要简单的测试一下对象头中的 Mark Word 是否存在指向当前线程的偏向锁。如果测试成功，则表示获得锁，否则检测是否设置有偏向锁，如果没有，则使用 CAS 竞争锁，否则偏向锁指向该线程。\n轻量级锁：线程执行同步块之前，会在线程私有的栈帧中开辟用于存储锁记录的空间，称为 Displaced Mark Word。然后线程尝试将对象 Mark Word 的替换为指向 Displaced Mark Word 记录的指针，如果成功，那么当前线程获得锁，如果失败，那么使用自旋获得锁。\n\n\n\n\n\n同步方法和同步块，哪个更好？\n\n同步块是更好的选择。\n因为它不会锁住整个对象（当然你也可以让它锁住整个对象）。同步方法会锁住整个对象，哪怕这个类中有多个不相关联的同步块，这通常会导致他们停止执行并需要等待获得这个对象上的锁。\n\n\n:point_right: 参考阅读：Java 并发编程：synchronized\n\n3.3. volatile 和 synchronized 的区别？\n\nvolatile 本质是在告诉 jvm 当前变量在寄存器（工作内存）中的值是不确定的，需要从主存中读取； synchronized 则是锁定当前变量，只有当前线程可以访问该变量，其他线程被阻塞住。\nvolatile 仅能使用在变量级别；synchronized 则可以使用在变量、方法、和类级别的。\nvolatile 仅能实现变量的修改可见性，不能保证原子性；而 synchronized 则可以保证变量的修改可见性和原子性\nvolatile 不会造成线程的阻塞；synchronized 可能会造成线程的阻塞。\nvolatile 标记的变量不会被编译器优化；synchronized 标记的变量可以被编译器优化。\n\n\n:point_right: 参考阅读：volatile 和 synchronized 的区别\n\nCAS 是指什么？CAS 的原理是什么？\nCAS 的三大问题？\n\nABA问题：因为CAS需要在操作值的时候检查下值有没有发生变化，如果没有发生变化则更新，但是如果一个值原来是A，变成了B，又变成了A，那么使用CAS进行检查时会发现它的值没有发生变化，但是实际上却变化了。ABA问题的解决思路就是使用版本号。在变量前面追加上版本号，每次变量更新的时候把版本号加一，那么A－B－A 就会变成1A-2B－3A。\n循环时间长开销大。自旋CAS如果长时间不成功，会给CPU带来非常大的执行开销。如果JVM能支持处理器提供的pause指令那么效率会有一定的提升，pause指令有两个作用，第一它可以延迟流水线执行指令（de-pipeline）,使CPU不会消耗过多的执行资源，延迟的时间取决于具体实现的版本，在一些处理器上延迟时间是零。第二它可以避免在退出循环的时候因内存顺序冲突（memory order violation）而引起CPU流水线被清空（CPU pipeline flush），从而提高CPU的执行效率。\n只能保证一个共享变量的原子操作。当对一个共享变量执行操作时，我们可以使用循环CAS的方式来保证原子操作，但是对多个共享变量操作时，循环CAS就无法保证操作的原子性，这个时候就可以用锁，或者有一个取巧的办法，就是把多个共享变量合并成一个共享变量来操作。比如有两个共享变量i＝2,j=a，合并一下ij=2a，然后用CAS来操作ij。从Java1.5开始JDK提供了AtomicReference类来保证引用对象之间的原子性，你可以把多个变量放在一个对象里来进行CAS操作。\n\n3.4. ThreadLocal 有什么作用？ThreadLocal 的实现原理是什么？\nThreadLocal 有什么作用？\nThreadLocal 为变量在每个线程中都创建了一个副本，那么每个线程可以访问自己内部的副本变量。\nThreadLocal 的实现原理是什么？\n首先，在每个线程 Thread 内部有一个 ThreadLocal.ThreadLocalMap 类型的成员变量 threadLocals，这个 threadLocals 就是用来存储实际的变量副本的，key 为当前 ThreadLocal 变量，value 为变量副本（即 T 类型的变量）。\n初始时，在 Thread 里面，threadLocals 为空。当通过 ThreadLocal 变量调用 get() 方法或者 set() 方法，就会对 Thread 类中的 threadLocals 进行初始化，并且以当前 ThreadLocal 变量为键值，以 ThreadLocal 要保存的副本变量为 value，存到 threadLocals。\n然后在当前线程里面，如果要使用副本变量，就可以通过 get 方法在 threadLocals 里面查找。\n需要注意的是：ThreadLocalMap.Entry 继承了 WeakReference。ThreadLocalMap 使用它的目的是：当 threadLocal 实例可以被 GC 回收时，系统可以检测到该 threadLocal 对应的 Entry 是否已经过期（根据 reference.get() == null 来判断，如果为 true 则表示过期，程序内部称为 stale slots）来自动做一些清除工作，否则如果不清除的话容易产生内存无法释放的问题：value 对应的对象即使不再使用，但由于被 threadLocalMap 所引用导致无法被 GC 回收。实际代码中，ThreadLocalMap 会在 set，get 以及 resize 等方法中对 stale slots 做自动删除（set 以及 get 不保证所有过期 slots 会在操作中会被删除，而 resize 则会删除 threadLocalMap 中所有的过期 slots）。当然将 threadLocal 对象设置为 null 并不能完全避免内存泄露对象，最安全的办法仍然是调用 ThreadLocal 的 remove 方法，来彻底避免可能的内存泄露。\n\n:point_right: 参考阅读：Java 并发编程：深入剖析 ThreadLocal\n\n4. 内存模型\n4.1. 什么是 Java 内存模型\n\nJava 内存模型即 Java Memory Model，简称 JMM。JMM 定义了 JVM 在计算机内存(RAM)中的工作方式。JMM 是隶属于 JVM 的。\n并发编程领域两个关键问题：线程间通信和线程间同步\n线程间通信机制\n共享内存 - 线程间通过写-读内存中的公共状态来隐式进行通信。\n消息传递 - java 中典型的消息传递方式就是 wait()和 notify()。\n\n\n线程间同步机制\n在共享内存模型中，必须显示指定某个方法或某段代码在线程间互斥地执行。\n在消息传递模型中，由于发送消息必须在接收消息之前，因此同步是隐式进行的。\n\n\nJava 的并发采用的是共享内存模型\nJMM 决定一个线程对共享变量的写入何时对另一个线程可见。\n线程之间的共享变量存储在主内存（main memory）中，每个线程都有一个私有的本地内存（local memory），本地内存中存储了该线程以读/写共享变量的副本。\nJMM 把内存分成了两部分：线程栈区和堆区\n线程栈\nJVM 中运行的每个线程都拥有自己的线程栈，线程栈包含了当前线程执行的方法调用相关信息，我们也把它称作调用栈。随着代码的不断执行，调用栈会不断变化。\n线程栈还包含了当前方法的所有本地变量信息。线程中的本地变量对其它线程是不可见的。\n\n\n堆区\n堆区包含了 Java 应用创建的所有对象信息，不管对象是哪个线程创建的，其中的对象包括原始类型的封装类（如 Byte、Integer、Long 等等）。不管对象是属于一个成员变量还是方法中的本地变量，它都会被存储在堆区。\n\n\n一个本地变量如果是原始类型，那么它会被完全存储到栈区。\n一个本地变量也有可能是一个对象的引用，这种情况下，这个本地引用会被存储到栈中，但是对象本身仍然存储在堆区。\n对于一个对象的成员方法，这些方法中包含本地变量，仍需要存储在栈区，即使它们所属的对象在堆区。\n对于一个对象的成员变量，不管它是原始类型还是包装类型，都会被存储到堆区。\n\n\n\n\n  \n\n\n\n:point_right: 参考阅读：全面理解 Java 内存模型\n\n5. 同步容器和并发容器\n5.1. 什么是同步容器？有哪些常见同步容器？它们是如何实现线程安全的？同步容器真的线程安全吗？\n\n同步容器是指 Java 中使用 synchronized 关键字修饰方法以保证方法线程安全的容器。\n常见的同步容器有 Vector、HashTable、Stack，与之相对应的 ArrayList、HashMap、LinkedList 则是非线程安全的。\n同步容器之所以说是线程安全的，是因为它们的方法被 synchronized 关键字修饰，从而保证了当有一个线程执行方法时，其他线程被阻塞。\n同步容器中的所有自带方法都是线程安全的。但是，对这些集合类的复合操作无法保证其线程安全性。需要客户端通过主动加锁来保证。\n典型场景：使用同步容器做迭代操作时，如果不对外部做同步，就可能出现 ConcurrentModificationException 异常。\n结论：由于同步容器不能彻底保证线程安全，且性能不高，所以不建议使用。如果想使用线程安全的容器，可以考虑 juc 包中提供的 ConcurrentHashMap 等并发容器。\n\n\n\nfor(int i=0;i\n\n:point_right: 参考阅读：Java 并发编程：同步容器\n\n5.2. 什么是并发容器的实现？\nJava 集合类都是快速失败的，这就意味着当集合被改变且一个线程在使用迭代器遍历集合的时候，迭代器的 next()方法将抛出 ConcurrentModificationException 异常。\n并发容器支持并发的遍历和并发的更新。\n主要的类有 ConcurrentHashMap, CopyOnWriteArrayList 和 CopyOnWriteArraySet，阅读这篇文章了解如何避免 ConcurrentModificationException。\n6. 锁\n6.1. 如何避免死锁？\n\n避免一个线程同时获取多个锁\n避免一个线程在锁内同时占用多个资源，尽量保证每个锁只占用一个资源\n尝试使用定时锁 lock.tryLock(timeout)，避免锁一直不能释放\n对于数据库锁，加锁和解锁必须在一个数据库连接中里，否则会出现解锁失败的情况。\n\nJava 中有哪些锁？\n6.2. Lock 接口(Lock interface)是什么？对比同步它有什么优势？\nLock 接口比同步方法和同步块提供了更具扩展性的锁操作。他们允许更灵活的结构，可以具有完全不同的性质，并且可以支持多个相关类的条件对象。\n它的优势有：\n可以使锁更公平可以使线程在等待锁的时候响应中断可以让线程尝试获取锁，并在无法获取锁的时候立即返回或者等待一段时间可以在不同的范围，以不同的顺序获取和释放锁阅读更多关于锁的例子\n6.3. 什么是阻塞队列？如何使用阻塞队列来实现生产者-消费者模型？\njava.util.concurrent.BlockingQueue 的特性是：当队列是空的时，从队列中获取或删除元素的操作将会被阻塞，或者当队列是满时，往队列里添加元素的操作会被阻塞。\n阻塞队列不接受空值，当你尝试向队列中添加空值的时候，它会抛出 NullPointerException。\n阻塞队列的实现都是线程安全的，所有的查询方法都是原子的并且使用了内部锁或者其他形式的并发控制。\nBlockingQueue 接口是 java collections 框架的一部分，它主要用于实现生产者-消费者问题。\n阅读这篇文章了解如何使用阻塞队列实现生产者-消费者问题。\n7. 原子变量类\n7.1. 什么是原子操作？有哪些原子类？\n原子操作是指一个不受其他操作影响的操作任务单元。原子操作是在多线程环境下避免数据不一致必须的手段。\nint++并不是一个原子操作，所以当一个线程读取它的值并加 1 时，另外一个线程有可能会读到之前的值，这就会引发错误。\n为了解决这个问题，必须保证增加操作是原子的，在 JDK1.5 之前我们可以使用同步技术来做到这一点。到 JDK1.5，java.util.concurrent.atomic 包提供了 int 和 long 类型的装类，它们可以自动的保证对于他们的操作是原子的并且不需要使用同步。可以阅读这篇文章来了解 Java 的 atomic 类。\n原子类的实现原理是什么？\n\n处理器实现原子操作：使用总线锁保证原子性，使用缓存锁保证原子性（修改内存地址，缓存一致性机制：阻止同时修改由2个以上的处理器缓存的内存区域数据）\nJAVA实现原子操作：循环使用CAS实现原子操作\n\n8. 并发工具类\n8.1. CyclicBarrier 和 CountDownLatch 有什么不同？\nCyclicBarrier 和 CountDownLatch 都可以用来让一组线程等待其它线程。与 CyclicBarrier 不同的是，CountdownLatch 不能重用。\n\n:point_right: 参考阅读：Java 并发编程：CountDownLatch、CyclicBarrier 和 Semaphore\n\n9. 线程池\n9.1. 什么是线程池？如何创建一个 Java 线程池？\n一个线程池管理了一组工作线程，同时它还包括了一个用于放置等待执行的任务的队列。\njava.util.concurrent.Executors 提供了一个 java.util.concurrent.Executor 接口的实现用于创建线程池。线程池例子展现了如何创建和使用线程池，或者阅读 ScheduledThreadPoolExecutor 例子，了解如何创建一个周期任务。\n\n:point_right: 参考阅读：Java 并发编程：线程池的使用\n\n9.2. 什么是 Executors 框架？\nExecutor 框架同 java.util.concurrent.Executor 接口在 Java 5 中被引入。Executor 框架是一个根据一组执行策略调用，调度，执行和控制的异步任务的框架。\n无限制的创建线程会引起应用程序内存溢出。所以创建一个线程池是个更好的的解决方案，因为可以限制线程的数量并且可以回收再利用这些线程。利用 Executors 框架可以非常方便的创建一个线程池，阅读这篇文章可以了解如何使用 Executor 框架创建一个线程池。\n9.3. Executors 类是什么？\nExecutors 为 Executor，ExecutorService，ScheduledExecutorService，ThreadFactory 和 Callable 类提供了一些工具方法。\nExecutors 可以用于方便的创建线程池。\n9.4. ThreadPoolExecutor 有哪些参数，各自有什么用？\njava.uitl.concurrent.ThreadPoolExecutor 类是 Executor 框架中最核心的一个类。\nThreadPoolExecutor 有四个构造方法，前三个都是基于第四个实现。第四个构造方法定义如下：\n    public ThreadPoolExecutor(int corePoolSize,\n                              int maximumPoolSize,\n                              long keepAliveTime,\n                              TimeUnit unit,\n                              BlockingQueue workQueue,\n                              ThreadFactory threadFactory,\n                              RejectedExecutionHandler handler) {\n\n参数说明\n\ncorePoolSize：默认情况下，在创建了线程池后，线程池中的线程数为 0，当有任务来之后，就会创建一个线程去执行任务，当线程池中的线程数目达到 corePoolSize 后，就会把到达的任务放到缓存队列当中。\nmaximumPoolSize：线程池允许创建的最大线程数。如果缓存队列满了，并且已创建的线程数小于最大线程数，则线程池会再创建新的线程执行任务。值得注意的是如果使用了无界的任务队列这个参数就没什么效果。\nkeepAliveTime：线程活动保持时间。线程池的工作线程空闲后，保持存活的时间。所以如果任务很多，并且每个任务执行的时间比较短，可以调大这个时间，提高线程的利用率。\nunit：参数 keepAliveTime 的时间单位，有 7 种取值。可选的单位有天（DAYS），小时（HOURS），分钟（MINUTES），毫秒(MILLISECONDS)，微秒(MICROSECONDS, 千分之一毫秒)和毫微秒(NANOSECONDS, 千分之一微秒)。\nworkQueue：任务队列。用于保存等待执行的任务的阻塞队列。 可以选择以下几个阻塞队列。\nArrayBlockingQueue：是一个基于数组结构的有界阻塞队列，此队列按 FIFO（先进先出）原则对元素进行排序。\nLinkedBlockingQueue：一个基于链表结构的阻塞队列，此队列按 FIFO （先进先出） 排序元素，吞吐量通常要高于 ArrayBlockingQueue。静态工厂方法 Executors.newFixedThreadPool()使用了这个队列。\nSynchronousQueue：一个不存储元素的阻塞队列。每个插入操作必须等到另一个线程调用移除操作，否则插入操作一直处于阻塞状态，吞吐量通常要高于 LinkedBlockingQueue，静态工厂方法 Executors.newCachedThreadPool 使用了这个队列。\nPriorityBlockingQueue：一个具有优先级的无限阻塞队列。\n\n\nthreadFactory：创建线程的工厂。可以通过线程工厂给每个创建出来的线程设置更有意义的名字。\nhandler：饱和策略。当队列和线程池都满了，说明线程池处于饱和状态，那么必须采取一种策略处理提交的新任务。这个策略默认情况下是 AbortPolicy，表示无法处理新任务时抛出异常。以下是 JDK1.5 提供的四种策略。\nAbortPolicy：直接抛出异常。\nCallerRunsPolicy：只用调用者所在线程来运行任务。\nDiscardOldestPolicy：丢弃队列里最近的一个任务，并执行当前任务。\nDiscardPolicy：不处理，丢弃掉。\n当然也可以根据应用场景需要来实现 RejectedExecutionHandler 接口自定义策略。如记录日志或持久化不能处理的任务。\n\n\n\n9.5. 线程数多少才合理\n资源限制\n资源限制指的是程序的执行速度受限于计算机硬件资源或软件资源，如服务器的带宽只有 2Mb/s,某个资源的下载速度为 1Mb/s,系统启动 10 个线程去下载资源，下载速度不会变成 10Mb/s，所以在进行并发的时候回考虑资源的限制。硬件资源限制有带宽的上传/下载速度、硬盘的读写速度和 CPU 的处理速度。软件资源限制有数据库的连接数和 socket 连接数等。\n资源限制引来的问题：为了将代码执行速度加快将代码中串行执行的部分变成并发执行，因为资源受限，仍然在串行执行，这时候程序不仅不会加快，反而会变慢，因为增加了上下文切换和资源调度的时间。\n如何解决资源限制问题：可以使用集群并行执行程序，既然单机的资源有限，那么可以让程序在多机上运行，比如使用 ODPS、Hadoop 或者自己搭个服务器集群，不同的机器处理不同的数据，可以通过“数据 ID%机器数”，计算得到一个机器编号，然后由对应编号的机器处理这个数据，对于软件资源受限，可以使用资源池来复用如使用连接池将数据库和 Socket 连接复用，或者在调用对方 webservice 接口获取数据只建立一个连接。\n10. 资料\n\n文章\nJava 线程面试题 Top 50\nJAVA 多线程和并发基础面试问答\n进程和线程关系及区别\nJava Thread Methods and Thread States\nJava 线程的 5 种状态及切换(透彻讲解)\nJava 中守护线程的总结\njava 创建线程的三种方式及其对比\nJava 线程的 5 种状态及切换(透彻讲解)\njava 线程方法 join 的简单总结\nJava 并发编程：线程间协作的两种方式：wait、notify、notifyAll 和 Condition\nJava 并发编程：volatile 关键字解析\nJava 并发编程：Callable、Future 和 FutureTask\nJava 并发编程：线程池的使用\nJava并发编程\n\n\n\n"},"javacore/concurrent/并发简介.html":{"url":"javacore/concurrent/并发简介.html","title":"第一章 并发简介","keywords":"","body":"并发简介\n\n\n并发术语\n并发和并行\n同步和异步\n阻塞和非阻塞\n进程和线程\n\n\n多线程的优点\n更好的资源利用\n程序设计更简单\n程序响应更快\n\n\n多线程的风险\n安全性问题\n活跃性问题\n性能问题\n\n\n资料\n\n\n并发术语\n学习并发编程，免不了大量接触一些术语。其中，有些术语经常容易被混淆或分不清它们的差异，这里汇总一下。\n并发和并行\n\n例子\n你吃饭吃到一半，电话来了，你一直到吃完了以后才去接，这就说明你不支持并发也不支持并行。\n你吃饭吃到一半，电话来了，你停了下来接了电话，接完后继续吃饭，这说明你支持并发。\n你吃饭吃到一半，电话来了，你一边打电话一边吃饭，这说明你支持并行。\n\n\n定义\n并发的关键是你有处理多个任务的能力，不一定要同时。\n并行的关键是你有同时处理多个任务的能力。\n最关键的点就是：是否是同时。\n\n\n\n\n  \n\n\n同步和异步\n\n例子\n同步就像是打电话，不挂电话，通话不会结束。\n异步就像是发短信，发完短信后，就可以做其他事，短信来了，手机会提醒。\n\n\n定义\n所谓同步，就是在发出一个调用时，在没有得到结果之前，该调用就不返回。但是一旦调用返回，就得到返回值了。\n异步则是相反，调用在发出之后，这个调用就直接返回了，所以没有返回结果。换句话说，当一个异步过程调用发出后，调用者不会立刻得到结果。而是在调用发出后，被调用者通过状态、通知来通知调用者，或通过回调函数处理这个调用。\n\n\n\n\n  \n\n\n阻塞和非阻塞\n\n例子\n阻塞调用就像是打电话，通话不结束，不能放下。\n非阻塞调用就像是发短信，发完短信后，就可以做其他事，短信来了，手机会提醒。\n\n\n定义\n阻塞和非阻塞关注的是程序在等待调用结果（消息，返回值）时的状态.\n阻塞调用是指调用结果返回之前，当前线程会被挂起。调用线程只有在得到结果之后才会返回。\n非阻塞调用指在不能立刻得到结果之前，该调用不会阻塞当前线程。\n\n\n\n进程和线程\n\n什么是进程\n简言之，进程可视为一个正在运行的程序。\n进程是具有一定独立功能的程序关于某个数据集合上的一次运行活动。进程是操作系统进行资源分配的基本单位。\n\n\n什么是线程\n线程是操作系统进行调度的基本单位。\n\n\n进程 vs. 线程\n一个程序至少有一个进程，一个进程至少有一个线程。\n线程比进程划分更细，所以执行开销更小，并发性更高\n进程是一个实体，拥有独立的资源；而同一个进程中的多个线程共享进程的资源。\n\n\n\n\n  \n\n\nJVM 在单个进程中运行，JVM 中的线程共享属于该进程的堆。这就是为什么几个线程可以访问同一个对象。线程共享堆并拥有自己的堆栈空间。这是一个线程如何调用一个方法以及它的局部变量是如何保持线程安全的。但是堆不是线程安全的并且为了线程安全必须进行同步。\n多线程的优点\n\n更好的资源利用\n更简单的编程模型\n程序响应更灵敏\n\n更好的资源利用\n想象一下，一个应用程序需要从本地文件系统中读取和处理文件的情景。比方说，从磁盘读取一个文件需要 5 秒，处理一个文件需要 2 秒。处理两个文件则需要：\n5秒读取文件A\n2秒处理文件A\n5秒读取文件B\n2秒处理文件B\n---------------------\n总共需要14秒\n从磁盘中读取文件的时候，大部分的 CPU 时间用于等待磁盘去读取数据。在这段时间里，CPU 非常的空闲。它可以做一些别的事情。通过改变操作的顺序，就能够更好的使用 CPU 资源。看下面的顺序：\n5秒读取文件A\n5秒读取文件B + 2秒处理文件A\n2秒处理文件B\n---------------------\n总共需要12秒\nCPU 等待第一个文件被读取完。然后开始读取第二个文件。当第二文件在被读取的时候，CPU 会去处理第一个文件。记住，在等待磁盘读取文件的时候，CPU 大 部分时间是空闲的。\n总的说来，CPU 能够在等待 IO 的时候做一些其他的事情。这个不一定就是磁盘 IO。它也可以是网络的 IO，或者用户输入。通常情况下，网络和磁盘的 IO 比 CPU 和内存的 IO 慢的多。\n程序设计更简单\n在单线程应用程序中，如果你想编写程序手动处理上面所提到的读取和处理的顺序，你必须记录每个文件读取和处理的状态。相反，你可以启动两个线程，每个线程处理一个文件的读取和操作。线程会在等待磁盘读取文件的过程中被阻塞。在等待的时候，其他的线程能够使用 CPU 去处理已经读取完的文件。其结果就是，磁盘总是在繁忙地读取不同的文件到内存中。这会带来磁盘和 CPU 利用率的提升。而且每个线程只需要记录一个文件，因此这种方式也很容易编程实现。\n程序响应更快\n将一个单线程应用程序变成多线程应用程序的另一个常见的目的是实现一个响应更快的应用程序。设想一个服务器应用，它在某一个端口监听进来的请求。当一个请求到来时，它去处理这个请求，然后再返回去监听。\n服务器的流程如下所述：\nwhile(server is active) {\n    listen for request\n    process request\n}\n\n如果一个请求需要占用大量的时间来处理，在这段时间内新的客户端就无法发送请求给服务端。只有服务器在监听的时候，请求才能被接收。另一种设计是，监听线程把请求传递给工作者线程(worker thread)，然后立刻返回去监听。而工作者线程则能够处理这个请求并发送一个回复给客户端。这种设计如下所述：\nwhile(server is active) {\n    listen for request\n    hand request to worker thread\n}\n\n这种方式，服务端线程迅速地返回去监听。因此，更多的客户端能够发送请求给服务端。这个服务也变得响应更快。\n桌面应用也是同样如此。如果你点击一个按钮开始运行一个耗时的任务，这个线程既要执行任务又要更新窗口和按钮，那么在任务执行的过程中，这个应用程序看起来好像没有反应一样。相反，任务可以传递给工作者线程（word thread)。当工作者线程在繁忙地处理任务的时候，窗口线程可以自由地响应其他用户的请求。当工作者线程完成任务的时候，它发送信号给窗口线程。窗口线程便可以更新应用程序窗口，并显示任务的结果。对用户而言，这种具有工作者线程设计的程序显得响应速度更快。\n多线程的风险\n凡事有利有弊，引入多线程除了带来的好处以外，也产生了一些问题：\n\n安全性问题\n活跃性问题\n性能问题\n\n安全性问题\n什么是线程安全？\n线程安全很难定义。我所看到的对于线程安全的定义都太过抽象。\n所以，我觉得有必要反向理解，知道什么是线程不安全，那么就能定义线程安全的边界了。\n在同一程序中运行多个线程本身不会导致问题，问题在于多个线程访问了相同的资源。如：同一内存区（变量，数组，或对象）、系统（数据库，web services 等）或文件。\n线程不安全的示例\npublic class Counter {\n    protected long count = 0;\n    public void add(long value){\n        this.count = this.count + value;\n    }\n}\n\n想象下线程 A 和 B 同时执行同一个 Counter 对象的 add()方法，我们无法知道操作系统何时会在两个线程之间切换。JVM 并不是将这段代码视为单条指令来执行的，而是按照下面的顺序：\n从内存获取 this.count 的值放到寄存器\n将寄存器中的值增加 value\n将寄存器中的值写回内存\n观察线程 A 和 B 交错执行会发生什么：\nthis.count = 0;\nA: 读取 this.count 到一个寄存器 (0)\nB: 读取 this.count 到一个寄存器 (0)\nB: 将寄存器的值加 2\nB: 回写寄存器值(2)到内存. this.count 现在等于 2\nA: 将寄存器的值加 3\nA: 回写寄存器值(3)到内存. this.count 现在等于 3\n两个线程分别加了 2 和 3 到 count 变量上，两个线程执行结束后 count 变量的值应该等于 5。然而由于两个线程是交叉执行的，两个线程从内存中读出的初始值都是 0。然后各自加了 2 和 3，并分别写回内存。最终的值并不是期望的 5，而是最后写回内存的那个线程的值，上面例子中最后写回内存的是线程 A，但实际中也可能是线程 B。如果没有采用合适的同步机制，线程间的交叉执行情况就无法预料。\n竞态条件和临界区\n\n竞态条件（Race Condition）：当两个线程竞争同一资源时，如果对资源的访问顺序敏感，就称存在竞态条件。\n临界区（Critical Sections）：导致竞态条件发生的代码区称作临界区。\n\n上例中 add()方法就是一个临界区,它会产生竞态条件。在临界区中使用适当的同步就可以避免竞态条件。\n活跃性问题\n死锁（Deadlock）\n什么是死锁\n多个线程互相等待对方释放锁。\n死锁是当线程进入无限期等待状态时发生的情况，因为所请求的锁被另一个线程持有，而另一个线程又等待第一个线程持有的另一个锁。\n\n  \n\n\n避免死锁的方法\n（1）加锁顺序\n当多个线程需要相同的一些锁，但是按照不同的顺序加锁，死锁就很容易发生。\n如果能确保所有的线程都是按照相同的顺序获得锁，那么死锁就不会发生。\n按照顺序加锁是一种有效的死锁预防机制。但是，这种方式需要你事先知道所有可能会用到的锁(译者注：并对这些锁做适当的排序)，但总有些时候是无法预知的。\n（2）加锁时限\n另外一个可以避免死锁的方法是在尝试获取锁的时候加一个超时时间，这也就意味着在尝试获取锁的过程中若超过了这个时限该线程则放弃对该锁请求。若一个线程没有在给定的时限内成功获得所有需要的锁，则会进行回退并释放所有已经获得的锁，然后等待一段随机的时间再重试。这段随机的等待时间让其它线程有机会尝试获取相同的这些锁，并且让该应用在没有获得锁的时候可以继续运行(译者注：加锁超时后可以先继续运行干点其它事情，再回头来重复之前加锁的逻辑)。\n（3）死锁检测\n死锁检测是一个更好的死锁预防机制，它主要是针对那些不可能实现按序加锁并且锁超时也不可行的场景。\n每当一个线程获得了锁，会在线程和锁相关的数据结构中（map、graph 等等）将其记下。除此之外，每当有线程请求锁，也需要记录在这个数据结构中。\n当一个线程请求锁失败时，这个线程可以遍历锁的关系图看看是否有死锁发生。\n如果检测出死锁，有两种处理手段：\n\n释放所有锁，回退，并且等待一段随机的时间后重试。这个和简单的加锁超时类似，不一样的是只有死锁已经发生了才回退，而不会是因为加锁的请求超时了。虽然有回退和等待，但是如果有大量的线程竞争同一批锁，它们还是会重复地死锁（编者注：原因同超时类似，不能从根本上减轻竞争）。\n一个更好的方案是给这些线程设置优先级，让一个（或几个）线程回退，剩下的线程就像没发生死锁一样继续保持着它们需要的锁。如果赋予这些线程的优先级是固定不变的，同一批线程总是会拥有更高的优先级。为避免这个问题，可以在死锁发生的时候设置随机的优先级。\n\n活锁（Livelock）\n什么是活锁？\n活锁是一个递归的情况，两个或更多的线程会不断重复一个特定的代码逻辑。预期的逻辑通常为其他线程提供机会继续支持'this'线程。\n想象这样一个例子：两个人在狭窄的走廊里相遇，二者都很礼貌，试图移到旁边让对方先通过。但是他们最终在没有取得任何进展的情况下左右摇摆，因为他们都在同一时间向相同的方向移动。\n\n  \n\n\n如图所示：两个线程想要通过一个 Worker 对象访问共享公共资源的情况，但是当他们看到另一个 Worker（在另一个线程上调用）也是“活动的”时，它们会尝试将该资源交给其他工作者并等待为它完成。如果最初我们让两名工作人员都活跃起来，他们将会面临活锁问题。\n避免活锁\n没有避免活锁的通用指南，但是在我们改变其他线程也使用的公共对象状态的场景中，例如在上述场景中，我们必须小心 Worker 对象。\n饥饿（Starvation）\n导致饥饿问题的原因\n\n高优先级线程吞噬所有的低优先级线程的 CPU 时间。\n线程被永久堵塞在一个等待进入同步块的状态，因为其他线程总是能在它之前持续地对该同步块进行访问。\n线程在等待一个本身(在其上调用 wait())也处于永久等待完成的对象，因为其他线程总是被持续地获得唤醒。\n\n\n  \n\n\n饥饿问题最经典的例子就是哲学家问题。如图所示：有五个哲学家用餐，每个人要获得两把叉子才可以就餐。当 2、4 就餐时，1、3、5 永远无法就餐，只能看着盘中的美食饥饿的等待着。\n解决饥饿问题的方法\nJava 不可能实现 100% 的公平性，我们依然可以通过同步结构在线程间实现公平性的提高。\n\n使用锁，而不是同步块。\n公平锁。\n\n性能问题\n并发执行一定比串行执行快吗？\n答案是：不一定。因为有创建线程和线程上下文切换的开销。\n上下文切换\n什么是上下文切换？\n当 CPU 从执行一个线程切换到执行另一个线程时，CPU 需要保存当前线程的本地数据，程序指针等状态，并加载下一个要执行的线程的本地数据，程序指针等。这个开关被称为“上下文切换”。\n减少上下文切换的方法\n\n无锁并发编程 - 多线程竞争锁时，会引起上下文切换，所以多线程处理数据时，可以用一些办法来避免使用锁，如将数据的 ID 按照 Hash 算法取模分段，不同的线程处理不同段的数据。\nCAS 算法 - Java 的 Atomic 包使用 CAS 算法来更新数据，而不需要加锁。\n使用最少线程 - 避免创建不需要的线程，比如任务很少，但是创建了很多线程来处理，这样会造成大量线程都处于等待状态。\n使用协程 - 在单线程里实现多任务的调度，并在单线程里维持多个任务间的切换。\n\n资源限制\n什么是资源限制\n资源限制是指在进行并发编程时，程序的执行速度受限于计算机硬件资源或软件资源。\n资源限制引发的问题\n在并发编程中，将代码执行速度加快的原则是将代码中串行执行的部分变成并发执行，但是如果将某段串行的代码并发执行，因为受限于资源，仍然在串行执行，这时候程序不仅不会加快执行，反而会更慢，因为增加了上下文切换和资源调度的时间。\n如何解决资源限制的问题\n在资源限制情况下进行并发编程，根据不同的资源限制调整程序的并发度。\n\n对于硬件资源限制，可以考虑使用集群并行执行程序。\n对于软件资源限制，可以考虑使用资源池将资源复用。\n\n资料\n\nJava 并发编程实战：第 1 章 简介\nJava 并发编程的艺术：第 1 章 Java 并发编程的挑战\nhttp://tutorials.jenkov.com/java-concurrency/benefits.html\nhttps://www.logicbig.com/tutorials/core-java-tutorial/java-multi-threading/thread-deadlock.html\nhttps://www.logicbig.com/tutorials/core-java-tutorial/java-multi-threading/thread-livelock.html\nhttps://www.logicbig.com/tutorials/core-java-tutorial/java-multi-threading/thread-starvation.html\nhttps://www.zhihu.com/question/33515481\nhttps://blog.csdn.net/yaosiming2011/article/details/44280797\n\n"},"javacore/concurrent/线程基础.html":{"url":"javacore/concurrent/线程基础.html","title":"第二章 线程基础","keywords":"","body":"线程基础\n\n\n线程简介\n什么是线程\n线程生命周期\n\n\n启动和终止线程\n构造线程\n中断线程\n终止线程\nThread 中的重要方法\n\n\n线程间通信\nwait/notify/notifyAll\n线程的礼让\nThreadLocal\n管道输入/输出流\n\n\nFAQ\nstart() 和 run() 有什么区别？可以直接调用 Thread 类的 run() 方法么？\nsleep()、yield()、join() 方法有什么区别？为什么 sleep()和 yield()方法是静态的？\n为什么 sleep() 和 yield() 方法是静态的\nJava 的线程优先级如何控制？高优先级的 Java 线程一定先执行吗？\n什么是守护线程？为什么要用守护线程？如何创建守护线程？\n为什么线程通信的方法 wait(), notify()和 notifyAll()被定义在 Object 类里？\n为什么 wait(), notify()和 notifyAll()必须在同步方法或者同步块中被调用？\n\n\n资料\n\n\n线程简介\n什么是线程\n现代操作系统调度的最小单元是线程，也叫轻量级进程（Light Weight Process），在一个进程里可以创建多个线程，这些线程都拥有各自的计数器、堆栈和局部变量等属性，并且能够访问共享的内存变量。\n线程生命周期\n\n  \n\n\njava.lang.Thread.State 中定义了 6 种不同的线程状态，在给定的一个时刻，线程只能处于其中的一个状态。\n以下是各状态的说明，以及状态间的联系：\n\n开始（New） - 还没有调用 start() 方法的线程处于此状态。\n可运行（Runnable） - 已经调用了 start() 方法的线程状态。此状态意味着，线程已经准备好了，一旦被线程调度器分配了 CPU 时间片，就可以运行线程。\n阻塞（Blocked） - 阻塞状态。线程阻塞的线程状态等待监视器锁定。处于阻塞状态的线程正在等待监视器锁定，以便在调用 Object.wait() 之后输入同步块/方法或重新输入同步块/方法。\n等待（Waiting） - 等待状态。一个线程处于等待状态，是由于执行了 3 个方法中的任意方法：\nObject.wait()\nThread.join()\nLockSupport.park()\n\n\n定时等待（Timed waiting） - 等待指定时间的状态。一个线程处于定时等待状态，是由于执行了以下方法中的任意方法：\nThread.sleep(sleeptime)\nObject.wait(timeout)\nThread.join(timeout)\nLockSupport.parkNanos(timeout)\nLockSupport.parkUntil(timeout)\n\n\n终止(Terminated) - 线程 run() 方法执行结束，或者因异常退出了 run() 方法，则该线程结束生命周期。死亡的线程不可再次复生。\n\n启动和终止线程\n构造线程\n构造线程主要有三种方式\n\n继承 Thread 类\n实现 Runnable 接口\n实现 Callable 接口\n\n继承 Thread 类\n通过继承 Thread 类构造线程的步骤：\n\n定义 Thread 类的子类，并重写该类的 run() 方法，该 run() 方法的方法体就代表了线程要完成的任务。因此把 run() 方法称为执行体。\n创建 Thread 子类的实例，即创建了线程对象。\n调用线程对象的 start() 方法来启动该线程。\n\n示例：\npublic class ThreadDemo02 {\n\n    public static void main(String[] args) {\n        Thread02 mt1 = new Thread02(\"线程A \"); // 实例化对象\n        Thread02 mt2 = new Thread02(\"线程B \"); // 实例化对象\n        mt1.start(); // 调用线程主体\n        mt2.start(); // 调用线程主体\n    }\n\n    static class Thread02 extends Thread {\n\n        private int ticket = 5;\n\n        Thread02(String name) {\n            super(name);\n        }\n\n        @Override\n        public void run() {\n            for (int i = 0; i  0) {\n                    System.out.println(this.getName() + \" 卖票：ticket = \" + ticket--);\n                }\n            }\n        }\n    }\n}\n\n实现 Runnable 接口\n通过实现 Runnable 接口构造线程的步骤：\n\n定义 Runnable 接口的实现类，并重写该接口的 run() 方法，该 run() 方法的方法体同样是该线程的线程执行体。\n创建 Runnable 实现类的实例，并依此实例作为 Thread 的 target 来创建 Thread 对象，该 Thread 对象才是真正的线程对象。\n调用线程对象的 start() 方法来启动该线程。\n\n示例：\npublic class RunnableDemo {\n\n    public static void main(String[] args) {\n        MyThread t = new MyThread(\"Runnable 线程\"); // 实例化对象\n        new Thread(t).run(); // 调用线程主体\n        new Thread(t).run(); // 调用线程主体\n        new Thread(t).run(); // 调用线程主体\n    }\n\n    static class MyThread implements Runnable {\n\n        private int ticket = 5;\n        private String name;\n\n        MyThread(String name) {\n            this.name = name;\n        }\n\n        @Override\n        public void run() {\n            for (int i = 0; i  0) {\n                    System.out.println(this.name + \" 卖票：ticket = \" + ticket--);\n                }\n            }\n        }\n    }\n}\n\n实现 Callable 接口\n通过实现 Callable 接口构造线程的步骤：\n\n创建 Callable 接口的实现类，并实现 call() 方法，该 call() 方法将作为线程执行体，并且有返回值。\n创建 Callable 实现类的实例，使用 FutureTask 类来包装 Callable 对象，该 FutureTask 对象封装了该 Callable 对象的 call() 方法的返回值。\n使用 FutureTask 对象作为 Thread 对象的 target 创建并启动新线程。\n调用 FutureTask 对象的 get() 方法来获得子线程执行结束后的返回值。\n\n示例：\npublic class CallableAndFutureDemo {\n\n    public static void main(String[] args) {\n        Callable callable = () -> new Random().nextInt(100);\n        FutureTask future = new FutureTask<>(callable);\n        new Thread(future).start();\n        try {\n            Thread.sleep(1000);// 可能做一些事情\n            System.out.println(future.get());\n        } catch (InterruptedException | ExecutionException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n三种创建线程方式对比\n\n实现 Runnable 接口优于继承 Thread 类，因为实现接口方式更便于扩展类。\n实现 Runnable 接口的线程没有返回值；而实现 Callable 接口的线程有返回值。\n\n中断线程\n当一个线程运行时，另一个线程可以直接通过 interrupt() 方法中断其运行状态。\npublic class ThreadInterruptDemo {\n\n    public static void main(String[] args) {\n        MyThread mt = new MyThread(); // 实例化Runnable子类对象\n        Thread t = new Thread(mt, \"线程\"); // 实例化Thread对象\n        t.start(); // 启动线程\n        try {\n            Thread.sleep(2000); // 线程休眠2秒\n        } catch (InterruptedException e) {\n            System.out.println(\"3、休眠被终止\");\n        }\n        t.interrupt(); // 中断线程执行\n    }\n\n    static class MyThread implements Runnable {\n\n        @Override\n        public void run() {\n            System.out.println(\"1、进入run()方法\");\n            try {\n                Thread.sleep(10000); // 线程休眠10秒\n                System.out.println(\"2、已经完成了休眠\");\n            } catch (InterruptedException e) {\n                System.out.println(\"3、休眠被终止\");\n                return; // 返回调用处\n            }\n            System.out.println(\"4、run()方法正常结束\");\n        }\n    }\n}\n\n终止线程\nThread 中的 stop 方法有缺陷，已废弃。\n安全地终止线程有两种方法：\n\n中断状态是线程的一个标识位，而中断操作是一种简便的线程间交互方式，而这种交互方式最适合用来取消或停止任务。\n还可以利用一个 boolean 变量来控制是否需要停止任务并终止该线程。\n\npublic class ThreadStopDemo03 {\n\n    public static void main(String[] args) throws Exception {\n        MyTask one = new MyTask();\n        Thread countThread = new Thread(one, \"CountThread\");\n        countThread.start();\n        // 睡眠1秒，main线程对CountThread进行中断，使CountThread能够感知中断而结束\n        TimeUnit.SECONDS.sleep(1);\n        countThread.interrupt();\n        MyTask two = new MyTask();\n        countThread = new Thread(two, \"CountThread\");\n        countThread.start();\n        // 睡眠1秒，main线程对Runner two进行取消，使CountThread能够感知on为false而结束\n        TimeUnit.SECONDS.sleep(1);\n        two.cancel();\n    }\n\n    private static class MyTask implements Runnable {\n\n        private long i;\n        private volatile boolean on = true;\n\n        @Override\n        public void run() {\n            while (on && !Thread.currentThread().isInterrupted()) {\n                i++;\n            }\n            System.out.println(\"Count i = \" + i);\n        }\n\n        void cancel() {\n            on = false;\n        }\n    }\n}\n\nThread 中的重要方法\n\nrun - 线程的执行实体。\nstart - 线程的启动方法。\nsetName、getName - 可以通过 setName()、 getName() 来设置、获取线程名称。\nsetPriority、getPriority - 在 Java 中，所有线程在运行前都会保持在就绪状态，那么此时，哪个线程优先级高，哪个线程就有可能被先执行。可以通过 setPriority、getPriority 来设置、获取线程优先级。\nsetDaemon、isDaemon - 可以使用 setDaemon() 方法设置线程为守护线程；可以使用 isDaemon() 方法判断线程是否为守护线程。\nisAlive - 可以通过 isAlive 来判断线程是否启动。\ninterrupt - 当一个线程运行时，另一个线程可以直接通过 interrupt() 方法中断其运行状态。\njoin - 使用 join() 方法让一个线程强制运行，线程强制运行期间，其他线程无法运行，必须等待此线程完成之后才可以继续执行。\nThread.sleep - 使用 Thread.sleep() 方法即可实现休眠。\nThread.yield - 可以使用 Thread.yield() 方法将一个线程的操作暂时让给其他线程执行。\n\n设置/获取线程名称\n在 Thread 类中可以通过 setName()、 getName() 来设置、获取线程名称。\npublic class ThreadNameDemo {\n\n    public static void main(String[] args) {\n        MyThread mt = new MyThread(); // 实例化Runnable子类对象\n        new Thread(mt).start(); // 系统自动设置线程名称\n        new Thread(mt, \"线程-A\").start(); // 手工设置线程名称\n        Thread t = new Thread(mt); // 手工设置线程名称\n        t.setName(\"线程-B\");\n        t.start();\n    }\n\n    static class MyThread implements Runnable {\n\n        @Override\n        public void run() {\n            for (int i = 0; i \n判断线程是否启动\n在 Thread 类中可以通过 isAlive() 来判断线程是否启动。\npublic class ThreadAliveDemo {\n\n    public static void main(String[] args) {\n        MyThread mt = new MyThread(); // 实例化Runnable子类对象\n        Thread t = new Thread(mt, \"线程\"); // 实例化Thread对象\n        System.out.println(\"线程开始执行之前 --> \" + t.isAlive()); // 判断是否启动\n        t.start(); // 启动线程\n        System.out.println(\"线程开始执行之后 --> \" + t.isAlive()); // 判断是否启动\n        for (int i = 0; i  \" + i);\n        }\n        // 以下的输出结果不确定\n        System.out.println(\"代码执行之后 --> \" + t.isAlive()); // 判断是否启动\n\n    }\n\n    static class MyThread implements Runnable {\n\n        @Override\n        public void run() {\n            for (int i = 0; i \n守护线程\n在 Java 程序中，只要前台有一个线程在运行，则整个 Java 进程就不会消失，所以此时可以设置一个守护线程，这样即使 Java 进程结束了，此守护线程依然会继续执行。可以使用 setDaemon() 方法设置线程为守护线程；可以使用 isDaemon() 方法判断线程是否为守护线程。\npublic class ThreadDaemonDemo {\n\n    public static void main(String[] args) {\n        Thread t = new Thread(new MyThread(), \"线程\");\n        t.setDaemon(true); // 此线程在后台运行\n        System.out.println(\"线程 t 是否是守护进程：\" + t.isDaemon());\n        t.start(); // 启动线程\n    }\n\n    static class MyThread implements Runnable {\n\n        @Override\n        public void run() {\n            while (true) {\n                System.out.println(Thread.currentThread().getName() + \"在运行。\");\n            }\n        }\n    }\n}\n\n设置/获取线程优先级\n在 Java 中，所有线程在运行前都会保持在就绪状态，那么此时，哪个线程优先级高，哪个线程就有可能被先执行。\npublic class ThreadPriorityDemo {\n\n    public static void main(String[] args) {\n        System.out.println(\"主方法的优先级：\" + Thread.currentThread().getPriority());\n        System.out.println(\"MAX_PRIORITY = \" + Thread.MAX_PRIORITY);\n        System.out.println(\"NORM_PRIORITY = \" + Thread.NORM_PRIORITY);\n        System.out.println(\"MIN_PRIORITY = \" + Thread.MIN_PRIORITY);\n\n        Thread t1 = new Thread(new MyThread(), \"线程A\"); // 实例化线程对象\n        Thread t2 = new Thread(new MyThread(), \"线程B\"); // 实例化线程对象\n        Thread t3 = new Thread(new MyThread(), \"线程C\"); // 实例化线程对象\n        t1.setPriority(Thread.MIN_PRIORITY); // 优先级最低\n        t2.setPriority(Thread.MAX_PRIORITY); // 优先级最低\n        t3.setPriority(Thread.NORM_PRIORITY); // 优先级最低\n        t1.start(); // 启动线程\n        t2.start(); // 启动线程\n        t3.start(); // 启动线程\n    }\n\n    static class MyThread implements Runnable {\n\n        @Override\n        public void run() {\n            for (int i = 0; i \n线程间通信\nwait/notify/notifyAll\nwait、notify、notifyAll 是 Object 类中的方法。\n\nwait - 线程自动释放其占有的对象锁，并等待 notify。\nnotify - 唤醒一个正在 wait 当前对象锁的线程，并让它拿到对象锁。\nnotifyAll - 唤醒所有正在 wait 前对象锁的线程。\n\n生产者、消费者示例：\npublic class ThreadWaitNotifyDemo02 {\n\n    private static final int QUEUE_SIZE = 10;\n    private static final PriorityQueue queue = new PriorityQueue<>(QUEUE_SIZE);\n\n    public static void main(String[] args) {\n        new Producer(\"生产者A\").start();\n        new Producer(\"生产者B\").start();\n        new Consumer(\"消费者A\").start();\n        new Consumer(\"消费者B\").start();\n    }\n\n    static class Consumer extends Thread {\n\n        Consumer(String name) {\n            super(name);\n        }\n\n        @Override\n        public void run() {\n            while (true) {\n                synchronized (queue) {\n                    while (queue.size() == 0) {\n                        try {\n                            System.out.println(\"队列空，等待数据\");\n                            queue.wait();\n                        } catch (InterruptedException e) {\n                            e.printStackTrace();\n                            queue.notifyAll();\n                        }\n                    }\n                    queue.poll(); // 每次移走队首元素\n                    queue.notifyAll();\n                    try {\n                        Thread.sleep(500);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                    System.out.println(Thread.currentThread().getName() + \" 从队列取走一个元素，队列当前有：\" + queue.size() + \"个元素\");\n                }\n            }\n        }\n    }\n\n    static class Producer extends Thread {\n\n        Producer(String name) {\n            super(name);\n        }\n\n        @Override\n        public void run() {\n            while (true) {\n                synchronized (queue) {\n                    while (queue.size() == QUEUE_SIZE) {\n                        try {\n                            System.out.println(\"队列满，等待有空余空间\");\n                            queue.wait();\n                        } catch (InterruptedException e) {\n                            e.printStackTrace();\n                            queue.notifyAll();\n                        }\n                    }\n                    queue.offer(1); // 每次插入一个元素\n                    queue.notifyAll();\n                    try {\n                        Thread.sleep(500);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                    System.out.println(Thread.currentThread().getName() + \" 向队列取中插入一个元素，队列当前有：\" + queue.size() + \"个元素\");\n                }\n            }\n        }\n    }\n}\n\n线程的礼让\n在线程操作中，可以使用 Thread.yield() 方法将一个线程的操作暂时让给其他线程执行。\npublic class ThreadYieldDemo {\n\n    public static void main(String[] args) {\n        MyThread t = new MyThread();\n        new Thread(t, \"线程A\").start();\n        new Thread(t, \"线程B\").start();\n    }\n\n    static class MyThread implements Runnable {\n\n        @Override\n        public void run() {\n            for (int i = 0; i \n线程的强制执行\n在线程操作中，可以使用 join() 方法让一个线程强制运行，线程强制运行期间，其他线程无法运行，必须等待此线程完成之后才可以继续执行。\npublic class ThreadJoinDemo {\n\n    public static void main(String[] args) {\n        MyThread mt = new MyThread(); // 实例化Runnable子类对象\n        Thread t = new Thread(mt, \"mythread\"); // 实例化Thread对象\n        t.start(); // 启动线程\n        for (int i = 0; i  10) {\n                try {\n                    t.join(); // 线程强制运行\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            }\n            System.out.println(\"Main 线程运行 --> \" + i);\n        }\n    }\n\n    static class MyThread implements Runnable {\n\n        @Override\n        public void run() {\n            for (int i = 0; i \n线程的休眠\n直接使用 Thread.sleep() 方法即可实现休眠。\npublic class ThreadSleepDemo {\n\n    public static void main(String[] args) {\n        new Thread(new MyThread(\"线程A\", 1000)).start();\n        new Thread(new MyThread(\"线程A\", 2000)).start();\n        new Thread(new MyThread(\"线程A\", 3000)).start();\n    }\n\n    static class MyThread implements Runnable {\n\n        private String name;\n        private int time;\n\n        private MyThread(String name, int time) {\n            this.name = name; // 设置线程名称\n            this.time = time; // 设置休眠时间\n        }\n\n        @Override\n        public void run() {\n            try {\n                Thread.sleep(this.time); // 休眠指定的时间\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            System.out.println(this.name + \"线程，休眠\" + this.time + \"毫秒。\");\n        }\n    }\n}\n\nThreadLocal\nThreadLocal，很多地方叫做线程本地变量，也有些地方叫做线程本地存储，其实意思差不多。可能很多朋友都知道 ThreadLocal 为变量在每个线程中都创建了一个副本，那么每个线程可以访问自己内部的副本变量。\n源码\nThreadLocal 的主要方法：\npublic class ThreadLocal {\n    public T get() {}\n    public void remove() {}\n    public void set(T value) {}\n    public static  ThreadLocal withInitial(Supplier supplier) {}\n}\n\n\nget()方法是用来获取 ThreadLocal 在当前线程中保存的变量副本。\nset()用来设置当前线程中变量的副本。\nremove()用来移除当前线程中变量的副本。\ninitialValue()是一个 protected 方法，一般是用来在使用时进行重写的，它是一个延迟加载方法，下面会详细说明。\n\nget() 源码实现\nget 源码\npublic T get() {\n    Thread t = Thread.currentThread();\n    ThreadLocalMap map = getMap(t);\n    if (map != null) {\n        ThreadLocalMap.Entry e = map.getEntry(this);\n        if (e != null) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T)e.value;\n            return result;\n        }\n    }\n    return setInitialValue();\n}\n\n\n取得当前线程。\n通过 getMap() 方法获取 ThreadLocalMap。\n成功，返回 value；失败，返回 setInitialValue()。\n\nThreadLocalMap 源码实现\nThreadLocalMap 源码\nThreadLocalMap 是 ThreadLocal 的一个内部类。\nThreadLocalMap 的 Entry 继承了 WeakReference，并且使用 ThreadLocal 作为键值。\nsetInitialValue 源码实现\nprivate T setInitialValue() {\n    T value = initialValue();\n    Thread t = Thread.currentThread();\n    ThreadLocalMap map = getMap(t);\n    if (map != null)\n        map.set(this, value);\n    else\n        createMap(t, value);\n    return value;\n}\n\n如果 map 不为空，就设置键值对；为空，再创建 Map，看一下 createMap 的实现：\nvoid createMap(Thread t, T firstValue) {\n    t.threadLocals = new ThreadLocalMap(this, firstValue);\n}\n\nThreadLocal 源码小结\n至此，可能大部分朋友已经明白了 ThreadLocal 是如何为每个线程创建变量的副本的：\n\n在每个线程 Thread 内部有一个 ThreadLocal.ThreadLocalMap 类型的成员变量 threadLocals，这个 threadLocals 就是用来存储实际的变量副本的，键值为当前 ThreadLocal 变量，value 为变量副本（即 T 类型的变量）。\n在 Thread 里面，threadLocals 为空，当通过 ThreadLocal 变量调用 get()方法或者 set()方法，就会对 Thread 类中的 threadLocals 进行初始化，并且以当前 ThreadLocal 变量为键值，以 ThreadLocal 要保存的副本变量为 value，存到 threadLocals。\n在当前线程里面，如果要使用副本变量，就可以通过 get 方法在 threadLocals 里面查找。\n\n示例\nThreadLocal 最常见的应用场景为用于解决数据库连接、Session 管理等问题。\n示例 - 数据库连接\nprivate static ThreadLocal connectionHolder\n= new ThreadLocal() {\npublic Connection initialValue() {\n    return DriverManager.getConnection(DB_URL);\n}\n};\n\npublic static Connection getConnection() {\nreturn connectionHolder.get();\n}\n\n示例 - Session 管理\nprivate static final ThreadLocal threadSession = new ThreadLocal();\n\npublic static Session getSession() throws InfrastructureException {\n    Session s = (Session) threadSession.get();\n    try {\n        if (s == null) {\n            s = getSessionFactory().openSession();\n            threadSession.set(s);\n        }\n    } catch (HibernateException ex) {\n        throw new InfrastructureException(ex);\n    }\n    return s;\n}\n\n管道输入/输出流\n管道输入/输出流和普通的文件输入/输出流或者网络输入/输出流不同之处在于，它主要用于线程之间的数据传输，而传输的媒介为内存。\n管道输入/输出流主要包括了如下 4 种具体实现：PipedOutputStream、PipedInputStream、PipedReader 和 PipedWriter，前两种面向字节，而后两种面向字符。\npublic class Piped {\n\n    public static void main(String[] args) throws Exception {\n        PipedWriter out = new PipedWriter();\n        PipedReader in = new PipedReader();\n        // 将输出流和输入流进行连接，否则在使用时会抛出IOException\n        out.connect(in);\n        Thread printThread = new Thread(new Print(in), \"PrintThread\");\n        printThread.start();\n        int receive = 0;\n        try {\n            while ((receive = System.in.read()) != -1) {\n                out.write(receive);\n            }\n        } finally {\n            out.close();\n        }\n    }\n\n    static class Print implements Runnable {\n\n        private PipedReader in;\n\n        Print(PipedReader in) {\n            this.in = in;\n        }\n\n        public void run() {\n            int receive = 0;\n            try {\n                while ((receive = in.read()) != -1) {\n                    System.out.print((char) receive);\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n\nFAQ\nstart() 和 run() 有什么区别？可以直接调用 Thread 类的 run() 方法么？\nrun() 方法是线程的执行体。\nstart() 方法会启动线程，然后 JVM 会让这个线程去执行 run() 方法。\n可以直接调用 Thread 类的 run() 方法么？\n\n可以。但是如果直接调用 Thread 的 run()方法，它的行为就会和普通的方法一样。\n为了在新的线程中执行我们的代码，必须使用 Thread.start()方法。\n\nsleep()、yield()、join() 方法有什么区别？为什么 sleep()和 yield()方法是静态的？\n\nyield()\nyield() 方法可以让当前正在执行的线程暂停，但它不会阻塞该线程，它只是将该线程从 Running 状态转入 Runnable 状态。\n当某个线程调用了 yield() 方法暂停之后，只有优先级与当前线程相同，或者优先级比当前线程更高的处于就绪状态的线程才会获得执行的机会。\n\n\nsleep()\nsleep() 方法需要指定等待的时间，它可以让当前正在执行的线程在指定的时间内暂停执行，进入 Blocked 状态。\n该方法既可以让其他同优先级或者高优先级的线程得到执行的机会，也可以让低优先级的线程得到执行机会。\n但是， sleep() 方法不会释放“锁标志”，也就是说如果有 synchronized 同步块，其他线程仍然不能访问共享数据。\n\n\njoin()\njoin() 方法会使当前线程转入 Blocked 状态，等待调用 join() 方法的线程结束后才能继续执行。\n\n\n\n\n参考阅读：Java 线程中 yield 与 join 方法的区别\n参考阅读：sleep()，wait()，yield()和 join()方法的区别\n\n为什么 sleep() 和 yield() 方法是静态的\n\nThread 类的 sleep() 和 yield() 方法将处理 Running 状态的线程。所以在其他处于非 Running 状态的线程上执行这两个方法是没有意义的。这就是为什么这些方法是静态的。它们可以在当前正在执行的线程中工作，并避免程序员错误的认为可以在其他非运行线程调用这些方法。\n\nJava 的线程优先级如何控制？高优先级的 Java 线程一定先执行吗？\n\nJava 中的线程优先级如何控制\nJava 中的线程优先级的范围是 [1,10]，一般来说，高优先级的线程在运行时会具有优先权。可以通过 thread.setPriority(Thread.MAX_PRIORITY) 的方式设置，默认优先级为 5。\n\n\n高优先级的 Java 线程一定先执行吗\n即使设置了线程的优先级，也无法保证高优先级的线程一定先执行。\n原因：这是因为线程优先级依赖于操作系统的支持，然而，不同的操作系统支持的线程优先级并不相同，不能很好的和 Java 中线程优先级一一对应。\n结论：Java 线程优先级控制并不可靠。\n\n\n\n什么是守护线程？为什么要用守护线程？如何创建守护线程？\n\n什么是守护线程\n守护线程（Daemon Thread）是在后台执行并且不会阻止 JVM 终止的线程。\n与守护线程（Daemon Thread）相反的，叫用户线程（User Thread），也就是非守护线程。\n\n\n为什么要用守护线程\n守护线程的优先级比较低，用于为系统中的其它对象和线程提供服务。典型的应用就是垃圾回收器。\n\n\n如何创建守护线程\n使用 thread.setDaemon(true) 可以设置 thread 线程为守护线程。\n注意点：\n正在运行的用户线程无法设置为守护线程，所以 thread.setDaemon(true) 必须在 thread.start() 之前设置，否则会抛出 llegalThreadStateException 异常；\n一个守护线程创建的子线程依然是守护线程。\n不要认为所有的应用都可以分配给 Daemon 来进行服务，比如读写操作或者计算逻辑。\n\n\n\n\n\n\n参考阅读：Java 中守护线程的总结\n\n为什么线程通信的方法 wait(), notify()和 notifyAll()被定义在 Object 类里？\nJava 的每个对象中都有一个锁(monitor，也可以成为监视器) 并且 wait()，notify()等方法用于等待对象的锁或者通知其他线程对象的监视器可用。在 Java 的线程中并没有可供任何对象使用的锁和同步器。这就是为什么这些方法是 Object 类的一部分，这样 Java 的每一个类都有用于线程间通信的基本方法\n为什么 wait(), notify()和 notifyAll()必须在同步方法或者同步块中被调用？\n当一个线程需要调用对象的 wait()方法的时候，这个线程必须拥有该对象的锁，接着它就会释放这个对象锁并进入等待状态直到其他线程调用这个对象上的 notify()方法。同样的，当一个线程需要调用对象的 notify()方法时，它会释放这个对象的锁，以便其他在等待的线程就可以得到这个对象锁。由于所有的这些方法都需要线程持有对象的锁，这样就只能通过同步来实现，所以他们只能在同步方法或者同步块中被调用。\n\n参考阅读：Java 并发编程：volatile 关键字解析\n\n资料\n\nJava 并发编程实战\nJava 并发编程的艺术\nhttps://stackoverflow.com/questions/27406200/visualvm-thread-states\nhttps://docs.oracle.com/javase/8/docs/api/index.html\nhttps://www.journaldev.com/1037/java-thread-wait-notify-and-notifyall-example\nhttp://www.importnew.com/14958.html\nhttps://blog.csdn.net/xiangwanpeng/article/details/54972952\nhttps://blog.csdn.net/shimiso/article/details/8964414\n\n"},"javacore/concurrent/并发机制的底层实现.html":{"url":"javacore/concurrent/并发机制的底层实现.html","title":"第三章 并发机制的底层实现","keywords":"","body":"并发机制的底层实现\n\n本文内容基于 JDK1.8。\n\n\n\nconcurrent 包的实现\nsynchronized\nsynchronized 的要点\nsynchronized 的原理\n\n\nvolatile\nvolatile 的要点\nvolatile 的原理\nvolatile 的应用场景\n\n\nCAS\n简介\n操作\n应用\n原理\n特点\n总结\n\n\n资料\n\n\nconcurrent 包的实现\n由于 Java 的 CAS 同时具有 volatile 读和 volatile 写的内存语义，因此 Java 线程之间的通信现在有了下面四种方式：\n\nA 线程写 volatile 变量，随后 B 线程读这个 volatile 变量。\nA 线程写 volatile 变量，随后 B 线程用 CAS 更新这个 volatile 变量。\nA 线程用 CAS 更新一个 volatile 变量，随后 B 线程用 CAS 更新这个 volatile 变量。\nA 线程用 CAS 更新一个 volatile 变量，随后 B 线程读这个 volatile 变量。\n\n同时，volatile 变量的读/写和 CAS 可以实现线程之间的通信。把这些特性整合在一起，就形成了整个 concurrent 包得以实现的基石。如果我们仔细分析 concurrent 包的源代码实现，会发现一个通用化的实现模式：\n首先，声明共享变量为 volatile；\n然后，使用 CAS 的原子条件更新来实现线程之间的同步；\n同时，配合以 volatile 的读/写和 CAS 所具有的 volatile 读和写的内存语义来实现线程之间的通信。\nAQS，非阻塞数据结构和原子变量类（Java.util.concurrent.atomic 包中的类），这些 concurrent 包中的基础类都是使用这种模式来实现的，而 concurrent 包中的高层类又是依赖于这些基础类来实现的。从整体来看，concurrent 包的实现示意图如下：\n\n  \n\n\nsynchronized\nsynchronized 的要点\n关键字 synchronized 可以保证在同一个时刻，只有一个线程可以执行某个方法或者某个代码块。\nsynchronized 有 3 种应用方式：\n\n同步实例方法\n同步静态方法\n同步代码块\n\n同步实例方法\n:x: 错误示例 - 未同步的示例\n@NotThreadSafe\npublic class SynchronizedDemo01 implements Runnable {\n    static int i = 0;\n\n    public void increase() {\n        i++;\n    }\n\n    @Override\n    public void run() {\n        for (int j = 0; j \nJava 实例方法同步是同步在拥有该方法的对象上。这样，每个实例其方法同步都同步在不同的对象上，即该方法所属的实例。只有一个线程能够在实例方法同步块中运行。如果有多个实例存在，那么一个线程一次可以在一个实例同步块中执行操作。一个实例一个线程。\n@ThreadSafe\npublic class SynchronizedDemo02 implements Runnable {\n    static int i = 0;\n\n    public synchronized void increase() {\n        i++;\n    }\n\n    @Override\n    public void run() {\n        for (int j = 0; j \n同步静态方法\n静态方法的同步是指同步在该方法所在的类对象上。因为在 JVM 中一个类只能对应一个类对象，所以同时只允许一个线程执行同一个类中的静态同步方法。\n对于不同类中的静态同步方法，一个线程可以执行每个类中的静态同步方法而无需等待。不管类中的那个静态同步方法被调用，一个类只能由一个线程同时执行。\n@ThreadSafe\npublic class SynchronizedDemo03 implements Runnable {\n    static int i = 0;\n\n    public static synchronized void increase() {\n        i++;\n    }\n\n    @Override\n    public void run() {\n        for (int j = 0; j \n同步代码块\n有时你不需要同步整个方法，而是同步方法中的一部分。Java 可以对方法的一部分进行同步。\n注意 Java 同步块构造器用括号将对象括起来。在上例中，使用了 this，即为调用 add 方法的实例本身。在同步构造器中用括号括起来的对象叫做监视器对象。上述代码使用监视器对象同步，同步实例方法使用调用方法本身的实例作为监视器对象。\n一次只有一个线程能够在同步于同一个监视器对象的 Java 方法内执行。\n@ThreadSafe\npublic class SynchronizedDemo04 implements Runnable {\n    static int i = 0;\n    static SynchronizedDemo04 instance = new SynchronizedDemo04();\n\n    @Override\n    public void run() {\n        synchronized (instance) {\n            for (int j = 0; j \nsynchronized 的原理\nsynchronized 实现同步的基础是：Java 中的每一个对象都可以作为锁。\n\n对于普通同步方法，锁是当前实例对象。\n对于静态同步方法，锁是当前类的 Class 对象。\n对于同步方法块，锁是 Synchonized 括号里配置的对象。\n\n\n:point_right: 参考阅读：Java 并发编程：synchronized\n:point_right: 参考阅读：深入理解 Java 并发之 synchronized 实现原理\n\nvolatile\nvolatile 的要点\nvolatile 是轻量级的 synchronized，它在多处理器开发中保证了共享变量的“可见性”。\n可见性的意思是当一个线程修改一个共享变量时，另外一个线程能读到这个修改的值。\n一旦一个共享变量（类的成员变量、类的静态成员变量）被 volatile 修饰之后，那么就具备了两层语义：\n\n保证了不同线程对这个变量进行操作时的可见性，即一个线程修改了某个变量的值，这新值对其他线程来说是立即可见的。\n禁止进行指令重排序。\n\n如果一个字段被声明成 volatile，Java 线程内存模型确保所有线程看到这个变量的值是一致的。\nvolatile 的原理\n观察加入 volatile 关键字和没有加入 volatile 关键字时所生成的汇编代码发现，加入 volatile 关键字时，会多出一个 lock 前缀指令。\nlock 前缀指令实际上相当于一个内存屏障（也成内存栅栏），内存屏障会提供 3 个功能：\n\n它确保指令重排序时不会把其后面的指令排到内存屏障之前的位置，也不会把前面的指令排到内存屏障的后面；即在执行到内存屏障这句指令时，在它前面的操作已经全部完成；\n它会强制将对缓存的修改操作立即写入主存；\n如果是写操作，它会导致其他 CPU 中对应的缓存行无效。\n\nvolatile 的应用场景\n如果 volatile 变量修饰符使用恰当的话，它比 synchronized 的使用和执行成本更低，因为它不会引起线程上下文的切换和调度。\n但是，volatile 无法替代 synchronized ，因为 volatile 无法保证操作的原子性。通常来说，使用 volatile 必须具备以下 2 个条件：\n\n对变量的写操作不依赖于当前值\n该变量没有包含在具有其他变量的不变式中\n\n应用场景：\n状态标记量\nvolatile boolean flag = false;\n\nwhile(!flag) {\n    doSomething();\n}\n\npublic void setFlag() {\n    flag = true;\n}\n\ndouble check\nclass Singleton {\n    private volatile static Singleton instance = null;\n\n    private Singleton() {}\n\n    public static Singleton getInstance() {\n        if(instance==null) {\n            synchronized (Singleton.class) {\n                if(instance==null)\n                    instance = new Singleton();\n            }\n        }\n        return instance;\n    }\n}\n\n\n:point_right: 参考阅读：Java 并发编程：volatile 关键字解析\n\nCAS\n简介\nCAS（Compare and Swap），字面意思为比较并交换。CAS 有 3 个操作数，内存值 V，旧的预期值 A，要修改的新值 B。当且仅当预期值 A 和内存值 V 相同时，将内存值 V 修改为 B，否则什么都不做。\n操作\n我们常常做这样的操作\nif(a==b) {\n    a++;\n}\n\n试想一下如果在做 a++之前 a 的值被改变了怎么办？a++还执行吗？出现该问题的原因是在多线程环境下，a 的值处于一种不定的状态。采用锁可以解决此类问题，但 CAS 也可以解决，而且可以不加锁。\nint expect = a;\nif(a.compareAndSet(expect,a+1)) {\n    doSomeThing1();\n} else {\n    doSomeThing2();\n}\n\n这样如果 a 的值被改变了 a++就不会被执行。按照上面的写法，a!=expect 之后,a++就不会被执行，如果我们还是想执行 a++操作怎么办，没关系，可以采用 while 循环\nwhile(true) {\n    int expect = a;\n    if (a.compareAndSet(expect, a + 1)) {\n        doSomeThing1();\n        return;\n    } else {\n        doSomeThing2();\n    }\n}\n\n采用上面的写法，在没有锁的情况下实现了 a++操作，这实际上是一种非阻塞算法。\n应用\n非阻塞算法 （nonblocking algorithms）\n一个线程的失败或者挂起不应该影响其他线程的失败或挂起的算法。\n现代的 CPU 提供了特殊的指令，可以自动更新共享数据，而且能够检测到其他线程的干扰，而 compareAndSet() 就用这些代替了锁定。\n拿出 AtomicInteger 来研究在没有锁的情况下是如何做到数据正确性的。\nprivate volatile int value;\n\n首先毫无疑问，在没有锁的机制下可能需要借助 volatile 原语，保证线程间的数据是可见的（共享的）。\n这样在获取变量的值的时候才能直接读取。\npublic final int get() {\n    return value;\n}\n\n然后来看看++i 是怎么做到的。\npublic final int incrementAndGet() {\n    for (;;) {\n        int current = get();\n        int next = current + 1;\n            if (compareAndSet(current, next))\n                return next;\n    }\n}\n\n在这里采用了 CAS 操作，每次从内存中读取数据然后将此数据和+1 后的结果进行 CAS 操作，如果成功就返回结果，否则重试直到成功为止。\n而 compareAndSet 利用 JNI 来完成 CPU 指令的操作。\npublic final boolean compareAndSet(int expect, int update) {\n    return unsafe.compareAndSwapInt(this, valueOffset, expect, update);\n}\n\n整体的过程就是这样子的，利用 CPU 的 CAS 指令，同时借助 JNI 来完成 Java 的非阻塞算法。其它原子操作都是利用类似的特性完成的。\n其中 unsafe.compareAndSwapInt(this, valueOffset, expect, update)类似：\nif (this == expect) {\n    this = update\n    return true;\n} else {\n    return false;\n}\n\n那么问题就来了，成功过程中需要 2 个步骤：比较 this == expect，替换 this = update，compareAndSwapInt 如何这两个步骤的原子性呢？ 参考 CAS 的原理\n原理\nJava 代码如何确保处理器执行 CAS 操作？\nCAS 通过调用 JNI（JNI:Java Native Interface 为 Java 本地调用，允许 Java 调用其他语言。）的代码实现的。JVM 将 CAS 操作编译为底层提供的最有效方法。在支持 CAS 的处理器上，JVM 将它们编译为相应的机器指令；在不支持 CAS 的处理器上，JVM 将使用自旋锁。\n特点\n优点\n一般情况下，比锁性能更高。因为 CAS 是一种非阻塞算法，所以其避免了线程被阻塞时的等待时间。\n缺点\nABA 问题\n因为 CAS 需要在操作值的时候检查下值有没有发生变化，如果没有发生变化则更新，但是如果一个值原来是 A，变成了 B，又变成了 A，那么使用 CAS 进行检查时会发现它的值没有发生变化，但是实际上却变化了。ABA 问题的解决思路就是使用版本号。在变量前面追加上版本号，每次变量更新的时候把版本号加一，那么 A－B－A 就会变成 1A-2B－3A。\n从 Java1.5 开始 JDK 的 atomic 包里提供了一个类 AtomicStampedReference 来解决 ABA 问题。这个类的 compareAndSet 方法作用是首先检查当前引用是否等于预期引用，并且当前标志是否等于预期标志，如果全部相等，则以原子方式将该引用和该标志的值设置为给定的更新值。\n循环时间长开销大\n自旋 CAS 如果长时间不成功，会给 CPU 带来非常大的执行开销。如果 JVM 能支持处理器提供的 pause 指令那么效率会有一定的提升，pause 指令有两个作用，第一它可以延迟流水线执行指令（de-pipeline）,使 CPU 不会消耗过多的执行资源，延迟的时间取决于具体实现的版本，在一些处理器上延迟时间是零。第二它可以避免在退出循环的时候因内存顺序冲突（memory order violation）而引起 CPU 流水线被清空（CPU pipeline flush），从而提高 CPU 的执行效率。\n比较花费 CPU 资源，即使没有任何用也会做一些无用功。\n只能保证一个共享变量的原子操作\n当对一个共享变量执行操作时，我们可以使用循环 CAS 的方式来保证原子操作，但是对多个共享变量操作时，循环 CAS 就无法保证操作的原子性，这个时候就可以用锁，或者有一个取巧的办法，就是把多个共享变量合并成一个共享变量来操作。比如有两个共享变量 i ＝ 2,j=a，合并一下 ij=2a，然后用 CAS 来操作 ij。从 Java1.5 开始 JDK 提供了 AtomicReference 类来保证引用对象之间的原子性，你可以把多个变量放在一个对象里来进行 CAS 操作。\n总结\n可以用 CAS 在无锁的情况下实现原子操作，但要明确应用场合，非常简单的操作且又不想引入锁可以考虑使用 CAS 操作，当想要非阻塞地完成某一操作也可以考虑 CAS。不推荐在复杂操作中引入 CAS，会使程序可读性变差，且难以测试，同时会出现 ABA 问题。\n资料\n\nJava 并发编程实战\nJava 并发编程的艺术：第 2 章 Java 并发机制的底层实现原理\nhttps://www.jianshu.com/p/473e14d5ab2d\nhttps://blog.csdn.net/ls5718/article/details/52563959\nhttp://tutorials.jenkov.com/java-concurrency/non-blocking-algorithms.html\n\n"},"javacore/concurrent/内存模型.html":{"url":"javacore/concurrent/内存模型.html","title":"第四章 内存模型","keywords":"","body":"内存模型\n\n本文内容基于 JDK1.8。\nJava 内存模型（Java Memory Model），以下简称 JMM。\n\n\n\n内部原理\n内存模型结构\n线程栈\n堆\n\n\n硬件内存架构\nJMM 和硬件内存架构之间的桥接\n共享对象可见性\n竞态条件\n\n\nHappens-Before\n资料\n\n\n内部原理\nJVM 中试图定义一种 JMM 来屏蔽各种硬件和操作系统的内存访问差异，以实现让 Java 程序在各种平台下都能达到一致的内存访问效果。\nJMM 的主要目标是定义程序中各个变量的访问规则，即在虚拟机中将变量存储到内存和从内存中取出变量这样的底层细节。此处的变量与 Java 编程中的变量有所区别，它包括了实例字段、静态字段和构成数组对象的元素，但不包括局部变量与方法参数，因为后者是线程私有的，不会被共享，自然就不会存在竞争问题。为了获得较好的执行效能，Java 内存模型并没有限制执行引擎使用处理器的特定寄存器或缓存来和主存进行交互，也没有限制即使编译器进行调整代码执行顺序这类优化措施。\nJMM 是围绕着在并发过程中如何处理原子性、可见性和有序性这 3 个特征来建立的。\nJMM 是通过各种操作来定义的，包括对变量的读写操作，监视器的加锁和释放操作，以及线程的启动和合并操作。\n内存模型结构\nJava 内存模型把 Java 虚拟机内部划分为线程栈和堆。\n线程栈\n每一个运行在 Java 虚拟机里的线程都拥有自己的线程栈。这个线程栈包含了这个线程调用的方法当前执行点相关的信息。一个线程仅能访问自己的线程栈。一个线程创建的本地变量对其它线程不可见，仅自己可见。即使两个线程执行同样的代码，这两个线程任然在在自己的线程栈中的代码来创建本地变量。因此，每个线程拥有每个本地变量的独有版本。\n所有原始类型的本地变量都存放在线程栈上，因此对其它线程不可见。一个线程可能向另一个线程传递一个原始类型变量的拷贝，但是它不能共享这个原始类型变量自身。\n堆\n堆上包含在 Java 程序中创建的所有对象，无论是哪一个对象创建的。这包括原始类型的对象版本。如果一个对象被创建然后赋值给一个局部变量，或者用来作为另一个对象的成员变量，这个对象任然是存放在堆上。\n\n一个本地变量可能是原始类型，在这种情况下，它总是在线程栈上。\n一个本地变量也可能是指向一个对象的一个引用。在这种情况下，引用（这个本地变量）存放在线程栈上，但是对象本身存放在堆上。\n一个对象可能包含方法，这些方法可能包含本地变量。这些本地变量仍然存放在线程栈上，即使这些方法所属的对象存放在堆上。\n一个对象的成员变量可能随着这个对象自身存放在堆上。不管这个成员变量是原始类型还是引用类型。\n静态成员变量跟随着类定义一起也存放在堆上。\n存放在堆上的对象可以被所有持有对这个对象引用的线程访问。当一个线程可以访问一个对象时，它也可以访问这个对象的成员变量。如果两个线程同时调用同一个对象上的同一个方法，它们将会都访问这个对象的成员变量，但是每一个线程都拥有这个本地变量的私有拷贝。\n\n\n  \n\n\n硬件内存架构\n现代硬件内存模型与 Java 内存模型有一些不同。理解内存模型架构以及 Java 内存模型如何与它协同工作也是非常重要的。这部分描述了通用的硬件内存架构，下面的部分将会描述 Java 内存是如何与它“联手”工作的。\n\n  \n\n\n一个现代计算机通常由两个或者多个 CPU。其中一些 CPU 还有多核。从这一点可以看出，在一个有两个或者多个 CPU 的现代计算机上同时运行多个线程是可能的。每个 CPU 在某一时刻运行一个线程是没有问题的。这意味着，如果你的 Java 程序是多线程的，在你的 Java 程序中每个 CPU 上一个线程可能同时（并发）执行。\n每个 CPU 都包含一系列的寄存器，它们是 CPU 内内存的基础。CPU 在寄存器上执行操作的速度远大于在主存上执行的速度。这是因为 CPU 访问寄存器的速度远大于主存。\n每个 CPU 可能还有一个 CPU 缓存层。实际上，绝大多数的现代 CPU 都有一定大小的缓存层。CPU 访问缓存层的速度快于访问主存的速度，但通常比访问内部寄存器的速度还要慢一点。一些 CPU 还有多层缓存，但这些对理解 Java 内存模型如何和内存交互不是那么重要。只要知道 CPU 中可以有一个缓存层就可以了。\n一个计算机还包含一个主存。所有的 CPU 都可以访问主存。主存通常比 CPU 中的缓存大得多。\n通常情况下，当一个 CPU 需要读取主存时，它会将主存的部分读到 CPU 缓存中。它甚至可能将缓存中的部分内容读到它的内部寄存器中，然后在寄存器中执行操作。当 CPU 需要将结果写回到主存中去时，它会将内部寄存器的值刷新到缓存中，然后在某个时间点将值刷新回主存。\n当 CPU 需要在缓存层存放一些东西的时候，存放在缓存中的内容通常会被刷新回主存。CPU 缓存可以在某一时刻将数据局部写到它的内存中，和在某一时刻局部刷新它的内存。它不会再某一时刻读/写整个缓存。通常，在一个被称作“cache lines”的更小的内存块中缓存被更新。一个或者多个缓存行可能被读到缓存，一个或者多个缓存行可能再被刷新回主存。\nJMM 和硬件内存架构之间的桥接\n上面已经提到，Java 内存模型与硬件内存架构之间存在差异。硬件内存架构没有区分线程栈和堆。对于硬件，所有的线程栈和堆都分布在主内中。部分线程栈和堆可能有时候会出现在 CPU 缓存中和 CPU 内部的寄存器中。如下图所示：\n\n  \n\n\n当对象和变量被存放在计算机中各种不同的内存区域中时，就可能会出现一些具体的问题。主要包括如下两个方面：\n\n线程对共享变量修改的可见性\n当读，写和检查共享变量时出现 race conditions\n\n\n  \n\n\n共享对象可见性\n如果两个或者更多的线程在没有正确的使用 volatile 声明或者同步的情况下共享一个对象，一个线程更新这个共享对象可能对其它线程来说是不接见的。\n想象一下，共享对象被初始化在主存中。跑在 CPU 上的一个线程将这个共享对象读到 CPU 缓存中。然后修改了这个对象。只要 CPU 缓存没有被刷新会主存，对象修改后的版本对跑在其它 CPU 上的线程都是不可见的。这种方式可能导致每个线程拥有这个共享对象的私有拷贝，每个拷贝停留在不同的 CPU 缓存中。\n上图示意了这种情形。跑在左边 CPU 的线程拷贝这个共享对象到它的 CPU 缓存中，然后将 count 变量的值修改为 2。这个修改对跑在右边 CPU 上的其它线程是不可见的，因为修改后的 count 的值还没有被刷新回主存中去。\n解决这个问题你可以使用 Java 中的 volatile 关键字。volatile 关键字可以保证直接从主存中读取一个变量，如果这个变量被修改后，总是会被写回到主存中去。\n竞态条件\n如果两个或者更多的线程共享一个对象，多个线程在这个共享对象上更新变量，就有可能发生 race conditions。\n想象一下，如果线程 A 读一个共享对象的变量 count 到它的 CPU 缓存中。再想象一下，线程 B 也做了同样的事情，但是往一个不同的 CPU 缓存中。现在线程 A 将 count 加 1，线程 B 也做了同样的事情。现在 count 已经被增在了两个，每个 CPU 缓存中一次。\n如果这些增加操作被顺序的执行，变量 count 应该被增加两次，然后原值+2 被写回到主存中去。\n然而，两次增加都是在没有适当的同步下并发执行的。无论是线程 A 还是线程 B 将 count 修改后的版本写回到主存中取，修改后的值仅会被原值大 1，尽管增加了两次。\n解决这个问题可以使用 Java 同步块。一个同步块可以保证在同一时刻仅有一个线程可以进入代码的临界区。同步块还可以保证代码块中所有被访问的变量将会从主存中读入，当线程退出同步代码块时，所有被更新的变量都会被刷新回主存中去，不管这个变量是否被声明为 volatile。\nHappens-Before\nJMM 为程序中所有的操作定义了一个偏序关系，称之为 Happens-Before。\n\n程序顺序规则：如果程序中操作 A 在操作 B 之前，那么在线程中操作 A 将在操作 B 之前执行。\n监视器锁规则：在监视器锁上的解锁操作必须在同一个监视器锁上的加锁操作之前执行。\nvolatile 变量规则：对 volatile 变量的写入操作必须在对该变量的读操作之前执行。\n线程启动规则：在线程上对 Thread.start 的调用必须在该线程中执行任何操作之前执行。\n线程结束规则：线程中的任何操作都必须在其他线程检测到该线程已经结束之前执行，或者从 Thread.join 中成功返回，或者在调用 Thread.isAlive 时返回 false。\n中断规则：当一个线程在另一个线程上调用 interrupt 时，必须在被中断线程检测到 interrupt 调用之前执行（通过抛出 InterruptException，或者调用 isInterrupted 和 interrupted）。\n终结器规则：对象的构造函数必须在启动该对象的终结器之前执行完成。\n传递性：如果操作 A 在操作 B 之前执行，并且操作 B 在操作 C 之前执行，那么操作 A 必须在操作 C 之前执行。\n\n资料\n\nJava 并发编程实战：第 16 章 Java 内存模型\nJava 并发编程的艺术：第 3 章 Java 内存模型\n深入理解 Java 虚拟机：第 12 章 Java 内存模型与线程\nhttp://tutorials.jenkov.com/java-concurrency/java-memory-model.html\n\n"},"javacore/concurrent/同步容器和并发容器.html":{"url":"javacore/concurrent/同步容器和并发容器.html","title":"第五章 同步容器和并发容器","keywords":"","body":"同步容器和并发容器\n\n本文内容基于 JDK1.8。\n\n\n\n同步容器\n同步容器的缺陷\n\n\n并发容器\nConcurrentHashMap\nCopyOnWriteArrayList\n资料\n\n\n\n\n同步容器\n在 Java 中，同步容器主要包括 2 类：\n\nVector、Stack、HashTable\nVector 实现了 List 接口，Vector 实际上就是一个数组，和 ArrayList 类似，但是 Vector 中的方法都是 synchronized 方法，即进行了同步措施。\nStack 也是一个同步容器，它的方法也用 synchronized 进行了同步，它实际上是继承于 Vector 类。\nHashTable 实现了 Map 接口，它和 HashMap 很相似，但是 HashTable 进行了同步处理，而 HashMap 没有。\n\n\nCollections 类中提供的静态工厂方法创建的类（由 Collections.synchronizedXxxx 等方法）\n\n同步容器的缺陷\n同步容器的同步原理就是在方法上用 synchronized 修饰。那么，这些方法每次只允许一个线程调用执行。\n性能问题\n由于被 synchronized 修饰的方法，每次只允许一个线程执行，其他试图访问这个方法的线程只能等待。显然，这种方式比没有使用 synchronized 的容器性能要差。\n安全问题\n同步容器真的一定安全吗？\n答案是：未必。同步容器未必真的安全。在做复合操作时，仍然需要加锁来保护。\n常见复合操作如下：\n\n迭代：反复访问元素，直到遍历完全部元素；\n跳转：根据指定顺序寻找当前元素的下一个（下 n 个）元素；\n条件运算：例如若没有则添加等；\n\n不安全的示例\npublic class Test {\n    static Vector vector = new Vector();\n    public static void main(String[] args) throws InterruptedException {\n        while(true) {\n            for(int i=0;i10)   {\n\n            }\n        }\n    }\n}\n\n执行时可能会出现数组越界错误。\nVector 是线程安全的，为什么还会报这个错？很简单，对于 Vector，虽然能保证每一个时刻只能有一个线程访问它，但是不排除这种可能：\n当某个线程在某个时刻执行这句时：\nfor(int i=0;i\n假若此时 vector 的 size 方法返回的是 10，i 的值为 9\n然后另外一个线程执行了这句：\nfor(int i=0;i\n将下标为 9 的元素删除了。\n那么通过 get 方法访问下标为 9 的元素肯定就会出问题了。\n安全示例\n因此为了保证线程安全，必须在方法调用端做额外的同步措施，如下面所示：\npublic class Test {\n    static Vector vector = new Vector();\n    public static void main(String[] args) throws InterruptedException {\n        while(true) {\n            for(int i=0;i10)   {\n\n            }\n        }\n    }\n}\n\nConcurrentModificationException 异常\n在对 Vector 等容器并发地进行迭代修改时，会报 ConcurrentModificationException 异常，关于这个异常将会在后续文章中讲述。\n但是在并发容器中不会出现这个问题。\n并发容器\nJDK 的 java.util.concurrent 包（即 juc）中提供了几个非常有用的并发容器。\n\nCopyOnWriteArrayList - 线程安全的 ArrayList\nCopyOnWriteArraySet - 线程安全的 Set，它内部包含了一个 CopyOnWriteArrayList，因此本质上是由 CopyOnWriteArrayList 实现的。\nConcurrentSkipListSet - 相当于线程安全的 TreeSet。它是有序的 Set。它由 ConcurrentSkipListMap 实现。\nConcurrentHashMap - 线程安全的 HashMap。采用分段锁实现高效并发。\nConcurrentSkipListMap - 线程安全的有序 Map。使用跳表实现高效并发。\nConcurrentLinkedQueue - 线程安全的无界队列。底层采用单链表。支持 FIFO。\nConcurrentLinkedDeque - 线程安全的无界双端队列。底层采用双向链表。支持 FIFO 和 FILO。\nArrayBlockingQueue - 数组实现的阻塞队列。\nLinkedBlockingQueue - 链表实现的阻塞队列。\nLinkedBlockingDeque - 双向链表实现的双端阻塞队列。\n\nConcurrentHashMap\n要点\n\n作用：ConcurrentHashMap 是线程安全的 HashMap。\n原理：JDK6 与 JDK7 中，ConcurrentHashMap 采用了分段锁机制。JDK8 中，摒弃了锁分段机制，改为利用 CAS 算法。\n\n源码\nJDK7\nConcurrentHashMap 类在 jdk1.7 中的设计，其基本结构如图所示：\n\n  \n\n\n每一个 segment 都是一个 HashEntry[] table， table 中的每一个元素本质上都是一个 HashEntry 的单向队列。比如 table[3]为首节点，table[3]->next 为节点 1，之后为节点 2，依次类推。\npublic class ConcurrentHashMap extends AbstractMap\n        implements ConcurrentMap, Serializable {\n\n    // 将整个hashmap分成几个小的map，每个segment都是一个锁；与hashtable相比，这么设计的目的是对于put, remove等操作，可以减少并发冲突，对\n    // 不属于同一个片段的节点可以并发操作，大大提高了性能\n    final Segment[] segments;\n\n    // 本质上Segment类就是一个小的hashmap，里面table数组存储了各个节点的数据，继承了ReentrantLock, 可以作为互拆锁使用\n    static final class Segment extends ReentrantLock implements Serializable {\n        transient volatile HashEntry[] table;\n        transient int count;\n    }\n\n    // 基本节点，存储Key， Value值\n    static final class HashEntry {\n        final int hash;\n        final K key;\n        volatile V value;\n        volatile HashEntry next;\n    }\n}\n\nJDK8\n\njdk8 中主要做了 2 方面的改进\n取消 segments 字段，直接采用 transient volatile HashEntry[] table 保存数据，采用 table 数组元素作为锁，从而实现了对每一行数据进行加锁，进一步减少并发冲突的概率。\n将原先 table 数组＋单向链表的数据结构，变更为 table 数组＋单向链表＋红黑树的结构。对于 hash 表来说，最核心的能力在于将 key hash 之后能均匀的分布在数组中。如果 hash 之后散列的很均匀，那么 table 数组中的每个队列长度主要为 0 或者 1。但实际情况并非总是如此理想，虽然 ConcurrentHashMap 类默认的加载因子为 0.75，但是在数据量过大或者运气不佳的情况下，还是会存在一些队列长度过长的情况，如果还是采用单向列表方式，那么查询某个节点的时间复杂度为 O(n)；因此，对于个数超过 8(默认值)的列表，jdk1.8 中采用了红黑树的结构，那么查询的时间复杂度可以降低到 O(logN)，可以改进性能。\n\nfinal V putVal(K key, V value, boolean onlyIfAbsent) {\n    if (key == null || value == null) throw new NullPointerException();\n    int hash = spread(key.hashCode());\n    int binCount = 0;\n    for (Node[] tab = table;;) {\n        Node f; int n, i, fh;\n        // 如果table为空，初始化；否则，根据hash值计算得到数组索引i，如果tab[i]为空，直接新建节点Node即可。注：tab[i]实质为链表或者红黑树的首节点。\n        if (tab == null || (n = tab.length) == 0)\n            tab = initTable();\n        else if ((f = tabAt(tab, i = (n - 1) & hash)) == null) {\n            if (casTabAt(tab, i, null,\n                         new Node(hash, key, value, null)))\n                break;                   // no lock when adding to empty bin\n        }\n        // 如果tab[i]不为空并且hash值为MOVED，说明该链表正在进行transfer操作，返回扩容完成后的table。\n        else if ((fh = f.hash) == MOVED)\n            tab = helpTransfer(tab, f);\n        else {\n            V oldVal = null;\n            // 针对首个节点进行加锁操作，而不是segment，进一步减少线程冲突\n            synchronized (f) {\n                if (tabAt(tab, i) == f) {\n                    if (fh >= 0) {\n                        binCount = 1;\n                        for (Node e = f;; ++binCount) {\n                            K ek;\n                            // 如果在链表中找到值为key的节点e，直接设置e.val = value即可。\n                            if (e.hash == hash &&\n                                ((ek = e.key) == key ||\n                                 (ek != null && key.equals(ek)))) {\n                                oldVal = e.val;\n                                if (!onlyIfAbsent)\n                                    e.val = value;\n                                break;\n                            }\n                            // 如果没有找到值为key的节点，直接新建Node并加入链表即可。\n                            Node pred = e;\n                            if ((e = e.next) == null) {\n                                pred.next = new Node(hash, key,\n                                                          value, null);\n                                break;\n                            }\n                        }\n                    }\n                    // 如果首节点为TreeBin类型，说明为红黑树结构，执行putTreeVal操作。\n                    else if (f instanceof TreeBin) {\n                        Node p;\n                        binCount = 2;\n                        if ((p = ((TreeBin)f).putTreeVal(hash, key,\n                                                       value)) != null) {\n                            oldVal = p.val;\n                            if (!onlyIfAbsent)\n                                p.val = value;\n                        }\n                    }\n                }\n            }\n            if (binCount != 0) {\n                // 如果节点数>＝8，那么转换链表结构为红黑树结构。\n                if (binCount >= TREEIFY_THRESHOLD)\n                    treeifyBin(tab, i);\n                if (oldVal != null)\n                    return oldVal;\n                break;\n            }\n        }\n    }\n    // 计数增加1，有可能触发transfer操作(扩容)。\n    addCount(1L, binCount);\n    return null;\n}\n\n示例\npublic class ConcurrentHashMapDemo {\n\n    public static void main(String[] args) throws InterruptedException {\n\n        // HashMap 在并发迭代访问时会抛出 ConcurrentModificationException 异常\n        // Map map = new HashMap<>();\n        Map map = new ConcurrentHashMap<>();\n\n        Thread wthread = new Thread(() -> {\n            System.out.println(\"写操作线程开始执行\");\n            for (int i = 0; i  {\n            System.out.println(\"读操作线程开始执行\");\n            for (Integer key : map.keySet()) {\n                System.out.println(key + \" - \" + map.get(key));\n            }\n        });\n        wthread.start();\n        rthread.start();\n        Thread.sleep(1000);\n    }\n}\n\nCopyOnWriteArrayList\n要点\n\n作用：CopyOnWrite 字面意思为写入时复制。CopyOnWriteArrayList 是线程安全的 ArrayList。\n原理：\n在 CopyOnWriteAarrayList 中，读操作不同步，因为它们在内部数组的快照上工作，所以多个迭代器可以同时遍历而不会相互阻塞（1,2,4）。\n所有的写操作都是同步的。他们在备份数组（3）的副本上工作。写操作完成后，后备阵列将被替换为复制的阵列，并释放锁定。支持数组变得易变，所以替换数组的调用是原子（5）。\n写操作后创建的迭代器将能够看到修改的结构（6,7）。\n写时复制集合返回的迭代器不会抛出 ConcurrentModificationException，因为它们在数组的快照上工作，并且无论后续的修改（2,4）如何，都会像迭代器创建时那样完全返回元素。\n\n\n\n\n  \n\n\n源码\n重要属性\n\nlock - 执行写时复制操作，需要使用可重入锁加锁\narray - 对象数组，用于存放元素\n\n    /** The lock protecting all mutators */\n    final transient ReentrantLock lock = new ReentrantLock();\n\n    /** The array, accessed only via getArray/setArray. */\n    private transient volatile Object[] array;\n\n重要方法\n\n添加操作\n添加的逻辑很简单，先将原容器 copy 一份，然后在新副本上执行写操作，之后再切换引用。当然此过程是要加锁的。\n\n\n\npublic boolean add(E e) {\n    //ReentrantLock加锁，保证线程安全\n    final ReentrantLock lock = this.lock;\n    lock.lock();\n    try {\n        Object[] elements = getArray();\n        int len = elements.length;\n        //拷贝原容器，长度为原容器长度加一\n        Object[] newElements = Arrays.copyOf(elements, len + 1);\n        //在新副本上执行添加操作\n        newElements[len] = e;\n        //将原容器引用指向新副本\n        setArray(newElements);\n        return true;\n    } finally {\n        //解锁\n        lock.unlock();\n    }\n}\n\n\n删除操作\n删除操作同理，将除要删除元素之外的其他元素拷贝到新副本中，然后切换引用，将原容器引用指向新副本。同属写操作，需要加锁。\n\n\n\npublic E remove(int index) {\n    //加锁\n    final ReentrantLock lock = this.lock;\n    lock.lock();\n    try {\n        Object[] elements = getArray();\n        int len = elements.length;\n        E oldValue = get(elements, index);\n        int numMoved = len - index - 1;\n        if (numMoved == 0)\n            //如果要删除的是列表末端数据，拷贝前len-1个数据到新副本上，再切换引用\n            setArray(Arrays.copyOf(elements, len - 1));\n        else {\n            //否则，将除要删除元素之外的其他元素拷贝到新副本中，并切换引用\n            Object[] newElements = new Object[len - 1];\n            System.arraycopy(elements, 0, newElements, 0, index);\n            System.arraycopy(elements, index + 1, newElements, index,\n                              numMoved);\n            setArray(newElements);\n        }\n        return oldValue;\n    } finally {\n        //解锁\n        lock.unlock();\n    }\n}\n\n\n读操作\nCopyOnWriteArrayList 的读操作是不用加锁的，性能很高。\n\n\n\npublic E get(int index) {\n    return get(getArray(), index);\n}\nprivate E get(Object[] a, int index) {\n    return (E) a[index];\n}\n\n示例\npublic class CopyOnWriteArrayListDemo {\n\n    static class ReadTask implements Runnable {\n\n        List list;\n\n        ReadTask(List list) {\n            this.list = list;\n        }\n\n        public void run() {\n            for (String str : list) {\n                System.out.println(str);\n            }\n        }\n    }\n\n    static class WriteTask implements Runnable {\n\n        List list;\n        int index;\n\n        WriteTask(List list, int index) {\n            this.list = list;\n            this.index = index;\n        }\n\n        public void run() {\n            list.remove(index);\n            list.add(index, \"write_\" + index);\n        }\n    }\n\n    public void run() {\n        final int NUM = 10;\n        // ArrayList 在并发迭代访问时会抛出 ConcurrentModificationException 异常\n        // List list = new ArrayList<>();\n        CopyOnWriteArrayList list = new CopyOnWriteArrayList<>();\n        for (int i = 0; i \n资料\n\nJava 并发编程实战\nJava 并发编程的艺术\nhttps://blog.csdn.net/u010425776/article/details/54890215\nhttps://blog.csdn.net/wangxiaotongfan/article/details/52074160\nhttps://my.oschina.net/hosee/blog/675884\nhttps://www.jianshu.com/p/c0642afe03e0\nhttps://www.jianshu.com/p/f6730d5784ad\nhttp://www.javarticles.com/2012/06/copyonwritearraylist.html\nhttps://www.cnblogs.com/xrq730/p/5020760.html\nhttps://www.cnblogs.com/leesf456/p/5547853.html\nhttp://www.cnblogs.com/chengxiao/p/6881974.html\nhttp://www.cnblogs.com/dolphin0520/p/3933404.html\n\n"},"javacore/concurrent/锁.html":{"url":"javacore/concurrent/锁.html","title":"第六章 锁","keywords":"","body":"锁\n\n本文内容基于 JDK1.8。\n\n\n\n概述\n概念\n为什么用 Lock、ReadWriteLock\n\n\nLock 和 ReentrantLock\n要点\n源码\n示例\n\n\nReadWriteLock 和 ReentrantReadWriteLock\n要点\n源码\n示例\n\n\nAQS\n要点\n源码\n\n\n资料\n\n\n概述\n概念\n公平锁/非公平锁\n公平锁是指多个线程按照申请锁的顺序来获取锁。\n非公平锁是指多个线程获取锁的顺序并不是按照申请锁的顺序，有可能后申请的线程比先申请的线程优先获取锁。有可能，会造成优先级反转或者饥饿现象。\n对于 Java ReentrantLock而言，通过构造函数指定该锁是否是公平锁，默认是非公平锁。非公平锁的优点在于吞吐量比公平锁大。\n对于Synchronized而言，也是一种非公平锁。由于其并不像ReentrantLock是通过 AQS 的来实现线程调度，所以并没有任何办法使其变成公平锁。\n可重入锁\n可重入锁又名递归锁，是指在同一个线程在外层方法获取锁的时候，在进入内层方法会自动获取锁。\n说的有点抽象，下面会有一个代码的示例。对于 Java ReentrantLock而言, 他的名字就可以看出是一个可重入锁，其名字是Re entrant Lock重新进入锁。对于Synchronized而言,也是一个可重入锁。可重入锁的一个好处是可一定程度避免死锁。\nsynchronized void setA() throws Exception{\n    Thread.sleep(1000);\n    setB();\n}\n\nsynchronized void setB() throws Exception{\n    Thread.sleep(1000);\n}\n上面的代码就是一个可重入锁的一个特点，如果不是可重入锁的话，setB 可能不会被当前线程执行，可能造成死锁。\n独享锁/共享锁\n独享锁是指该锁一次只能被一个线程所持有。\n共享锁是指该锁可被多个线程所持有。\n对于 Java ReentrantLock而言，其是独享锁。但是对于 Lock 的另一个实现类ReadWriteLock，其读锁是共享锁，其写锁是独享锁。读锁的共享锁可保证并发读是非常高效的，读写，写读 ，写写的过程是互斥的。独享锁与共享锁也是通过 AQS 来实现的，通过实现不同的方法，来实现独享或者共享。对于Synchronized而言，当然是独享锁。\n互斥锁/读写锁\n上面讲的独享锁/共享锁就是一种广义的说法，互斥锁/读写锁就是具体的实现。互斥锁在 Java 中的具体实现就是ReentrantLock\n读写锁在 Java 中的具体实现就是ReadWriteLock\n乐观锁/悲观锁\n乐观锁与悲观锁不是指具体的什么类型的锁，而是指看待并发同步的角度。悲观锁认为对于同一个数据的并发操作，一定是会发生修改的，哪怕没有修改，也会认为修改。因此对于同一个数据的并发操作，悲观锁采取加锁的形式。悲观的认为，不加锁的并发操作一定会出问题。乐观锁则认为对于同一个数据的并发操作，是不会发生修改的。在更新数据的时候，会采用尝试更新，不断重新的方式更新数据。乐观的认为，不加锁的并发操作是没有事情的。\n从上面的描述我们可以看出，悲观锁适合写操作非常多的场景，乐观锁适合读操作非常多的场景，不加锁会带来大量的性能提升。悲观锁在 Java 中的使用，就是利用各种锁。乐观锁在 Java 中的使用，是无锁编程，常常采用的是 CAS 算法，典型的例子就是原子类，通过 CAS 自旋实现原子操作的更新。\n分段锁\n分段锁其实是一种锁的设计，并不是具体的一种锁，对于ConcurrentHashMap而言，其并发的实现就是通过分段锁的形式来实现高效的并发操作。我们以ConcurrentHashMap来说一下分段锁的含义以及设计思想，ConcurrentHashMap中的分段锁称为 Segment，它即类似于 HashMap（JDK7 与 JDK8 中 HashMap 的实现）的结构，即内部拥有一个 Entry 数组，数组中的每个元素既是一个链表；同时又是一个 ReentrantLock（Segment 继承了 ReentrantLock)。当需要 put 元素的时候，并不是对整个 hashmap 进行加锁，而是先通过 hashcode 来知道他要放在那一个分段中，然后对这个分段进行加锁，所以当多线程 put 的时候，只要不是放在一个分段中，就实现了真正的并行的插入。但是，在统计 size 的时候，可就是获取 hashmap 全局信息的时候，就需要获取所有的分段锁才能统计。分段锁的设计目的是细化锁的粒度，当操作不需要更新整个数组的时候，就仅仅针对数组中的一项进行加锁操作。\n偏向锁/轻量级锁/重量级锁\n这三种锁是指锁的状态，并且是针对Synchronized。在 Java 5 通过引入锁升级的机制来实现高效Synchronized。\n这三种锁的状态是通过对象监视器在对象头中的字段来表明的。\n偏向锁是指一段同步代码一直被一个线程所访问，那么该线程会自动获取锁。降低获取锁的代价。\n轻量级锁是指当锁是偏向锁的时候，被另一个线程所访问，偏向锁就会升级为轻量级锁，其他线程会通过自旋的形式尝试获取锁，不会阻塞，提高性能。\n重量级锁是指当锁为轻量级锁的时候，另一个线程虽然是自旋，但自旋不会一直持续下去，当自旋一定次数的时候，还没有获取到锁，就会进入阻塞，该锁膨胀为重量级锁。重量级锁会让其他申请的线程进入阻塞，性能降低。\n自旋锁\n在 Java 中，自旋锁是指尝试获取锁的线程不会立即阻塞，而是采用循环的方式去尝试获取锁，这样的好处是减少线程上下文切换的消耗，缺点是循环会消耗 CPU。\n为什么用 Lock、ReadWriteLock\n\nsynchronized 的缺陷\n\n被 synchronized 修饰的方法或代码块，只能被一个线程访问。如果这个线程被阻塞，其他线程也只能等待。\nsynchronized 不能响应中断。\nsynchronized 没有超时机制。\nsynchronized 只能是非公平锁。\n\n\nLock、ReadWriteLock 相较于 synchronized，解决了以上的缺陷：\n\nLock 可以手动释放锁（synchronized 获取锁和释放锁都是自动的），以避免死锁。\nLock 可以响应中断\nLock 可以设置超时时间，避免一致等待\nLock 可以选择公平锁或非公平锁两种模式\nReadWriteLock 将读写锁分离，从而使读写操作分开，有效提高并发性。\n\n\n\nLock 和 ReentrantLock\n要点\n如果采用 Lock，必须主动去释放锁，并且在发生异常时，不会自动释放锁。因此一般来说，使用 Lock 必须在 try catch 块中进行，并且将释放锁的操作放在 finally 块中进行，以保证锁一定被被释放，防止死锁的发生。\nlock() 方法的作用是获取锁。如果锁已被其他线程获取，则进行等待。\ntryLock() 方法的作用是尝试获取锁，如果成功，则返回 true；如果失败（即锁已被其他线程获取），则返回 false。也就是说，这个方法无论如何都会立即返回，获取不到锁时不会一直等待。\ntryLock(long time, TimeUnit unit) 方法和 tryLock() 方法是类似的，区别仅在于这个方法在获取不到锁时会等待一定的时间，在时间期限之内如果还获取不到锁，就返回 false。如果如果一开始拿到锁或者在等待期间内拿到了锁，则返回 true。\nlockInterruptibly() 方法比较特殊，当通过这个方法去获取锁时，如果线程正在等待获取锁，则这个线程能够响应中断，即中断线程的等待状态。也就使说，当两个线程同时通过 lock.lockInterruptibly() 想获取某个锁时，假若此时线程 A 获取到了锁，而线程 B 只有在等待，那么对线程 B 调用 threadB.interrupt() 方法能够中断线程 B 的等待过程。由于 lockInterruptibly() 的声明中抛出了异常，所以 lock.lockInterruptibly() 必须放在 try 块中或者在调用 lockInterruptibly() 的方法外声明抛出 InterruptedException。\n\n注意：当一个线程获取了锁之后，是不会被 interrupt() 方法中断的。因为本身在前面的文章中讲过单独调用 interrupt() 方法不能中断正在运行过程中的线程，只能中断阻塞过程中的线程。因此当通过 lockInterruptibly() 方法获取某个锁时，如果不能获取到，只有进行等待的情况下，是可以响应中断的。\n\nunlock() 方法的作用是释放锁。\nReentrantLock 是唯一实现了 Lock 接口的类。\nReentrantLock 字面意为可重入锁。\n源码\nLock 接口定义\npublic interface Lock {\n    void lock();\n    void lockInterruptibly() throws InterruptedException;\n    boolean tryLock();\n    boolean tryLock(long time, TimeUnit unit) throws InterruptedException;\n    void unlock();\n    Condition newCondition();\n}\n\nReentrantLock 属性和方法\nReentrantLock 的核心方法当然是 Lock 中的方法（具体实现完全基于 Sync 类中提供的方法）。\n此外，ReentrantLock 有两个构造方法，功能参考下面源码片段中的注释。\n// 同步机制完全依赖于此\nprivate final Sync sync;\n// 默认初始化 sync 的实例为非公平锁（NonfairSync）\npublic ReentrantLock() {}\n// 根据 boolean 值选择初始化 sync 的实例为公平的锁（FairSync）或不公平锁（NonfairSync）\npublic ReentrantLock(boolean fair) {}\n\nSync\n\nSync 类是 ReentrantLock 的内部类，也是一个抽象类。\nReentrantLock 的同步机制几乎完全依赖于Sync。使用 AQS 状态来表示锁的保留数（详细介绍参见 AQS）。\nSync 是一个抽象类，有两个子类：\nFairSync - 公平锁版本。\nNonfairSync - 非公平锁版本。\n\n\n\n\n  \n\n\n示例\npublic class ReentrantLockDemo {\n\n    private ArrayList arrayList = new ArrayList();\n    private Lock lock = new ReentrantLock();\n\n    public static void main(String[] args) {\n        final ReentrantLockDemo demo = new ReentrantLockDemo();\n        new Thread(() -> demo.insert(Thread.currentThread())).start();\n        new Thread(() -> demo.insert(Thread.currentThread())).start();\n    }\n\n    private void insert(Thread thread) {\n        lock.lock();\n        try {\n            System.out.println(thread.getName() + \"得到了锁\");\n            for (int i = 0; i \n:point_right: 更多示例\nReadWriteLock 和 ReentrantReadWriteLock\nReadWriteLock 和 ReentrantReadWriteLock要点\n对于特定的资源，ReadWriteLock 允许多个线程同时对其执行读操作，但是只允许一个线程对其执行写操作。\nReadWriteLock 维护一对相关的锁。一个是读锁；一个是写锁。将读写锁分开，有利于提高并发效率。\nReentrantReadWriteLock 实现了 ReadWriteLock 接口，所以它是一个读写锁。\n“读-读”线程之间不存在互斥关系。\n“读-写”线程、“写-写”线程之间存在互斥关系。\n\n  \n\n\nReadWriteLock 和 ReentrantReadWriteLock源码\nReadWriteLock 接口定义\npublic interface ReadWriteLock {\n    /**\n     * 返回用于读操作的锁\n     */\n    Lock readLock();\n\n    /**\n     * 返回用于写操作的锁\n     */\n    Lock writeLock();\n}\n\nReadWriteLock 和 ReentrantReadWriteLock示例\npublic class ReentrantReadWriteLockDemo {\n\n    private ReentrantReadWriteLock rwl = new ReentrantReadWriteLock();\n\n    public static void main(String[] args) {\n        final ReentrantReadWriteLockDemo demo = new ReentrantReadWriteLockDemo();\n        new Thread(() -> demo.get(Thread.currentThread())).start();\n        new Thread(() -> demo.get(Thread.currentThread())).start();\n    }\n\n    public synchronized void get(Thread thread) {\n        rwl.readLock().lock();\n        try {\n            long start = System.currentTimeMillis();\n\n            while (System.currentTimeMillis() - start \nAQS\n\nAQS 作为构建锁或者其他同步组件的基础框架，有必要好好了解一下其原理。\n\nAQS要点\n作用：AQS，AbstractQueuedSynchronizer，即队列同步器。它是构建锁或者其他同步组件的基础框架（如 ReentrantLock、ReentrantReadWriteLock、Semaphore 等）。\n场景：在 LOCK 包中的相关锁(常用的有 ReentrantLock、 ReadWriteLock)都是基于 AQS 来构建。然而这些锁都没有直接来继承 AQS，而是定义了一个 Sync 类去继承 AQS。那么为什么要这样呢?because:锁面向的是使用用户，而同步器面向的则是线程控制，那么在锁的实现中聚合同步器而不是直接继承 AQS 就可以很好的隔离二者所关注的事情。\n原理：AQS 在内部定义了一个 int 变量 state，用来表示同步状态。AQS 通过一个双向的 FIFO 同步队列来完成同步状态的管理，当有线程获取锁失败后，就被添加到队列末尾。\nAQS源码\nAbstractQueuedSynchronizer 继承自 AbstractOwnableSynchronize。\n同步队列\npublic abstract class AbstractQueuedSynchronizer\n    extends AbstractOwnableSynchronizer\n    implements java.io.Serializable {\n\n    /** 等待队列的队头，懒加载。只能通过 setHead 方法修改。 */\n    private transient volatile Node head;\n    /** 等待队列的队尾，懒加载。只能通过 enq 方法添加新的等待节点。*/\n    private transient volatile Node tail;\n    /** 同步状态 */\n    private volatile int state;\n}\n\nAQS 维护了一个 Node 类型双链表，通过 head 和 tail 指针进行访问。\n\n  \n\n\nNode\nstatic final class Node {\n    /** 该等待同步的节点处于共享模式 */\n    static final Node SHARED = new Node();\n    /** 该等待同步的节点处于独占模式 */\n    static final Node EXCLUSIVE = null;\n\n    /** 等待状态,这个和 state 是不一样的:有 1,0,-1,-2,-3 五个值 */\n    volatile int waitStatus;\n    static final int CANCELLED =  1;\n    static final int SIGNAL    = -1;\n    static final int CONDITION = -2;\n    static final int PROPAGATE = -3;\n\n    /** 前驱节点 */\n    volatile Node prev;\n    /** 后继节点 */\n    volatile Node next;\n    /** 等待锁的线程 */\n    volatile Thread thread;\n}\n\n很显然，Node 是一个双链表结构。\nwaitStatus 5 个状态值的含义：\n\nCANCELLED（1） - 该节点的线程可能由于超时或被中断而处于被取消(作废)状态，一旦处于这个状态，节点状态将一直处于 CANCELLED(作废)，因此应该从队列中移除.\nSIGNAL（-1） - 当前节点为 SIGNAL 时，后继节点会被挂起，因此在当前节点释放锁或被取消之后必须被唤醒(unparking)其后继结点.\nCONDITION（-2） - 该节点的线程处于等待条件状态，不会被当作是同步队列上的节点,直到被唤醒(signal)，设置其值为 0,重新进入阻塞状态。\nPROPAGATE（-3） - 下一个 acquireShared 应无条件传播。\n0 - 非以上状态。\n\n获取独占锁\nacquire\n/**\n * 先调用 tryAcquire 查看同步状态。\n * 如果成功获取同步状态，则结束方法，直接返回；\n * 反之，则先调用 addWaiter，再调用 acquireQueued。\n */\npublic final void acquire(int arg) {\n        if (!tryAcquire(arg) &&\n            acquireQueued(addWaiter(Node.EXCLUSIVE), arg))\n            selfInterrupt();\n}\n\naddWaiter\naddWaiter 方法的作用是将当前线程插入等待同步队列的队尾。\nprivate Node addWaiter(Node mode) {\n    // 1. 将当前线程构建成 Node 类型\n    Node node = new Node(Thread.currentThread(), mode);\n    // 2. 判断尾指针是否为 null\n    Node pred = tail;\n    if (pred != null) {\n        // 2.2 将当前节点插入队列尾部\n        node.prev = pred;\n        if (compareAndSetTail(pred, node)) {\n            pred.next = node;\n            return node;\n        }\n    }\n    // 2.1. 尾指针为 null，说明当前节点是第一个加入队列的节点\n    enq(node);\n    return node;\n}\n\nenq\nenq 方法的作用是通过自旋（死循环），不断尝试利用 CAS 操作将节点插入队列尾部，直到成功为止。\nprivate Node enq(final Node node) {\n    // 设置死循环，是为了不断尝试 CAS 操作，直到成功为止\n    for (;;) {\n        Node t = tail;\n        if (t == null) {\n            // 1. 构造头结点（必须初始化，需要领会双链表的精髓）\n            if (compareAndSetHead(new Node()))\n                tail = head;\n        } else {\n            // 2. 通过 CAS 操作将节点插入队列尾部\n            node.prev = t;\n            if (compareAndSetTail(t, node)) {\n                t.next = node;\n                return t;\n            }\n        }\n    }\n}\n\nacquireQueued\nacquireQueued 方法的作用是通过自旋（死循环），不断尝试为等待队列中线程获取独占锁。\nfinal boolean acquireQueued(final Node node, int arg) {\n        boolean failed = true;\n        try {\n            boolean interrupted = false;\n            for (;;) {\n                // 1. 获得当前节点的上一个节点\n                final Node p = node.predecessor();\n                // 2. 当前节点能否获取独占式锁\n                // 2.1 如果当前节点是队列中第一个节点，并且成功获取同步状态，即可以获得独占式锁\n                // 说明：当前节点的上一个节点是头指针，即意味着当前节点是队列中第一个节点。\n                if (p == head && tryAcquire(arg)) {\n                    setHead(node);\n                    p.next = null; // help GC\n                    failed = false;\n                    return interrupted;\n                }\n                // 2.2 获取锁失败，线程进入等待状态等待获取独占式锁\n                if (shouldParkAfterFailedAcquire(p, node) &&\n                    parkAndCheckInterrupt())\n                    interrupted = true;\n            }\n        } finally {\n            if (failed)\n                cancelAcquire(node);\n        }\n    }\n\nacquireQueued Before\n\n  \n\n\nsetHead 方法\nprivate void setHead(Node node) {\n    head = node;\n    node.thread = null;\n    node.prev = null;\n}\n\n将当前节点通过 setHead 方法设置为队列的头结点，然后将之前的头结点的 next 域设置为 null，并且 pre 域也为 null，即与队列断开，无任何引用方便 GC 时能够将内存进行回收。\n\n  \n\n\nshouldParkAfterFailedAcquire\nshouldParkAfterFailedAcquire 方法的作用是使用 compareAndSetWaitStatus(pred, ws, Node.SIGNAL) 将节点状态由 INITIAL 设置成 SIGNAL，表示当前线程阻塞。\n当 compareAndSetWaitStatus 设置失败，则说明 shouldParkAfterFailedAcquire 方法返回 false，重新进入外部方法 acquireQueued。由于 acquireQueued 方法中是死循环，会再一次执行 shouldParkAfterFailedAcquire，直至 compareAndSetWaitStatus 设置节点状态位为 SIGNAL。\nprivate static boolean shouldParkAfterFailedAcquire(Node pred, Node node) {\n    int ws = pred.waitStatus;\n    if (ws == Node.SIGNAL)\n        return true;\n    if (ws > 0) {\n        do {\n            node.prev = pred = pred.prev;\n        } while (pred.waitStatus > 0);\n        pred.next = node;\n    } else {\n        compareAndSetWaitStatus(pred, ws, Node.SIGNAL);\n    }\n    return false;\n}\n\nparkAndCheckInterrupt\nparkAndCheckInterrupt 方法的作用是调用 LookSupport.park 方法，该方法是用来阻塞当前线程的。\nprivate final boolean parkAndCheckInterrupt() {\n    LockSupport.park(this);\n    return Thread.interrupted();\n}\nacquire 流程\n综上所述，就是 acquire 的完整流程。可以以一幅图来说明：\n\n  \n\n\n释放独占锁\nrelease\nrelease 方法以独占模式发布。如果 tryRelease 返回 true，则通过解锁一个或多个线程来实现。这个方法可以用来实现 Lock.unlock 方法。\npublic final boolean release(int arg) {\n    // 判断同步状态释放是否成功\n    if (tryRelease(arg)) {\n        Node h = head;\n        if (h != null && h.waitStatus != 0)\n            unparkSuccessor(h);\n        return true;\n    }\n    return false;\n}\n\nunparkSuccessor\nunparkSuccessor 方法作用是唤醒 node 的下一个节点。\n头指针的后继节点\nprivate void unparkSuccessor(Node node) {\n    /*\n     * 如果状态为负值（即可能需要信号），请尝试清除信号。\n     * 如果失败或状态由于等待线程而改变也是正常的。\n     */\n    int ws = node.waitStatus;\n    if (ws  0) {\n        s = null;\n        for (Node t = tail; t != null && t != node; t = t.prev)\n            if (t.waitStatus \n总结\n\n线程获取锁失败，线程被封装成 Node 进行入队操作，核心方法在于 addWaiter()和 enq()，同时 enq()完成对同步队列的头结点初始化工作以及 CAS 操作失败的重试 ;\n线程获取锁是一个自旋的过程，当且仅当 当前节点的前驱节点是头结点并且成功获得同步状态时，节点出队即该节点引用的线程获得锁，否则，当不满足条件时就会调用 LookSupport.park()方法使得线程阻塞 ；\n释放锁的时候会唤醒后继节点；\n\n获取可中断的独占锁\nacquireInterruptibly\nLock 能响应中断，这是相较于 synchronized 的一个显著优点。\n那么 Lock 响应中断的特性是如何实现的？答案就在 acquireInterruptibly 方法中。\npublic final void acquireInterruptibly(int arg)\n        throws InterruptedException {\n    if (Thread.interrupted())\n        throw new InterruptedException();\n    if (!tryAcquire(arg))\n        // 线程获取锁失败\n        doAcquireInterruptibly(arg);\n}\n\ndoAcquireInterruptibly\n获取同步状态失败后就会调用 doAcquireInterruptibly 方法\nprivate void doAcquireInterruptibly(int arg)\n    throws InterruptedException {\n    // 将节点插入到同步队列中\n    final Node node = addWaiter(Node.EXCLUSIVE);\n    boolean failed = true;\n    try {\n        for (;;) {\n            final Node p = node.predecessor();\n            // 获取锁出队\n            if (p == head && tryAcquire(arg)) {\n                setHead(node);\n                p.next = null; // help GC\n                failed = false;\n                return;\n            }\n            if (shouldParkAfterFailedAcquire(p, node) &&\n                parkAndCheckInterrupt())\n                // 线程中断抛异常\n                throw new InterruptedException();\n        }\n    } finally {\n        if (failed)\n            cancelAcquire(node);\n    }\n}\n\n与 acquire 方法逻辑几乎一致，唯一的区别是当 parkAndCheckInterrupt 返回 true 时（即线程阻塞时该线程被中断），代码抛出被中断异常。\n获取超时等待式的独占锁\ntryAcquireNanos\n通过调用 lock.tryLock(timeout,TimeUnit) 方式达到超时等待获取锁的效果，该方法会在三种情况下才会返回：\n\n在超时时间内，当前线程成功获取了锁；\n当前线程在超时时间内被中断；\n超时时间结束，仍未获得锁返回 false。\n\n我们仍然通过采取阅读源码的方式来学习底层具体是怎么实现的，该方法会调用 AQS 的方法 tryAcquireNanos\npublic final boolean tryAcquireNanos(int arg, long nanosTimeout)\n        throws InterruptedException {\n    if (Thread.interrupted())\n        throw new InterruptedException();\n    return tryAcquire(arg) ||\n        // 实现超时等待的效果\n        doAcquireNanos(arg, nanosTimeout);\n}\n\ndoAcquireNanos\nprivate boolean doAcquireNanos(int arg, long nanosTimeout)\n        throws InterruptedException {\n    if (nanosTimeout  spinForTimeoutThreshold)\n                LockSupport.parkNanos(this, nanosTimeout);\n            // 3.4 线程被中断抛出被中断异常\n            if (Thread.interrupted())\n                throw new InterruptedException();\n        }\n    } finally {\n        if (failed)\n            cancelAcquire(node);\n    }\n}\n\n\n  \n\n\n获取共享锁\nacquireShared\npublic final void acquireShared(int arg) {\n    if (tryAcquireShared(arg) \n尝试获取共享锁失败，调用 doAcquireShared\nprivate void doAcquireShared(int arg) {\n    final Node node = addWaiter(Node.SHARED);\n    boolean failed = true;\n    try {\n        boolean interrupted = false;\n        for (;;) {\n            final Node p = node.predecessor();\n            if (p == head) {\n                int r = tryAcquireShared(arg);\n                if (r >= 0) {\n                    // 当该节点的前驱节点是头结点且成功获取同步状态\n                    setHeadAndPropagate(node, r);\n                    p.next = null; // help GC\n                    if (interrupted)\n                        selfInterrupt();\n                    failed = false;\n                    return;\n                }\n            }\n            if (shouldParkAfterFailedAcquire(p, node) &&\n                parkAndCheckInterrupt())\n                interrupted = true;\n        }\n    } finally {\n        if (failed)\n            cancelAcquire(node);\n    }\n}\n\n以上代码和 acquireQueued 的代码逻辑十分相似，区别仅在于自旋的条件以及节点出队的操作有所不同。\n释放共享锁\nreleaseShared\npublic final boolean releaseShared(int arg) {\n    if (tryReleaseShared(arg)) {\n        doReleaseShared();\n        return true;\n    }\n    return false;\n}\n\ndoReleaseShared\n当成功释放同步状态之后即 tryReleaseShared 会继续执行 doReleaseShared 方法\n发送后继信号并确保传播。 （注意：对于独占模式，如果需要信号，释放就相当于调用头的 unparkSuccessor。）\nprivate void doReleaseShared() {\n    for (;;) {\n        Node h = head;\n        if (h != null && h != tail) {\n            int ws = h.waitStatus;\n            if (ws == Node.SIGNAL) {\n                if (!compareAndSetWaitStatus(h, Node.SIGNAL, 0))\n                    continue;            // loop to recheck cases\n                unparkSuccessor(h);\n            }\n            else if (ws == 0 &&\n                     !compareAndSetWaitStatus(h, 0, Node.PROPAGATE))\n                // 如果 CAS 失败，继续自旋\n                continue;\n        }\n        // 如果头指针变化，break\n        if (h == head)\n            break;\n    }\n}\n\n获取可中断的共享锁\nacquireSharedInterruptibly 方法与 acquireInterruptibly 几乎一致，不再赘述。\n获取超时等待式的共享锁\ntryAcquireSharedNanos 方法与 tryAcquireNanos 几乎一致，不再赘述。\n资料\n\nJava 并发编程实战\nJava 并发编程的艺术\nhttp://www.cnblogs.com/dolphin0520/p/3923167.html\nhttps://zhuanlan.zhihu.com/p/27134110\nhttps://t.hao0.me/java/2016/04/01/aqs.html\nhttp://ju.outofmemory.cn/entry/353762\nhttps://blog.csdn.net/u012403290/article/details/64910926?locationNum=11&fps=1\nhttps://www.cnblogs.com/qifengshi/p/6831055.html\n\n"},"javacore/concurrent/原子变量类.html":{"url":"javacore/concurrent/原子变量类.html","title":"第七章 原子变量类","keywords":"","body":"原子变量类\n\n本文内容基于 JDK1.8。\n\n\n\n原子更新基本类型\n原子更新数组\n原子更新引用类型\n原子更新字段类\n资料\n\n\n原子变量比锁的粒度更细，量级更轻，并且对于在多处理器系统上实现高性能的并发代码来说是非常关键的。\n原子变量类相当于一种泛化的 volatile 变量，能够支持原子的和有条件的读-改-写操作。\n原子类在内部使用现代 CPU 支持的 CAS 指令来实现同步。这些指令通常比锁更快。\n原子更新基本类型\n\nAtomicBoolean - 原子更新布尔类型。\nAtomicInteger - 原子更新整型。\nAtomicLong - 原子更新长整型。\n\n示例：\npublic class AtomicIntegerDemo {\n\n    public static void main(String[] args) throws InterruptedException {\n        ExecutorService executorService = Executors.newFixedThreadPool(5);\n        AtomicInteger count = new AtomicInteger(0);\n        for (int i = 0; i  {\n                System.out.println(Thread.currentThread().getName() + \" count=\" + count.get());\n                count.incrementAndGet();\n            });\n        }\n\n        executorService.shutdown();\n        executorService.awaitTermination(30, TimeUnit.SECONDS);\n        System.out.println(\"Final Count is : \" + count.get());\n    }\n}\n\n原子更新数组\n\nAtomicIntegerArray - 原子更新整型数组里的元素。\nAtomicLongArray - 原子更新长整型数组里的元素。\nAtomicReferenceArray - 原子更新引用类型数组的元素。\nAtomicBooleanArray - 原子更新布尔类型数组的元素。\n\n示例：\npublic class AtomicIntegerArrayDemo {\n\n    private static AtomicIntegerArray atomicIntegerArray = new AtomicIntegerArray(10);\n\n    public static void main(final String[] arguments) throws InterruptedException {\n\n        for (int i = 0; i \n原子更新引用类型\n\nAtomicReference - 原子更新引用类型。\nAtomicReferenceFieldUpdater - 原子更新引用类型里的字段。\nAtomicMarkableReference - 原子更新带有标记位的引用类型。可以原子更新一个布尔类型的标记位和应用类型。\n\npublic class AtomicReferenceDemo {\n\n    private static String message;\n    private static Person person;\n    private static AtomicReference aRmessage;\n    private static AtomicReference aRperson;\n\n    public static void main(String[] args) throws InterruptedException {\n        Thread t1 = new Thread(new MyRun1());\n        Thread t2 = new Thread(new MyRun2());\n        message = \"hello\";\n        person = new Person(\"Phillip\", 23);\n        aRmessage = new AtomicReference(message);\n        aRperson = new AtomicReference(person);\n        System.out.println(\"Message is: \" + message\n            + \"\\nPerson is \" + person.toString());\n        System.out.println(\"Atomic Reference of Message is: \" + aRmessage.get()\n            + \"\\nAtomic Reference of Person is \" + aRperson.get().toString());\n        t1.start();\n        t2.start();\n        t1.join();\n        t2.join();\n        System.out.println(\"\\nNow Message is: \" + message\n            + \"\\nPerson is \" + person.toString());\n        System.out.println(\"Atomic Reference of Message is: \" + aRmessage.get()\n            + \"\\nAtomic Reference of Person is \" + aRperson.get().toString());\n    }\n\n    static class MyRun1 implements Runnable {\n\n        public void run() {\n            aRmessage.compareAndSet(message, \"Thread 1\");\n            message = message.concat(\"-Thread 1!\");\n            person.setAge(person.getAge() + 1);\n            person.setName(\"Thread 1\");\n            aRperson.getAndSet(new Person(\"Thread 1\", 1));\n            System.out.println(\"\\n\" + Thread.currentThread().getName() + \" Values \"\n                + message + \" - \" + person.toString());\n            System.out.println(\"\\n\" + Thread.currentThread().getName() + \" Atomic References \"\n                + message + \" - \" + person.toString());\n        }\n    }\n\n    static class MyRun2 implements Runnable {\n\n        public void run() {\n            message = message.concat(\"-Thread 2\");\n            person.setAge(person.getAge() + 2);\n            person.setName(\"Thread 2\");\n            aRmessage.lazySet(\"Thread 2\");\n            aRperson.set(new Person(\"Thread 2\", 2));\n            System.out.println(\"\\n\" + Thread.currentThread().getName() + \" Values: \"\n                + message + \" - \" + person.toString());\n            System.out.println(\"\\n\" + Thread.currentThread().getName() + \" Atomic References: \"\n                + aRmessage.get() + \" - \" + aRperson.get().toString());\n        }\n    }\n\n    static class Person {\n\n        private String name;\n        private int age;\n\n        Person(String name, int age) {\n            this.name = name;\n            this.age = age;\n        }\n\n        public String getName() {\n            return name;\n        }\n\n        public void setName(String name) {\n            this.name = name;\n        }\n\n        int getAge() {\n            return age;\n        }\n\n        void setAge(int age) {\n            this.age = age;\n        }\n\n        @Override\n        public String toString() {\n            return \"[name \" + this.name + \", age \" + this.age + \"]\";\n        }\n    }\n}\n\n原子更新字段类\n\nAtomicIntegerFieldUpdater - 原子更新整型的字段的更新器。\nAtomicLongFieldUpdater - 原子更新长整型字段的更新器。\nAtomicStampedReference - 原子更新带有版本号的引用类型。该类将整型数值与引用关联起来，可用于原子的更新数据和数据的版本号，可以解决使用 CAS 进行原子更新时可能出现的 ABA 问题。\n\npublic class AtomicStampedReferenceDemo {\n\n    private final static String INIT_REF = \"abc\";\n\n    public static void main(String[] args) throws InterruptedException {\n\n        AtomicStampedReference asr = new AtomicStampedReference<>(INIT_REF, 0);\n        System.out.println(\"初始对象为：\" + asr.getReference());\n        final int stamp = asr.getStamp();\n\n        ExecutorService executorService = Executors.newFixedThreadPool(100);\n        for (int i = 0; i  {\n                try {\n                    Thread.sleep(Math.abs((int) (Math.random() * 100)));\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n\n                if (asr.compareAndSet(INIT_REF, Thread.currentThread().getName(), stamp, stamp + 1)) {\n                    System.out.println(Thread.currentThread().getName() + \" 修改了对象！\");\n                    System.out.println(\"新的对象为：\" + asr.getReference());\n                }\n            });\n        }\n\n        executorService.shutdown();\n        executorService.awaitTermination(60, TimeUnit.SECONDS);\n    }\n}\n\n资料\n\nJava 并发编程实战\nJava 并发编程的艺术\nhttp://tutorials.jenkov.com/java-util-concurrent/atomicinteger.html\nhttp://tutorials.jenkov.com/java-util-concurrent/atomicintegerarray.html\nhttp://tutorials.jenkov.com/java-util-concurrent/atomicreference.html\nhttp://tutorials.jenkov.com/java-util-concurrent/atomicstampedreference.html\n\n"},"javacore/concurrent/并发工具类.html":{"url":"javacore/concurrent/并发工具类.html","title":"第八章 并发工具类","keywords":"","body":"并发工具类\n\n本文内容基于 JDK1.8。\n\n\n\nCountDownLatch\n要点\n源码\n示例\n\n\nCyclicBarrier\n要点\n源码\n示例\n\n\nSemaphore\n要点\n源码\n示例\n\n\n资料\n\n\nJDK 的 java.util.concurrent 包（即 juc）中提供了几个非常有用的并发工具类。\nCountDownLatch\nCountDownLatch要点\n\n作用：字面意思为递减计数锁。它允许一个或多个线程等待，直到在其他线程中执行的一组操作完成。\n原理：CountDownLatch 维护一个计数器 count，表示需要等待的事件数量。countDown 方法递减计数器，表示有一个事件已经发生。调用 await 方法的线程会一直阻塞直到计数器为零，或者等待中的线程中断，或者等待超时。\n\n\n  \n\n\nCountDownLatch源码\nCountDownLatch 唯一的构造方法：\n// 初始化计数器\npublic CountDownLatch(int count) {};\n\nCountDownLatch 的重要方法：\n// 调用 await() 方法的线程会被挂起，它会等待直到 count 值为 0 才继续执行\npublic void await() throws InterruptedException { };\n// 和 await() 类似，只不过等待一定的时间后 count 值还没变为 0 的话就会继续执行\npublic boolean await(long timeout, TimeUnit unit) throws InterruptedException { };\n// count 减 1\npublic void countDown() { };\n\nCountDownLatch示例\npublic class CountDownLatchDemo {\n\n    public static void main(String[] args) {\n        final CountDownLatch latch = new CountDownLatch(2);\n\n        new Thread(() -> {\n            try {\n                System.out.println(\"子线程\" + Thread.currentThread().getName() + \"正在执行\");\n                Thread.sleep(3000);\n                System.out.println(\"子线程\" + Thread.currentThread().getName() + \"执行完毕\");\n                latch.countDown();\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }).start();\n\n        new Thread(() -> {\n            try {\n                System.out.println(\"子线程\" + Thread.currentThread().getName() + \"正在执行\");\n                Thread.sleep(3000);\n                System.out.println(\"子线程\" + Thread.currentThread().getName() + \"执行完毕\");\n                latch.countDown();\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }).start();\n\n        try {\n            System.out.println(\"等待2个子线程执行完毕...\");\n            latch.await();\n            System.out.println(\"2个子线程已经执行完毕\");\n            System.out.println(\"继续执行主线程\");\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\nCyclicBarrier\nCyclicBarrier要点\n\n作用：字面意思循环栅栏。它可以让一组线程等待至某个状态之后再全部同时执行。叫做循环是因为当所有等待线程都被释放以后，CyclicBarrier 可以被重用。\n原理：CyclicBarrier 维护一个计数器 count。每次执行 await 方法之后，count 加 1，直到计数器的值和设置的值相等，等待的所有线程才会继续执行。\n场景：CyclicBarrier 在并行迭代算法中非常有用。\n\n\n  \n\n\nCyclicBarrier源码\nCyclicBarrier 提供了 2 个构造方法\n// parties 数相当于一个屏障，当 parties 数量的线程在等待时会跳闸，并且在跳闸时不执行预定义的动作。\npublic CyclicBarrier(int parties) {}\n// parties 数相当于一个屏障，当 parties 数量的线程在等待时会跳闸，并且在跳闸时执行给定的动作 barrierAction。\npublic CyclicBarrier(int parties, Runnable barrierAction) {}\n\nCyclicBarrier 的重要方法：\n// 等待调用 await 的线程数达到屏障数。如果当前线程是最后一个到达的线程，并且在构造函数中提供了非空屏障操作，则当前线程在允许其他线程继续之前运行该操作。如果在屏障动作期间发生异常，那么该异常将在当前线程中传播并且屏障被置于断开状态。\npublic int await() throws InterruptedException, BrokenBarrierException {}\n// 相比于上个方法，这个方法让这些线程等待至一定的时间，如果还有线程没有到达 barrier 状态就直接让到达 barrier 的线程执行后续任务。\npublic int await(long timeout, TimeUnit unit)\n        throws InterruptedException,\n               BrokenBarrierException,\n               TimeoutException {}\n// 将屏障重置为初始状态\npublic void reset() {}\n\nCyclicBarrier示例\npublic class CyclicBarrierDemo02 {\n\n    static class CyclicBarrierRunnable implements Runnable {\n\n        CyclicBarrier barrier1 = null;\n        CyclicBarrier barrier2 = null;\n\n        CyclicBarrierRunnable(CyclicBarrier barrier1, CyclicBarrier barrier2) {\n            this.barrier1 = barrier1;\n            this.barrier2 = barrier2;\n        }\n\n        public void run() {\n            try {\n                Thread.sleep(1000);\n                System.out.println(Thread.currentThread().getName() + \" waiting at barrier 1\");\n                this.barrier1.await();\n\n                Thread.sleep(1000);\n                System.out.println(Thread.currentThread().getName() + \" waiting at barrier 2\");\n                this.barrier2.await();\n\n                System.out.println(Thread.currentThread().getName() + \" done!\");\n\n            } catch (InterruptedException | BrokenBarrierException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        Runnable barrier1Action = () -> System.out.println(\"BarrierAction 1 executed \");\n        Runnable barrier2Action = () -> System.out.println(\"BarrierAction 2 executed \");\n\n        CyclicBarrier barrier1 = new CyclicBarrier(2, barrier1Action);\n        CyclicBarrier barrier2 = new CyclicBarrier(2, barrier2Action);\n\n        CyclicBarrierRunnable barrierRunnable1 = new CyclicBarrierRunnable(barrier1, barrier2);\n\n        CyclicBarrierRunnable barrierRunnable2 = new CyclicBarrierRunnable(barrier1, barrier2);\n\n        new Thread(barrierRunnable1).start();\n        new Thread(barrierRunnable2).start();\n    }\n}\n\nSemaphore\nSemaphore要点\n\n作用：字面意思为信号量。Semaphore 用来控制同时访问某个特定资源的操作数量，或者同时执行某个指定操作的数量。\n原理：Semaphore 管理着一组虚拟的许可（permit），permit 的初始数量可通过构造方法来指定。每次执行 acquire 方法可以获取一个 permit，如果没有就等待；而 release 方法可以释放一个 permit。\n场景：\nSemaphore 可以用于实现资源池，如数据库连接池。\nSemaphore 可以用于将任何一种容器变成有界阻塞容器。\n\n\n\n\n  \n\n\nSemaphore源码\nSemaphore提供了 2 个构造方法：\n// 初始化固定数量的 permit，并且默认为非公平模式\npublic Semaphore(int permits) {}\n// 初始化固定数量的 permit，第二个参数设置是否为公平模式。所谓公平，是指等待久的优先获取许可\npublic Semaphore(int permits, boolean fair) {}\n\nSemaphore的重要方法：\n// 获取 1 个许可\npublic void acquire() throws InterruptedException {}\n//获取 permits 个许可\npublic void acquire(int permits) throws InterruptedException {}\n// 释放 1 个许可\npublic void release() {}\n//释放 permits 个许可\npublic void release(int permits) {}\n\nSemaphore示例\npublic class SemaphoreDemo {\n\n    private static final int THREAD_COUNT = 30;\n\n    private static ExecutorService threadPool = Executors.newFixedThreadPool(THREAD_COUNT);\n\n    private static Semaphore s = new Semaphore(10);\n\n    public static void main(String[] args) {\n        for (int i = 0; i  {\n                try {\n                    s.acquire();\n                    System.out.println(\"save data\");\n                    s.release();\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            });\n        }\n\n        threadPool.shutdown();\n    }\n}\n\n资料\n\nJava 并发编程实战\nJava 并发编程的艺术\nhttp://www.cnblogs.com/dolphin0520/p/3920397.html\n\n"},"javacore/concurrent/线程池.html":{"url":"javacore/concurrent/线程池.html","title":"第九章 线程池","keywords":"","body":"线程池\n\n\n概述\n什么是线程池？\n为什么要用线程池？\n\n\nExecutor 框架\n简介\nThreadPoolExecutor\nExecutors\n\n\n源码\n线程池状态\n任务的执行\n线程池中的线程初始化\n任务缓存队列及排队策略\n任务拒绝策略\n线程池的关闭\n线程池容量的动态调整\n\n\n资料\n\n\n概述\n什么是线程池？\n线程池是一种多线程处理形式，处理过程中将任务添加到队列，然后在创建线程后自动启动这些任务。\n为什么要用线程池？\n\n降低资源消耗\n通过重复利用已创建的线程降低线程创建和销毁造成的消耗。\n\n\n提高响应速度\n当任务到达时，任务可以不需要等到线程创建就能立即执行。\n\n\n提高线程的可管理性\n线程是稀缺资源，如果无限制的创建，不仅会消耗系统资源，还会降低系统的稳定性，使用线程池可以进行统一的分配，调优和监控。但是要做到合理的利用线程池，必须对其原理了如指掌。\n\n\n\nExecutor 框架\n简介\n\n  \n\n\n\nExecutor：一个接口，其定义了一个接收 Runnable 对象的方法 executor，其方法签名为 executor(Runnable command),\nExecutorService：是一个比 Executor 使用更广泛的子类接口，其提供了生命周期管理的方法，以及可跟踪一个或多个异步任务执行状况返回 Future 的方法。\nAbstractExecutorService：ExecutorService 执行方法的默认实现。\nScheduledExecutorService：一个可定时调度任务的接口。\nScheduledThreadPoolExecutor：ScheduledExecutorService 的实现，一个可定时调度任务的线程池。\nThreadPoolExecutor：线程池，可以通过调用 Executors 以下静态工厂方法来创建线程池并返回一个 ExecutorService 对象。\n\nThreadPoolExecutor\njava.uitl.concurrent.ThreadPoolExecutor 类是 Executor 框架中最核心的一个类。\nThreadPoolExecutor 有四个构造方法，前三个都是基于第四个实现。第四个构造方法定义如下：\n    public ThreadPoolExecutor(int corePoolSize,\n                              int maximumPoolSize,\n                              long keepAliveTime,\n                              TimeUnit unit,\n                              BlockingQueue workQueue,\n                              ThreadFactory threadFactory,\n                              RejectedExecutionHandler handler) {\n\n参数说明\n\ncorePoolSize：线程池的基本线程数。这个参数跟后面讲述的线程池的实现原理有非常大的关系。在创建了线程池后，默认情况下，线程池中并没有任何线程，而是等待有任务到来才创建线程去执行任务，除非调用了 prestartAllCoreThreads()或者 prestartCoreThread()方法，从这 2 个方法的名字就可以看出，是预创建线程的意思，即在没有任务到来之前就创建 corePoolSize 个线程或者一个线程。默认情况下，在创建了线程池后，线程池中的线程数为 0，当有任务来之后，就会创建一个线程去执行任务，当线程池中的线程数目达到 corePoolSize 后，就会把到达的任务放到缓存队列当中。\nmaximumPoolSize：线程池允许创建的最大线程数。如果队列满了，并且已创建的线程数小于最大线程数，则线程池会再创建新的线程执行任务。值得注意的是如果使用了无界的任务队列这个参数就没什么效果。\nkeepAliveTime：线程活动保持时间。线程池的工作线程空闲后，保持存活的时间。所以如果任务很多，并且每个任务执行的时间比较短，可以调大这个时间，提高线程的利用率。\nunit：参数 keepAliveTime 的时间单位，有 7 种取值。可选的单位有天（DAYS），小时（HOURS），分钟（MINUTES），毫秒(MILLISECONDS)，微秒(MICROSECONDS, 千分之一毫秒)和毫微秒(NANOSECONDS, 千分之一微秒)。\nworkQueue：任务队列。用于保存等待执行的任务的阻塞队列。 可以选择以下几个阻塞队列。\nArrayBlockingQueue：是一个基于数组结构的有界阻塞队列，此队列按 FIFO（先进先出）原则对元素进行排序。\nLinkedBlockingQueue：一个基于链表结构的阻塞队列，此队列按 FIFO （先进先出） 排序元素，吞吐量通常要高于 ArrayBlockingQueue。静态工厂方法 Executors.newFixedThreadPool()使用了这个队列。\nSynchronousQueue：一个不存储元素的阻塞队列。每个插入操作必须等到另一个线程调用移除操作，否则插入操作一直处于阻塞状态，吞吐量通常要高于 LinkedBlockingQueue，静态工厂方法 Executors.newCachedThreadPool 使用了这个队列。\nPriorityBlockingQueue：一个具有优先级的无限阻塞队列。\n\n\nthreadFactory：创建线程的工厂。可以通过线程工厂给每个创建出来的线程设置更有意义的名字。\nhandler：饱和策略。当队列和线程池都满了，说明线程池处于饱和状态，那么必须采取一种策略处理提交的新任务。这个策略默认情况下是 AbortPolicy，表示无法处理新任务时抛出异常。以下是 JDK1.5 提供的四种策略。\nAbortPolicy：直接抛出异常。\nCallerRunsPolicy：只用调用者所在线程来运行任务。\nDiscardOldestPolicy：丢弃队列里最近的一个任务，并执行当前任务。\nDiscardPolicy：不处理，丢弃掉。\n当然也可以根据应用场景需要来实现 RejectedExecutionHandler 接口自定义策略。如记录日志或持久化不能处理的任务。\n\n\n\n重要方法\n在 ThreadPoolExecutor 类中有几个非常重要的方法：\n\nexecute() 方法实际上是 Executor 中声明的方法，在 ThreadPoolExecutor 进行了具体的实现，这个方法是 ThreadPoolExecutor 的核心方法，通过这个方法可以向线程池提交一个任务，交由线程池去执行。\nsubmit() 方法是在 ExecutorService 中声明的方法，在 AbstractExecutorService 就已经有了具体的实现，在 ThreadPoolExecutor 中并没有对其进行重写，这个方法也是用来向线程池提交任务的，但是它和 execute()方法不同，它能够返回任务执行的结果，去看 submit()方法的实现，会发现它实际上还是调用的 execute()方法，只不过它利用了 Future 来获取任务执行结果（Future 相关内容将在下一篇讲述）。\nshutdown() 和 shutdownNow() 是用来关闭线程池的。\n\n向线程池提交任务\n我们可以使用 execute 提交任务，但是 execute 方法没有返回值，所以无法判断任务是否被线程池执行成功。\n通过以下代码可知 execute 方法输入的任务是一个 Runnable 实例。\nthreadsPool.execute(new Runnable() {\n            @Override\n            public void run() {\n                // TODO Auto-generated method stub\n            }\n        });\n\n我们也可以使用 submit 方法来提交任务，它会返回一个 Future ，那么我们可以通过这个 Future 来判断任务是否执行成功。\n通过 Future 的 get 方法来获取返回值，get 方法会阻塞住直到任务完成。而使用 get(long timeout, TimeUnit unit) 方法则会阻塞一段时间后立即返回，这时有可能任务没有执行完。\nFuture future = executor.submit(harReturnValuetask);\ntry {\n     Object s = future.get();\n} catch (InterruptedException e) {\n    // 处理中断异常\n} catch (ExecutionException e) {\n    // 处理无法执行任务异常\n} finally {\n    // 关闭线程池\n    executor.shutdown();\n}\n\n线程池的关闭\n我们可以通过调用线程池的 shutdown 或 shutdownNow 方法来关闭线程池，它们的原理是遍历线程池中的工作线程，然后逐个调用线程的 interrupt 方法来中断线程，所以无法响应中断的任务可能永远无法终止。但是它们存在一定的区别，shutdownNow 首先将线程池的状态设置成 STOP，然后尝试停止所有的正在执行或暂停任务的线程，并返回等待执行任务的列表，而 shutdown 只是将线程池的状态设置成 SHUTDOWN 状态，然后中断所有没有正在执行任务的线程。\n只要调用了这两个关闭方法的其中一个，isShutdown 方法就会返回 true。当所有的任务都已关闭后,才表示线程池关闭成功，这时调用 isTerminaed 方法会返回 true。至于我们应该调用哪一种方法来关闭线程池，应该由提交到线程池的任务特性决定，通常调用 shutdown 来关闭线程池，如果任务不一定要执行完，则可以调用 shutdownNow。\nExecutors\nJDK 中提供了几种具有代表性的线程池，这些线程池是基于 ThreadPoolExecutor 的定制化实现。\n在实际使用线程池的场景中，我们往往不是直接使用 ThreadPoolExecutor ，而是使用 JDK 中提供的具有代表性的线程池实例。\nnewCachedThreadPool\n创建一个可缓存线程池，如果线程池长度超过处理需要，可灵活回收空闲线程，若无可回收，则新建线程。\n这种类型的线程池特点是：\n\n工作线程的创建数量几乎没有限制（其实也有限制的,数目为 Interger.MAX_VALUE）, 这样可灵活的往线程池中添加线程。\n如果长时间没有往线程池中提交任务，即如果工作线程空闲了指定的时间（默认为 1 分钟），则该工作线程将自动终止。终止后，如果你又提交了新的任务，则线程池重新创建一个工作线程。\n在使用 CachedThreadPool 时，一定要注意控制任务的数量，否则，由于大量线程同时运行，很有会造成系统瘫痪。\n\n示例：\npublic class CachedThreadPoolDemo {\n    public static void main(String[] args) {\n        ExecutorService executorService = Executors.newCachedThreadPool();\n        for (int i = 0; i  System.out.println(Thread.currentThread().getName() + \" 执行，i = \" + index));\n        }\n    }\n}\n\nnewFixedThreadPool\n创建一个指定工作线程数量的线程池。每当提交一个任务就创建一个工作线程，如果工作线程数量达到线程池初始的最大数，则将提交的任务存入到池队列中。\nFixedThreadPool 是一个典型且优秀的线程池，它具有线程池提高程序效率和节省创建线程时所耗的开销的优点。但是，在线程池空闲时，即线程池中没有可运行任务时，它不会释放工作线程，还会占用一定的系统资源。\n示例：\npublic class FixedThreadPoolDemo {\n    public static void main(String[] args) {\n        ExecutorService executorService = Executors.newFixedThreadPool(3);\n        for (int i = 0; i  {\n                try {\n                    System.out.println(Thread.currentThread().getName() + \" 执行，i = \" + index);\n                    Thread.sleep(2000);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            });\n        }\n    }\n}\n\nnewSingleThreadExecutor\n创建一个单线程化的 Executor，即只创建唯一的工作者线程来执行任务，它只会用唯一的工作线程来执行任务，保证所有任务按照指定顺序(FIFO, LIFO, 优先级)执行。如果这个线程异常结束，会有另一个取代它，保证顺序执行。单工作线程最大的特点是可保证顺序地执行各个任务，并且在任意给定的时间不会有多个线程是活动的。\n示例：\npublic class SingleThreadExecutorDemo {\n    public static void main(String[] args) {\n        ExecutorService executorService = Executors.newSingleThreadExecutor();\n        for (int i = 0; i  {\n                try {\n                    System.out.println(Thread.currentThread().getName() + \" 执行，i = \" + index);\n                    Thread.sleep(2000);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            });\n        }\n    }\n}\n\nnewScheduleThreadPool\n创建一个线程池，可以安排任务在给定延迟后运行，或定期执行。\npublic class ScheduledThreadPoolDemo {\n\n    private static void delay() {\n        ScheduledExecutorService scheduledThreadPool = Executors.newScheduledThreadPool(5);\n        scheduledThreadPool.schedule(() -> System.out.println(Thread.currentThread().getName() + \" 延迟 3 秒\"), 3,\n                TimeUnit.SECONDS);\n    }\n\n    private static void cycle() {\n        ScheduledExecutorService scheduledThreadPool = Executors.newScheduledThreadPool(5);\n        scheduledThreadPool.scheduleAtFixedRate(\n                () -> System.out.println(Thread.currentThread().getName() + \" 延迟 1 秒，每 3 秒执行一次\"), 1, 3,\n                TimeUnit.SECONDS);\n    }\n\n    public static void main(String[] args) {\n        delay();\n        cycle();\n    }\n}\n\n源码\n线程池的具体实现原理，大致从以下几个方面讲解：\n\n线程池状态\n任务的执行\n线程池中的线程初始化\n任务缓存队列及排队策略\n任务拒绝策略\n线程池的关闭\n线程池容量的动态调整\n\n线程池状态\n// runState is stored in the high-order bits\nprivate static final int RUNNING    = -1 \nrunState 表示当前线程池的状态，它是一个 volatile 变量用来保证线程之间的可见性；\n下面的几个 static final 变量表示 runState 可能的几个取值。\n当创建线程池后，初始时，线程池处于 RUNNING 状态；\nRUNNING -> SHUTDOWN\n如果调用了 shutdown()方法，则线程池处于 SHUTDOWN 状态，此时线程池不能够接受新的任务，它会等待所有任务执行完毕。\n(RUNNING or SHUTDOWN) -> STOP\n如果调用了 shutdownNow()方法，则线程池处于 STOP 状态，此时线程池不能接受新的任务，并且会去尝试终止正在执行的任务。\nSHUTDOWN -> TIDYING\n当线程池和队列都为空时，则线程池处于 TIDYING 状态。\nSTOP -> TIDYING\n当线程池为空时，则线程池处于 TIDYING 状态。\nTIDYING -> TERMINATED\n当 terminated() 回调方法完成时，线程池处于 TERMINATED 状态。\n任务的执行\n任务执行的核心方法是 execute() 方法。执行步骤如下：\n\n如果少于 corePoolSize 个线程正在运行，尝试使用给定命令作为第一个任务启动一个新线程。对 addWorker 的调用会自动检查 runState 和 workerCount，从而防止在不应该的情况下添加线程。\n如果任务排队成功，仍然需要仔细检查是否应该添加一个线程（因为现有的线程自上次检查以来已经死亡）或者自从进入方法后，线程池就关闭了。所以我们重新检查状态，如果有必要的话，在线程池停止状态时回滚队列，如果没有线程的话，就开始一个新的线程。\n如果任务排队失败，那么我们尝试添加一个新的线程。如果失败了，说明线程池已经关闭了，或者已经饱和了，所以拒绝这个任务。\n\npublic void execute(Runnable command) {\n    if (command == null)\n        throw new NullPointerException();\n\n    int c = ctl.get();\n    if (workerCountOf(c) \n线程池中的线程初始化\n默认情况下，创建线程池之后，线程池中是没有线程的，需要提交任务之后才会创建线程。\n在实际中如果需要线程池创建之后立即创建线程，可以通过以下两个方法办到：\nprestartCoreThread()：初始化一个核心线程；\nprestartAllCoreThreads()：初始化所有核心线程\npublic boolean prestartCoreThread() {\n    return addIfUnderCorePoolSize(null); //注意传进去的参数是null\n}\n\npublic int prestartAllCoreThreads() {\n    int n = 0;\n    while (addIfUnderCorePoolSize(null))//注意传进去的参数是null\n        ++n;\n    return n;\n}\n\n任务缓存队列及排队策略\n在前面我们多次提到了任务缓存队列，即 workQueue，它用来存放等待执行的任务。\nworkQueue 的类型为 BlockingQueue，通常可以取下面三种类型：\n\nArrayBlockingQueue：基于数组的先进先出队列，此队列创建时必须指定大小；\nLinkedBlockingQueue：基于链表的先进先出队列，如果创建时没有指定此队列大小，则默认为 Integer.MAX_VALUE；\nSynchronousQueue：这个队列比较特殊，它不会保存提交的任务，而是将直接新建一个线程来执行新来的任务。\n\n任务拒绝策略\n当线程池的任务缓存队列已满并且线程池中的线程数目达到 maximumPoolSize，如果还有任务到来就会采取任务拒绝策略，通常有以下四种策略\n\nThreadPoolExecutor.AbortPolicy:丢弃任务并抛出 RejectedExecutionException 异常。\nThreadPoolExecutor.DiscardPolicy：也是丢弃任务，但是不抛出异常。\nThreadPoolExecutor.DiscardOldestPolicy：丢弃队列最前面的任务，然后重新尝试执行任务（重复此过程）\nThreadPoolExecutor.CallerRunsPolicy：由调用线程处理该任务\n\n线程池的关闭\nThreadPoolExecutor 提供了两个方法，用于线程池的关闭，分别是 shutdown()和 shutdownNow()，其中：\n\nshutdown()：不会立即终止线程池，而是要等所有任务缓存队列中的任务都执行完后才终止，但再也不会接受新的任务\nshutdownNow()：立即终止线程池，并尝试打断正在执行的任务，并且清空任务缓存队列，返回尚未执行的任务\n\n线程池容量的动态调整\nThreadPoolExecutor 提供了动态调整线程池容量大小的方法：setCorePoolSize()和 setMaximumPoolSize()，\n\nsetCorePoolSize：设置核心池大小\nsetMaximumPoolSize：设置线程池最大能创建的线程数目大小\n\n当上述参数从小变大时，ThreadPoolExecutor 进行线程赋值，还可能立即创建新的线程来执行任务。\n资料\n\nJava 并发编程实战\nJava 并发编程的艺术\nhttps://www.cnblogs.com/MOBIN/p/5436482.html\n\n"},"javacore/jvm/jvm-interview.html":{"url":"javacore/jvm/jvm-interview.html","title":"Java虚拟机面经","keywords":"","body":"Java虚拟机\n\n1 结构图和流程可以大致说下。\n2 一定得了解针对堆的垃圾回收机制，具体而言，可以画个图，说下年轻代年老代等。\n\n3 说下垃圾回收的流程，然后针对性地说下如何在代码中优化内存性能。\n\n4 最好说下如果出现了OOM异常，该怎么排查？如何看Dump文件。\n\n5 GC的一些概念，比如强弱软引用，finalize方法等，这些可以准备下。 \n\n\n"},"javacore/jvm/jvm-memory.html":{"url":"javacore/jvm/jvm-memory.html","title":"第一章 运行时数据区域","keywords":"","body":"运行时数据区域\n\n\n程序计数器\n虚拟机栈\n本地方法栈\n堆\n方法区\n运行时常量池\n直接内存\n参考资料\n\n\n\n\n\n\n程序计数器\n记录正在执行的虚拟机字节码指令的地址（如果正在执行的是本地方法则为空）。\n虚拟机栈\n每个 Java 方法在执行的同时会创建一个栈帧用于存储局部变量表、操作数栈、常量池引用等信息。每一个方法从调用直至执行完成的过程，就对应着一个栈帧在 Java 虚拟机栈中入栈和出栈的过程。\n\n\n\n\n可以通过 -Xss 这个虚拟机参数来指定一个程序的 Java 虚拟机栈内存大小：\njava -Xss=512M HackTheJava\n\n该区域可能抛出以下异常：\n\n当线程请求的栈深度超过最大值，会抛出 StackOverflowError 异常；\n栈进行动态扩展时如果无法申请到足够内存，会抛出 OutOfMemoryError 异常。\n\n本地方法栈\n本地方法不是用 Java 实现，对待这些方法需要特别处理。\n与 Java 虚拟机栈类似，它们之间的区别只不过是本地方法栈为本地方法服务。\n\n\n\n\n堆\n所有对象实例都在这里分配内存。\n是垃圾收集的主要区域（\"GC 堆\"），现代的垃圾收集器基本都是采用分代收集算法，该算法的思想是针对不同的对象采取不同的垃圾回收算法，因此虚拟机把 Java 堆分成以下三块：\n\n新生代（Young Generation）\n老年代（Old Generation）\n永久代（Permanent Generation）\n\n当一个对象被创建时，它首先进入新生代，之后有可能被转移到老年代中。新生代存放着大量的生命很短的对象，因此新生代在三个区域中垃圾回收的频率最高。为了更高效地进行垃圾回收，把新生代继续划分成以下三个空间：\n\nEden\nFrom Survivor\nTo Survivor\n\n\n\n\n\nJava 堆不需要连续内存，并且可以动态增加其内存，增加失败会抛出 OutOfMemoryError 异常。\n可以通过 -Xms 和 -Xmx 两个虚拟机参数来指定一个程序的 Java 堆内存大小，第一个参数设置初始值，第二个参数设置最大值。\njava -Xms=1M -Xmx=2M HackTheJava\n\n方法区\n用于存放已被加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。\n和 Java 堆一样不需要连续的内存，并且可以动态扩展，动态扩展失败一样会抛出 OutOfMemoryError 异常。\n对这块区域进行垃圾回收的主要目标是对常量池的回收和对类的卸载，但是一般比较难实现。\nJDK 1.7 之前，HotSpot 虚拟机把它当成永久代来进行垃圾回收，JDK 1.8 之后，取消了永久代，用 metaspace（元数据）区替代。\n运行时常量池\n运行时常量池是方法区的一部分。\nClass 文件中的常量池（编译器生成的各种字面量和符号引用）会在类加载后被放入这个区域。\n除了在编译期生成的常量，还允许动态生成，例如 String 类的 intern()。这部分常量也会被放入运行时常量池。\n直接内存\n在 JDK 1.4 中新加入了 NIO 类，它可以使用 Native 函数库直接分配堆外内存，然后通过一个存储在 Java 堆里的 DirectByteBuffer 对象作为这块内存的引用进行操作。这样能在一些场景中显著提高性能，因为避免了在 Java 堆和 Native 堆中来回复制数据。\n内存问题\n如果线程请求的栈深度大于虚拟机所允许的最大深度，将抛出 StackOverflowError 异常。\n如果虚拟机在扩展栈时无法申请到足够的内存空间，则抛出 OutOfMemoryError 异常。\n参考资料\n\n深入理解 Java 虚拟机：JVM 高级特性与最佳实践（第 2 版）\n从表到里学习 JVM 实现\n\n"},"javacore/jvm/jvm-gc.html":{"url":"javacore/jvm/jvm-gc.html","title":"第二章 垃圾收集","keywords":"","body":"垃圾收集\n\n程序计数器、虚拟机栈和本地方法栈这三个区域属于线程私有的，只存在于线程的生命周期内，线程结束之后也会消失，因此不需要对这三个区域进行垃圾回收。垃圾回收主要是针对 Java 堆和方法区进行。\n\n\n\n对象死了吗\n\n引用计数算法\n可达性分析算法\n引用类型\n方法区的回收\n\n\n垃圾收集算法\n\n垃圾收集性能\n标记 - 清除\n标记 - 整理\n复制\n分代收集\n\n\n垃圾收集器\n\n串行收集器\n\nSerial 收集器\nSerial Old 收集器\n\n\n并行收集器\n\nParallel Scavenge 收集器\nParallel Old 收集器\n\n\n并发标记清除收集器\n\nCMS 收集器\nCMS 回收机制\nCMS 回收年轻代详细步骤\nCMS 回收年老代详细步骤\nCMS 特点\n\n\nParNew 收集器\n\n\nG1收集器\n分代和分区                              G1回收机制\nG1回收年轻代详细步骤          G1回收年老代详细步骤\n\n总结\n\n内存分配与回收策略\n\nMinor GC 和 Full GC\n内存分配策略\nFull GC 的触发条件\n\n\n\n\n\n\n对象死了吗\n引用计数算法\n给对象添加一个引用计数器，当对象增加一个引用时计数器加 1，引用失效时计数器减 1。引用计数为 0 的对象可被回收。\n两个对象出现循环引用的情况下，此时引用计数器永远不为 0，导致无法对它们进行回收。\npublic class ReferenceCountingGC {\n    public Object instance = null;\n\n    public static void main(String[] args) {\n        ReferenceCountingGC objectA = new ReferenceCountingGC();\n        ReferenceCountingGC objectB = new ReferenceCountingGC();\n        objectA.instance = objectB;\n        objectB.instance = objectA;\n    }\n}\n\n正因为循环引用的存在，因此 Java 虚拟机不适用引用计数算法。\n可达性分析算法\n通过 GC Roots 作为起始点进行搜索，能够到达到的对象都是存活的，不可达的对象可被回收。\n\n\n可达性分析算法\n\n\nJava 虚拟机使用该算法来判断对象是否可被回收，在 Java 中 GC Roots 一般包含以下内容：\n\n虚拟机栈中引用的对象\n本地方法栈中引用的对象\n方法区中类静态属性引用的对象\n方法区中的常量引用的对象\n\n引用类型\n无论是通过引用计算算法判断对象的引用数量，还是通过可达性分析算法判断对象的引用链是否可达，判定对象是否可被回收都与引用有关。\nJava 具有四种强度不同的引用类型。\n（一）强引用\n被强引用关联的对象不会被垃圾收集器回收。\n强引用：使用 new 一个新对象的方式来创建强引用。\nObject obj = new Object();\n\n（二）软引用\n被软引用关联的对象，只有在内存不够的情况下才会被回收。\n软引用：使用 SoftReference 类来创建软引用。\nObject obj = new Object();\nSoftReference sf = new SoftReference(obj);\nobj = null; // 使对象只被软引用关联\n\n（三）弱引用\n被弱引用关联的对象一定会被垃圾收集器回收，也就是说它只能存活到下一次垃圾收集发生之前。\n使用 WeakReference 类来实现弱引用。\nObject obj = new Object();\nWeakReference wf = new WeakReference(obj);\nobj = null;\n\nWeakHashMap 的 Entry 继承自 WeakReference，主要用来实现缓存。\nprivate static class Entry extends WeakReference implements Map.Entry\n\nTomcat 中的 ConcurrentCache 就使用了 WeakHashMap 来实现缓存功能。ConcurrentCache 采取的是分代缓存，经常使用的对象放入 eden 中，而不常用的对象放入 longterm。eden 使用 ConcurrentHashMap 实现，longterm 使用 WeakHashMap，保证了不常使用的对象容易被回收。\npublic final class ConcurrentCache {\n\n    private final int size;\n\n    private final Map eden;\n\n    private final Map longterm;\n\n    public ConcurrentCache(int size) {\n        this.size = size;\n        this.eden = new ConcurrentHashMap<>(size);\n        this.longterm = new WeakHashMap<>(size);\n    }\n\n    public V get(K k) {\n        V v = this.eden.get(k);\n        if (v == null) {\n            v = this.longterm.get(k);\n            if (v != null)\n                this.eden.put(k, v);\n        }\n        return v;\n    }\n\n    public void put(K k, V v) {\n        if (this.eden.size() >= size) {\n            this.longterm.putAll(this.eden);\n            this.eden.clear();\n        }\n        this.eden.put(k, v);\n    }\n}\n\n（四）虚引用\n又称为幽灵引用或者幻影引用。一个对象是否有虚引用的存在，完全不会对其生存时间构成影响，也无法通过虚引用取得一个对象实例。\n为一个对象设置虚引用关联的唯一目的就是能在这个对象被收集器回收时收到一个系统通知。\n使用 PhantomReference 来实现虚引用。\nObject obj = new Object();\nPhantomReference pf = new PhantomReference(obj);\nobj = null;\n\n方法区的回收\n因为方法区主要存放永久代对象，而永久代对象的回收率比年轻代差很多，因此在方法区上进行回收性价比不高。\n主要是对常量池的回收和对类的卸载。\n类的卸载条件很多，需要满足以下三个条件，并且满足了也不一定会被卸载：\n\n该类所有的实例都已经被回收，也就是 Java 堆中不存在该类的任何实例。\n加载该类的 ClassLoader 已经被回收。\n该类对应的 java.lang.Class 对象没有在任何地方被引用，也就无法在任何地方通过反射访问该类方法。\n\n可以通过 -Xnoclassgc 参数来控制是否对类进行卸载。\n在大量使用反射、动态代理、CGLib 等 ByteCode 框架、动态生成 JSP 以及 OSGi 这类频繁自定义 ClassLoader 的场景都需要虚拟机具备类卸载功能，以保证不会出现内存溢出。\nfinalize()\nfinalize() 类似 C++ 的析构函数，用来做关闭外部资源等工作。但是 try-finally 等方式可以做的更好，并且该方法运行代价高昂，不确定性大，无法保证各个对象的调用顺序，因此最好不要使用 finalize()。\n当一个对象可被回收时，如果需要执行该对象的 finalize() 方法，那么就有可能通过在该方法中让对象重新被引用，从而实现自救。\n垃圾收集算法\n垃圾收集性能\n垃圾收集器的性能指标主要有两点：\n\n停顿时间 - 停顿时间是因为 GC 而导致程序不能工作的时间长度。\n吞吐量 - 吞吐量关注在特定的时间周期内一个应用的工作量的最大值。对关注吞吐量的应用来说长暂停时间是可以接受的。由于高吞吐量的应用关注的基准在更长周期时间上，所以快速响应时间不在考虑之内。\n\n标记 - 清除\n\n\n\n\n将需要回收的对象进行标记，然后清理掉被标记的对象。\n不足：\n\n标记和清除过程效率都不高；\n会产生大量不连续的内存碎片，导致无法给大对象分配内存。\n\n标记 - 整理\n\n\n\n\n让所有存活的对象都向一端移动，然后直接清理掉端边界以外的内存。\n复制\n\n\n\n\n将内存划分为大小相等的两块，每次只使用其中一块，当这一块内存用完了就将还存活的对象复制到另一块上面，然后再把使用过的内存空间进行一次清理。\n主要不足是只使用了内存的一半。\n现在的商业虚拟机都采用这种收集算法来回收年轻代，但是并不是将内存划分为大小相等的两块，而是分为一块较大的 Eden 空间和两块较小的 Survior 空间，每次使用 Eden 空间和其中一块 Survivor。在回收时，将 Eden 和 Survivor 中还存活着的对象一次性复制到另一块 Survivor 空间上，最后清理 Eden 和使用过的那一块 Survivor。HotSpot 虚拟机的 Eden 和 Survivor 的大小比例默认为 8:1，保证了内存的利用率达到 90 %。如果每次回收有多于 10% 的对象存活，那么一块 Survivor 空间就不够用了，此时需要依赖于老年代进行分配担保，也就是借用老年代的空间存储放不下的对象。\n分代收集\n现在的商业虚拟机采用分代收集算法，它根据对象存活周期将内存划分为几块，不同块采用适当的收集算法。\n一般将 Java 堆分为年轻代和老年代。\n\n年轻代使用：复制算法\n老年代使用：标记 - 清理 或者 标记 - 整理 算法\n\n垃圾收集器\n\n\n\n\n以上是 HotSpot 虚拟机中的 7 个垃圾收集器，连线表示垃圾收集器可以配合使用。\n注：G1 垃圾收集器既可以回收年轻代内存，也可以回收老年代内存。而其他垃圾收集器只能针对特定代的内存进行回收。\n串行收集器\n串行收集器是最基本、发展历史最悠久的收集器。\n串行收集器是 client 模式下的默认收集器配置。因为在客户端模式下，分配给虚拟机管理的内存一般来说不会很大。Serial 收集器收集几十兆甚至一两百兆的年轻代停顿时间可以控制在一百多毫秒以内，只要不是太频繁，这点停顿是可以接受的。\n串行收集器采用单线程 stop-the-world 的方式进行收集。当内存不足时，串行 GC 设置停顿标识，待所有线程都进入安全点（Safepoint）时，应用线程暂停，串行 GC 开始工作，采用单线程方式回收空间并整理内存。\n\n\nSerial / Serial Old 收集器运行示意图\n\n\n单线程意味着复杂度更低、占用内存更少，垃圾回收效率高；但同时也意味着不能有效利用多核优势。事实上，串行收集器特别适合堆内存不高、单核甚至双核 CPU 的场合。\nSerial 收集器\n\n开启选项：-XX:+SerialGC\n打开此开关后，使用 Serial + Serial Old 收集器组合来进行内存回收。\n\nSerial Old 收集器\nSerial Old 是 Serial 收集器的老年代版本，也是给 Client 模式下的虚拟机使用。如果用在 Server 模式下，它有两大用途：\n\n在 JDK 1.5 以及之前版本（Parallel Old 诞生以前）中与 Parallel Scavenge 收集器搭配使用。\n作为 CMS 收集器的后备预案，在并发收集发生 Concurrent Mode Failure 时使用。\n\n并行收集器\n\n开启选项：-XX:+UseParallelGC\n打开此开关后，使用 Parallel Scavenge + Serial Old 收集器组合来进行内存回收。\n开启选项：-XX:+UseParallelOldGC\n打开此开关后，使用 Parallel Scavenge + Parallel Old 收集器组合来进行内存回收。\n\n其他收集器都是以关注停顿时间为目标，而并行收集器是以关注吞吐量（Throughput）为目标的垃圾收集器。\n\n停顿时间越短就越适合需要与用户交互的程序，良好的响应速度能提升用户体验；\n而高吞吐量则可以高效率地利用 CPU 时间，尽快完成程序的运算任务，主要适合在后台运算而不需要太多交互的任务。\n\n吞吐量 = 运行用户代码时间 / (运行用户代码时间 + 垃圾收集时间)\n并行收集器是 server 模式下的默认收集器。\n并行收集器与串行收集器工作模式相似，都是 stop-the-world 方式，只是暂停时并行地进行垃圾收集。并行收集器年轻代采用复制算法，老年代采用标记-整理，在回收的同时还会对内存进行压缩。并行收集器适合对吞吐量要求远远高于延迟要求的场景，并且在满足最差延时的情况下，并行收集器将提供最佳的吞吐量。\n在注重吞吐量以及 CPU 资源敏感的场合，都可以优先考虑 Parallel Scavenge 收集器 + Parallel Old 收集器。\n\n\nParallel / Parallel Old 收集器运行示意图\n\n\nParallel Scavenge 收集器\nParallel Scavenge 收集器提供了两个参数用于精确控制吞吐量，分别是：\n\n-XX:MaxGCPauseMillis - 控制最大垃圾收集停顿时间，收集器将尽可能保证内存回收时间不超过设定值。\n-XX:GCTimeRatio - 直接设置吞吐量大小的（值为大于 0 且小于 100 的整数）。\n\n缩短停顿时间是以牺牲吞吐量和年轻代空间来换取的：年轻代空间变小，垃圾回收变得频繁，导致吞吐量下降。\nParallel Scavenge 收集器还提供了一个参数 -XX:+UseAdaptiveSizePolicy，这是一个开关参数，打开参数后，就不需要手工指定年轻代的大小（-Xmn）、Eden 和 Survivor 区的比例（-XX:SurvivorRatio）、晋升老年代对象年龄（-XX:PretenureSizeThreshold）等细节参数了，虚拟机会根据当前系统的运行情况收集性能监控信息，动态调整这些参数以提供最合适的停顿时间或者最大的吞吐量，这种方式称为 GC 自适应的调节策略（GC Ergonomics）。\nParallel Old 收集器\n是 Parallel Scavenge 收集器的老年代版本，使用多线程和 “标记-整理” 算法。\n并发标记清除收集器\n\n开启选项：-XX:+UseConcMarkSweepGC\n打开此开关后，使用 CMS + ParNew + Serial Old 收集器组合来进行内存回收。\n\n并发标记清除收集器是以获取最短停顿时间为目标。\n开启后，年轻代使用 ParNew 收集器；老年代使用 CMS 收集器，如果 CMS 产生的碎片过多，导致无法存放浮动垃圾，JVM 会出现 Concurrent Mode Failure ，此时使用 Serial Old 收集器来替代 CMS 收集器清理碎片。\nCMS 收集器\nCMS 收集器是一种以获取最短停顿时间为目标的收集器。\nCMS（Concurrent Mark Sweep），Mark Sweep 指的是标记 - 清除算法。\nCMS 回收机制\nCMS 收集器运行步骤如下：\n\n初始标记：仅仅只是标记一下 GC Roots 能直接关联到的对象，速度很快，需要停顿。\n并发标记：进行 GC Roots Tracing 的过程，它在整个回收过程中耗时最长，不需要停顿。\n重新标记：为了修正并发标记期间因用户程序继续运作而导致标记产生变动的那一部分对象的标记记录，需要停顿。\n并发清除：回收在标记阶段被鉴定为不可达的对象。不需要停顿。\n\n在整个过程中耗时最长的并发标记和并发清除过程中，收集器线程都可以与用户线程一起工作，不需要进行停顿。\n\n\nCMS 收集器运行示意图\n\n\nCMS 回收年轻代详细步骤\n（1）堆空间被分割为三块空间\n\n\n年轻代分割成一个 Eden 区和两个 Survivor 区。年老代一个连续的空间。就地完成对象收集。除非有 FullGC 否则不会压缩。\n（2）CMS 年轻代垃圾收集如何工作\n年轻代被标为浅绿色，年老代被标记为蓝色。如果你的应用已经运行了一段时间，CMS 的堆看起来应该是这个样子。对象分散在年老代区域里。\n\n\n使用 CMS，年老代对象就地释放。它们不会被来回移动。这个空间不会被压缩除非发生 FullGC。\n（3）年轻代收集\n从 Eden 和 Survivor 区复制活跃对象到另一个 Survivor 区。所有达到他们的年龄阈值的对象会晋升到年老代。\n\n\n（4）年轻代回收之后\n一次年轻代垃圾收集之后，Eden 区和其中一个 Survivor 区被清空。\n\n\n最近晋升的对象以深蓝色显示在上图中，绿色的对象是年轻代幸免的还没有晋升到老年代对象。\nCMS 回收年老代详细步骤\n（1）CMS 的年老代收集\n发生两次 stop the world 事件：初始标记和重新标记。当年老代达到特定的占用比例时，CMS 开始执行。\n\n\n\n初始标记是一个短暂暂停的、可达对象被标记的阶段。\n并发标记寻找活跃对象在应用连续执行时。\n最后，在重新标记阶段，寻找在之前并发标记阶段中丢失的对象。\n\n（2）年老代收集-并发清除\n在之前阶段没有被标记的对象会被就地释放。不进行压缩操作。\n\n\n注意：未被标记的对象等于死亡对象\n（3）年老代收集-清除之后\n清除阶段之后，你可以看到大量内存被释放。你还可以注意到没有进行压缩操作。\n\n\n最后，CMS 收集器会再次进入重新设置阶段，等待下一次垃圾收集时机的到来。\nCMS 特点\nCMS 收集器具有以下缺点：\n\n并发收集 - 并发指的是用户线程和 GC 线程同时运行。\n吞吐量低 - 低停顿时间是以牺牲吞吐量为代价的，导致 CPU 利用率不够高。\n无法处理浮动垃圾 - 可能出现 Concurrent Mode Failure。浮动垃圾是指并发清除阶段由于用户线程继续运行而产生的垃圾，这部分垃圾只能到下一次 GC 时才能进行回收。由于浮动垃圾的存在，因此需要预留出一部分内存，意味着 CMS 收集不能像其它收集器那样等待老年代快满的时候再回收。\n可以使用 -XX:CMSInitiatingOccupancyFraction 来改变触发 CMS 收集器工作的内存占用百分，如果这个值设置的太大，导致预留的内存不够存放浮动垃圾，就会出现 Concurrent Mode Failure，这时虚拟机将临时启用 Serial Old 收集器来替代 CMS 收集器。\n\n\n标记 - 清除算法导致的空间碎片，往往出现老年代空间剩余，但无法找到足够大连续空间来分配当前对象，不得不提前触发一次 Full GC。\n可以使用 -XX:+UseCMSCompactAtFullCollection ，用于在 CMS 收集器要进行 Full GC 时开启内存碎片的合并整理，内存整理的过程是无法并发的，空间碎片问题没有了，但是停顿时间不得不变长了。\n可以使用 -XX:CMSFullGCsBeforeCompaction ，用于设置执行多少次不压缩的 Full GC 后，来一次带压缩的（默认为 0，表示每次进入 Full GC 时都要进行碎片整理）。\n\n\n\nParNew 收集器\n\n开启选项：-XX:+UseParNewGC\n\nParNew 收集器其实是 Serial 收集器的多线程版本。\n\n\nParNew 收集器运行示意图\n\n\n是 Server 模式下的虚拟机首选年轻代收集器，除了性能原因外，主要是因为除了 Serial 收集器，只有它能与 CMS 收集器配合工作。\nParNew 收集器也是使用 -XX:+UseConcMarkSweepGC 后的默认年轻代收集器。\nParNew 收集器默认开启的线程数量与 CPU 数量相同，可以使用 -XX:ParallelGCThreads 参数来设置线程数。\nG1 收集器\n\n参考资料：\n\nG1 垃圾收集器入门\n详解 JVM Garbage First(G1) 垃圾收集器\nGetting Started with the G1 Garbage Collector\n\n\nG1（Garbage-First），是面向服务器应用的垃圾回收器。\nG1 也是关注最短停顿时间的垃圾回收器。G1 也同样适合大尺寸堆内存的垃圾收集，官方推荐使用 G1 来代替 CMS。\nG1 最大的特点是引入分区的思路，弱化了分代的概念，合理利用垃圾收集各个周期的资源，解决了其他收集器甚至 CMS 的众多缺陷。Java 堆被分为年轻代、老年代和永久代，其它收集器进行收集的范围都是整个年轻代或者老生代，而 G1 可以直接对年轻代和永久代一起回收。\n分代和分区\n旧的垃圾收集器（串行的：serial，并行的：parallel，并发标记清除：CMS）都把堆结构化为三个部分：年轻代、年老代和固定大小的永久代。\n\n\n\n\nG1 把年轻代和老年代划分成多个大小相等的独立区域（Region），年轻代和永久代不再物理隔离。\n\n\n\n\n通过引入 Region 的概念，从而将原来的一整块内存空间划分成多个的小空间，使得每个小空间可以单独进行垃圾回收。这种划分方法带来了很大的灵活性，使得可预测的停顿时间模型成为可能。通过记录每个 Region 垃圾回收时间以及回收所获得的空间（这两个值是通过过去回收的经验获得），并维护一个优先列表，每次根据允许的收集时间，优先回收价值最大的 Region。\n每个 Region 都有一个 Remembered Set，用来记录该 Region 对象的引用对象所在的 Region。通过使用 Remembered Set，在做可达性分析的时候就可以避免全堆扫描。\nG1 回收机制\n\n\nG1 收集器运行示意图\n\n\n如果不计算维护 Remembered Set 的操作，G1 收集器的运作大致可划分为以下几个步骤：\n\n初始标记\n并发标记\n最终标记 - 为了修正在并发标记期间因用户程序继续运作而导致标记产生变动的那一部分标记记录，虚拟机将这段时间对象变化记录在线程的 Remembered Set Logs 里面，最终标记阶段需要把 Remembered Set Logs 的数据合并到 Remembered Set 中。这阶段需要停顿线程，但是可并行执行。\n筛选回收 - 首先对各个 Region 中的回收价值和成本进行排序，根据用户所期望的 GC 停顿是时间来制定回收计划。此阶段其实也可以做到与用户程序一起并发执行，但是因为只回收一部分 Region，时间是用户可控制的，而且停顿用户线程将大幅度提高收集效率。\n\n具备如下特点：\n\n空间整合：整体来看是基于“标记 - 整理”算法实现的收集器，从局部（两个 Region 之间）上来看是基于“复制”算法实现的，这意味着运行期间不会产生内存空间碎片。\n可预测的停顿：能让使用者明确指定在一个长度为 M 毫秒的时间片段内，消耗在 GC 上的时间不得超过 N 毫秒。\n\nG1 回收年轻代详细步骤\n（1）G1 初始堆空间\n堆空间是一个被分成许多固定大小区域的内存块。\n\nJava虚拟机启动时选定区域大小。Java虚拟机通常会指定2000个左右的大小相等、每个大小范围在1到32M的区域。\n\n**（2）G1 堆空间分配**\n\n实际上，这些区域被映射成 Eden、Survivor、年老代空间的逻辑表述形式。\n\n\n图片中的颜色表明了哪个区域被关联上什么角色。活跃对象从一个区域疏散（复制、移动）到另一个区域。区域被设计为并行的方式收集，可以暂停或者不暂停所有的其它用户线程。\n\n明显的区域可以被分配成 Eden、Survivor、Old 区域。另外，有第四种类型的区域叫做*极大区域(Humongous regions)*。这些区域被设计成保持标准区域大小的 50%或者更大的对象。它们被保存在一个连续的区域集合里。最后，最后一个类型的区域就是堆空间里没有使用的区域。\n\n**注意：**写作此文章时，收集极大对象时还没有被优化。因此，你应该避免创建这个大小的对象。\n\n**（3）G1 的年轻代**\n\n堆空间被分割成大约 2000 个区域。最小 1M，最大 32M，蓝色区域保持年老代对象，绿色区域保持年轻代对象。\n\n\n**注意：**区域没有必要像旧的收集器一样是保持连续的。\n\n**（4）G1 的年轻代收集**\n\n活跃对象会被疏散（复制、移动）到一个或多个 survivor 区域。如果达到晋升总阈值，对象会晋升到年老代区域。\n\n\n这是一个stop the world暂停。为下一次年轻代垃圾回收计算Eden和Survivor的大小。保留审计信息有助于计算大小。类似目标暂停时间的事情会被考虑在内。\n\n这个方法使重调区域大小变得很容易，按需把它们调大或调小。\n\n**（5）G1 年轻代回收的尾声**\n\n活跃对象被疏散到 Survivor 或者年老代区域。\n\n\n最近晋升的对象显示为深蓝色。Survivor区域显示为绿色。\n\n关于 G1 的年轻代回收做以下总结：\n\n- 堆空间是一块单独的内存空间被分割成多个区域。\n- 年轻代内存是由一组非连续的区域组成。这使得需要重调大小变得容易。\n- 年轻代垃圾回收是 stop the world 事件，所有应用线程都会因此操作暂停。\n- 年轻代垃圾收集使用多线程并行回收。\n- 活跃对象被复制到新的 Survivor 区或者年老代区域。\n\n\n\n#### G1 回收年老代详细步骤\n\n**（1）初始标记阶段**\n\n年轻代垃圾收集肩负着活跃对象初始标记的任务。在日志文件中被标为*GC pause (young)(inital-mark)*\n\n\n\n（2）并发标记阶段\n如果发现空区域(“X”标示的)，在重新标记阶段它们会被马上清除掉。当然，决定活性的审计信息也在此时被计算。\n\n\n（3）重新标记阶段\n空的区域被清除和回收掉。所有区域的活性在此时计算。\n\n\n（4）复制/清理阶段\nG1 选择活性最低的区域，这些区域能够以最快的速度回收。然后这些区域会在年轻代垃圾回收过程中被回收。在日志中被指示为[GC pause (mixed)]。所以年轻代和年老代在同一时间被回收。\n\n\n（5）复制/清理阶段之后\n被选择的区域已经被回收和压缩到图中显示的深蓝色区和深绿色区中。\n\n\n总结\n\n\n\n收集器\n串行/并行/并发\n年轻代/老年代\n收集算法\n目标\n适用场景\n\n\n\n\nSerial\n串行\n年轻代\n复制\n响应速度优先\n单 CPU 环境下的 Client 模式\n\n\nSerial Old\n串行\n老年代\n标记-整理\n响应速度优先\n单 CPU 环境下的 Client 模式、CMS 的后备预案\n\n\nParNew\n串行 + 并行\n年轻代\n复制算法\n响应速度优先\n多 CPU 环境时在 Server 模式下与 CMS 配合\n\n\nParallel Scavenge\n串行 + 并行\n年轻代\n复制算法\n吞吐量优先\n在后台运算而不需要太多交互的任务\n\n\nParallel Old\n串行 + 并行\n老年代\n标记-整理\n吞吐量优先\n在后台运算而不需要太多交互的任务\n\n\nCMS\n并行 + 并发\n老年代\n标记-清除\n响应速度优先\n集中在互联网站或 B/S 系统服务端上的 Java 应用\n\n\nG1\n并行 + 并发\n年轻代 + 老年代\n标记-整理 + 复制算法\n响应速度优先\n面向服务端应用，将来替换 CMS\n\n\n\n内存分配与回收策略\n对象的内存分配，也就是在堆上分配。主要分配在年轻代的 Eden 区上，少数情况下也可能直接分配在老年代中。\nMinor GC 和 Full GC\n\nMinor GC：发生在年轻代上，因为年轻代对象存活时间很短，因此 Minor GC 会频繁执行，执行的速度一般也会比较快。\nFull GC：发生在老年代上，老年代对象和年轻代的相反，其存活时间长，因此 Full GC 很少执行，而且执行速度会比 Minor GC 慢很多。\n\n内存分配策略\n（一）对象优先在 Eden 分配\n大多数情况下，对象在年轻代 Eden 区分配，当 Eden 区空间不够时，发起 Minor GC。\n（二）大对象直接进入老年代\n大对象是指需要连续内存空间的对象，最典型的大对象是那种很长的字符串以及数组。\n经常出现大对象会提前触发垃圾收集以获取足够的连续空间分配给大对象。\n-XX:PretenureSizeThreshold，大于此值的对象直接在老年代分配，避免在 Eden 区和 Survivor 区之间的大量内存复制。\n（三）长期存活的对象进入老年代\n为对象定义年龄计数器，对象在 Eden 出生并经过 Minor GC 依然存活，将移动到 Survivor 中，年龄就增加 1 岁，增加到一定年龄则移动到老年代中。\n-XX:MaxTenuringThreshold 用来定义年龄的阈值。\n（四）动态对象年龄判定\n虚拟机并不是永远地要求对象的年龄必须达到 MaxTenuringThreshold 才能晋升老年代，如果在 Survivor 区中相同年龄所有对象大小的总和大于 Survivor 空间的一半，则年龄大于或等于该年龄的对象可以直接进入老年代，无需等到 MaxTenuringThreshold 中要求的年龄。\n（五）空间分配担保\n在发生 Minor GC 之前，虚拟机先检查老年代最大可用的连续空间是否大于年轻代所有对象总空间，如果条件成立的话，那么 Minor GC 可以确认是安全的；如果不成立的话虚拟机会查看 HandlePromotionFailure 设置值是否允许担保失败，如果允许那么就会继续检查老年代最大可用的连续空间是否大于历次晋升到老年代对象的平均大小，如果大于，将尝试着进行一次 Minor GC，尽管这次 Minor GC 是有风险的；如果小于，或者 HandlePromotionFailure 设置不允许冒险，那这时也要改为进行一次 Full GC。\nFull GC 的触发条件\n对于 Minor GC，其触发条件非常简单，当 Eden 区空间满时，就将触发一次 Minor GC。而 Full GC 则相对复杂，有以下条件：\n（一）调用 System.gc()\n此方法的调用是建议虚拟机进行 Full GC，虽然只是建议而非一定，但很多情况下它会触发 Full GC，从而增加 Full GC 的频率，也即增加了间歇性停顿的次数。因此强烈建议能不使用此方法就不要使用，让虚拟机自己去管理它的内存。可通过 -XX:DisableExplicitGC 来禁止 RMI 调用 System.gc()。\n（二）老年代空间不足\n老年代空间不足的常见场景为前文所讲的大对象直接进入老年代、长期存活的对象进入老年代等，当执行 Full GC 后空间仍然不足，则抛出 Java.lang.OutOfMemoryError。为避免以上原因引起的 Full GC，调优时应尽量做到让对象在 Minor GC 阶段被回收、让对象在年轻代多存活一段时间以及不要创建过大的对象及数组。\n（三）空间分配担保失败\n使用复制算法的 Minor GC 需要老年代的内存空间作担保，如果出现了 HandlePromotionFailure 担保失败，则会触发 Full GC。\n（四）JDK 1.7 及以前的永久代空间不足\n在 JDK 1.7 及以前，HotSpot 虚拟机中的方法区是用永久代实现的，永久代中存放的为一些 Class 的信息、常量、静态变量等数据，当系统中要加载的类、反射的类和调用的方法较多时，永久代可能会被占满，在未配置为采用 CMS GC 的情况下也会执行 Full GC。如果经过 Full GC 仍然回收不了，那么虚拟机会抛出 java.lang.OutOfMemoryError，为避免以上原因引起的 Full GC，可采用的方法为增大永久代空间或转为使用 CMS GC。\n（五）Concurrent Mode Failure\n执行 CMS GC 的过程中同时有对象要放入老年代，而此时老年代空间不足（有时候“空间不足”是 CMS GC 时当前的浮动垃圾过多导致暂时性的空间不足触发 Full GC），便会报 Concurrent Mode Failure 错误，并触发 Full GC。\n参考资料\n\n深入理解 Java 虚拟机：JVM 高级特性与最佳实践（第 2 版）\n从表到里学习 JVM 实现\n详解 JVM Garbage First(G1) 垃圾收集器\n\n"},"javacore/jvm/jvm-class-loader.html":{"url":"javacore/jvm/jvm-class-loader.html","title":"第三章 类加载机制","keywords":"","body":"类加载机制\n\n类文件结构\n类加载机制\n类生命周期\n类加载过程\n（一）加载      （二）验证      （三）准备      （四）解析      （五）初始化\n初始化时机\n\n\n\n\n类加载器\n类与类加载器\n类加载器分类\n双亲委派模型\n自定义类加载器实现\n\n\n参考资料\n\n类文件结构\nClass 文件是一组以 8 位字节为基础单位的二进制流。\n整个 Class 文件本质上就是一张表，由下表中的数据项组成。\n\n\n魔数与 Class 文件的版本\n每个 Class 文件的头 4 个字节称为魔数（magic number），它的唯一作用是确定这个文件是否为一个能被虚拟机接收的 Class 文件。\n紧接着魔数的 4 个字节存储的是 Class 文件的版本号：第 5 和第 6 个字节是次版本号（Minor Version）；第 7 和第 8 个字节是主版本号（Major Version）。\n常量池\n常量池主要存放两类常量：\n\n字面量 - 如文本字符串、声明为 final 的常量值。\n符号引用\n类和接口的全限定名\n字段的名称和描述符\n方法的名称和描述符\n\n\n\n\n\n访问标志\n常量池之后，紧接着的两个字节代表访问标志，这个标志用于识别一些类或者接口的访问信息，包括：这个 Class 是类还是接口；是否定义为 public 类型；是否定义为 abstract 类型；如果是类的话，是否被声明为 final 等。\n\n\n类索引、父类索引和接口索引集合\nClass 文件由类索引、父类索引和接口索引集合这 3 项数据来确定这个类的继承关系。\n字段表集合\n字段表用于描述接口或者类中声明的变量。字段包括类级变量以及实例级变量，但不包括在方法内部声明的局部变量。包含的信息如下：\n\n字段访问标志\n\n\n\n\n名称索引\n描述符索引\n\n\n\n\n属性计数器\n属性集合\n\n方法表集合\n方法表包含的信息如下：\n\n方法访问标志\n\n\n\n\n并发可见性（volatile）\n能否被序列化（transient）\n字段数据类型（基本类型、对象、数组）\n名称索引\n描述符索引\n属性计数器\n属性集合\n\n属性表集合\n类加载机制\n\n类是在运行期间动态加载的。\n\n类生命周期\n\n\n\n\nJava 类的完整生命周期包括以下几个阶段：\n\n加载（Loading）\n链接（Linking）\n验证（Verification）\n准备（Preparation）\n解析（Resolution）\n\n\n初始化（Initialization）\n使用（Using）\n卸载（Unloading）\n\n加载、验证、准备、初始化和卸载这 5 个阶段的顺序是确定的，类的加载过程必须按照这种顺序按部就班地开始。而解析过程在某些情况下可以在初始化阶段之后再开始，这是为了支持 Java 的动态绑定。\n类加载过程\n类加载过程是指加载、验证、准备、解析和初始化这 5 个阶段。\n（一）加载\n加载是类加载的一个阶段，注意不要混淆。\n加载过程完成以下三件事：\n\n通过一个类的全限定名来获取定义此类的二进制字节流。\n将这个字节流所代表的静态存储结构转化为方法区的运行时存储结构。\n在内存中生成一个代表这个类的 Class 对象，作为方法区这个类的各种数据的访问入口。\n\n其中二进制字节流可以从以下方式中获取：\n\n从 ZIP 包读取，这很常见，最终成为日后 JAR、EAR、WAR 格式的基础。\n从网络中获取，这种场景最典型的应用是 Applet。\n运行时计算生成，这种场景使用得最多得就是动态代理技术，在 java.lang.reflect.Proxy 中，就是用了 ProxyGenerator.generateProxyClass 的代理类的二进制字节流。\n由其他文件生成，典型场景是 JSP 应用，即由 JSP 文件生成对应的 Class 类。\n从数据库读取，这种场景相对少见，例如有些中间件服务器（如 SAP Netweaver）可以选择把程序安装到数据库中来完成程序代码在集群间的分发。\n...\n\n（二）验证\n验证是链接阶段的第一步，它的目标是确保 Class 文件的字节流中包含的信息符合当前虚拟机的要求，并且不会危害虚拟机自身的安全。\n\n文件格式验证 - 验证字节流是否符合 Class 文件格式的规范，并且能被当前版本的虚拟机处理。\n元数据验证 - 对字节码描述的信息进行语义分析，以保证其描述的信息符合 Java 语言规范的要求。\n字节码验证 - 通过数据流和控制流分析，确保程序语义是合法、符合逻辑的。\n符号引用验证 - 发生在虚拟机将符号引用转换为直接引用的时候，对类自身以外（常量池中的各种符号引用）的信息进行匹配性校验。\n\n（三）准备\n类变量是被 static 修饰的变量，准备阶段为类变量分配内存并设置初始值，使用的是方法区的内存。\n实例变量不会在这阶段分配内存，它将会在对象实例化时随着对象一起分配在 Java 堆中。（实例化不是类加载的一个过程，类加载发生在所有实例化操作之前，并且类加载只进行一次，实例化可以进行多次）\n初始值一般为 0 值，例如下面的类变量 value 被初始化为 0 而不是 123。\npublic static int value = 123;\n\n如果类变量是常量，那么会按照表达式来进行初始化，而不是赋值为 0。\npublic static final int value = 123;\n\n（四）解析\n解析阶段目标是将常量池的符号引用替换为直接引用的过程。\n\n符号引用（Symbolic References） - 符号引用以一组符号来描述所引用的目标，符号可以是任何形式的字面量，只要使用时能无歧义地定位到目标即可。\n直接引用（Direct Reference） - 直接引用可以是直接指向目标的指针、相对偏移量或是一个能间接定位到目标的句柄。\n\n（五）初始化\n初始化阶段才真正开始执行类中的定义的 Java 程序代码。初始化阶段即虚拟机执行类构造器 () 方法的过程。\n在准备阶段，类变量已经赋过一次系统要求的初始值，而在初始化阶段，根据程序员通过程序制定的主观计划去初始化类变量和其它资源。\n() 方法具有以下特点：\n\n是由编译器自动收集类中所有类变量的赋值动作和静态语句块（static{} 块）中的语句合并产生的，编译器收集的顺序由语句在源文件中出现的顺序决定。特别注意的是，静态语句块只能访问到定义在它之前的类变量，定义在它之后的类变量只能赋值，不能访问。例如以下代码：\n\npublic class Test {\n    static {\n        i = 0;                // 给变量赋值可以正常编译通过\n        System.out.print(i);  // 这句编译器会提示“非法向前引用”\n    }\n    static int i = 1;\n}\n\n\n与类的构造函数（或者说实例构造器 ()）不同，不需要显式的调用父类的构造器。虚拟机会自动保证在子类的 () 方法运行之前，父类的 () 方法已经执行结束。因此虚拟机中第一个执行 () 方法的类肯定为 java.lang.Object。\n由于父类的 () 方法先执行，也就意味着父类中定义的静态语句块要优于子类的变量赋值操作。例如以下代码：\n\nstatic class Parent {\n    public static int A = 1;\n    static {\n        A = 2;\n    }\n}\n\nstatic class Sub extends Parent {\n    public static int B = A;\n}\n\npublic static void main(String[] args) {\n     System.out.println(Sub.B);  // 输出结果是父类中的静态变量 A 的值，也就是 2。\n}\n\n\n() 方法对于类或接口不是必须的，如果一个类中不包含静态语句块，也没有对类变量的赋值操作，编译器可以不为该类生成 () 方法。\n接口中不可以使用静态语句块，但仍然有类变量初始化的赋值操作，因此接口与类一样都会生成 () 方法。但接口与类不同的是，执行接口的 () 方法不需要先执行父接口的 () 方法。只有当父接口中定义的变量使用时，父接口才会初始化。另外，接口的实现类在初始化时也一样不会执行接口的 () 方法。\n虚拟机会保证一个类的 () 方法在多线程环境下被正确的加锁和同步，如果多个线程同时初始化一个类，只会有一个线程执行这个类的 () 方法，其它线程都会阻塞等待，直到活动线程执行 () 方法完毕。如果在一个类的 () 方法中有耗时的操作，就可能造成多个线程阻塞，在实际过程中此种阻塞很隐蔽。\n\n类初始化时机\n主动引用\n虚拟机规范中并没有强制约束何时进行加载，但是规范严格规定了有且只有下列五种情况必须对类进行初始化（加载、验证、准备都会随着发生）：\n\n遇到 new、getstatic、putstatic、invokestatic 这四条字节码指令时，如果类没有进行过初始化，则必须先触发其初始化。最常见的生成这 4 条指令的场景是：使用 new 关键字实例化对象的时候；读取或设置一个类的静态字段（被 final 修饰、已在编译期把结果放入常量池的静态字段除外）的时候；以及调用一个类的静态方法的时候。\n使用 java.lang.reflect 包的方法对类进行反射调用的时候，如果类没有进行初始化，则需要先触发其初始化。\n当初始化一个类的时候，如果发现其父类还没有进行过初始化，则需要先触发其父类的初始化。\n当虚拟机启动时，用户需要指定一个要执行的主类（包含 main() 方法的那个类），虚拟机会先初始化这个主类；\n当使用 JDK 1.7 的动态语言支持时，如果一个 java.lang.invoke.MethodHandle 实例最后的解析结果为 REF_getStatic, REF_putStatic, REF_invokeStatic 的方法句柄，并且这个方法句柄所对应的类没有进行过初始化，则需要先触发其初始化；\n\n被动引用\n以上 5 种场景中的行为称为对一个类进行主动引用。除此之外，所有引用类的方式都不会触发初始化，称为被动引用。被动引用的常见例子包括：\n\n通过子类引用父类的静态字段，不会导致子类初始化。\n\nSystem.out.println(SubClass.value); // value 字段在 SuperClass 中定义\n\n\n通过数组定义来引用类，不会触发此类的初始化。该过程会对数组类进行初始化，数组类是一个由虚拟机自动生成的、直接继承自 Object 的子类，其中包含了数组的属性和方法。\n\nSuperClass[] sca = new SuperClass[10];\n\n\n常量在编译阶段会存入调用类的常量池中，本质上并没有直接引用到定义常量的类，因此不会触发定义常量的类的初始化。\n\nSystem.out.println(ConstClass.HELLOWORLD);\n\n类加载器\n实现类的加载动作。在 Java 虚拟机外部实现，以便让应用程序自己决定如何去获取所需要的类。\n类与类加载器\n两个类相等：类本身相等，并且使用同一个类加载器进行加载。这是因为每一个类加载器都拥有一个独立的类名称空间。\n这里的相等，包括类的 Class 对象的 equals() 方法、isAssignableFrom() 方法、isInstance() 方法的返回结果为 true，也包括使用 instanceof 关键字做对象所属关系判定结果为 true。\n类加载器分类\n\n启动类加载器（Bootstrap ClassLoader） - 此类加载器负责将存放在 \\lib 目录中的，或者被 -Xbootclasspath 参数所指定的路径中的，并且是虚拟机识别的（仅按照文件名识别，如 rt.jar，名字不符合的类库即使放在 lib 目录中也不会被加载）类库加载到虚拟机内存中。启动类加载器无法被 Java 程序直接引用，用户在编写自定义类加载器时，如果需要把加载请求委派给启动类加载器，直接使用 null 代替即可。\n\n扩展类加载器（Extension ClassLoader） - 这个类加载器是由 ExtClassLoader(sun.misc.Launcher\\$ExtClassLoader)实现的。它负责将 \\lib\\ext 或者被 java.ext.dir 系统变量所指定路径中的所有类库加载到内存中，开发者可以直接使用扩展类加载器。\n\n应用程序类加载器（Application ClassLoader） - 这个类加载器是由 AppClassLoader（sun.misc.Launcher\\$AppClassLoader）实现的。由于这个类加载器是 ClassLoader 中的 getSystemClassLoader() 方法的返回值，因此一般称为系统类加载器。它负责加载用户类路径（ClassPath）上所指定的类库，开发者可以直接使用这个类加载器，如果应用程序中没有自定义过自己的类加载器，一般情况下这个就是程序中默认的类加载器。\n\n\n双亲委派模型\n应用程序都是由以上三种类加载器相互配合进行加载的，如果有必要，还可以加入自己定义的类加载器。\n下图展示的类加载器之间的层次关系，称为类加载器的双亲委派模型（Parents Delegation Model）。该模型要求除了顶层的启动类加载器外，其余的类加载器都应有自己的父类加载器。这里类加载器之间的父子关系一般通过组合（Composition）关系来实现，而不是通过继承（Inheritance）的关系实现。\n\n\n\n\n（一）工作过程\n一个类加载器首先将类加载请求传送到父类加载器，只有当父类加载器无法完成类加载请求时才尝试加载。\n（二）好处\n使得 Java 类随着它的类加载器一起具有一种带有优先级的层次关系，从而使得基础类得到统一。\n例如 java.lang.Object 存放在 rt.jar 中，如果编写另外一个 java.lang.Object 的类并放到 ClassPath 中，程序可以编译通过。因为双亲委派模型的存在，所以在 rt.jar 中的 Object 比在 ClassPath 中的 Object 优先级更高，因为 rt.jar 中的 Object 使用的是启动类加载器，而 ClassPath 中的 Object 使用的是应用程序类加载器。正因为 rt.jar 中的 Object 优先级更高，因为程序中所有的 Object 都是这个 Object。\n（三）实现\n以下是抽象类 java.lang.ClassLoader 的代码片段，其中的 loadClass() 方法运行过程如下：\n\n先检查类是否已经加载过，如果没有则让父类加载器去加载。\n当父类加载器加载失败时抛出 ClassNotFoundException，此时尝试自己去加载。\n\npublic abstract class ClassLoader {\n    // The parent class loader for delegation\n    private final ClassLoader parent;\n\n    public Class loadClass(String name) throws ClassNotFoundException {\n        return loadClass(name, false);\n    }\n\n    protected Class loadClass(String name, boolean resolve) throws ClassNotFoundException {\n        synchronized (getClassLoadingLock(name)) {\n            // First, check if the class has already been loaded\n            Class c = findLoadedClass(name);\n            if (c == null) {\n                try {\n                    if (parent != null) {\n                        c = parent.loadClass(name, false);\n                    } else {\n                        c = findBootstrapClassOrNull(name);\n                    }\n                } catch (ClassNotFoundException e) {\n                    // ClassNotFoundException thrown if class not found\n                    // from the non-null parent class loader\n                }\n\n                if (c == null) {\n                    // If still not found, then invoke findClass in order\n                    // to find the class.\n                    c = findClass(name);\n                }\n            }\n            if (resolve) {\n                resolveClass(c);\n            }\n            return c;\n        }\n    }\n\n    protected Class findClass(String name) throws ClassNotFoundException {\n        throw new ClassNotFoundException(name);\n    }\n}\n\n自定义类加载器实现\nFileSystemClassLoader 是自定义类加载器，继承自 java.lang.ClassLoader，用于加载文件系统上的类。它首先根据类的全名在文件系统上查找类的字节代码文件（.class 文件），然后读取该文件内容，最后通过 defineClass() 方法来把这些字节代码转换成 java.lang.Class 类的实例。\njava.lang.ClassLoader 类的方法 loadClass() 实现了双亲委派模型的逻辑，因此自定义类加载器一般不去重写它，而是通过重写 findClass() 方法。\npublic class FileSystemClassLoader extends ClassLoader {\n\n    private String rootDir;\n\n    public FileSystemClassLoader(String rootDir) {\n        this.rootDir = rootDir;\n    }\n\n    protected Class findClass(String name) throws ClassNotFoundException {\n        byte[] classData = getClassData(name);\n        if (classData == null) {\n            throw new ClassNotFoundException();\n        } else {\n            return defineClass(name, classData, 0, classData.length);\n        }\n    }\n\n    private byte[] getClassData(String className) {\n        String path = classNameToPath(className);\n        try {\n            InputStream ins = new FileInputStream(path);\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n            int bufferSize = 4096;\n            byte[] buffer = new byte[bufferSize];\n            int bytesNumRead;\n            while ((bytesNumRead = ins.read(buffer)) != -1) {\n                baos.write(buffer, 0, bytesNumRead);\n            }\n            return baos.toByteArray();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n\n    private String classNameToPath(String className) {\n        return rootDir + File.separatorChar\n                + className.replace('.', File.separatorChar) + \".class\";\n    }\n}\n\n参考资料\n\n深入理解 Java 虚拟机：JVM 高级特性与最佳实践（第 2 版）\n从表到里学习 JVM 实现\n\n"},"javacore/jvm/jvm-performance.html":{"url":"javacore/jvm/jvm-performance.html","title":"第四章 JVM 调优","keywords":"","body":"JVM 调优\n\nJVM 调优概述\n命令\njmap      jstack      jsp      jstat      jhat      jinfo\n\n\nHotSpot VM 参数\nJVM 内存配置\nGC 类型配置\nJMX\n远程 DEBUG\nHeapDump\n辅助配置\n\n\n典型配置\n堆大小设置\n回收器选择\n\n\nJAM 实战\n\nJVM 调优概述\n性能定义\n\n吞吐量 - 指不考虑 GC 引起的停顿时间或内存消耗，垃圾收集器能支撑应用达到的最高性能指标。\n延迟 - 其度量标准是缩短由于垃圾啊收集引起的停顿时间或者完全消除因垃圾收集所引起的停顿，避免应用运行时发生抖动。\n内存占用 - 垃圾收集器流畅运行所需要的内存数量。\n\n调优原则\nGC 优化的两个目标：\n\n将进入老年代的对象数量降到最低\n减少 Full GC 的执行时间\n\nGC 优化的基本原则是：将不同的 GC 参数应用到两个及以上的服务器上然后比较它们的性能，然后将那些被证明可以提高性能或减少 GC 执行时间的参数应用于最终的工作服务器上。\n将进入老年代的对象数量降到最低\n除了可以在 JDK7 及更高版本中使用的 G1 收集器以外，其他分代 GC 都是由 Oracle JVM 提供的。关于分代 GC，就是对象在 Eden 区被创建，随后被转移到 Survivor 区，在此之后剩余的对象会被转入老年代。也有一些对象由于占用内存过大，在 Eden 区被创建后会直接被传入老年代。老年代 GC 相对来说会比新生代 GC 更耗时，因此，减少进入老年代的对象数量可以显著降低 Full GC 的频率。你可能会以为减少进入老年代的对象数量意味着把它们留在新生代，事实正好相反，新生代内存的大小是可以调节的。\n降低 Full GC 的时间\nFull GC 的执行时间比 Minor GC 要长很多，因此，如果在 Full GC 上花费过多的时间（超过 1s），将可能出现超时错误。\n\n如果通过减小老年代内存来减少 Full GC 时间，可能会引起 OutOfMemoryError 或者导致 Full GC 的频率升高。\n另外，如果通过增加老年代内存来降低 Full GC 的频率，Full GC 的时间可能因此增加。\n\n因此，你需要把老年代的大小设置成一个“合适”的值。\nGC 优化需要考虑的 JVM 参数\n\n\n\n类型\n参数\n描述\n\n\n\n\n堆内存大小\n-Xms\n启动 JVM 时堆内存的大小\n\n\n\n-Xmx\n堆内存最大限制\n\n\n新生代空间大小\n-XX:NewRatio\n新生代和老年代的内存比\n\n\n\n-XX:NewSize\n新生代内存大小\n\n\n\n-XX:SurvivorRatio\nEden 区和 Survivor 区的内存比\n\n\n\nGC 优化时最常用的参数是-Xms,-Xmx和-XX:NewRatio。-Xms和-Xmx参数通常是必须的，所以NewRatio的值将对 GC 性能产生重要的影响。\n有些人可能会问如何设置永久代内存大小，你可以用-XX:PermSize和-XX:MaxPermSize参数来进行设置，但是要记住，只有当出现OutOfMemoryError错误时你才需要去设置永久代内存。\nGC 优化的过程\nGC 优化的过程和大多数常见的提升性能的过程相似，下面是笔者使用的流程：\n1.监控 GC 状态\n你需要监控 GC 从而检查系统中运行的 GC 的各种状态。\n2.分析监控结果后决定是否需要优化 GC\n在检查 GC 状态后，你需要分析监控结构并决定是否需要进行 GC 优化。如果分析结果显示运行 GC 的时间只有 0.1-0.3 秒，那么就不需要把时间浪费在 GC 优化上，但如果运行 GC 的时间达到 1-3 秒，甚至大于 10 秒，那么 GC 优化将是很有必要的。\n但是，如果你已经分配了大约 10GB 内存给 Java，并且这些内存无法省下，那么就无法进行 GC 优化了。在进行 GC 优化之前，你需要考虑为什么你需要分配这么大的内存空间，如果你分配了 1GB 或 2GB 大小的内存并且出现了OutOfMemoryError，那你就应该执行堆快照（heap dump）来消除导致异常的原因。\n\n注意：\n堆快照（heap dump）是一个用来检查 Java 内存中的对象和数据的内存文件。该文件可以通过执行 JDK 中的jmap命令来创建。在创建文件的过程中，所有 Java 程序都将暂停，因此，不要在系统执行过程中创建该文件。\n你可以在互联网上搜索 heap dump 的详细说明。\n\n3.设置 GC 类型/内存大小\n如果你决定要进行 GC 优化，那么你需要选择一个 GC 类型并且为它设置内存大小。此时如果你有多个服务器，请如上文提到的那样，在每台机器上设置不同的 GC 参数并分析它们的区别。\n4.分析结果\n在设置完 GC 参数后就可以开始收集数据，请在收集至少 24 小时后再进行结果分析。如果你足够幸运，你可能会找到系统的最佳 GC 参数。如若不然，你还需要分析输出日志并检查分配的内存，然后需要通过不断调整 GC 类型/内存大小来找到系统的最佳参数。\n5.如果结果令人满意，将参数应用到所有服务器上并结束 GC 优化\n如果 GC 优化的结果令人满意，就可以将参数应用到所有服务器上，并停止 GC 优化。\n在下面的章节中，你将会看到上述每一步所做的具体工作。\n命令\njmap\njmap 即 JVM Memory Map。\njmap 用于生成 heap dump 文件。\n如果不使用这个命令，还可以使用 -XX:+HeapDumpOnOutOfMemoryError 参数来让虚拟机出现 OOM 的时候，自动生成 dump 文件。\njmap 不仅能生成 dump 文件，还可以查询 finalize 执行队列、Java 堆和永久代的详细信息，如当前使用率、当前使用的是哪种收集器等。\n命令格式：\njmap [option] LVMID\noption 参数：\n\ndump - 生成堆转储快照\nfinalizerinfo - 显示在 F-Queue 队列等待 Finalizer 线程执行 finalizer 方法的对象\nheap - 显示 Java 堆详细信息\nhisto - 显示堆中对象的统计信息\npermstat - to print permanent generation statistics\nF - 当-dump 没有响应时，强制生成 dump 快照\n\n示例：jmap -dump PID 生成堆快照\ndump 堆到文件，format 指定输出格式，live 指明是活着的对象，file 指定文件名\n$ jmap -dump:live,format=b,file=dump.hprof 28920\nDumping heap to /home/xxx/dump.hprof ...\nHeap dump file created\ndump.hprof 这个后缀是为了后续可以直接用 MAT(Memory Anlysis Tool)打开。\n示例：jmap -heap 查看指定进程的堆信息\n注意：使用 CMS GC 情况下，jmap -heap 的执行有可能会导致 java 进程挂起。\njmap -heap PID\n[root@chances bin]# ./jmap -heap 12379\nAttaching to process ID 12379, please wait...\nDebugger attached successfully.\nServer compiler detected.\nJVM version is 17.0-b16\n\nusing thread-local object allocation.\nParallel GC with 6 thread(s)\n\nHeap Configuration:\n   MinHeapFreeRatio = 40\n   MaxHeapFreeRatio = 70\n   MaxHeapSize      = 83886080 (80.0MB)\n   NewSize          = 1310720 (1.25MB)\n   MaxNewSize       = 17592186044415 MB\n   OldSize          = 5439488 (5.1875MB)\n   NewRatio         = 2\n   SurvivorRatio    = 8\n   PermSize         = 20971520 (20.0MB)\n   MaxPermSize      = 88080384 (84.0MB)\n\nHeap Usage:\nPS Young Generation\nEden Space:\n   capacity = 9306112 (8.875MB)\n   used     = 5375360 (5.1263427734375MB)\n   free     = 3930752 (3.7486572265625MB)\n   57.761608714788736% used\nFrom Space:\n   capacity = 9306112 (8.875MB)\n   used     = 3425240 (3.2665634155273438MB)\n   free     = 5880872 (5.608436584472656MB)\n   36.80634834397007% used\nTo Space:\n   capacity = 9306112 (8.875MB)\n   used     = 0 (0.0MB)\n   free     = 9306112 (8.875MB)\n   0.0% used\nPS Old Generation\n   capacity = 55967744 (53.375MB)\n   used     = 48354640 (46.11457824707031MB)\n   free     = 7613104 (7.2604217529296875MB)\n   86.39733629427693% used\nPS Perm Generation\n   capacity = 62062592 (59.1875MB)\n   used     = 60243112 (57.452308654785156MB)\n   free     = 1819480 (1.7351913452148438MB)\n   97.06831451706046% used\n\njstack\njstack 用于生成 java 虚拟机当前时刻的线程快照。\n线程快照是当前 java 虚拟机内每一条线程正在执行的方法堆栈的集合，生成线程快照的主要目的是定位线程出现长时间停顿的原因，如线程间死锁、死循环、请求外部资源导致的长时间等待等。\n线程出现停顿的时候通过 jstack 来查看各个线程的调用堆栈，就可以知道没有响应的线程到底在后台做什么事情，或者等待什么资源。 如果 java 程序崩溃生成 core 文件，jstack 工具可以用来获得 core 文件的 java stack 和 native stack 的信息，从而可以轻松地知道 java 程序是如何崩溃和在程序何处发生问题。另外，jstack 工具还可以附属到正在运行的 java 程序中，看到当时运行的 java 程序的 java stack 和 native stack 的信息, 如果现在运行的 java 程序呈现 hung 的状态，jstack 是非常有用的。\n命令格式：\njstack [option] pid\njstack [option] executable core\njstack [option] [server-id@]remote-hostname-or-ip\noption 参数：\n\n-F - 当正常输出请求不被响应时，强制输出线程堆栈\n-l - 除堆栈外，显示关于锁的附加信息\n-m - 如果调用到本地方法的话，可以显示 C/C++的堆栈\n\n实战：找出某 Java 进程中最耗费 CPU 的 Java 线程\n（1）找出 Java 进程\n假设应用名称为 myapp：\n$ ps -ef | grep myapp | grep -v grep\nroot     21711     1  1 14:47 pts/3    00:02:10 java -jar myapp.jar\n得到进程 ID 为 21711\n（2）找出该进程内最耗费 CPU 的线程，可以使用 ps -Lfp pid 或者 ps -mp pid -o THREAD, tid, time 或者 top -Hp pid\n\n\nTIME 列就是各个 Java 线程耗费的 CPU 时间，CPU 时间最长的是线程 ID 为 21742 的线程，用\nprintf \"%x\\n\" 21742\n 得到 21742 的十六进制值为 54ee，下面会用到。\n（3）使用 jstack 打印线程堆栈信息\n下一步终于轮到 jstack 上场了，它用来输出进程 21711 的堆栈信息，然后根据线程 ID 的十六进制值 grep，如下：\nroot@ubuntu:/# jstack 21711 | grep 54ee\n\"PollIntervalRetrySchedulerThread\" prio=10 tid=0x00007f950043e000 nid=0x54ee in Object.wait() [0x00007f94c6eda000]\n可以看到 CPU 消耗在 PollIntervalRetrySchedulerThread 这个类的 Object.wait()，我找了下我的代码，定位到下面的代码：\n// Idle wait\ngetLog().info(\"Thread [\" + getName() + \"] is idle waiting...\");\nschedulerThreadState = PollTaskSchedulerThreadState.IdleWaiting;\nlong now = System.currentTimeMillis();\nlong waitTime = now + getIdleWaitTime();\nlong timeUntilContinue = waitTime - now;\nsynchronized(sigLock) {\n    try {\n        if(!halted.get()) {\n            sigLock.wait(timeUntilContinue);\n        }\n    }\n    catch (InterruptedException ignore) {\n    }\n}\n\n它是轮询任务的空闲等待代码，上面的 sigLock.wait(timeUntilContinue) 就对应了前面的 Object.wait()。\njps\njps(JVM Process Status Tool)，显示指定系统内所有的 HotSpot 虚拟机进程状态信息。\n命令格式：\njps [options] [hostid]\n如果不指定 hostid 就默认为当前主机或服务器。\noption 参数：\n\n-l - 输出 main 类全名或 jar 路径\n-q - 不输出类名、Jar 名和传入 main 方法的参数，只输出 LVMID\n-m - 输出 JVM 启动时传递给 main() 的参数\n-v - 输出 JVM 启动时显示指定的 JVM 参数\n\n其中[option]、[hostid]参数也可以不写。\n$ jps -l -m\n28920 org.apache.catalina.startup.Bootstrap start\n11589 org.apache.catalina.startup.Bootstrap start\n25816 sun.tools.jps.Jps -l -m\njstat\njstat(JVM statistics Monitoring)，是用于监视虚拟机运行时状态信息的命令，它可以显示出虚拟机进程中的类装载、内存、垃圾收集、JIT 编译等运行数据。\n命令格式：\njstat [option] LVMID [interval] [count]\n参数：\n\n[option] - 操作参数\nLVMID - 本地虚拟机进程 ID\n[interval] - 连续输出的时间间隔\n[count] - 连续输出的次数\n\njhat\njhat(JVM Heap Analysis Tool)，是与 jmap 搭配使用，用来分析 jmap 生成的 dump，jhat 内置了一个微型的 HTTP/HTML 服务器，生成 dump 的分析结果后，可以在浏览器中查看。\n注意：一般不会直接在服务器上进行分析，因为 jhat 是一个耗时并且耗费硬件资源的过程，一般把服务器生成的 dump 文件复制到本地或其他机器上进行分析。\n命令格式：\njhat [dumpfile]\njinfo\njinfo(JVM Configuration info)，用于实时查看和调整虚拟机运行参数。\n之前的 jps -v 口令只能查看到显示指定的参数，如果想要查看未被显示指定的参数的值就要使用 jinfo 口令\n命令格式：\njinfo [option] [args] LVMID\noption 参数：\n\n\n-flag : 输出指定 args 参数的值\n-flags : 不需要 args 参数，输出所有 JVM 参数的值\n-sysprops : 输出系统属性，等同于 System.getProperties()\n\n\nHotSpot VM 参数\n\n详细参数说明请参考官方文档：Java HotSpot VM Options，这里仅列举常用参数。\n\nJVM 内存配置\n\n\n\n配置\n描述\n\n\n\n\n-Xms\n堆空间初始值。\n\n\n-Xmx\n堆空间最大值。\n\n\n-XX:NewSize\n新生代空间初始值。\n\n\n-XX:MaxNewSize\n新生代空间最大值。\n\n\n-Xmn\n新生代空间大小。\n\n\n-XX:PermSize\n永久代空间的初始值。\n\n\n-XX:MaxPermSize\n永久代空间的最大值。\n\n\n\nGC 类型配置\n\n\n\n配置\n描述\n\n\n\n\n-XX:+UseSerialGC\n串行垃圾回收器\n\n\n-XX:+UseParallelGC\n并行垃圾回收器\n\n\n-XX:+UseParNewGC\n使用 ParNew + Serial Old 垃圾回收器组合\n\n\n-XX:+UseConcMarkSweepGC\n并发标记扫描垃圾回收器\n\n\n-XX:ParallelCMSThreads\n并发标记扫描垃圾回收器 = 为使用的线程数量\n\n\n-XX:+UseG1GC\nG1 垃圾回收器\n\n\n\nJMX\n开启 JMX 后，可以使用 JConsole 或 Visual VM 进行监控 Java 程序的基本信息和运行情况。\n-Dcom.sun.management.jmxremote=true\n-Dcom.sun.management.jmxremote.ssl=false\n-Dcom.sun.management.jmxremote.authenticate=false\n-Djava.rmi.server.hostname=127.0.0.1\n-Dcom.sun.management.jmxremote.port=18888\n\n-Djava.rmi.server.hostname 指定 Java 程序运行的服务器，-Dcom.sun.management.jmxremote.port 指定服务监听端口。\n远程 DEBUG\n如果开启 Java 应用的远程 Debug 功能，需要指定如下参数：\n-Xdebug\n-Xnoagent\n-Djava.compiler=NONE\n-Xrunjdwp:transport=dt_socket,address=28888,server=y,suspend=n\n\naddress 即为远程 debug 的监听端口。\nHeapDump\n-XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError\n辅助配置\n\n\n\n配置\n描述\n\n\n\n\n-XX:+PrintGCDetails\n打印 GC 日志\n\n\n-Xloggc:\n指定 GC 日志文件名\n\n\n-XX:+HeapDumpOnOutOfMemoryError\n内存溢出时输出堆快照文件\n\n\n\n典型配置\n堆大小设置\n年轻代的设置很关键。\nJVM 中最大堆大小有三方面限制：\n\n相关操作系统的数据模型（32-bt 还是 64-bit）限制；\n系统的可用虚拟内存限制；\n系统的可用物理内存限制。\n\n整个堆大小 = 年轻代大小 + 年老代大小 + 持久代大小\n\n持久代一般固定大小为 64m。使用 -XX:PermSize 设置。\n官方推荐年轻代占整个堆的 3/8。使用 -Xmn 设置。\n\n回收器选择\nJVM 给了三种选择：串行收集器、并行收集器、并发收集器。\nJVM 实战\n分析 GC 日志\n获取 GC 日志\n获取 GC 日志有两种方式：\n\n使用命令动态查看\n在容器中设置相关参数打印 GC 日志\n\njstat -gc 统计垃圾回收堆的行为：\njstat -gc 1262\n S0C    S1C     S0U     S1U   EC       EU        OC         OU        PC       PU         YGC    YGCT    FGC    FGCT     GCT\n26112.0 24064.0 6562.5  0.0   564224.0 76274.5   434176.0   388518.3  524288.0 42724.7    320    6.417   1      0.398    6.815\n也可以设置间隔固定时间来打印：\n$ jstat -gc 1262 2000 20\n这个命令意思就是每隔 2000ms 输出 1262 的 gc 情况，一共输出 20 次\nTomcat 设置示例：\nJAVA_OPTS=\"-server -Xms2000m -Xmx2000m -Xmn800m -XX:PermSize=64m -XX:MaxPermSize=256m -XX:SurvivorRatio=4\n-verbose:gc -Xloggc:$CATALINA_HOME/logs/gc.log\n-Djava.awt.headless=true\n-XX:+PrintGCTimeStamps -XX:+PrintGCDetails\n-Dsun.rmi.dgc.server.gcInterval=600000 -Dsun.rmi.dgc.client.gcInterval=600000\n-XX:+UseConcMarkSweepGC -XX:MaxTenuringThreshold=15\"\n\n-Xms2000m -Xmx2000m -Xmn800m -XX:PermSize=64m -XX:MaxPermSize=256m\nXms，即为 jvm 启动时得 JVM 初始堆大小,Xmx 为 jvm 的最大堆大小，xmn 为新生代的大小，permsize 为永久代的初始大小，MaxPermSize 为永久代的最大空间。\n-XX:SurvivorRatio=4\nSurvivorRatio 为新生代空间中的 Eden 区和救助空间 Survivor 区的大小比值，默认是 8，则两个 Survivor 区与一个 Eden 区的比值为 2:8,一个 Survivor 区占整个年轻代的 1/10。调小这个参数将增大 survivor 区，让对象尽量在 survitor 区呆长一点，减少进入年老代的对象。去掉救助空间的想法是让大部分不能马上回收的数据尽快进入年老代，加快年老代的回收频率，减少年老代暴涨的可能性，这个是通过将-XX:SurvivorRatio 设置成比较大的值（比如 65536)来做到。\n-verbose:gc -Xloggc:$CATALINA_HOME/logs/gc.log\n将虚拟机每次垃圾回收的信息写到日志文件中，文件名由 file 指定，文件格式是平文件，内容和-verbose:gc 输出内容相同。\n-Djava.awt.headless=true Headless 模式是系统的一种配置模式。在该模式下，系统缺少了显示设备、键盘或鼠标。\n-XX:+PrintGCTimeStamps -XX:+PrintGCDetails\n设置 gc 日志的格式\n-Dsun.rmi.dgc.server.gcInterval=600000 -Dsun.rmi.dgc.client.gcInterval=600000\n指定 rmi 调用时 gc 的时间间隔\n-XX:+UseConcMarkSweepGC -XX:MaxTenuringThreshold=15 采用并发 gc 方式，经过 15 次 minor gc 后进入年老代\n\n如何分析 GC 日志\nYoung GC 回收日志:\n2016-07-05T10:43:18.093+0800: 25.395: [GC [PSYoungGen: 274931K->10738K(274944K)] 371093K->147186K(450048K), 0.0668480 secs] [Times: user=0.17 sys=0.08, real=0.07 secs]\nFull GC 回收日志:\n2016-07-05T10:43:18.160+0800: 25.462: [Full GC [PSYoungGen: 10738K->0K(274944K)] [ParOldGen: 136447K->140379K(302592K)] 147186K->140379K(577536K) [PSPermGen: 85411K->85376K(171008K)], 0.6763541 secs] [Times: user=1.75 sys=0.02, real=0.68 secs]\n通过上面日志分析得出，PSYoungGen、ParOldGen、PSPermGen 属于 Parallel 收集器。其中 PSYoungGen 表示 gc 回收前后年轻代的内存变化；ParOldGen 表示 gc 回收前后老年代的内存变化；PSPermGen 表示 gc 回收前后永久区的内存变化。young gc 主要是针对年轻代进行内存回收比较频繁，耗时短；full gc 会对整个堆内存进行回城，耗时长，因此一般尽量减少 full gc 的次数\n通过两张图非常明显看出 gc 日志构成：\n\n\n\n\nOutOfMemory(OOM)分析\nOutOfMemory ，即内存溢出，是一个常见的 JVM 问题。那么分析 OOM 的思路是什么呢？\n首先，要知道有三种 OutOfMemoryError：\n\nOutOfMemoryError:Java heap space - 堆空间溢出\nOutOfMemoryError:PermGen space - 方法区和运行时常量池溢出\nOutOfMemoryError:unable to create new native thread - 线程过多\n\nOutOfMemoryError:PermGen space\nOutOfMemoryError:PermGen space 表示方法区和运行时常量池溢出。\n原因：\nPerm 区主要用于存放 Class 和 Meta 信息的，Class 在被 Loader 时就会被放到 PermGen space，这个区域称为年老代。GC 在主程序运行期间不会对年老区进行清理，默认是 64M 大小。\n当程序程序中使用了大量的 jar 或 class，使 java 虚拟机装载类的空间不够，超过 64M 就会报这部分内存溢出了，需要加大内存分配，一般 128m 足够。\n解决方案：\n（1）扩大永久代空间\n\nJDK7 以前使用 -XX:PermSize 和 -XX:MaxPermSize 来控制永久代大小。\nJDK8 以后把原本放在永久代的字符串常量池移出, 放在 Java 堆中(元空间 Metaspace)中，元数据并不在虚拟机中，使用的是本地的内存。使用 -XX:MetaspaceSize 和 -XX:MaxMetaspaceSize 控制元空间大小。\n\n\n注意：-XX:PermSize 一般设为 64M\n\n（2）清理应用程序中 WEB-INF/lib 下的 jar，用不上的 jar 删除掉，多个应用公共的 jar 移动到 Tomcat 的 lib 目录，减少重复加载。\nOutOfMemoryError:Java heap space\nOutOfMemoryError:Java heap space 表示堆空间溢出。\n原因：JVM 分配给堆内存的空间已经用满了。\n问题定位\n（1）使用 jmap 或 -XX:+HeapDumpOnOutOfMemoryError 获取堆快照。\n（2）使用内存分析工具（visualvm、mat、jProfile 等）对堆快照文件进行分析。\n（3）根据分析图，重点是确认内存中的对象是否是必要的，分清究竟是是内存泄漏（Memory Leak）还是内存溢出（Memory Overflow）。\n内存泄露\n内存泄漏是指由于疏忽或错误造成程序未能释放已经不再使用的内存的情况。\n内存泄漏并非指内存在物理上的消失，而是应用程序分配某段内存后，由于设计错误，失去了对该段内存的控制，因而造成了内存的浪费。\n内存泄漏随着被执行的次数越多-最终会导致内存溢出。\n而因程序死循环导致的不断创建对象-只要被执行到就会产生内存溢出。\n内存泄漏常见几个情况：\n\n静态集合类\n声明为静态（static）的 HashMap、Vector 等集合\n通俗来讲 A 中有 B，当前只把 B 设置为空，A 没有设置为空，回收时 B 无法回收-因被 A 引用。\n\n\n监听器\n监听器被注册后释放对象时没有删除监听器\n\n\n物理连接\nDataSource.getConnection()建立链接，必须通过 close()关闭链接\n\n\n内部类和外部模块等的引用\n发现它的方式同内存溢出，可再加个实时观察\njstat -gcutil 7362 2500 70\n\n\n\n重点关注：\n\nFGC — 从应用程序启动到采样时发生 Full GC 的次数。\nFGCT — 从应用程序启动到采样时 Full GC 所用的时间（单位秒）。\nFGC 次数越多，FGCT 所需时间越多-可非常有可能存在内存泄漏。\n\n解决方案\n（1）检查程序，看是否有死循环或不必要地重复创建大量对象。有则改之。\n下面是一个重复创建内存的示例：\npublic class OOM {\n    public static void main(String[] args) {\n        Integer sum1=300000;\n        Integer sum2=400000;\n        OOM oom = new OOM();\n        System.out.println(\"往ArrayList中加入30w内容\");\n        oom.javaHeapSpace(sum1);\n        oom.memoryTotal();\n        System.out.println(\"往ArrayList中加入40w内容\");\n        oom.javaHeapSpace(sum2);\n        oom.memoryTotal();\n    }\n    public void javaHeapSpace(Integer sum){\n        Random random = new Random();\n        ArrayList openList = new ArrayList();\n        for(int i=0;i\n执行结果：\n往ArrayList中加入30w内容\n最大内存 = 20447232\n已分配内存 = 20447232\n已分配内存中的剩余空间 = 4032576\n最大可用内存 = 4032576\n往ArrayList中加入40w内容\nException in thread \"main\" java.lang.OutOfMemoryError: Java heap space\n    at java.util.Arrays.copyOf(Arrays.java:2245)\n    at java.util.Arrays.copyOf(Arrays.java:2219)\n    at java.util.ArrayList.grow(ArrayList.java:242)\n    at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:216)\n    at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:208)\n    at java.util.ArrayList.add(ArrayList.java:440)\n    at pers.qingqian.study.seven.OOM.javaHeapSpace(OOM.java:36)\n    at pers.qingqian.study.seven.OOM.main(OOM.java:26)\n（2）扩大堆内存空间\n使用 -Xms 和 -Xmx 来控制堆内存空间大小。\nOutOfMemoryError: GC overhead limit exceeded\n原因：JDK6 新增错误类型，当 GC 为释放很小空间占用大量时间时抛出；一般是因为堆太小，导致异常的原因，没有足够的内存。\n解决方案：\n查看系统是否有使用大内存的代码或死循环；\n通过添加 JVM 配置，来限制使用内存：\n-XX:-UseGCOverheadLimit\n\nOutOfMemoryError：unable to create new native thread\n原因：线程过多\n那么能创建多少线程呢？这里有一个公式：\n(MaxProcessMemory - JVMMemory - ReservedOsMemory) / (ThreadStackSize) = Number of threads\nMaxProcessMemory 指的是一个进程的最大内存\nJVMMemory         JVM内存\nReservedOsMemory  保留的操作系统内存\nThreadStackSize      线程栈的大小\n当发起一个线程的创建时，虚拟机会在 JVM 内存创建一个 Thread 对象同时创建一个操作系统线程，而这个系统线程的内存用的不是 JVMMemory，而是系统中剩下的内存：\n(MaxProcessMemory - JVMMemory - ReservedOsMemory)\n结论：你给 JVM 内存越多，那么你能用来创建的系统线程的内存就会越少，越容易发生 java.lang.OutOfMemoryError: unable to create new native thread。\nCPU 过高\n定位步骤：\n（1）执行 top -c 命令，找到 cpu 最高的进程的 id\n（2）jstack PID 导出 Java 应用程序的线程堆栈信息。\n示例：\njstack 6795\n\n\"Low Memory Detector\" daemon prio=10 tid=0x081465f8 nid=0x7 runnable [0x00000000..0x00000000]\n        \"CompilerThread0\" daemon prio=10 tid=0x08143c58 nid=0x6 waiting on condition [0x00000000..0xfb5fd798]\n        \"Signal Dispatcher\" daemon prio=10 tid=0x08142f08 nid=0x5 waiting on condition [0x00000000..0x00000000]\n        \"Finalizer\" daemon prio=10 tid=0x08137ca0 nid=0x4 in Object.wait() [0xfbeed000..0xfbeeddb8]\n\n        at java.lang.Object.wait(Native Method)\n\n        - waiting on  (a java.lang.ref.ReferenceQueue$Lock)\n\n        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)\n\n        - locked  (a java.lang.ref.ReferenceQueue$Lock)\n\n        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)\n\n        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)\n\n        \"Reference Handler\" daemon prio=10 tid=0x081370f0 nid=0x3 in Object.wait() [0xfbf4a000..0xfbf4aa38]\n\n        at java.lang.Object.wait(Native Method)\n\n        - waiting on  (a java.lang.ref.Reference$Lock)\n\n        at java.lang.Object.wait(Object.java:474)\n\n        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)\n\n        - locked  (a java.lang.ref.Reference$Lock)\n\n        \"VM Thread\" prio=10 tid=0x08134878 nid=0x2 runnable\n\n        \"VM Periodic Task Thread\" prio=10 tid=0x08147768 nid=0x8 waiting on condition\n在打印的堆栈日志文件中，tid 和 nid 的含义：\nnid : 对应的 Linux 操作系统下的 tid 线程号，也就是前面转化的 16 进制数字\ntid: 这个应该是 jvm 的 jmm 内存规范中的唯一地址定位\n在 CPU 过高的情况下，查找响应的线程，一般定位都是用 nid 来定位的。而如果发生死锁之类的问题，一般用 tid 来定位。\n（3）定位 CPU 高的线程打印其 nid\n查看线程下具体进程信息的命令如下：\ntop -H -p 6735\ntop - 14:20:09 up 611 days,  2:56,  1 user,  load average: 13.19, 7.76, 7.82\nThreads: 6991 total,  17 running, 6974 sleeping,   0 stopped,   0 zombie\n%Cpu(s): 90.4 us,  2.1 sy,  0.0 ni,  7.0 id,  0.0 wa,  0.0 hi,  0.4 si,  0.0 st\nKiB Mem:  32783044 total, 32505008 used,   278036 free,   120304 buffers\nKiB Swap:        0 total,        0 used,        0 free.  4497428 cached Mem\n\n  PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND\n 6800 root      20   0 27.299g 0.021t   7172 S 54.7 70.1 187:55.61 java\n 6803 root      20   0 27.299g 0.021t   7172 S 54.4 70.1 187:52.59 java\n 6798 root      20   0 27.299g 0.021t   7172 S 53.7 70.1 187:55.08 java\n 6801 root      20   0 27.299g 0.021t   7172 S 53.7 70.1 187:55.25 java\n 6797 root      20   0 27.299g 0.021t   7172 S 53.1 70.1 187:52.78 java\n 6804 root      20   0 27.299g 0.021t   7172 S 53.1 70.1 187:55.76 java\n 6802 root      20   0 27.299g 0.021t   7172 S 52.1 70.1 187:54.79 java\n 6799 root      20   0 27.299g 0.021t   7172 S 51.8 70.1 187:53.36 java\n 6807 root      20   0 27.299g 0.021t   7172 S 13.6 70.1  48:58.60 java\n11014 root      20   0 27.299g 0.021t   7172 R  8.4 70.1   8:00.32 java\n10642 root      20   0 27.299g 0.021t   7172 R  6.5 70.1   6:32.06 java\n 6808 root      20   0 27.299g 0.021t   7172 S  6.1 70.1 159:08.40 java\n11315 root      20   0 27.299g 0.021t   7172 S  3.9 70.1   5:54.10 java\n12545 root      20   0 27.299g 0.021t   7172 S  3.9 70.1   6:55.48 java\n23353 root      20   0 27.299g 0.021t   7172 S  3.9 70.1   2:20.55 java\n24868 root      20   0 27.299g 0.021t   7172 S  3.9 70.1   2:12.46 java\n 9146 root      20   0 27.299g 0.021t   7172 S  3.6 70.1   7:42.72 java\n由此可以看出占用 CPU 较高的线程，但是这些还不高，无法直接定位到具体的类。nid 是 16 进制的，所以我们要获取线程的 16 进制 ID：\nprintf \"%x\\n\" 6800\n输出结果:45cd\n然后根据输出结果到 jstack 打印的堆栈日志中查定位：\n\"catalina-exec-5692\" daemon prio=10 tid=0x00007f3b05013800 nid=0x45cd waiting on condition [0x00007f3ae08e3000]\n   java.lang.Thread.State: TIMED_WAITING (parking)\n        at sun.misc.Unsafe.park(Native Method)\n        - parking to wait for   (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2082)\n        at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)\n        at org.apache.tomcat.util.threads.TaskQueue.poll(TaskQueue.java:86)\n        at org.apache.tomcat.util.threads.TaskQueue.poll(TaskQueue.java:32)\n        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n        at java.lang.Thread.run(Thread.java:745)\n参考资料\n\n深入理解 Java 虚拟机：JVM 高级特性与最佳实践（第 2 版）\n从表到里学习 JVM 实现\nJVM（4）：Jvm 调优-命令篇\nJava 系列笔记(4) - JVM 监控与调优\nJava 服务 GC 参数调优案例\nJVM 调优总结（5）：典型配置\n如何合理的规划一次 jvm 性能调优\njvm 系列(九):如何优化 Java GC「译」\n作为测试你应该知道的 JAVA OOM 及定位分析\n异常、堆内存溢出、OOM 的几种情况\nhttps://my.oschina.net/feichexia/blog/196575\n\n"},"javacore/io/io.html":{"url":"javacore/io/io.html","title":"IO面经","keywords":"","body":"输入输出流IO\nJava常用IO类\nFile\nRandomAccessFile\nSystem\nScanner\nJava流操作\n字符流和字节流\nFileReader 和 FileWriter\nInputStreamReader 和 OutputStreamWriter\nBufferedReader\nPrintStream\nFileInputStream 和 FileOutputStream\nByteArrayInputStream 和 ByteArrayOutputStream\nPipedInputStream 和 PipedOutputStream\nDataInputStream 和 DataOutputStream\nZipInputStream 和 ZipOutputStream\nObjectInputStream 和 ObjectOutputStream\nJava序列化\n简介\n序列化和反序列化\nSerializable 接口\nserialVersionUID\n默认序列化机制\n非默认序列化机制\ntransient 关键字\nExternalizable 接口\nExternalizable 接口的替代方法\nreadResolve() 方法\n序列化工具\n小结\n参考资料\nJava网络编程\nJava 中的网络支持：\nInetAddress：用于表示网络上的硬件资源，即 IP 地址；\nURL：统一资源定位符；\nSockets：使用 TCP 协议实现网络通信；\nDatagram：使用 UDP 协议实现网络通信。\nInetAddress\nURL\nSockets\nDatagram\n"},"javacore/io/Java常用IO类.html":{"url":"javacore/io/Java常用IO类.html","title":"Java 常用 IO 类","keywords":"","body":"Java 常用 IO 类\n\n关键词：File、RandomAccessFile、System、Scanner\n\n\n\nFile\nRandomAccessFile\nSystem\nScanner\n\n\nFile\nFile 类是 java.io 包中唯一对文件本身进行操作的类。它可以对文件、目录进行增删查操作。\n常用方法\ncreateNewFille\n可以使用 createNewFille() 方法创建一个新文件。\n注：\nWindows 中使用反斜杠表示目录的分隔符 \\。\nLinux 中使用正斜杠表示目录的分隔符 /。\n最好的做法是使用 File.separator 静态常量，可以根据所在操作系统选取对应的分隔符。\n示例：\nFile f = new File(filename);\nboolean flag = f.createNewFile();\n\nmkdir\n可以使用 mkdir() 来创建文件夹，但是如果要创建的目录的父路径不存在，则无法创建成功。\n如果要解决这个问题，可以使用 mkdirs()，当父路径不存在时，会连同上级目录都一并创建。\n示例：\nFile f = new File(filename);\nboolean flag = f.mkdir();\n\ndelete\n可以使用 delete() 来删除文件或目录。\n需要注意的是，如果删除的是目录，且目录不为空，直接用 delete() 删除会失败。\n示例：\nFile f = new File(filename);\nboolean flag = f.delete();\n\nlist 和 listFiles\nFile 中给出了两种列出文件夹内容的方法：\n\nlist(): 列出全部名称，返回一个字符串数组。\nlistFiles(): 列出完整的路径，返回一个 File 对象数组。\n\nlist() 示例：\nFile f = new File(filename);\nString str[] = f.list();\n\nlistFiles() 示例：\nFile f = new File(filename);\nFile files[] = f.listFiles();\n\nRandomAccessFile\n\n注：RandomAccessFile 类虽然可以实现对文件内容的读写操作，但是比较复杂。所以一般操作文件内容往往会使用字节流或字符流方式。\n\nRandomAccessFile 类是随机读取类，它是一个完全独立的类。\n它适用于由大小已知的记录组成的文件，所以我们可以使用 seek() 将记录从一处转移到另一处，然后读取或者修改记录。\n文件中记录的大小不一定都相同，只要能够确定哪些记录有多大以及它们在文件中的位置即可。\n写操作\n当用 rw 方式声明 RandomAccessFile 对象时，如果要写入的文件不存在，系统将自行创建。\nr 为只读；w 为只写；rw 为读写。\n示例：\npublic class RandomAccessFileDemo01 {\n\n    public static void main(String args[]) throws IOException {\n        File f = new File(\"d:\" + File.separator + \"test.txt\"); // 指定要操作的文件\n        RandomAccessFile rdf = null; // 声明RandomAccessFile类的对象\n        rdf = new RandomAccessFile(f, \"rw\");// 读写模式，如果文件不存在，会自动创建\n        String name = null;\n        int age = 0;\n        name = \"zhangsan\"; // 字符串长度为8\n        age = 30; // 数字的长度为4\n        rdf.writeBytes(name); // 将姓名写入文件之中\n        rdf.writeInt(age); // 将年龄写入文件之中\n        name = \"lisi    \"; // 字符串长度为8\n        age = 31; // 数字的长度为4\n        rdf.writeBytes(name); // 将姓名写入文件之中\n        rdf.writeInt(age); // 将年龄写入文件之中\n        name = \"wangwu  \"; // 字符串长度为8\n        age = 32; // 数字的长度为4\n        rdf.writeBytes(name); // 将姓名写入文件之中\n        rdf.writeInt(age); // 将年龄写入文件之中\n        rdf.close(); // 关闭\n    }\n}\n\n读操作\n读取是直接使用 r 的模式即可，以只读的方式打开文件。\n读取时所有的字符串只能按照 byte 数组方式读取出来，而且长度必须和写入时的固定大小相匹配。\npublic class RandomAccessFileDemo02 {\n\n    public static void main(String args[]) throws IOException {\n        File f = new File(\"d:\" + File.separator + \"test.txt\");    // 指定要操作的文件\n        RandomAccessFile rdf = null;        // 声明RandomAccessFile类的对象\n        rdf = new RandomAccessFile(f, \"r\");// 以只读的方式打开文件\n        String name = null;\n        int age = 0;\n        byte b[] = new byte[8];    // 开辟byte数组\n        // 读取第二个人的信息，意味着要空出第一个人的信息\n        rdf.skipBytes(12);        // 跳过第一个人的信息\n        for (int i = 0; i  姓名：\" + name + \"；年龄：\" + age);\n        // 读取第一个人的信息\n        rdf.seek(0);    // 指针回到文件的开头\n        for (int i = 0; i  姓名：\" + name + \"；年龄：\" + age);\n        rdf.skipBytes(12);    // 空出第二个人的信息\n        for (int i = 0; i  姓名：\" + name + \"；年龄：\" + age);\n        rdf.close();                // 关闭\n    }\n}\n\nSystem\nSystem 中提供了三个常用于 IO 的静态成员：\n\nSystem.out\nSystem.err\nSystem.in\n\n示例：重定向 System.out 输出流\nimport java.io.*;\npublic class SystemOutDemo {\n\n    public static void main(String args[]) throws Exception {\n        OutputStream out = new FileOutputStream(\"d:\\\\test.txt\");\n        PrintStream ps = new PrintStream(out);\n        System.setOut(ps);\n        System.out.println(\"人生若只如初见，何事秋风悲画扇\");\n        ps.close();\n        out.close();\n    }\n}\n\n示例：重定向 System.err 输出流\npublic class SystemErrDemo {\n\n    public static void main(String args[]) throws IOException {\n        OutputStream bos = new ByteArrayOutputStream();        // 实例化\n        PrintStream ps = new PrintStream(bos);        // 实例化\n        System.setErr(ps);    // 输出重定向\n        System.err.print(\"此处有误\");\n        System.out.println(bos);    // 输出内存中的数据\n    }\n}\n\n示例：接受控制台输入信息\nimport java.io.*;\npublic class SystemInDemo {\n\n    public static void main(String args[]) throws IOException {\n        InputStream input = System.in;\n        StringBuffer buf = new StringBuffer();\n        System.out.print(\"请输入内容：\");\n        int temp = 0;\n        while ((temp = input.read()) != -1) {\n            char c = (char) temp;\n            if (c == '\\n') {\n                break;\n            }\n            buf.append(c);\n        }\n        System.out.println(\"输入的内容为：\" + buf);\n        input.close();\n    }\n}\n\nScanner\nScanner 可以完成输入数据操作，并对数据进行验证。\n示例：\nimport java.io.*;\npublic class ScannerDemo {\n\n    public static void main(String args[]) {\n        Scanner scan = new Scanner(System.in);    // 从键盘接收数据\n        int i = 0;\n        float f = 0.0f;\n        System.out.print(\"输入整数：\");\n        if (scan.hasNextInt()) {    // 判断输入的是否是整数\n            i = scan.nextInt();    // 接收整数\n            System.out.println(\"整数数据：\" + i);\n        } else {\n            System.out.println(\"输入的不是整数！\");\n        }\n\n        System.out.print(\"输入小数：\");\n        if (scan.hasNextFloat()) {    // 判断输入的是否是小数\n            f = scan.nextFloat();    // 接收小数\n            System.out.println(\"小数数据：\" + f);\n        } else {\n            System.out.println(\"输入的不是小数！\");\n        }\n\n        Date date = null;\n        String str = null;\n        System.out.print(\"输入日期（yyyy-MM-dd）：\");\n        if (scan.hasNext(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\")) {    // 判断\n            str = scan.next(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\");    // 接收\n            try {\n                date = new SimpleDateFormat(\"yyyy-MM-dd\").parse(str);\n            } catch (Exception e) {}\n        } else {\n            System.out.println(\"输入的日期格式错误！\");\n        }\n        System.out.println(date);\n    }\n}\n\n"},"javacore/io/Java流操作.html":{"url":"javacore/io/Java流操作.html","title":"Java 流操作","keywords":"","body":"Java 流操作\n\n关键词：InputStream、OutputStream、Reader、Writer\n\n\n\n字符流和字节流\nFileReader 和 FileWriter\nInputStreamReader 和 OutputStreamWriter\nBufferedReader\nPrintStream\nFileInputStream 和 FileOutputStream\nByteArrayInputStream 和 ByteArrayOutputStream\nPipedInputStream 和 PipedOutputStream\nDataInputStream 和 DataOutputStream\nZipInputStream 和 ZipOutputStream\nObjectInputStream 和 ObjectOutputStream\n\n\n字符流和字节流\nJAVA IO 中的流操作分为两类：\n\n字节流主要操作字节类型数据（byte）。主要类是 InputStream（输入） 和 OutputStream（输出）。\n字符流主要操作字符类型数据，一个字符占两个字节。主要类是 Reader（输入） 和 Writer（输出）。\n\nJAVA IO 中的流操作类，常常是以输入、输出两种形式成对提供。\n在 JAVA IO 中，流操作的一般流程如下：\n\n使用 File 类绑定一个文件。\n把 File 对象绑定到流对象上。\n进行读或写操作。\n关闭流\n\n字符流和字节流的区别\n\n字节流主要操作字节类型数据（byte）；字符流主要操作字符类型数据，一个字符占两个字节。\n字节流在操作时本身不会用到缓冲区（内存），而是对文件本身直接操作的；字符流在操作时使用了缓冲区，通过缓冲区再操作文件。\n\nFileReader 和 FileWriter\nFileReader 和 FileWriter 用于输入输出文本文件。\nimport java.io.*;\n\npublic class ReaderAndWriterDemo {\n\n    public static void output(String filepath) throws IOException {\n        // 1.使用 File 类绑定一个文件\n        File f = new File(filepath);\n\n        // 2.把 File 对象绑定到流对象上\n        Writer out = new FileWriter(f);\n        // Writer out = new FileWriter(f, true); // 追加内容方式\n\n        // 3.进行读或写操作\n        String str = \"Hello World!!!\\r\\n\";\n        out.write(str);\n\n        // 4.关闭流\n        // 字符流操作时使用了缓冲区，并在关闭字符流时会强制将缓冲区内容输出\n        // 如果不关闭流，则缓冲区的内容是无法输出的\n        // 如果想在不关闭流时，将缓冲区内容输出，可以使用 flush 强制清空缓冲区\n        out.flush();\n        out.close();\n    }\n\n    public static char[] input(String filepath) throws IOException {\n        // 1.使用 File 类绑定一个文件\n        File f = new File(filepath);\n\n        // 2.把 File 对象绑定到流对象上\n        Reader input = new FileReader(f);\n\n        // 3.进行读或写操作\n        int temp = 0; // 接收每一个内容\n        int len = 0; // 读取内容\n        char[] c = new char[1024];\n        while ((temp = input.read()) != -1) {\n            // 如果不是-1就表示还有内容，可以继续读取\n            c[len] = (char) temp;\n            len++;\n        }\n        System.out.println(\"文件字符数为：\" + len);\n\n        // 4.关闭流\n        input.close();\n\n        return c;\n    }\n\n    public static void main(String[] args) throws IOException {\n        String filepath = \"d:\\\\test.txt\";\n\n        output(filepath);\n        System.out.println(\"内容为：\" + new String(input(filepath)));\n    }\n}\n\nInputStreamReader 和 OutputStreamWriter\nInputStreamReader 和 OutputStreamWriter 可以将 InputStream 和 OutputStream 分别转换为 Reader 和 Writer。\n示例：\nimport java.io.*;\n\npublic class OutputStreamWriterDemo {\n\n    public static void main(String args[]) throws IOException {\n        File f = new File(\"d:\" + File.separator + \"test.txt\");\n        Writer out = new OutputStreamWriter(new FileOutputStream(f));\n        out.write(\"hello world!!\");\n        out.close();\n    }\n}\n\npublic class InputStreamReaderDemo {\n\n    public static void main(String args[]) throws IOException {\n        File f = new File(\"d:\" + File.separator + \"test.txt\");\n        Reader reader = new InputStreamReader(new FileInputStream(f));\n        char c[] = new char[1024];\n        int len = reader.read(c);\n        reader.close();\n        System.out.println(new String(c, 0, len));\n    }\n}\n\nBufferedReader\nBufferedReader 类用于从缓冲区中读取内容，所有的输入字节数据都放在缓冲区中。\n示例：\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class BufferedReaderDemo {\n\n    public static void main(String args[]) throws IOException {\n        BufferedReader buf = new BufferedReader(new InputStreamReader(System.in));\n        while (true) {\n            System.out.print(\"请输入内容：\");\n            String str = buf.readLine();\n            if (str.equalsIgnoreCase(\"exit\")) {\n                System.out.print(\"退出\");\n                break;\n            }\n            System.out.println(\"输入的内容为：\" + str);\n        }\n    }\n}\n\nPrintStream\nPrintStream 提供了非常方便的打印功能。\n事实上，我们常用的 System 中提供的静态成员 System.out 和 System.err 就是 PrintStream 对象。\n示例：\nimport java.io.*;\n\npublic class PrintStreamDemo {\n\n    public static void main(String arg[]) throws Exception {\n        final String filepath = \"d:\\\\test.txt\";\n        // 如果现在是使用 FileOuputStream 实例化，意味着所有的数据都会输出到文件中\n        OutputStream os = new FileOutputStream(new File(filepath));\n        PrintStream ps = new PrintStream(os);\n        ps.print(\"Hello \");\n        ps.println(\"World!!!\");\n        ps.printf(\"姓名：%s；年龄：%d\", \"张三\", 18);\n        ps.close();\n    }\n}\n\nFileInputStream 和 FileOutputStream\nFileInputStream 和 FileOutputStream 用于输入、输出文件。\n示例：\nimport java.io.*;\n\npublic class FileStreamDemo {\n\n    private static final String FILEPATH = \"d:\\\\test.txt\";\n\n    public static void output(String filepath) throws IOException {\n        // 第1步、使用File类找到一个文件\n        File f = new File(filepath);\n\n        // 第2步、通过子类实例化父类对象\n        OutputStream out = new FileOutputStream(f);\n        // 实例化时，默认为覆盖原文件内容方式；如果添加true参数，则变为对原文件追加内容的方式。\n        // OutputStream out = new FileOutputStream(f, true);\n\n        // 第3步、进行写操作\n        String str = \"Hello World\\r\\n\";\n        byte[] bytes = str.getBytes();\n        out.write(bytes);\n\n        // 第4步、关闭输出流\n        out.close();\n    }\n\n    public static void input(String filepath) throws IOException {\n        // 第1步、使用File类找到一个文件\n        File f = new File(filepath);\n\n        // 第2步、通过子类实例化父类对象\n        InputStream input = new FileInputStream(f);\n\n        // 第3步、进行读操作\n        // 有三种读取方式，体会其差异\n        byte[] bytes = new byte[(int) f.length()];\n        int len = input.read(bytes); // 读取内容\n        System.out.println(\"读入数据的长度：\" + len);\n\n        // 第4步、关闭输入流\n        input.close();\n        System.out.println(\"内容为：\\n\" + new String(bytes));\n    }\n\n    public static void main(String args[]) throws Exception {\n        output(FILEPATH);\n        input(FILEPATH);\n    }\n}\n\nByteArrayInputStream 和 ByteArrayOutputStream\nByteArrayInputStream 和 ByteArrayOutputStream 用于在内存中输入、输出数据。\n示例：\nimport java.io.*;\n\npublic class ByteArrayStreamDemo {\n\n    public static void main(String args[]) {\n        String str = \"HELLOWORLD\"; // 定义一个字符串，全部由大写字母组成\n        ByteArrayInputStream bis = new ByteArrayInputStream(str.getBytes());\n        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n        // 准备从内存ByteArrayInputStream中读取内容\n        int temp = 0;\n        while ((temp = bis.read()) != -1) {\n            char c = (char) temp;    // 读取的数字变为字符\n            bos.write(Character.toLowerCase(c));    // 将字符变为小写\n        }\n        // 所有的数据就全部都在ByteArrayOutputStream中\n        String newStr = bos.toString();    // 取出内容\n        try {\n            bis.close();\n            bos.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        System.out.println(newStr);\n    }\n}\n\nPipedInputStream 和 PipedOutputStream\nPipedInputStream 和 PipedOutputStream 可以在两个线程间进行通信。\n示例：\nimport java.io.*;\n\npublic class PipedStreamDemo {\n\n    static class Send implements Runnable {\n\n        private PipedOutputStream pos = null;\n\n        Send() {\n            pos = new PipedOutputStream();    // 实例化输出流\n        }\n\n        @Override\n        public void run() {\n            String str = \"Hello World!!!\";\n            try {\n                pos.write(str.getBytes());\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            try {\n                pos.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n\n        /**\n         * 得到此线程的管道输出流\n         */\n        PipedOutputStream getPos() {\n            return pos;\n        }\n    }\n\n    static class Receive implements Runnable {\n\n        private PipedInputStream pis = null;\n\n        Receive() {\n            pis = new PipedInputStream();\n        }\n\n        @Override\n        public void run() {\n            byte b[] = new byte[1024];\n            int len = 0;\n            try {\n                len = pis.read(b);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            try {\n                pis.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            System.out.println(\"接收的内容为：\" + new String(b, 0, len));\n        }\n\n        /**\n         * 得到此线程的管道输入流\n         */\n        PipedInputStream getPis() {\n            return pis;\n        }\n    }\n\n    public static void main(String args[]) {\n        Send s = new Send();\n        Receive r = new Receive();\n        try {\n            s.getPos().connect(r.getPis());    // 连接管道\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        new Thread(s).start();    // 启动线程\n        new Thread(r).start();    // 启动线程\n    }\n}\n\nDataInputStream 和 DataOutputStream\nDataInputStream 和 DataOutputStream 会一定格式将数据输入、输出。\n示例：\nimport java.io.*;\n\npublic class DataStreamDemo {\n\n    public static final String FILEPATH = \"d:\\\\order.txt\";\n\n    private static void output(String filepath) throws IOException {\n        // 1.使用 File 类绑定一个文件\n        File f = new File(filepath);\n\n        // 2.把 File 对象绑定到流对象上\n        DataOutputStream dos = new DataOutputStream(new FileOutputStream(f));\n\n        // 3.进行读或写操作\n        String names[] = {\"衬衣\", \"手套\", \"围巾\"};\n        float prices[] = {98.3f, 30.3f, 50.5f};\n        int nums[] = {3, 2, 1};\n        for (int i = 0; i \nZipInputStream 和 ZipOutputStream\n示例：\nimport java.io.*;\nimport java.util.zip.*;\n\npublic class ZipStreamDemo {\n\n    public static final String ZIP_FILE_PATH = \"d:\\\\zipdemo.zip\";\n\n    public static void demo01(String zipfilepath) throws IOException {\n        File file = new File(zipfilepath);\n        ZipFile zipFile = new ZipFile(file);\n        ZipEntry entry = zipFile.getEntry(\"mldn.txt\");\n        System.out.println(\"压缩文件的名称：\" + zipFile.getName());\n\n        File outputFile = new File(\"d:\" + File.separator + \"mldn_unzip.txt\");\n        OutputStream out = new FileOutputStream(outputFile); // 实例化输出流\n        InputStream input = zipFile.getInputStream(entry);    // 得到一个压缩实体的输入流\n        int temp = 0;\n        while ((temp = input.read()) != -1) {\n            out.write(temp);\n        }\n        input.close();    // 关闭输入流\n        out.close();    // 关闭输出流\n    }\n\n    /**\n     * 压缩一个文件\n     */\n    public static void output1(String filepath, String zipfilepath) throws Exception {\n        // 1.使用 File 类绑定一个文件\n        // 定义要压缩的文件\n        File file = new File(filepath);\n        // 定义压缩文件名称\n        File zipFile = new File(zipfilepath);\n\n        // 2.把 File 对象绑定到流对象上\n        InputStream input = new FileInputStream(file);\n        ZipOutputStream zipOut = new ZipOutputStream(new FileOutputStream(zipFile));\n\n        // 3.进行读或写操作\n        zipOut.putNextEntry(new ZipEntry(file.getName()));\n        zipOut.setComment(\"This is a zip file.\");\n        int temp = 0;\n        while ((temp = input.read()) != -1) {    // 读取内容\n            zipOut.write(temp);    // 压缩输出\n        }\n\n        // 4.关闭流\n        input.close();\n        zipOut.close();\n    }\n\n    /**\n     * 读取实体为一个文件的压缩包\n     */\n    public static void input1(String zipfilepath, String filepath) throws Exception {\n        // 1.使用 File 类绑定一个文件\n        File zipFile = new File(zipfilepath);\n\n        // 2.把 File 对象绑定到流对象上\n        ZipInputStream input = new ZipInputStream(new FileInputStream(zipFile));\n\n        // 3.进行读或写操作\n        ZipEntry entry = input.getNextEntry();    // 得到一个压缩实体\n        System.out.println(\"压缩实体名称：\" + entry.getName());\n\n        // 4.关闭流\n        input.close();\n    }\n\n    /**\n     * 压缩一个目录\n     */\n    public static void output2(String dirpath, String zipfilepath) throws Exception {\n        // 1.使用 File 类绑定一个文件\n        // 定义要压缩的文件夹\n        File file = new File(dirpath);\n        // 定义压缩文件名称\n        File zipFile = new File(zipfilepath);\n\n        // 2.把 File 对象绑定到流对象上\n        ZipOutputStream zipOut = new ZipOutputStream(new FileOutputStream(zipFile));\n        zipOut.setComment(\"This is zip folder.\");\n\n        // 3.进行读或写操作\n        int temp = 0;\n        if (file.isDirectory()) {    // 判断是否是文件夹\n            File lists[] = file.listFiles();    // 列出全部文件\n            for (int i = 0; i \nObjectInputStream 和 ObjectOutputStream\nObjectInputStream 和 ObjectOutputStream 是对象输入输出流，一般用于对象序列化。\n示例：\nimport java.io.*;\n\npublic class ObjectStream {\n\n    public static class Person implements Serializable {\n\n        private String name;\n        private int age;\n\n        public Person(String name, int age) {\n            this.name = name;\n            this.age = age;\n        }\n\n        @Override\n        public String toString() {\n            return \"姓名：\" + this.name + \"；年龄：\" + this.age;\n        }\n    }\n\n    public static void writeObject(String filepath, Object obj[]) throws Exception {\n        // 1.使用 File 类绑定一个文件\n        File f = new File(filepath);\n\n        // 2.把 File 对象绑定到流对象上\n        OutputStream out = new FileOutputStream(f);\n        ObjectOutputStream oos = new ObjectOutputStream(out);\n\n        // 3.进行读或写操作\n        oos.writeObject(obj);\n\n        // 4.关闭流\n        oos.close();\n    }\n\n    public static Object[] readObject(String filepath) throws Exception {\n        // 1.使用 File 类绑定一个文件\n        File f = new File(filepath);\n\n        // 2.把 File 对象绑定到流对象上\n        InputStream input = new FileInputStream(f);\n        ObjectInputStream ois = new ObjectInputStream(input);\n\n        // 3.进行读或写操作\n        Object[] objects = (Object[]) ois.readObject();\n\n        // 4.关闭流\n        ois.close();\n        return objects;\n    }\n\n    public static void main(String args[]) throws Exception {\n        final String filepath = \"d:\\\\object.txt\";\n        Person per[] = {new Person(\"张三\", 30), new Person(\"李四\", 31), new Person(\"王五\", 32)};\n        writeObject(filepath, per);\n        Object o[] = readObject(filepath);\n        for (int i = 0; i \n"},"javacore/io/Java序列化.html":{"url":"javacore/io/Java序列化.html","title":"Java 序列化","keywords":"","body":"深入理解 Java 序列化\n\n关键词：basics、serialize\n\n\n\n简介\n序列化和反序列化\nSerializable 接口\nserialVersionUID\n\n\n默认序列化机制\n非默认序列化机制\ntransient 关键字\nExternalizable 接口\nExternalizable 接口的替代方法\nreadResolve() 方法\n\n\n序列化工具\n小结\n参考资料\n\n\n简介\n\n\n\n序列化（serialize） - 序列化是将对象转换为字节流。\n反序列化（deserialize） - 反序列化是将字节流转换为对象。\n序列化用途\n序列化可以将对象的字节序列持久化——保存在内存、文件、数据库中。\n在网络上传送对象的字节序列。\nRMI(远程方法调用)\n\n\n\n\n:bell: 注意：使用 Java 对象序列化，在保存对象时，会把其状态保存为一组字节，在未来，再将这些字节组装成对象。必须注意地是，对象序列化保存的是对象的”状态”，即它的成员变量。由此可知，对象序列化不会关注类中的静态变量。\n\n序列化和反序列化\nJava 通过对象输入输出流来实现序列化和反序列化：\n\njava.io.ObjectOutputStream 类的 writeObject() 方法可以实现序列化；\njava.io.ObjectInputStream 类的 readObject() 方法用于实现反序列化。\n\n序列化和反序列化示例：\npublic class SerializeDemo01 {\n    enum Sex {\n        MALE,\n        FEMALE\n    }\n\n\n    static class Person implements Serializable {\n        private static final long serialVersionUID = 1L;\n        private String name = null;\n        private Integer age = null;\n        private Sex sex;\n\n        public Person() { }\n\n        public Person(String name, Integer age, Sex sex) {\n            this.name = name;\n            this.age = age;\n            this.sex = sex;\n        }\n\n        @Override\n        public String toString() {\n            return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + \", sex=\" + sex + '}';\n        }\n    }\n\n    /**\n     * 序列化\n     */\n    private static void serialize(String filename) throws IOException {\n        File f = new File(filename); // 定义保存路径\n        OutputStream out = new FileOutputStream(f); // 文件输出流\n        ObjectOutputStream oos = new ObjectOutputStream(out); // 对象输出流\n        oos.writeObject(new Person(\"Jack\", 30, Sex.MALE)); // 保存对象\n        oos.close();\n        out.close();\n    }\n\n    /**\n     * 反序列化\n     */\n    private static void deserialize(String filename) throws IOException, ClassNotFoundException {\n        File f = new File(filename); // 定义保存路径\n        InputStream in = new FileInputStream(f); // 文件输入流\n        ObjectInputStream ois = new ObjectInputStream(in); // 对象输入流\n        Object obj = ois.readObject(); // 读取对象\n        ois.close();\n        in.close();\n        System.out.println(obj);\n    }\n\n    public static void main(String[] args) throws IOException, ClassNotFoundException {\n        final String filename = \"d:/text.dat\";\n        serialize(filename);\n        deserialize(filename);\n    }\n}\n// Output:\n// Person{name='Jack', age=30, sex=MALE}\n\nSerializable 接口\n被序列化的类必须属于 Enum、Array 和 Serializable 类型其中的任何一种。\n如果不是 Enum、Array 的类，如果需要序列化，必须实现 java.io.Serializable 接口，否则将抛出 NotSerializableException 异常。这是因为：在序列化操作过程中会对类型进行检查，如果不满足序列化类型要求，就会抛出异常。\n我们不妨做一个小尝试：将 SerializeDemo01 示例中 Person 类改为如下实现，然后看看运行结果。\npublic class UnSerializeDemo {\n    static class Person { // 其他内容略 }\n    // 其他内容略\n}\n\n输出：结果就是出现如下异常信息。\nException in thread \"main\" java.io.NotSerializableException:\n...\nserialVersionUID\n请注意 serialVersionUID 字段，你可以在 Java 世界的无数类中看到这个字段。\nserialVersionUID 有什么作用，如何使用 serialVersionUID？\nserialVersionUID 是 Java 为每个序列化类产生的版本标识。它可以用来保证在反序列时，发送方发送的和接受方接收的是可兼容的对象。如果接收方接收的类的 serialVersionUID 与发送方发送的 serialVersionUID 不一致，会抛出 InvalidClassException。\n如果可序列化类没有显式声明 serialVersionUID，则序列化运行时将基于该类的各个方面计算该类的默认 serialVersionUID 值。尽管这样，还是建议在每一个序列化的类中显式指定 serialVersionUID 的值。因为不同的 jdk 编译很可能会生成不同的 serialVersionUID 默认值，从而导致在反序列化时抛出 InvalidClassExceptions 异常。\nserialVersionUID 字段必须是 static final long 类型。\n我们来举个例子：\n（1）有一个可序列化类 Person\npublic class Person implements Serializable {\n    private static final long serialVersionUID = 1L;\n    private String name;\n    private Integer age;\n    private String address;\n    // 构造方法、get、set 方法略\n}\n\n（2）开发过程中，对 Person 做了修改，增加了一个字段 email，如下：\npublic class Person implements Serializable {\n    private static final long serialVersionUID = 1L;\n    private String name;\n    private Integer age;\n    private String address;\n    private String email;\n    // 构造方法、get、set 方法略\n}\n\n由于这个类和老版本不兼容，我们需要修改版本号：\nprivate static final long serialVersionUID = 2L;\n\n再次进行反序列化，则会抛出 InvalidClassException 异常。\n综上所述，我们大概可以清楚：serialVersionUID 用于控制序列化版本是否兼容。若我们认为修改的可序列化类是向后兼容的，则不修改 serialVersionUID。\n默认序列化机制\n如果仅仅只是让某个类实现 Serializable 接口，而没有其它任何处理的话，那么就会使用默认序列化机制。\n使用默认机制，在序列化对象时，不仅会序列化当前对象本身，还会对其父类的字段以及该对象引用的其它对象也进行序列化。同样地，这些其它对象引用的另外对象也将被序列化，以此类推。所以，如果一个对象包含的成员变量是容器类对象，而这些容器所含有的元素也是容器类对象，那么这个序列化的过程就会较复杂，开销也较大。\n\n注意：这里的父类和引用对象既然要进行序列化，那么它们当然也要满足序列化要求：被序列化的类必须属于 Enum、Array 和 Serializable 类型其中的任何一种。\n\n非默认序列化机制\n在现实应用中，有些时候不能使用默认序列化机制。比如，希望在序列化过程中忽略掉敏感数据，或者简化序列化过程。下面将介绍若干影响序列化的方法。\ntransient 关键字\n当某个字段被声明为 transient 后，默认序列化机制就会忽略该字段。\n我们将 SerializeDemo01 示例中的内部类 Person 的 age 字段声明为 transient，如下所示：\npublic class SerializeDemo02 {\n    static class Person implements Serializable {\n        transient private Integer age = null;\n        // 其他内容略\n    }\n    // 其他内容略\n}\n// Output:\n// name: Jack, age: null, sex: MALE\n\n从输出结果可以看出，age 字段没有被序列化。\nExternalizable 接口\n无论是使用 transient 关键字，还是使用 writeObject() 和 readObject() 方法，其实都是基于 Serializable 接口的序列化。\nJDK 中提供了另一个序列化接口--Externalizable。\n可序列化类实现 Externalizable 接口之后，基于 Serializable 接口的默认序列化机制就会失效。\n我们来基于 SerializeDemo02 再次做一些改动，代码如下：\npublic class ExternalizeDemo01 {\n    static class Person implements Externalizable {\n        transient private Integer age = null;\n        // 其他内容略\n\n        private void writeObject(ObjectOutputStream out) throws IOException {\n            out.defaultWriteObject();\n            out.writeInt(age);\n        }\n\n        private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n            in.defaultReadObject();\n            age = in.readInt();\n        }\n\n        @Override\n        public void writeExternal(ObjectOutput out) throws IOException { }\n\n        @Override\n        public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException { }\n    }\n     // 其他内容略\n}\n// Output:\n// call Person()\n// name: null, age: null, sex: null\n\n从该结果，一方面可以看出 Person 对象中任何一个字段都没有被序列化。另一方面，如果细心的话，还可以发现这此次序列化过程调用了 Person 类的无参构造方法。\n\nExternalizable 继承于 Serializable，它增添了两个方法：writeExternal() 与 readExternal()。这两个方法在序列化和反序列化过程中会被自动调用，以便执行一些特殊操作。当使用该接口时，序列化的细节需要由程序员去完成。如上所示的代码，由于 writeExternal() 与 readExternal() 方法未作任何处理，那么该序列化行为将不会保存/读取任何一个字段。这也就是为什么输出结果中所有字段的值均为空。\n另外，若使用 Externalizable 进行序列化，当读取对象时，会调用被序列化类的无参构造方法去创建一个新的对象；然后再将被保存对象的字段的值分别填充到新对象中。这就是为什么在此次序列化过程中 Person 类的无参构造方法会被调用。由于这个原因，实现 Externalizable 接口的类必须要提供一个无参的构造方法，且它的访问权限为 public。\n\n对上述 Person 类作进一步的修改，使其能够对 name 与 age 字段进行序列化，但要忽略掉 gender 字段，如下代码所示：\npublic class ExternalizeDemo02 {\n    static class Person implements Externalizable {\n        transient private Integer age = null;\n        // 其他内容略\n\n        private void writeObject(ObjectOutputStream out) throws IOException {\n            out.defaultWriteObject();\n            out.writeInt(age);\n        }\n\n        private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n            in.defaultReadObject();\n            age = in.readInt();\n        }\n\n        @Override\n        public void writeExternal(ObjectOutput out) throws IOException {\n            out.writeObject(name);\n            out.writeInt(age);\n        }\n\n        @Override\n        public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {\n            name = (String) in.readObject();\n            age = in.readInt();\n        }\n    }\n     // 其他内容略\n}\n// Output:\n// call Person()\n// name: Jack, age: 30, sex: null\n\nExternalizable 接口的替代方法\n实现 Externalizable 接口可以控制序列化和反序列化的细节。它有一个替代方法：实现 Serializable 接口，并添加 writeObject(ObjectOutputStream out) 与 readObject(ObjectInputStream in) 方法。序列化和反序列化过程中会自动回调这两个方法。\n示例如下所示：\npublic class SerializeDemo03 {\n    static class Person implements Serializable {\n        transient private Integer age = null;\n        // 其他内容略\n\n        private void writeObject(ObjectOutputStream out) throws IOException {\n            out.defaultWriteObject();\n            out.writeInt(age);\n        }\n\n        private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n            in.defaultReadObject();\n            age = in.readInt();\n        }\n        // 其他内容略\n    }\n    // 其他内容略\n}\n// Output:\n// name: Jack, age: 30, sex: MALE\n\n在 writeObject() 方法中会先调用 ObjectOutputStream 中的 defaultWriteObject() 方法，该方法会执行默认的序列化机制，如上节所述，此时会忽略掉 age 字段。然后再调用 writeInt() 方法显示地将 age 字段写入到 ObjectOutputStream 中。readObject() 的作用则是针对对象的读取，其原理与 writeObject() 方法相同。\n\n注意：writeObject() 与 readObject() 都是 private 方法，那么它们是如何被调用的呢？毫无疑问，是使用反射。详情可见 ObjectOutputStream 中的 writeSerialData 方法，以及 ObjectInputStream 中的 readSerialData 方法。\n\nreadResolve() 方法\n当我们使用 Singleton 模式时，应该是期望某个类的实例应该是唯一的，但如果该类是可序列化的，那么情况可能会略有不同。此时对第 2 节使用的 Person 类进行修改，使其实现 Singleton 模式，如下所示：\npublic class SerializeDemo04 {\n\n    enum Sex {\n        MALE, FEMALE\n    }\n\n    static class Person implements Serializable {\n        private static final long serialVersionUID = 1L;\n        private String name = null;\n        transient private Integer age = null;\n        private Sex sex;\n        static final Person instatnce = new Person(\"Tom\", 31, Sex.MALE);\n\n        private Person() {\n            System.out.println(\"call Person()\");\n        }\n\n        private Person(String name, Integer age, Sex sex) {\n            this.name = name;\n            this.age = age;\n            this.sex = sex;\n        }\n\n        public static Person getInstance() {\n            return instatnce;\n        }\n\n        private void writeObject(ObjectOutputStream out) throws IOException {\n            out.defaultWriteObject();\n            out.writeInt(age);\n        }\n\n        private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n            in.defaultReadObject();\n            age = in.readInt();\n        }\n\n        public String toString() {\n            return \"name: \" + this.name + \", age: \" + this.age + \", sex: \" + this.sex;\n        }\n    }\n\n    /**\n     * 序列化\n     */\n    private static void serialize(String filename) throws IOException {\n        File f = new File(filename); // 定义保存路径\n        OutputStream out = new FileOutputStream(f); // 文件输出流\n        ObjectOutputStream oos = new ObjectOutputStream(out); // 对象输出流\n        oos.writeObject(new Person(\"Jack\", 30, Sex.MALE)); // 保存对象\n        oos.close();\n        out.close();\n    }\n\n    /**\n     * 反序列化\n     */\n    private static void deserialize(String filename) throws IOException, ClassNotFoundException {\n        File f = new File(filename); // 定义保存路径\n        InputStream in = new FileInputStream(f); // 文件输入流\n        ObjectInputStream ois = new ObjectInputStream(in); // 对象输入流\n        Object obj = ois.readObject(); // 读取对象\n        ois.close();\n        in.close();\n        System.out.println(obj);\n        System.out.println(obj == Person.getInstance());\n    }\n\n    public static void main(String[] args) throws IOException, ClassNotFoundException {\n        final String filename = \"d:/text.dat\";\n        serialize(filename);\n        deserialize(filename);\n    }\n}\n// Output:\n// name: Jack, age: null, sex: MALE\n// false\n\n值得注意的是，从文件中获取的 Person 对象与 Person 类中的单例对象并不相等。为了能在单例类中仍然保持序列的特性，可以使用 readResolve() 方法。在该方法中直接返回 Person 的单例对象。我们在 SerializeDemo04 示例的基础上添加一个 readObject 方法， 如下所示：\npublic class SerializeDemo05 {\n    // 其他内容略\n\n    static class Person implements Serializable {\n\n        // 添加此方法\n        private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n            in.defaultReadObject();\n            age = in.readInt();\n        }\n        // 其他内容略\n    }\n\n    // 其他内容略\n}\n// Output:\n// name: Tom, age: 31, sex: MALE\n// true\n\n序列化工具\nJava 官方的序列化存在许多问题，因此，很多人更愿意使用优秀的第三方序列化工具来替代 Java 自身的序列化机制。\nJava 官方的序列化主要体现在以下方面：\n\nJava 官方的序列化性能不高，序列化后的数据相对于一些优秀的序列化的工具，还是要大不少，这大大影响存储和传输的效率。\nJava 官方的序列化一定需要实现 Serializable 接口。\nJava 官方的序列化需要关注 serialVersionUID。\nJava 官方的序列无法跨语言使用。\n\n当然我们还有更加优秀的一些序列化和反序列化的工具，根据不同的使用场景可以自行选择！\n\nthrift、protobuf - 适用于对性能敏感，对开发体验要求不高的内部系统。\nhessian - 适用于对开发体验敏感，性能有要求的内外部系统。\njackson、gson、fastjson - 适用于对序列化后的数据要求有良好的可读性（转为 json 、xml 形式）。\n\n小结\n\n\n参考资料\n\nJava 编程思想\nJAVA 核心技术（卷 1）\nhttp://www.hollischuang.com/archives/1140\nhttp://www.codenuclear.com/serialization-deserialization-java/\nhttp://www.blogjava.net/jiangshachina/archive/2012/02/13/369898.html\nJava 序列化的高级认识\nhttps://agapple.iteye.com/blog/859052\n\n"},"javacore/io/Java网络编程.html":{"url":"javacore/io/Java网络编程.html","title":"Java 网络编程","keywords":"","body":"Java 网络编程\n\n关键词：URL、InetAddress\n\n\n\nInetAddress\nURL\nSockets\nDatagram\n\n\nJava 中的网络支持：\n\nInetAddress：用于表示网络上的硬件资源，即 IP 地址；\nURL：统一资源定位符；\nSockets：使用 TCP 协议实现网络通信；\nDatagram：使用 UDP 协议实现网络通信。\n\nInetAddress\n没有公有的构造函数，只能通过静态方法来创建实例。\nInetAddress.getByName(String host);\nInetAddress.getByAddress(byte[] address);\n\nURL\n可以直接从 URL 中读取字节流数据。\npublic static void main(String[] args) throws IOException {\n\n    URL url = new URL(\"http://www.baidu.com\");\n\n    /* 字节流 */\n    InputStream is = url.openStream();\n\n    /* 字符流 */\n    InputStreamReader isr = new InputStreamReader(is, \"utf-8\");\n\n    /* 提供缓存功能 */\n    BufferedReader br = new BufferedReader(isr);\n\n    String line;\n    while ((line = br.readLine()) != null) {\n        System.out.println(line);\n    }\n\n    br.close();\n}\n\nSockets\n\nServerSocket：服务器端类\nSocket：客户端类\n服务器和客户端通过 InputStream 和 OutputStream 进行输入输出。\n\n  \n\nDatagram\n\nDatagramPacket：数据包类\nDatagramSocket：通信类\n\n"},"javaweb/javaee.html":{"url":"javaweb/javaee.html","title":"JavaEE","keywords":"","body":"网络通信面经\n\n\n1. 综合\n1.1. 计算机网络如何分层？\n\n\n2. HTTP\n3. DNS\n4. TCP/UDP\n4.1. 什么是 TCP？\n4.2. TCP 的特性是什么？\n4.3. TCP 三次握手\n4.4. TCP 四次挥手\n4.5. TCP 滑动窗口\n4.6. TCP 重传机制\n\n\n\n\n1. 综合\n1.1. 计算机网络如何分层？\n\n❓ 问题：计算机网络如何分层？各层的作用是什么？各层的主要协议、设备分别是什么？\n这是学习计算机网络知识宏观层面必须要了解的核心点。知道了这些，对于网络的体系结构就基本上了解了。\n\n\n\n计算机网络分层一般有三种划分体系：OSI 分层；五层协议分层；TCP/IP 协议分层。\n\nOSI 的七层体系结构概念清楚，理论完整，但是比较复杂且不实用，所以并不流行。\n五层协议分层是一种折中方案，在现实中更为流行。\n\n\n\n物理层\n\n物理层（Physical Layer）只接收和发送一串比特(bit)流，不考虑信息的意义和信息结构。\n扩展阅读：计算机网络之物理层\n\n\n关键词：调制、解调、数字信号、模拟信号、通信媒介、信道复用\n数据单元：比特流。\n典型设备：光纤、同轴电缆、双绞线、中继器和集线器。\n\n数据链路层\n\n网络层针对的还是主机之间的数据传输服务，而主机之间可以有很多链路，数据链路层（Data Link Layer）就是为同一链路的主机提供数据传输服务。数据链路层把网络层传下来的分组封装成帧。\n扩展阅读：计算机网络之数据链路层\n\n\n关键词：点对点信道、广播信道、PPP、CSMA/CD、局域网、以太网、MAC、适配器、集线器、网桥、交换机\n主要协议：PPP、CSMA/CD 等。\n数据单元：帧（frame）。\n典型设备：二层交换机、网桥、网卡。\n\n网络层\n\n网络层（network layer）为分组交换网上的不同主机提供通信服务。在发送数据时，网络层把运输层产生的报文段或用户数据报封装成分组或包进行传送。\n扩展阅读：计算机网络之网络层\n\n\n关键词：IP、ICMP、ARP、路由\n主要协议：IP。\n数据单元：IP 数据报（packet）。\n典型设备：网关、路由器。\n\n传输层\n\n传输层（transport layer）为两台主机中进程间的通信提供通用的数据传输服务。\n扩展阅读：计算机网络之网络层\n\n\n关键词：UDP、TCP、滑动窗口、拥塞控制、三次握手\n主要协议：TCP、UDP。\n数据单元：报文段（segment）或用户数据报。\n\n会话层\n\n会话层（Session Layer）不参与具体的传输，它提供包括访问验证和会话管理在内的建立和维护应用之间通信的机制。\n\n表示层\n\n表示层（Presentation Layer）是为在应用过程之间传送的信息提供表示方法的服务，它关心的只是发出信息的语法与语义。表示层要完成某些特定的功能，主要有不同数据编码格式的转换，提供数据压缩、解压缩服务，对数据进行加密、解密。\n\n应用层\n\n应用层（application layer）通过应用进程间的交互来完成特定网络应用。应用层协议定义的是应用进程间通信和交互的规则。\n扩展阅读：计算机网络之应用层\n\n\n关键词：HTTP、DNS、FTP、TELNET、DHCP\n主要协议：HTTP、DNS、SMTP、Telnet、FTP、SNMP 等。\n数据单元：报文（message）。\n\n2. HTTP\n\n扩展阅读：超文本传输协议 HTTP\n\n3. DNS\n\n扩展阅读：域名系统 DNS\n\n4. TCP/UDP\n\n扩展阅读：传输控制协议 TCP，用户数据报协议 UDP\n\n4.1. 什么是 TCP？\nTCP（Transmission Control Protocol），即传输控制协议，它是一种面向连接的、可靠的、基于字节流的传输层通信协议。\n4.2. TCP 的特性是什么？\n\n面向连接的 - 面向连接是指 TCP 需要通过三次握手、四次挥手原则建立和断开双向连接。\n可靠的 - 可靠是指 TCP 传输的数据包保证以原始顺序到达目的地，且数据包不被损坏。为了实现这点，TCP 通过以下技术来保证：\n数据包的序列号和校验码\n确认包和自动重传\n如果发送者没有收到正确的响应，它将重新发送数据包。如果多次超时，连接就会断开。\nTCP 实行流量控制和拥塞控制。这些确保措施会导致延迟，而且通常导致传输效率比 UDP 低。\n\n\n\n\n基于字节流的\n虽然应用程序和 TCP 的交互是一次一个数据块（大小不等），但 TCP 把应用程序看成是一连串的无结构的字节流。TCP 有一个缓冲，当应用程序传送的数据块太长，TCP 就可以把它划分短一些再传送。如果应用程序一次只发送一个字节，TCP 也可以等待积累有足够多的字节后再构成报文段发送出去。\n在 TCP 建立连接前两次握手的 SYN 报文中选项字段的 MSS 值，通信双方商定通信的最大报文长度。如果应用层交付下来的数据过大，就会对数据分段，然后发送；否则通过滑动窗口来控制通信双发的数据。\n\n\n\n4.3. TCP 三次握手\n\n❓ 问题：三次握手有什么用？什么是三次握手？为什么需要三次握手？\n\n（1）三次握手有什么用？\n\n三次握手负责建立 TCP 双向连接。\n\n（2）什么是三次握手？\n\n\n如上图所示，三次握手流程如下：\n\n第一次握手 - 客户端向服务端发送带有 SYN 标志的数据包。\n第二次握手 - 服务端向客户端发送带有 SYN/ACK 标志的数据包。\n第三次握手 - 客户端向服务端发送带有带有 ACK 标志的数据包。\n\n至此，TCP 三次握手完成，客户端与服务端已建立双向连接。\n\n💡 说明：SYN 为 synchronize 的缩写，ACK 为 acknowledgment 的缩写。\n\n（3）为什么需要三次握手？\n为了便于说明，假设客户端为 A, 服务端为 B。\n\n第一次握手，A 向 B 发同步消息。B 收到消息后，B 认为：A 发消息没问题；B 收消息没问题。\n第二次握手，B 向 A 发同步消息和确认消息。A 收到消息后，A 认为：A 发消息、收消息都没问题；B 发消息、收消息都没问题。但是，此时 B 不确定自己发消息是否没问题，所以就需要第三次握手。\n第三次握手，A 向 B 发确认消息。B 收到消息后。B 认为：B 发消息没问题。\n\n4.4. TCP 四次挥手\n\n❓ 问题：四次挥手有什么用？什么是四次挥手？为什么建立连接是三次握手，关闭连接确是四次挥手呢？\n\n（1）四次挥手有什么用？\n\n四次挥手负责断开 TCP 连接。\n\n（2）什么是四次挥手？\n如上图所示，四次挥手流程如下：\n\n\n\n第一次挥手 - 客户端向服务端发送一个 FIN 包，用来关闭客户端到服务端的数据传送。\n第二次挥手 - 服务端收到这个 FIN 包，向客户端发送一个 ACK 包，确认序号为收到的序号加 1。和 SYN 一样，一个 FIN 将占用一个序号。\n第三次挥手 - 服务端关闭与客户端的连接，向客户端发送一个 FIN 包。\n第四次挥手 - 客户端向服务端发送 ACK 包，并将确认序号设置为收到序号加 1。\n\n（3）为什么建立连接是三次握手，关闭连接确是四次挥手呢？\n\n建立连接的时候， 服务器在 LISTEN 状态下，收到建立连接请求的 SYN 报文后，把 ACK 和 SYN 放在一个报文里发送给客户端。\n而关闭连接时，服务器收到对方的 FIN 报文时，仅仅表示对方不再发送数据了但是还能接收数据，而自己也未必全部数据都发送给对方了，所以己方可以立即关闭，也可以发送一些数据给对方后，再发送 FIN 报文给对方来表示同意现在关闭连接，因此，己方 ACK 和 FIN 一般都会分开发送，从而导致多了一次。\n\n4.5. TCP 滑动窗口\n\n❓ 问题：什么是滑动窗口？滑动窗口原理是什么？\n\n什么是滑动窗口？\n滑动窗口是 TCP 的一种控制网络流量的技术。\nTCP 必需要解决的可靠传输以及包乱序（reordering）的问题，所以，TCP 必需要知道网络实际的数据处理带宽或是数据处理速度，这样才不会引起网络拥塞，导致丢包。\nTCP 头里有一个字段叫 Window，又叫 Advertised-Window，这个字段是接收端告诉发送端自己还有多少缓冲区可以接收数据。于是发送端就可以根据这个接收端的处理能力来发送数据，而不会导致接收端处理不过来。\n滑动窗口原理是什么？\n\n\n\n已发送已确认 - 数据流中最早的字节已经发送并得到确认。这些数据是站在发送端的角度来看的。上图中的 31 个字节已经发送并确认。\n已发送但尚未确认 - 已发送但尚未得到确认的字节。发送方在确认之前，不认为这些数据已经被处理。上图中的 32 ~ 45 字节为第 2 类。\n未发送而接收方已 Ready - 设备尚未将数据发出 ，但接收方根据最近一次关于发送方一次要发送多少字节确认自己有足够空间。发送方会立即尝试发送。上图中的 46 ~ 51 字节为第 3 类。\n未发送而接收方 Not Ready - 由于接收方 not ready，还不允许将这部分数据发出。上图中的 52 以后的字节为第 4 类。\n\n\n\n这张图片相对于上一张图片，滑动窗口偏移了 5 个字节，意味着有 5 个已发送的字节得到了确认。\n4.6. TCP 重传机制\n\n❓ 问题：为什么需要重传机制？TCP 有哪些重传机制，原理是什么？\n\nTCP 要保证所有的数据包都可以到达，所以，必需要有重传机制。\nTCP 重传机制主要有两种：\n\n超时重传机制\n快速重传机制\n\n（1）超时重传机制\n超时重传机制是指：发送数据包在一定的时间周期内没有收到相应的 ACK，等待一定的时间，超时之后就认为这个数据包丢失，就会重新发送。这个等待时间被称为 RTO(Retransmission TimeOut)，即重传超时时间。\n没有确认的数据包不会从窗口中移走，定时器在重传时间到期内，每个片段的位置不变。\n这种机制的重点是 RTO 的设置：\n\nRTO 设长了，重发就慢，丢了老半天才重发，没有效率，性能差；\nRTO 设短了，会导致可能并没有丢就重发。于是重发的就快，会增加网络拥塞，导致更多的超时，更多的超时导致更多的重发\n\n（2）快速重传机制\n快速重传机制，实现了另外的一种丢包评定标准，即如果连续收到 3 次重复 ACK，发送方就认为这个 seq 的包丢失了，立刻进行重传。\n当接收方收到乱序片段时，需要重复发送 ACK。\n"},"javaweb/distributed/distributed.html":{"url":"javaweb/distributed/distributed.html","title":"分布式技术","keywords":"","body":"网络通信面经\n\n\n1. 综合\n1.1. 计算机网络如何分层？\n\n\n2. HTTP\n3. DNS\n4. TCP/UDP\n4.1. 什么是 TCP？\n4.2. TCP 的特性是什么？\n4.3. TCP 三次握手\n4.4. TCP 四次挥手\n4.5. TCP 滑动窗口\n4.6. TCP 重传机制\n\n\n\n\n1. 综合\n1.1. 计算机网络如何分层？\n\n❓ 问题：计算机网络如何分层？各层的作用是什么？各层的主要协议、设备分别是什么？\n这是学习计算机网络知识宏观层面必须要了解的核心点。知道了这些，对于网络的体系结构就基本上了解了。\n\n\n\n计算机网络分层一般有三种划分体系：OSI 分层；五层协议分层；TCP/IP 协议分层。\n\nOSI 的七层体系结构概念清楚，理论完整，但是比较复杂且不实用，所以并不流行。\n五层协议分层是一种折中方案，在现实中更为流行。\n\n\n\n物理层\n\n物理层（Physical Layer）只接收和发送一串比特(bit)流，不考虑信息的意义和信息结构。\n扩展阅读：计算机网络之物理层\n\n\n关键词：调制、解调、数字信号、模拟信号、通信媒介、信道复用\n数据单元：比特流。\n典型设备：光纤、同轴电缆、双绞线、中继器和集线器。\n\n数据链路层\n\n网络层针对的还是主机之间的数据传输服务，而主机之间可以有很多链路，数据链路层（Data Link Layer）就是为同一链路的主机提供数据传输服务。数据链路层把网络层传下来的分组封装成帧。\n扩展阅读：计算机网络之数据链路层\n\n\n关键词：点对点信道、广播信道、PPP、CSMA/CD、局域网、以太网、MAC、适配器、集线器、网桥、交换机\n主要协议：PPP、CSMA/CD 等。\n数据单元：帧（frame）。\n典型设备：二层交换机、网桥、网卡。\n\n网络层\n\n网络层（network layer）为分组交换网上的不同主机提供通信服务。在发送数据时，网络层把运输层产生的报文段或用户数据报封装成分组或包进行传送。\n扩展阅读：计算机网络之网络层\n\n\n关键词：IP、ICMP、ARP、路由\n主要协议：IP。\n数据单元：IP 数据报（packet）。\n典型设备：网关、路由器。\n\n传输层\n\n传输层（transport layer）为两台主机中进程间的通信提供通用的数据传输服务。\n扩展阅读：计算机网络之网络层\n\n\n关键词：UDP、TCP、滑动窗口、拥塞控制、三次握手\n主要协议：TCP、UDP。\n数据单元：报文段（segment）或用户数据报。\n\n会话层\n\n会话层（Session Layer）不参与具体的传输，它提供包括访问验证和会话管理在内的建立和维护应用之间通信的机制。\n\n表示层\n\n表示层（Presentation Layer）是为在应用过程之间传送的信息提供表示方法的服务，它关心的只是发出信息的语法与语义。表示层要完成某些特定的功能，主要有不同数据编码格式的转换，提供数据压缩、解压缩服务，对数据进行加密、解密。\n\n应用层\n\n应用层（application layer）通过应用进程间的交互来完成特定网络应用。应用层协议定义的是应用进程间通信和交互的规则。\n扩展阅读：计算机网络之应用层\n\n\n关键词：HTTP、DNS、FTP、TELNET、DHCP\n主要协议：HTTP、DNS、SMTP、Telnet、FTP、SNMP 等。\n数据单元：报文（message）。\n\n2. HTTP\n\n扩展阅读：超文本传输协议 HTTP\n\n3. DNS\n\n扩展阅读：域名系统 DNS\n\n4. TCP/UDP\n\n扩展阅读：传输控制协议 TCP，用户数据报协议 UDP\n\n4.1. 什么是 TCP？\nTCP（Transmission Control Protocol），即传输控制协议，它是一种面向连接的、可靠的、基于字节流的传输层通信协议。\n4.2. TCP 的特性是什么？\n\n面向连接的 - 面向连接是指 TCP 需要通过三次握手、四次挥手原则建立和断开双向连接。\n可靠的 - 可靠是指 TCP 传输的数据包保证以原始顺序到达目的地，且数据包不被损坏。为了实现这点，TCP 通过以下技术来保证：\n数据包的序列号和校验码\n确认包和自动重传\n如果发送者没有收到正确的响应，它将重新发送数据包。如果多次超时，连接就会断开。\nTCP 实行流量控制和拥塞控制。这些确保措施会导致延迟，而且通常导致传输效率比 UDP 低。\n\n\n\n\n基于字节流的\n虽然应用程序和 TCP 的交互是一次一个数据块（大小不等），但 TCP 把应用程序看成是一连串的无结构的字节流。TCP 有一个缓冲，当应用程序传送的数据块太长，TCP 就可以把它划分短一些再传送。如果应用程序一次只发送一个字节，TCP 也可以等待积累有足够多的字节后再构成报文段发送出去。\n在 TCP 建立连接前两次握手的 SYN 报文中选项字段的 MSS 值，通信双方商定通信的最大报文长度。如果应用层交付下来的数据过大，就会对数据分段，然后发送；否则通过滑动窗口来控制通信双发的数据。\n\n\n\n4.3. TCP 三次握手\n\n❓ 问题：三次握手有什么用？什么是三次握手？为什么需要三次握手？\n\n（1）三次握手有什么用？\n\n三次握手负责建立 TCP 双向连接。\n\n（2）什么是三次握手？\n\n\n如上图所示，三次握手流程如下：\n\n第一次握手 - 客户端向服务端发送带有 SYN 标志的数据包。\n第二次握手 - 服务端向客户端发送带有 SYN/ACK 标志的数据包。\n第三次握手 - 客户端向服务端发送带有带有 ACK 标志的数据包。\n\n至此，TCP 三次握手完成，客户端与服务端已建立双向连接。\n\n💡 说明：SYN 为 synchronize 的缩写，ACK 为 acknowledgment 的缩写。\n\n（3）为什么需要三次握手？\n为了便于说明，假设客户端为 A, 服务端为 B。\n\n第一次握手，A 向 B 发同步消息。B 收到消息后，B 认为：A 发消息没问题；B 收消息没问题。\n第二次握手，B 向 A 发同步消息和确认消息。A 收到消息后，A 认为：A 发消息、收消息都没问题；B 发消息、收消息都没问题。但是，此时 B 不确定自己发消息是否没问题，所以就需要第三次握手。\n第三次握手，A 向 B 发确认消息。B 收到消息后。B 认为：B 发消息没问题。\n\n4.4. TCP 四次挥手\n\n❓ 问题：四次挥手有什么用？什么是四次挥手？为什么建立连接是三次握手，关闭连接确是四次挥手呢？\n\n（1）四次挥手有什么用？\n\n四次挥手负责断开 TCP 连接。\n\n（2）什么是四次挥手？\n如上图所示，四次挥手流程如下：\n\n\n\n第一次挥手 - 客户端向服务端发送一个 FIN 包，用来关闭客户端到服务端的数据传送。\n第二次挥手 - 服务端收到这个 FIN 包，向客户端发送一个 ACK 包，确认序号为收到的序号加 1。和 SYN 一样，一个 FIN 将占用一个序号。\n第三次挥手 - 服务端关闭与客户端的连接，向客户端发送一个 FIN 包。\n第四次挥手 - 客户端向服务端发送 ACK 包，并将确认序号设置为收到序号加 1。\n\n（3）为什么建立连接是三次握手，关闭连接确是四次挥手呢？\n\n建立连接的时候， 服务器在 LISTEN 状态下，收到建立连接请求的 SYN 报文后，把 ACK 和 SYN 放在一个报文里发送给客户端。\n而关闭连接时，服务器收到对方的 FIN 报文时，仅仅表示对方不再发送数据了但是还能接收数据，而自己也未必全部数据都发送给对方了，所以己方可以立即关闭，也可以发送一些数据给对方后，再发送 FIN 报文给对方来表示同意现在关闭连接，因此，己方 ACK 和 FIN 一般都会分开发送，从而导致多了一次。\n\n4.5. TCP 滑动窗口\n\n❓ 问题：什么是滑动窗口？滑动窗口原理是什么？\n\n什么是滑动窗口？\n滑动窗口是 TCP 的一种控制网络流量的技术。\nTCP 必需要解决的可靠传输以及包乱序（reordering）的问题，所以，TCP 必需要知道网络实际的数据处理带宽或是数据处理速度，这样才不会引起网络拥塞，导致丢包。\nTCP 头里有一个字段叫 Window，又叫 Advertised-Window，这个字段是接收端告诉发送端自己还有多少缓冲区可以接收数据。于是发送端就可以根据这个接收端的处理能力来发送数据，而不会导致接收端处理不过来。\n滑动窗口原理是什么？\n\n\n\n已发送已确认 - 数据流中最早的字节已经发送并得到确认。这些数据是站在发送端的角度来看的。上图中的 31 个字节已经发送并确认。\n已发送但尚未确认 - 已发送但尚未得到确认的字节。发送方在确认之前，不认为这些数据已经被处理。上图中的 32 ~ 45 字节为第 2 类。\n未发送而接收方已 Ready - 设备尚未将数据发出 ，但接收方根据最近一次关于发送方一次要发送多少字节确认自己有足够空间。发送方会立即尝试发送。上图中的 46 ~ 51 字节为第 3 类。\n未发送而接收方 Not Ready - 由于接收方 not ready，还不允许将这部分数据发出。上图中的 52 以后的字节为第 4 类。\n\n\n\n这张图片相对于上一张图片，滑动窗口偏移了 5 个字节，意味着有 5 个已发送的字节得到了确认。\n4.6. TCP 重传机制\n\n❓ 问题：为什么需要重传机制？TCP 有哪些重传机制，原理是什么？\n\nTCP 要保证所有的数据包都可以到达，所以，必需要有重传机制。\nTCP 重传机制主要有两种：\n\n超时重传机制\n快速重传机制\n\n（1）超时重传机制\n超时重传机制是指：发送数据包在一定的时间周期内没有收到相应的 ACK，等待一定的时间，超时之后就认为这个数据包丢失，就会重新发送。这个等待时间被称为 RTO(Retransmission TimeOut)，即重传超时时间。\n没有确认的数据包不会从窗口中移走，定时器在重传时间到期内，每个片段的位置不变。\n这种机制的重点是 RTO 的设置：\n\nRTO 设长了，重发就慢，丢了老半天才重发，没有效率，性能差；\nRTO 设短了，会导致可能并没有丢就重发。于是重发的就快，会增加网络拥塞，导致更多的超时，更多的超时导致更多的重发\n\n（2）快速重传机制\n快速重传机制，实现了另外的一种丢包评定标准，即如果连续收到 3 次重复 ACK，发送方就认为这个 seq 的包丢失了，立刻进行重传。\n当接收方收到乱序片段时，需要重复发送 ACK。\n"},"javaweb/network-interview.html":{"url":"javaweb/network-interview.html","title":"网络通信","keywords":"","body":"网络通信面经\n\n\n1. 综合\n1.1. 计算机网络如何分层？\n\n\n2. HTTP\n3. DNS\n4. TCP/UDP\n4.1. 什么是 TCP？\n4.2. TCP 的特性是什么？\n4.3. TCP 三次握手\n4.4. TCP 四次挥手\n4.5. TCP 滑动窗口\n4.6. TCP 重传机制\n\n\n\n\n1. 综合\n1.1. 计算机网络如何分层？\n\n❓ 问题：计算机网络如何分层？各层的作用是什么？各层的主要协议、设备分别是什么？\n这是学习计算机网络知识宏观层面必须要了解的核心点。知道了这些，对于网络的体系结构就基本上了解了。\n\n\n\n计算机网络分层一般有三种划分体系：OSI 分层；五层协议分层；TCP/IP 协议分层。\n\nOSI 的七层体系结构概念清楚，理论完整，但是比较复杂且不实用，所以并不流行。\n五层协议分层是一种折中方案，在现实中更为流行。\n\n\n\n物理层\n\n物理层（Physical Layer）只接收和发送一串比特(bit)流，不考虑信息的意义和信息结构。\n扩展阅读：计算机网络之物理层\n\n\n关键词：调制、解调、数字信号、模拟信号、通信媒介、信道复用\n数据单元：比特流。\n典型设备：光纤、同轴电缆、双绞线、中继器和集线器。\n\n数据链路层\n\n网络层针对的还是主机之间的数据传输服务，而主机之间可以有很多链路，数据链路层（Data Link Layer）就是为同一链路的主机提供数据传输服务。数据链路层把网络层传下来的分组封装成帧。\n扩展阅读：计算机网络之数据链路层\n\n\n关键词：点对点信道、广播信道、PPP、CSMA/CD、局域网、以太网、MAC、适配器、集线器、网桥、交换机\n主要协议：PPP、CSMA/CD 等。\n数据单元：帧（frame）。\n典型设备：二层交换机、网桥、网卡。\n\n网络层\n\n网络层（network layer）为分组交换网上的不同主机提供通信服务。在发送数据时，网络层把运输层产生的报文段或用户数据报封装成分组或包进行传送。\n扩展阅读：计算机网络之网络层\n\n\n关键词：IP、ICMP、ARP、路由\n主要协议：IP。\n数据单元：IP 数据报（packet）。\n典型设备：网关、路由器。\n\n传输层\n\n传输层（transport layer）为两台主机中进程间的通信提供通用的数据传输服务。\n扩展阅读：计算机网络之网络层\n\n\n关键词：UDP、TCP、滑动窗口、拥塞控制、三次握手\n主要协议：TCP、UDP。\n数据单元：报文段（segment）或用户数据报。\n\n会话层\n\n会话层（Session Layer）不参与具体的传输，它提供包括访问验证和会话管理在内的建立和维护应用之间通信的机制。\n\n表示层\n\n表示层（Presentation Layer）是为在应用过程之间传送的信息提供表示方法的服务，它关心的只是发出信息的语法与语义。表示层要完成某些特定的功能，主要有不同数据编码格式的转换，提供数据压缩、解压缩服务，对数据进行加密、解密。\n\n应用层\n\n应用层（application layer）通过应用进程间的交互来完成特定网络应用。应用层协议定义的是应用进程间通信和交互的规则。\n扩展阅读：计算机网络之应用层\n\n\n关键词：HTTP、DNS、FTP、TELNET、DHCP\n主要协议：HTTP、DNS、SMTP、Telnet、FTP、SNMP 等。\n数据单元：报文（message）。\n\n2. HTTP\n\n扩展阅读：超文本传输协议 HTTP\n\n3. DNS\n\n扩展阅读：域名系统 DNS\n\n4. TCP/UDP\n\n扩展阅读：传输控制协议 TCP，用户数据报协议 UDP\n\n4.1. 什么是 TCP？\nTCP（Transmission Control Protocol），即传输控制协议，它是一种面向连接的、可靠的、基于字节流的传输层通信协议。\n4.2. TCP 的特性是什么？\n\n面向连接的 - 面向连接是指 TCP 需要通过三次握手、四次挥手原则建立和断开双向连接。\n可靠的 - 可靠是指 TCP 传输的数据包保证以原始顺序到达目的地，且数据包不被损坏。为了实现这点，TCP 通过以下技术来保证：\n数据包的序列号和校验码\n确认包和自动重传\n如果发送者没有收到正确的响应，它将重新发送数据包。如果多次超时，连接就会断开。\nTCP 实行流量控制和拥塞控制。这些确保措施会导致延迟，而且通常导致传输效率比 UDP 低。\n\n\n\n\n基于字节流的\n虽然应用程序和 TCP 的交互是一次一个数据块（大小不等），但 TCP 把应用程序看成是一连串的无结构的字节流。TCP 有一个缓冲，当应用程序传送的数据块太长，TCP 就可以把它划分短一些再传送。如果应用程序一次只发送一个字节，TCP 也可以等待积累有足够多的字节后再构成报文段发送出去。\n在 TCP 建立连接前两次握手的 SYN 报文中选项字段的 MSS 值，通信双方商定通信的最大报文长度。如果应用层交付下来的数据过大，就会对数据分段，然后发送；否则通过滑动窗口来控制通信双发的数据。\n\n\n\n4.3. TCP 三次握手\n\n❓ 问题：三次握手有什么用？什么是三次握手？为什么需要三次握手？\n\n（1）三次握手有什么用？\n\n三次握手负责建立 TCP 双向连接。\n\n（2）什么是三次握手？\n\n\n如上图所示，三次握手流程如下：\n\n第一次握手 - 客户端向服务端发送带有 SYN 标志的数据包。\n第二次握手 - 服务端向客户端发送带有 SYN/ACK 标志的数据包。\n第三次握手 - 客户端向服务端发送带有带有 ACK 标志的数据包。\n\n至此，TCP 三次握手完成，客户端与服务端已建立双向连接。\n\n💡 说明：SYN 为 synchronize 的缩写，ACK 为 acknowledgment 的缩写。\n\n（3）为什么需要三次握手？\n为了便于说明，假设客户端为 A, 服务端为 B。\n\n第一次握手，A 向 B 发同步消息。B 收到消息后，B 认为：A 发消息没问题；B 收消息没问题。\n第二次握手，B 向 A 发同步消息和确认消息。A 收到消息后，A 认为：A 发消息、收消息都没问题；B 发消息、收消息都没问题。但是，此时 B 不确定自己发消息是否没问题，所以就需要第三次握手。\n第三次握手，A 向 B 发确认消息。B 收到消息后。B 认为：B 发消息没问题。\n\n4.4. TCP 四次挥手\n\n❓ 问题：四次挥手有什么用？什么是四次挥手？为什么建立连接是三次握手，关闭连接确是四次挥手呢？\n\n（1）四次挥手有什么用？\n\n四次挥手负责断开 TCP 连接。\n\n（2）什么是四次挥手？\n如上图所示，四次挥手流程如下：\n\n\n\n第一次挥手 - 客户端向服务端发送一个 FIN 包，用来关闭客户端到服务端的数据传送。\n第二次挥手 - 服务端收到这个 FIN 包，向客户端发送一个 ACK 包，确认序号为收到的序号加 1。和 SYN 一样，一个 FIN 将占用一个序号。\n第三次挥手 - 服务端关闭与客户端的连接，向客户端发送一个 FIN 包。\n第四次挥手 - 客户端向服务端发送 ACK 包，并将确认序号设置为收到序号加 1。\n\n（3）为什么建立连接是三次握手，关闭连接确是四次挥手呢？\n\n建立连接的时候， 服务器在 LISTEN 状态下，收到建立连接请求的 SYN 报文后，把 ACK 和 SYN 放在一个报文里发送给客户端。\n而关闭连接时，服务器收到对方的 FIN 报文时，仅仅表示对方不再发送数据了但是还能接收数据，而自己也未必全部数据都发送给对方了，所以己方可以立即关闭，也可以发送一些数据给对方后，再发送 FIN 报文给对方来表示同意现在关闭连接，因此，己方 ACK 和 FIN 一般都会分开发送，从而导致多了一次。\n\n4.5. TCP 滑动窗口\n\n❓ 问题：什么是滑动窗口？滑动窗口原理是什么？\n\n什么是滑动窗口？\n滑动窗口是 TCP 的一种控制网络流量的技术。\nTCP 必需要解决的可靠传输以及包乱序（reordering）的问题，所以，TCP 必需要知道网络实际的数据处理带宽或是数据处理速度，这样才不会引起网络拥塞，导致丢包。\nTCP 头里有一个字段叫 Window，又叫 Advertised-Window，这个字段是接收端告诉发送端自己还有多少缓冲区可以接收数据。于是发送端就可以根据这个接收端的处理能力来发送数据，而不会导致接收端处理不过来。\n滑动窗口原理是什么？\n\n\n\n已发送已确认 - 数据流中最早的字节已经发送并得到确认。这些数据是站在发送端的角度来看的。上图中的 31 个字节已经发送并确认。\n已发送但尚未确认 - 已发送但尚未得到确认的字节。发送方在确认之前，不认为这些数据已经被处理。上图中的 32 ~ 45 字节为第 2 类。\n未发送而接收方已 Ready - 设备尚未将数据发出 ，但接收方根据最近一次关于发送方一次要发送多少字节确认自己有足够空间。发送方会立即尝试发送。上图中的 46 ~ 51 字节为第 3 类。\n未发送而接收方 Not Ready - 由于接收方 not ready，还不允许将这部分数据发出。上图中的 52 以后的字节为第 4 类。\n\n\n\n这张图片相对于上一张图片，滑动窗口偏移了 5 个字节，意味着有 5 个已发送的字节得到了确认。\n4.6. TCP 重传机制\n\n❓ 问题：为什么需要重传机制？TCP 有哪些重传机制，原理是什么？\n\nTCP 要保证所有的数据包都可以到达，所以，必需要有重传机制。\nTCP 重传机制主要有两种：\n\n超时重传机制\n快速重传机制\n\n（1）超时重传机制\n超时重传机制是指：发送数据包在一定的时间周期内没有收到相应的 ACK，等待一定的时间，超时之后就认为这个数据包丢失，就会重新发送。这个等待时间被称为 RTO(Retransmission TimeOut)，即重传超时时间。\n没有确认的数据包不会从窗口中移走，定时器在重传时间到期内，每个片段的位置不变。\n这种机制的重点是 RTO 的设置：\n\nRTO 设长了，重发就慢，丢了老半天才重发，没有效率，性能差；\nRTO 设短了，会导致可能并没有丢就重发。于是重发的就快，会增加网络拥塞，导致更多的超时，更多的超时导致更多的重发\n\n（2）快速重传机制\n快速重传机制，实现了另外的一种丢包评定标准，即如果连续收到 3 次重复 ACK，发送方就认为这个 seq 的包丢失了，立刻进行重传。\n当接收方收到乱序片段时，需要重复发送 ACK。\n"},"database/database.html":{"url":"database/database.html","title":"数据库","keywords":"","body":"数据库\n\n什么是mysql\n术语\n悲观锁和乐观锁\n共享锁\n数据库优化\nB树和B+树\n数据库连接池的作用\n聚集所以和非聚集索引区别\n复制\n主从复制\n读写分离\n\n\n数据库事务的四个特性\n防止SQL注入\n\n什么是mysql\n是一种关系型数据库，也是数据库管理系统\n术语\n主键\n主键是唯一的，数据库表只能包含一个主键\n外键\n用于关联两个表\n索引\n索引是对数据库表中一列或多列的值进行排序的一种结构\n优点：  \n\n保证数据的唯一性     \n提高查询速度    \n加快表与表之间的连接    \n分组和排序时，加快速度\n\n缺点： \n\n更新数据时效率低，因为要同时更新索引      \n创建索引和维护索引需要时间成本  \n创建索引和维护索引需要空间成本\n\n视图\n是虚拟的表，与包含数据的表不一样，视图包含使用时动态检索数据的查询，不包含任何列或数据\n悲观锁和乐观锁\n悲观锁:\n\nselect … for update操作来实现悲观锁，获取select的行锁\n优先获取锁，再进行业务处理，一锁二查三更新\n举例：行锁，表锁，读锁和写锁，synchronized\n适合经常产生冲突的情况\n\n乐观锁：\n实现：版本号和CAS算法\nCAS算法\n\ncompare and swap（比较与交换），是一种有名的无锁算法。\n涉及到三个操作数1.需要读写的地址 V 2.进行比较的旧值 A 3.拟写入的新值 B\n当且仅当 V 的值等于 A时，CAS通过原子方式用新值B来更新V的值，否则不会执行任何操作\nABA问题：一个线程one从内存位置V中取出A，这时候另一个线程two也从内存中取出A，并且two进行了一些操作变成了B，然后two又将V位置的数据变成A，这时候线程one进行CAS操作发现内存中仍然是A，然后one操作成功\n缺点：ABA问题；改进：版本号\n\n版本号：\n\n提交版本必须大于记录当前版本才能执行更新\n若刚才读取到的version值为当前数据库中的version值相等时才更新，否则重试更新操作，直到更新成功。\n\n在Java中java.util.concurrent.atomic包下面的原子变量类就是使用了乐观锁的一种实现方式CAS实现的\n如何保证线程安全\n冲突检测和数据更新\n共享锁\n共享锁又称 读锁 read lock ，是读取操作创建的锁。其他用户可以并发读取数据，但任何事务都不能对数据进行修改（获取数据上的排他锁），直到已释放所有共享锁。\n数据库优化\nSQL语句优化\nhaving、where、避免临时表、避免使用in not in or having、避免distinct耗费时间的排序操作,模糊匹配，临时表，减少重复工作\n数据库范式\n\n第一范式：列的原子性，不能再拆分为列\n第二范式：1NF，没有包含主键的列必须完全依赖于主键\n第三范式：首先2NF，非主键列必须直接依赖主键，不存在传递依赖\n\n索引的优化\n\n独立的列：索引不能是表达式的一部分\n索引列的顺序：选择性强的索引列放在前面\n前缀索引：对于varchar类型的列，使用前缀索引\n覆盖索引：覆盖所有要查询的字段的值\n\n优化数据访问\n\n减少请求的数据量\n只返回必要的列\n返回必要的行\n缓存重复查询的数据\n\n\n减少服务器扫描的行数：使用索引来覆盖查询\n\n查询性能优化\n\n使用Expalin分析\nid：查询的标识符\nkey：使用的索引\nselect_type：使用select的类型\ntype：连接使用了哪种类别\nrows：使用的行数\n\n\n慢查询\nlong_query怎么解决 ？设置参数，开启慢日志功能，得到耗时超过一定时间的sql\n\n\n\nB树和B+树\nB+树\nB+树索引\n\n主索引\nB+树叶子节点data域记录完整的数据记录，这种叫做聚簇索引\n因为无法把数据行存放在两个不同的地方，所以一个表只能有一个聚簇索引\n\n\n辅助索引\n辅助索引的叶子节点的data域记录着主键的值。\n使用辅助索引进行查找，先获取主键值，再到主索引进行查找\n\n\n\n原理\n\n基于B树和叶子节点顺序访问指针进行实现\n所有关键字都出现在叶子结点的链表中。且链表中的关键字恰好是有序的；\n不可能在非叶子结点命中；非叶子节点作为一个索引\n\nB树\n\n1.所有非叶子结点至多拥有两个儿子（Left和Right）；\n2.所有结点存储一个关键字；\n3.非叶子结点的左指针指向小于其关键字的子树，右指针指向大于其关键字的子树\n\n与红黑树的比较：为什么使用B+树实现索引\n\n平衡树查找复杂度等于树高，红黑树的树高太高而引起I/O操作频繁，导致效率低下\n一次I/O读入一块，一块的大小就是b+树叶子节点的大小，每次读入一个完整的节点，所以是一个树高\n\nB+树和B树区别\n\nB+树所有查询都要查找到叶子节点，查询性能稳定。\nB+树所有叶子节点形成有序链表，便于范围查询\n\n数据库连接池的作用\n\n维护一定数量的连接，减少创建连接的时间 \n更快的响应时间 \n统一的管理\n\nmysql高并发\n聚集索引和非聚集索引区别\n\n聚集索引，数据按索引顺序存储，子结点存储真实的物理数据 。索引的叶节点就是数据节点\n非聚集索引，叶节点仍然是索引节点，只不过有一个指针指向对应的数据块。\n\n复制\n主从复制\n\n含义：建立一个和主数据库完全一样的数据库环境\n线程\nbinlog线程：负责将主服务器上的数据更改写入二进制日志中\n从库I/O线程：负责从主服务器上读取二进制日志，并写入从服务器的重放日志（Replay log）中\n从库SQL线程：负责读取重放日志并重放其中的SQL语句\n\n\n原理：\n1.数据库有个bin-log二进制文件，记录了所有sql语句。\n2.我们的目标就是把主数据库的bin-log文件的sql语句复制过来。\n3.让其在从数据的relay-log重做日志文件中再执行一次这些sql语句即可。\n\n\n好处：\n1、做数据的热备，作为后备数据库，主数据库服务器故障后，可切换到从数据库继续工作，避免数据丢失。\n2.读写分离，使数据库能支撑更大的并发。部分报表sql语句非常的慢，导致锁表，影响前台服务。如果前台使用master，报表使用slave，那么报表sql将不会造成前台锁，保证了前台速度。\n\n\n\n读写分离\n\n概念：读从库，写主库\n提高性能的原因\n主从数据库负责各自的读和写，极大程度缓解了锁的争用\n从服务器可以使用MyISAM，提升查询性能以及节约系统开销\n增加冗余，提高可用性\n冗余：存储两倍数据，冗余降低了性能，但提高了数据的安全性。\n\n\n\n\n\n数据库事务的四个特性\n\n原子性     整个事务要么全部完成，要么全部不完成，不可能停滞在中间某个环节。事务在中间某个过程中发生错误，会被回滚到开始的状态\n一致性     在事务开始之前，和在事务执行完成后，数据库的完整性约束没有被破坏\n隔离性      多个用户访问数据库时，数据库为每一个用户开启一个事务，事务之间互不干扰。\n持久性      在事务完成以后，该事务所对数据库做的更改会持久保存在数据库中，并不会被回滚\n\n防止SQL注入\n\n原理：利用数据库对特殊标识符的解析强行从页面向后台传入\n原因：传入的参数与系统的SQL拼接成了合法的SQL而导致的\n防止SQL注入\n使用PreparedStatement（预处理执行语句），它内置了处理SQL注入的能力，可以对SQL语句进行查询参数化，只要使用setString方法传值即可\n采用正则表达式将包含有单引号(')、分号(;)、注释符号（--）的语句给替换掉来防止SQL注入\nMybatis下注入防范：Mybatis是支持定制化SQL、存储过程以及高级映射的优秀的持久层框架，几乎避免了所有的JDBC代码和手动设置参数以及获取结果集。\n使用Hibernate框架的SQL注入防范\n\n\n\n"},"linux/linux.html":{"url":"linux/linux.html","title":"Linux","keywords":"","body":"Linux\n硬链接和软连接\n"},"怎么用Git写书.html":{"url":"怎么用Git写书.html","title":"怎么用Git写书","keywords":"","body":"怎么用git写书\n安装环境\n第一步 安装node npm\n先检测自己电脑是否安装了node npm\n    # 查看 node 版本\n    node -v\n\n    # 查看 npm 版本\n    npm -v\n    复制代码\n如果成功打印出版本号，说明你本地具备了 node 的运行环境（安装 node 默认安装 npm），而如果没有或报错，则你需要去 node 官网进行 node 的下载及安装，如图：\n\n左边的版本是推荐安装的稳定版本，也就是目前已经被正式列入标准的版本，而右边的版本是当前最新的版本，该版本包含了一些新的特性，还未被完全列入标准，可能以后会有所变动。这里建议大家安装最新的 node 稳定版进行开发。\n第二步 全局安装 gitbook-cli\n建议使用 npm 淘宝源：\nnpm config set registry https://registry.npm.taobao.org/\n然后安装gitbook -cli\nnpm i -g gitbook-cli\n第三部 初始化电子书\n# 创建一个目录，进入\nmkdir gitbook-demo\ncd gitbook-demo\n\n# 初始化电子书目录\ngitbook init \n\n# 编译电子书\ngitbook serve \n复制代码\n说明一下：\ninit 以后，目录里会有这两个文件 README.md 和 SUMMARY.md，README.md 是对电子书的简单介绍，SUMMARY.md 是电子书的目录结构。\n目录结构长这样：\n* [电子书名称](README.md)\n* [第一章](chapter1/README.md)\n    * [xxxx](chapter1/section1.1.md)\n    * [xxxx](chapter1/section1.2.md)\n* [第二章](chapter2/README.md)\n    * [xxxx](chapter2/section2.1.md)\n    * [xxxx](chapter2/section2.2.md)\n复制代码\n编写 SUMMARY.md，执行 gitbook init 生成目录结构文件，然后编写各个文件夹中生成的文件。\n最后 gitbook serve。\ngitbook serve 命令实际上会首先调用 gitbook build 编译书籍，完成以后会打开一个 web 服务器，监听在本地的 4000 端口。\n如果当前书籍写完了，想要发布到自己的网站的话，也可以使用命令输出成html文件使用\ngitbook build [书籍路径] [输出路径]\n最后搭配git一起使用时，只需要在书籍根目录下执行\ngit init\n创建一个git仓库，然后就愉快的拉取-书写-提交循环即可了。\n别忘了在提交的时候忽略掉module文件夹，不然每次提交拉取的时候会很痛苦....\n图形化编辑管理工具\n用一个图形化编辑管理工具，方便我们实时编辑查看内容，这里推荐用VScode，又可以编辑Markdown，又可以用git，又可以分屏看效果。别忘了在提交的时候忽略掉module文件夹，不然每次提交拉取的时候会很痛苦....\n处理VScode中md文件的乱码问题，可以手动生成md文件。不用系统自动生成，这样可以避免乱码\n小拓展\n你可以将电子书提交到 github，在托管电子书的仓库建一个 gh-pages 分支，将本地编译好的电子书文件（项目根目录下的 _book 目录里的文件 ）上传到这个分支，然后就可以使用这个网址访问 http://yourUserName.github.io/bookName。\n当然也可以发布到gitbook，然而这个网站访问有点慢-.-\ngitbook目录折叠\n插件名称：toggle-chapters\n效果：默认只在目录导航中显示章的标题，而不会显示小节的标题，点击每一章或者每一节会显示当前章或节的子目录，如果有的话，但是同时会收起其它之前展开的章节。\n关于更多的gitbook插件，读者可以参考插件网站。\n在根目录(即与SUMMARY.md同级的目录)下的配置文件 book.json(如果没有则新建)中添加插件配置，如图\n\n配置完成后，可按照一下步骤进行：\n$ cd gitbook根目录\n$ npm install gitbook-plugin-toggle-chapters (此时gitbook的根目录下的node_modules文件夹中已经有了该插件了)\n$ gitbook build\n$ gitbook serve\n访问 http://localhost:4000 看你的插件是否已经生效。\n图片使用\n可以用博客园的此编辑器，添加图片后发布出来，然后再编辑的时候，就可以看到图片的链接，直接复制到本地编辑器就可以\nGitBook源文件发布到gh-pages\n复制_book文件下的所有文件，切换到 gh-pages分支，然后复制到这个目录下，然后推送、\ngit checkout --orphan gh-pages\n//清空一下分支\nrm -rf *\n//然后将master分支下的_book静态页面文件内容全部复制到gh-pages分支下\ngit checkout master -- _book\n//将_book中的子文件全部移到外层，并删除_book\nmv _book/* ./\nrm -rf _book\n//这时候gh-pages分支下就是全部的静态页面文件了，接下来就是提交到远程gh-pages分支\ngit add .\ngit commit -m 'publish gh-pages'\ngit push origin gh-pages\n"}}}